{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking\":3353,\"hp\":362,\"max_hp\":362,\"strength\":2633,\"defense\":3526,\"dexterity\":1406,\"agility\":1035,\"charisma\":492,\"intelligence\":0,\"hacking_chance_mult\":2.4995150908940533,\"hacking_speed_mult\":2.196232642713737,\"hacking_money_mult\":2.953143632329748,\"hacking_grow_mult\":4.547729016472073,\"hacking_exp\":2113219594.553331,\"strength_exp\":122962.43485785213,\"defense_exp\":122962.43485785213,\"dexterity_exp\":141406.80008653,\"agility_exp\":123245.37976804226,\"charisma_exp\":87269.73640570833,\"intelligence_exp\":0,\"hacking_mult\":6.885744251980196,\"strength_mult\":15.032998120290607,\"defense_mult\":20.1311453089109,\"dexterity_mult\":7.832576344015986,\"agility_mult\":5.910316321391869,\"charisma_mult\":2.996098448799999,\"hacking_exp_mult\":17.691874549957312,\"strength_exp_mult\":4.715748503168847,\"defense_exp_mult\":4.715748503168847,\"dexterity_exp_mult\":5.4231107786441735,\"agility_exp_mult\":4.715748503168847,\"charisma_exp_mult\":3.3475992460766504,\"company_rep_mult\":9.597716805071682,\"faction_rep_mult\":1.9176257352790576,\"money\":136084300234356.44,\"city\":\"Sector-12\",\"location\":\"The Slums\",\"jobs\":{},\"companyName\":\"\",\"currentServer\":\"home\",\"purchasedServers\":[\"psrv-0\",\"psrv-1\",\"psrv-2\",\"psrv-3\",\"psrv-4\",\"psrv-5\",\"psrv-6\",\"psrv-7\",\"psrv-8\",\"psrv-9\",\"psrv-10\",\"psrv-11\",\"psrv-12\",\"psrv-13\",\"psrv-14\",\"psrv-15\",\"psrv-16\",\"psrv-17\",\"psrv-18\",\"psrv-19\",\"psrv-20\",\"psrv-21\",\"psrv-22\",\"psrv-23\",\"psrv-24\"],\"hacknetNodes\":[],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[\"Slum Snakes\",\"Sector-12\",\"BitRunners\",\"The Syndicate\",\"Daedalus\",\"The Covenant\"],\"factionInvitations\":[],\"queuedAugmentations\":[],\"augmentations\":[{\"level\":1,\"name\":\"SmartSonar Implant\"},{\"level\":1,\"name\":\"Combat Rib I\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"LuminCloaking-V1 Skin Implant\"},{\"level\":1,\"name\":\"LuminCloaking-V2 Skin Implant\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":17,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Power Recirculation Core\"},{\"level\":1,\"name\":\"TITN-41 Gene-Modification Injection\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"Combat Rib II\"},{\"level\":1,\"name\":\"NutriGen Implant\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"BrachiBlades\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"Unstable Circadian Modulator\"},{\"level\":1,\"name\":\"PC Direct-Neural Interface\"},{\"level\":1,\"name\":\"PC Direct-Neural Interface Optimization Submodule\"},{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"},{\"level\":1,\"name\":\"Neotra\"},{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"DermaForce Particle Barrier\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"INFRARET Enhancement\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"HemoRecirculator\"},{\"level\":1,\"name\":\"Neurotrainer III\"},{\"level\":1,\"name\":\"PC Direct-Neural Interface NeuroNet Injector\"},{\"level\":1,\"name\":\"Embedded Netburner Module Direct Memory Access Upgrade\"},{\"level\":1,\"name\":\"Embedded Netburner Module Analyze Engine\"},{\"level\":1,\"name\":\"ECorp HVMind Implant\"},{\"level\":1,\"name\":\"CordiARC Fusion Reactor\"},{\"level\":1,\"name\":\"SPTN-97 Gene Modification\"},{\"level\":1,\"name\":\"BitRunners Neurolink\"},{\"level\":1,\"name\":\"Xanipher\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"The Black Hand\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"Neuregen Gene Modification\"}],\"sourceFiles\":[{\"lvl\":3,\"n\":1},{\"lvl\":1,\"n\":2}],\"numPeopleKilled\":0,\"karma\":-92735.70000000001,\"crime_money_mult\":4.086939848313492,\"crime_success_mult\":2.5846259910282945,\"isWorking\":false,\"focus\":true,\"workType\":\"\",\"workCostMult\":3,\"workExpMult\":2,\"currentWorkFactionName\":\"\",\"currentWorkFactionDescription\":\"\",\"workHackExpGainRate\":0,\"workStrExpGainRate\":0,\"workDefExpGainRate\":0,\"workDexExpGainRate\":0,\"workAgiExpGainRate\":0,\"workChaExpGainRate\":0,\"workRepGainRate\":0,\"workMoneyGainRate\":0,\"workMoneyLossRate\":0,\"workHackExpGained\":0,\"workStrExpGained\":0,\"workDefExpGained\":0,\"workDexExpGained\":0,\"workAgiExpGained\":0,\"workChaExpGained\":0,\"workRepGained\":0,\"workMoneyGained\":0,\"createProgramName\":\"\",\"createProgramReqLvl\":100,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":0,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":600000,\"work_money_mult\":1.6675006393730933,\"hacknet_node_money_mult\":2.4178759270909858,\"hacknet_node_purchase_cost_mult\":0.6069190992364272,\"hacknet_node_ram_cost_mult\":0.6069190992364272,\"hacknet_node_core_cost_mult\":0.6069190992364272,\"hacknet_node_level_cost_mult\":0.515881234350963,\"hasWseAccount\":false,\"hasTixApiAccess\":false,\"has4SData\":false,\"has4SDataTixApi\":false,\"gang\":{\"ctor\":\"Gang\",\"data\":{\"facName\":\"Slum Snakes\",\"members\":[{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":50961088.4037103,\"hack\":5434,\"str\":1772500,\"def\":603923,\"dex\":31257,\"agi\":27702,\"cha\":13973,\"hack_exp\":1842864.8087709548,\"str_exp\":148817030.2095913,\"def_exp\":59254092.49938306,\"dex_exp\":7422424.813764937,\"agi_exp\":245959.19221017827,\"cha_exp\":5329134.7559025865,\"hack_mult\":1,\"str_mult\":29.206517322318337,\"def_mult\":15.515548794797633,\"dex_mult\":2.2200750000000005,\"agi_mult\":7.285657510010883,\"cha_mult\":1.4592614400000004,\"hack_asc_points\":862790.3427432643,\"str_asc_points\":45540190.13541145,\"def_asc_points\":21812493.606432866,\"dex_asc_points\":4227420.292199265,\"agi_asc_points\":742912.9991702638,\"cha_asc_points\":2098209.2883933173,\"upgrades\":[\"Baseball Bat\",\"Katana\",\"Glock 18C\",\"P90C\",\"Steyr AUG\",\"AK-47\",\"M15A10 Assault Rifle\",\"AWM Sniper Rifle\",\"Bulletproof Vest\",\"Full Body Armor\",\"Liquid Body Armor\",\"Graphene Plating Armor\",\"Ford Flex V20\",\"ATX1070 Superbike\",\"Mercedes-Benz S9001\",\"White Ferrari\"],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\",\"Bionic Spine\",\"BrachiBlades\",\"Nanofiber Weave\",\"Synfibril Muscle\",\"Synthetic Heart\",\"Graphene Bone Lacings\"],\"name\":\"scumlord\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":57453997.09889776,\"hack\":5380,\"str\":1698014,\"def\":579622,\"dex\":30449,\"agi\":27654,\"cha\":13880,\"hack_exp\":1800202.6636491849,\"str_exp\":141975253.16256183,\"def_exp\":56604187.5777477,\"dex_exp\":7132341.212739795,\"agi_exp\":259358.55168770908,\"cha_exp\":5219070.429907516,\"hack_mult\":1,\"str_mult\":29.206517322318344,\"def_mult\":15.515548794797633,\"dex_mult\":2.2200750000000005,\"agi_mult\":7.285657510010883,\"cha_mult\":1.4592614400000004,\"hack_asc_points\":850552.8300587125,\"str_asc_points\":42107910.31054472,\"def_asc_points\":20251157.902361523,\"dex_asc_points\":4045168.835129961,\"agi_asc_points\":727831.8451042548,\"cha_asc_points\":2079687.095080637,\"upgrades\":[\"Baseball Bat\",\"Katana\",\"Glock 18C\",\"P90C\",\"Steyr AUG\",\"AK-47\",\"M15A10 Assault Rifle\",\"AWM Sniper Rifle\",\"Bulletproof Vest\",\"Full Body Armor\",\"Liquid Body Armor\",\"Graphene Plating Armor\",\"Ford Flex V20\",\"ATX1070 Superbike\",\"Mercedes-Benz S9001\",\"White Ferrari\"],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\",\"Nanofiber Weave\",\"Bionic Spine\",\"Synfibril Muscle\",\"BrachiBlades\",\"Synthetic Heart\",\"Graphene Bone Lacings\"],\"name\":\"johnny_cold_hands\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":35900494.8271733,\"hack\":2323,\"str\":1026326,\"def\":400867,\"dex\":27302,\"agi\":92366,\"cha\":4019,\"hack_exp\":987331.7365997812,\"str_exp\":139663804.11626258,\"def_exp\":63044508.49051745,\"dex_exp\":10035453.347794736,\"agi_exp\":6535343.389424814,\"cha_exp\":1990298.3755093105,\"hack_mult\":1,\"str_mult\":29.206517322318344,\"def_mult\":15.515548794797633,\"dex_mult\":2.2200750000000005,\"agi_mult\":7.285657510010883,\"cha_mult\":1.4592614400000004,\"hack_asc_points\":184808.8473738028,\"str_asc_points\":15423785.668839352,\"def_asc_points\":9508940.39795468,\"dex_asc_points\":3031316.5019219615,\"agi_asc_points\":3520644.489807154,\"cha_asc_points\":217535.20648246797,\"upgrades\":[\"Baseball Bat\",\"Katana\",\"Glock 18C\",\"P90C\",\"Steyr AUG\",\"AK-47\",\"M15A10 Assault Rifle\",\"AWM Sniper Rifle\",\"Bulletproof Vest\",\"Full Body Armor\",\"Liquid Body Armor\",\"Graphene Plating Armor\",\"Ford Flex V20\",\"ATX1070 Superbike\",\"Mercedes-Benz S9001\",\"White Ferrari\"],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\",\"Nanofiber Weave\",\"Bionic Spine\",\"Synfibril Muscle\",\"BrachiBlades\",\"Synthetic Heart\",\"Graphene Bone Lacings\"],\"name\":\"r00kie-2\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":29363369.683722593,\"hack\":4278,\"str\":791459,\"def\":321339,\"dex\":24382,\"agi\":43037,\"cha\":10856,\"hack_exp\":1696469.5309478042,\"str_exp\":103198550.81277646,\"def_exp\":48347651.6922441,\"dex_exp\":8520791.700843234,\"agi_exp\":2652867.2941788067,\"cha_exp\":4851812.962557531,\"hack_mult\":1,\"str_mult\":29.206517322318344,\"def_mult\":15.515548794797633,\"dex_mult\":2.2200750000000005,\"agi_mult\":7.285657510010883,\"cha_mult\":1.4592614400000004,\"hack_asc_points\":545618.003613565,\"str_asc_points\":9632836.74164351,\"def_asc_points\":6396937.731028643,\"dex_asc_points\":2499775.1324466853,\"agi_asc_points\":934190.5267216106,\"cha_asc_points\":1292710.5055260137,\"upgrades\":[\"Baseball Bat\",\"Katana\",\"Glock 18C\",\"P90C\",\"Steyr AUG\",\"AK-47\",\"M15A10 Assault Rifle\",\"AWM Sniper Rifle\",\"Bulletproof Vest\",\"Full Body Armor\",\"Liquid Body Armor\",\"Graphene Plating Armor\",\"Ford Flex V20\",\"ATX1070 Superbike\",\"Mercedes-Benz S9001\",\"White Ferrari\"],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\",\"Nanofiber Weave\",\"Bionic Spine\",\"Synfibril Muscle\",\"BrachiBlades\",\"Synthetic Heart\",\"Graphene Bone Lacings\"],\"name\":\"r00kie-3\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":28710909.695620667,\"hack\":4074,\"str\":771855,\"def\":312845,\"dex\":23681,\"agi\":43179,\"cha\":10399,\"hack_exp\":1624529.0852066784,\"str_exp\":99562648.8500112,\"def_exp\":46579501.51372967,\"dex_exp\":8195661.935437027,\"agi_exp\":2534725.7420646213,\"cha_exp\":4667268.23407396,\"hack_mult\":1,\"str_mult\":29.206517322318344,\"def_mult\":15.515548794797633,\"dex_mult\":2.2200750000000005,\"agi_mult\":7.285657510010883,\"cha_mult\":1.4592614400000004,\"hack_asc_points\":500324.24271365727,\"str_asc_points\":9215634.358167384,\"def_asc_points\":6102901.697769539,\"dex_asc_points\":2377028.9194275537,\"agi_asc_points\":950477.7608193556,\"cha_asc_points\":1196241.0443721367,\"upgrades\":[\"Baseball Bat\",\"Katana\",\"Glock 18C\",\"P90C\",\"Steyr AUG\",\"AK-47\",\"M15A10 Assault Rifle\",\"AWM Sniper Rifle\",\"Bulletproof Vest\",\"Full Body Armor\",\"Liquid Body Armor\",\"Graphene Plating Armor\",\"Ford Flex V20\",\"ATX1070 Superbike\",\"Mercedes-Benz S9001\",\"White Ferrari\"],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\",\"Nanofiber Weave\",\"Bionic Spine\",\"Synfibril Muscle\",\"BrachiBlades\",\"Synthetic Heart\",\"Graphene Bone Lacings\"],\"name\":\"r00kie-4\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":28300576.480163343,\"hack\":4712,\"str\":762610,\"def\":304133,\"dex\":21213,\"agi\":21781,\"cha\":11924,\"hack_exp\":1849009.1744536231,\"str_exp\":97367892.31280914,\"def_exp\":44884846.4220667,\"dex_exp\":7337337.782025124,\"agi_exp\":1318196.607586353,\"cha_exp\":5280229.399788686,\"hack_mult\":1,\"str_mult\":29.206517322318344,\"def_mult\":15.515548794797633,\"dex_mult\":2.2200750000000005,\"agi_mult\":7.285657510010883,\"cha_mult\":1.4592614400000004,\"hack_asc_points\":648148.7626661282,\"str_asc_points\":9029238.310936525,\"def_asc_points\":5805416.939581027,\"dex_asc_points\":1951779.0246003068,\"agi_asc_points\":283847.55439959007,\"cha_asc_points\":1531083.0868495305,\"upgrades\":[\"Baseball Bat\",\"Katana\",\"Glock 18C\",\"P90C\",\"Steyr AUG\",\"AK-47\",\"M15A10 Assault Rifle\",\"AWM Sniper Rifle\",\"Bulletproof Vest\",\"Full Body Armor\",\"Liquid Body Armor\",\"Graphene Plating Armor\",\"Ford Flex V20\",\"ATX1070 Superbike\",\"Mercedes-Benz S9001\",\"White Ferrari\"],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\",\"Nanofiber Weave\",\"Bionic Spine\",\"Synfibril Muscle\",\"BrachiBlades\",\"Synthetic Heart\",\"Graphene Bone Lacings\"],\"name\":\"r00kie-5\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":27762088.235744864,\"hack\":4628,\"str\":746086,\"def\":297154,\"dex\":20785,\"agi\":22252,\"cha\":11699,\"hack_exp\":1819602.7549343468,\"str_exp\":94508853.12929867,\"def_exp\":43521170.101095304,\"dex_exp\":7136066.232840682,\"agi_exp\":1291978.2862453256,\"cha_exp\":5189993.675014587,\"hack_mult\":1,\"str_mult\":29.206517322318344,\"def_mult\":15.515548794797633,\"dex_mult\":2.2200750000000005,\"agi_mult\":7.285657510010883,\"cha_mult\":1.4592614400000004,\"hack_asc_points\":627696.5412013346,\"str_asc_points\":8684785.872571997,\"def_asc_points\":5572237.348791864,\"dex_asc_points\":1884802.7952649624,\"agi_asc_points\":297777.2278068046,\"cha_asc_points\":1479199.7830679487,\"upgrades\":[\"Baseball Bat\",\"Katana\",\"Glock 18C\",\"P90C\",\"Steyr AUG\",\"AK-47\",\"M15A10 Assault Rifle\",\"AWM Sniper Rifle\",\"Bulletproof Vest\",\"Full Body Armor\",\"Liquid Body Armor\",\"Graphene Plating Armor\",\"Ford Flex V20\",\"ATX1070 Superbike\",\"Mercedes-Benz S9001\",\"White Ferrari\"],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\",\"Nanofiber Weave\",\"Bionic Spine\",\"Synfibril Muscle\",\"BrachiBlades\",\"Synthetic Heart\",\"Graphene Bone Lacings\"],\"name\":\"r00kie-6\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":33737523.14213296,\"hack\":5101,\"str\":938814,\"def\":381686,\"dex\":28425,\"agi\":39700,\"cha\":12415,\"hack_exp\":1984509.562967498,\"str_exp\":116184390.07164627,\"def_exp\":54467855.06053274,\"dex_exp\":9422171.718140474,\"agi_exp\":2109365.1612484413,\"cha_exp\":5476054.767846283,\"hack_mult\":1,\"str_mult\":29.206517322318344,\"def_mult\":15.515548794797633,\"dex_mult\":2.2200750000000005,\"agi_mult\":7.285657510010883,\"cha_mult\":1.4592614400000004,\"hack_asc_points\":746625.7366287614,\"str_asc_points\":13294135.968010897,\"def_asc_points\":8840146.229819916,\"dex_asc_points\":3328132.6277780393,\"agi_asc_points\":839371.61679176,\"cha_asc_points\":1646754.061773134,\"upgrades\":[\"Baseball Bat\",\"Katana\",\"Glock 18C\",\"P90C\",\"Steyr AUG\",\"AK-47\",\"M15A10 Assault Rifle\",\"AWM Sniper Rifle\",\"Bulletproof Vest\",\"Full Body Armor\",\"Liquid Body Armor\",\"Graphene Plating Armor\",\"Ford Flex V20\",\"ATX1070 Superbike\",\"Mercedes-Benz S9001\",\"White Ferrari\"],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\",\"Nanofiber Weave\",\"Bionic Spine\",\"Synfibril Muscle\",\"BrachiBlades\",\"Synthetic Heart\",\"Graphene Bone Lacings\"],\"name\":\"r00kie-7\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":31636771.041057985,\"hack\":4566,\"str\":869756,\"def\":353995,\"dex\":26080,\"agi\":36842,\"cha\":11400,\"hack_exp\":1797954.6050949013,\"str_exp\":107413413.33214515,\"def_exp\":50425872.13518137,\"dex_exp\":8647459.584002083,\"agi_exp\":1907552.875333464,\"cha_exp\":5070176.669970011,\"hack_mult\":1,\"str_mult\":29.206517322318344,\"def_mult\":15.515548794797633,\"dex_mult\":2.2200750000000005,\"agi_mult\":7.285657510010883,\"cha_mult\":1.4592614400000004,\"hack_asc_points\":612849.7440291924,\"str_asc_points\":11557035.34093939,\"def_asc_points\":7706383.082929065,\"dex_asc_points\":2851284.357246697,\"agi_asc_points\":740695.9865171793,\"cha_asc_points\":1411690.078373695,\"upgrades\":[\"Baseball Bat\",\"Katana\",\"Glock 18C\",\"P90C\",\"Steyr AUG\",\"AK-47\",\"M15A10 Assault Rifle\",\"AWM Sniper Rifle\",\"Bulletproof Vest\",\"Full Body Armor\",\"Liquid Body Armor\",\"Graphene Plating Armor\",\"Ford Flex V20\",\"ATX1070 Superbike\",\"Mercedes-Benz S9001\",\"White Ferrari\"],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\",\"Nanofiber Weave\",\"Bionic Spine\",\"Synfibril Muscle\",\"BrachiBlades\",\"Synthetic Heart\",\"Graphene Bone Lacings\"],\"name\":\"r00kie-8\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":31102407.4373169,\"hack\":4332,\"str\":851691,\"def\":349786,\"dex\":24285,\"agi\":34560,\"cha\":10983,\"hack_exp\":1715497.6409490064,\"str_exp\":104550671.85738447,\"def_exp\":49497798.09119483,\"dex_exp\":8046061.48362909,\"agi_exp\":1741870.714269745,\"cha_exp\":4902990.953648362,\"hack_mult\":1,\"str_mult\":29.206517322318344,\"def_mult\":15.515548794797633,\"dex_mult\":2.2200750000000005,\"agi_mult\":7.285657510010883,\"cha_mult\":1.4592614400000004,\"hack_asc_points\":557926.2749441201,\"str_asc_points\":11131012.17599802,\"def_asc_points\":7548612.166006099,\"dex_asc_points\":2509468.4452133677,\"agi_asc_points\":666445.4890526893,\"cha_asc_points\":1320125.928810655,\"upgrades\":[\"Baseball Bat\",\"Katana\",\"Glock 18C\",\"P90C\",\"Steyr AUG\",\"AK-47\",\"M15A10 Assault Rifle\",\"AWM Sniper Rifle\",\"Bulletproof Vest\",\"Full Body Armor\",\"Liquid Body Armor\",\"Graphene Plating Armor\",\"Ford Flex V20\",\"ATX1070 Superbike\",\"Mercedes-Benz S9001\",\"White Ferrari\"],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\",\"Nanofiber Weave\",\"Bionic Spine\",\"Synfibril Muscle\",\"BrachiBlades\",\"Synthetic Heart\",\"Graphene Bone Lacings\"],\"name\":\"r00kie-9\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":45062305.92419936,\"hack\":5367,\"str\":1522523,\"def\":534714,\"dex\":29222,\"agi\":41633,\"cha\":14125,\"hack_exp\":1790467.4610363084,\"str_exp\":129530558.54991844,\"def_exp\":53040803.235134944,\"dex_exp\":6934380.805298953,\"agi_exp\":462891.44564061565,\"cha_exp\":5290077.380304182,\"hack_mult\":1,\"str_mult\":29.206517322318344,\"def_mult\":15.515548794797633,\"dex_mult\":2.2200750000000005,\"agi_mult\":7.285657510010883,\"cha_mult\":1.4592614400000004,\"hack_asc_points\":847650.8849018309,\"str_asc_points\":34355464.83324343,\"def_asc_points\":17429538.513307802,\"dex_asc_points\":3748010.258930161,\"agi_asc_points\":1380774.7145281683,\"cha_asc_points\":2147348.7670358205,\"upgrades\":[\"Baseball Bat\",\"Katana\",\"Glock 18C\",\"P90C\",\"Steyr AUG\",\"AK-47\",\"M15A10 Assault Rifle\",\"AWM Sniper Rifle\",\"Bulletproof Vest\",\"Full Body Armor\",\"Liquid Body Armor\",\"Graphene Plating Armor\",\"Ford Flex V20\",\"ATX1070 Superbike\",\"Mercedes-Benz S9001\",\"White Ferrari\"],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\",\"Nanofiber Weave\",\"Bionic Spine\",\"Synfibril Muscle\",\"BrachiBlades\",\"Synthetic Heart\",\"Graphene Bone Lacings\"],\"name\":\"r00kie-10\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":42781642.51467524,\"hack\":4873,\"str\":1439020,\"def\":506416,\"dex\":28171,\"agi\":40104,\"cha\":13036,\"hack_exp\":1655232.2039347463,\"str_exp\":123447154.57376239,\"def_exp\":50658382.75676686,\"dex_exp\":6735267.278283854,\"agi_exp\":422774.6746047235,\"cha_exp\":4959101.132019221,\"hack_mult\":1,\"str_mult\":29.206517322318344,\"def_mult\":15.515548794797633,\"dex_mult\":2.2200750000000005,\"agi_mult\":7.285657510010883,\"cha_mult\":1.4592614400000004,\"hack_asc_points\":712445.4324312239,\"str_asc_points\":30929297.622040544,\"def_asc_points\":15758863.110791061,\"dex_asc_points\":3504706.08428398,\"agi_asc_points\":1316025.5082408264,\"cha_asc_points\":1855055.1430861373,\"upgrades\":[\"Baseball Bat\",\"Katana\",\"Glock 18C\",\"P90C\",\"Steyr AUG\",\"AK-47\",\"M15A10 Assault Rifle\",\"AWM Sniper Rifle\",\"Bulletproof Vest\",\"Full Body Armor\",\"Liquid Body Armor\",\"Graphene Plating Armor\",\"Ford Flex V20\",\"ATX1070 Superbike\",\"Mercedes-Benz S9001\",\"White Ferrari\"],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\",\"Nanofiber Weave\",\"Bionic Spine\",\"Synfibril Muscle\",\"BrachiBlades\",\"Synthetic Heart\",\"Graphene Bone Lacings\"],\"name\":\"r00kie-11\"}}],\"wanted\":373.83825599949813,\"respect\":442765051.0945048,\"isHackingGang\":false,\"respectGainRate\":1028.705743896127,\"wantedGainRate\":0.0010023349560311476,\"moneyGainRate\":55668232.570108846,\"storedCycles\":0,\"storedTerritoryAndPowerCycles\":9,\"territoryClashChance\":0,\"territoryWarfareEngaged\":false,\"notifyMemberDeath\":true}},\"corporation\":null,\"bladeburner\":null,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"sleeves\":[],\"resleeves\":[],\"sleevesFromCovenant\":0,\"bitNodeN\":4,\"lastUpdate\":1646248062348,\"totalPlaytime\":3283388000,\"playtimeSinceLastAug\":72488200,\"playtimeSinceLastBitnode\":677899400,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-90240,\"codingcontract\":0,\"corporation\":0,\"crime\":5592476940.979579,\"gang\":19410848273786.02,\"hacking\":116689982835758.47,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":136084299234356.44,\"work\":0,\"servers\":-16817061888.000002,\"other\":-5307200000,\"augmentations\":0}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-10548096,\"codingcontract\":0,\"corporation\":0,\"crime\":7643364797.645932,\"gang\":24875649828589.31,\"hacking\":116943339905243.16,\"hacknet\":283434.4164158552,\"hacknet_expenses\":-8915.446491544732,\"hospitalization\":-9390000,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":136160050938882.25,\"work\":19399.33146880015,\"servers\":-146232715917.54443,\"other\":-11820200000,\"augmentations\":-5508509599651.786}},\"scriptProdSinceLastAug\":116688765067289,\"exploits\":[],\"achievements\":[{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1642969057172},{\"ID\":\"NS2\",\"unlockedOn\":1642970800580},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1642975780581},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1642977640602},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1642983700589},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1643198576997},{\"ID\":\"TOR\",\"unlockedOn\":1643199117000},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1643239925210},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1643240525203},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1643415344697},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1643415344730},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1643415344732},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1643415764690},{\"ID\":\"NITESEC\",\"unlockedOn\":1643415944704},{\"ID\":\"FROZE\",\"unlockedOn\":1643567355869},{\"ID\":\"DONATION\",\"unlockedOn\":1643662227085},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1643670627090},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1643702603950},{\"ID\":\"TRAVEL\",\"unlockedOn\":1643743461069},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1643747001084},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1643990786105},{\"ID\":\"WORKOUT\",\"unlockedOn\":1644168394798},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1644168634802},{\"ID\":\"SF1.1\",\"unlockedOn\":1644173855794},{\"ID\":\"SCRIPTS_30\",\"unlockedOn\":1644264669628},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1644442436672},{\"ID\":\"REPUTATION_10M\",\"unlockedOn\":1644617788996},{\"ID\":\"GANG\",\"unlockedOn\":1644693668397},{\"ID\":\"FULL_GANG\",\"unlockedOn\":1644848860215},{\"ID\":\"GANG_MEMBER_POWER\",\"unlockedOn\":1644956018829},{\"ID\":\"SF2.1\",\"unlockedOn\":1645088256663},{\"ID\":\"RUNNING_SCRIPTS_1000\",\"unlockedOn\":1646170381027},{\"ID\":\"THE_COVENANT\",\"unlockedOn\":1646248011359}],\"factionWorkType\":\"Faction Field Work\",\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":null}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":3,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"0.1.1.2\",\"isConnectedTo\":true,\"maxRam\":8192,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"BruteSSH.exe\",\"HTTPWorm.exe\",\"SQLInject.exe\",\"ServerProfiler.exe\",\"DeepscanV1.exe\",\"DeepscanV2.exe\",\"AutoLink.exe\",\"Formulas.exe\",\"fl1ght.exe\"],\"ramUsed\":8171.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"/gang/gang-mgmt-combat.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.16,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37521.41000001498,\"pid\":1,\"ramUsage\":22.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/gang/gang-mgmt-combat.js\",\"url\":\"blob:file:///06b62f4c-0442-4620-8722-42fec7d37c5f\",\"moduleSequenceNumber\":25295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2580.2709061639844,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.189,\"onlineExpGained\":2675663.1332360012,\"onlineMoneyMade\":274437493,\"onlineRunningTime\":37505.41000001521,\"pid\":2,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///5ee659b6-87d1-4045-bd3a-014533c3b133\",\"moduleSequenceNumber\":25138},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///2602affe-f52e-42c4-bd29-c24dfe649aff\",\"moduleSequenceNumber\":25191},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///dc3a453d-fa14-49b3-b682-cedc696c136f\",\"moduleSequenceNumber\":25306}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.21,\"onlineExpGained\":30264889.706044644,\"onlineMoneyMade\":430058721849,\"onlineRunningTime\":37505.41000001521,\"pid\":3,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///5ee659b6-87d1-4045-bd3a-014533c3b133\",\"moduleSequenceNumber\":25138},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///2602affe-f52e-42c4-bd29-c24dfe649aff\",\"moduleSequenceNumber\":25191},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///dc3a453d-fa14-49b3-b682-cedc696c136f\",\"moduleSequenceNumber\":25306}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.231,\"onlineExpGained\":55269562.86301558,\"onlineMoneyMade\":649786205451,\"onlineRunningTime\":37505.41000001521,\"pid\":4,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///5ee659b6-87d1-4045-bd3a-014533c3b133\",\"moduleSequenceNumber\":25138},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///2602affe-f52e-42c4-bd29-c24dfe649aff\",\"moduleSequenceNumber\":25191},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///dc3a453d-fa14-49b3-b682-cedc696c136f\",\"moduleSequenceNumber\":25306}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.246,\"onlineExpGained\":14995445.51768015,\"onlineMoneyMade\":12029214104,\"onlineRunningTime\":37505.41000001521,\"pid\":5,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///5ee659b6-87d1-4045-bd3a-014533c3b133\",\"moduleSequenceNumber\":25138},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///2602affe-f52e-42c4-bd29-c24dfe649aff\",\"moduleSequenceNumber\":25191},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///dc3a453d-fa14-49b3-b682-cedc696c136f\",\"moduleSequenceNumber\":25306}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.26,\"onlineExpGained\":10395880.766240047,\"onlineMoneyMade\":194044572106,\"onlineRunningTime\":37505.41000001521,\"pid\":6,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///5ee659b6-87d1-4045-bd3a-014533c3b133\",\"moduleSequenceNumber\":25138},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///2602affe-f52e-42c4-bd29-c24dfe649aff\",\"moduleSequenceNumber\":25191},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///dc3a453d-fa14-49b3-b682-cedc696c136f\",\"moduleSequenceNumber\":25306}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.272000000004,\"onlineExpGained\":5456277.47376799,\"onlineMoneyMade\":194580282,\"onlineRunningTime\":37505.41000001521,\"pid\":7,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///5ee659b6-87d1-4045-bd3a-014533c3b133\",\"moduleSequenceNumber\":25138},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///2602affe-f52e-42c4-bd29-c24dfe649aff\",\"moduleSequenceNumber\":25191},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///dc3a453d-fa14-49b3-b682-cedc696c136f\",\"moduleSequenceNumber\":25306}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.282,\"onlineExpGained\":6134594.1418845225,\"onlineMoneyMade\":409824441,\"onlineRunningTime\":37505.41000001521,\"pid\":8,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///5ee659b6-87d1-4045-bd3a-014533c3b133\",\"moduleSequenceNumber\":25138},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///2602affe-f52e-42c4-bd29-c24dfe649aff\",\"moduleSequenceNumber\":25191},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///dc3a453d-fa14-49b3-b682-cedc696c136f\",\"moduleSequenceNumber\":25306}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.288,\"onlineExpGained\":3444364.999429662,\"onlineMoneyMade\":110632458,\"onlineRunningTime\":37505.41000001521,\"pid\":9,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///5ee659b6-87d1-4045-bd3a-014533c3b133\",\"moduleSequenceNumber\":25138},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///2602affe-f52e-42c4-bd29-c24dfe649aff\",\"moduleSequenceNumber\":25191},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///dc3a453d-fa14-49b3-b682-cedc696c136f\",\"moduleSequenceNumber\":25306}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.294,\"onlineExpGained\":11049149.420606405,\"onlineMoneyMade\":5085930425,\"onlineRunningTime\":37505.41000001521,\"pid\":10,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///5ee659b6-87d1-4045-bd3a-014533c3b133\",\"moduleSequenceNumber\":25138},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///2602affe-f52e-42c4-bd29-c24dfe649aff\",\"moduleSequenceNumber\":25191},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///dc3a453d-fa14-49b3-b682-cedc696c136f\",\"moduleSequenceNumber\":25306}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.3,\"onlineExpGained\":11309570.809631757,\"onlineMoneyMade\":2152462076,\"onlineRunningTime\":37505.41000001521,\"pid\":11,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///5ee659b6-87d1-4045-bd3a-014533c3b133\",\"moduleSequenceNumber\":25138},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///2602affe-f52e-42c4-bd29-c24dfe649aff\",\"moduleSequenceNumber\":25191},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///dc3a453d-fa14-49b3-b682-cedc696c136f\",\"moduleSequenceNumber\":25306}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",0,\"rnd-0.3115050399713435\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":279.0099999999927,\"pid\":385580,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":9,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",0,\"rnd-0.7619238580104783\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":278.0099999999928,\"pid\":385593,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":41,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",0,\"rnd-0.7335316284188107\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":385719,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":63,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",0,\"rnd-0.43157359537943796\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":229.4099999999955,\"pid\":386363,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":10,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",0,\"rnd-0.33249555243191486\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":216.20999999999626,\"pid\":386537,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":72,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.005839751912452007\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":190.6099999999977,\"pid\":386900,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39299.384839244274,\"rnd-0.8738593061361188\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":190.6099999999977,\"pid\":386901,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":66,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.4834558289127666\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":190.00999999999775,\"pid\":386917,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.4416930852634606\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":189.80999999999776,\"pid\":386921,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6644032206430222\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":189.0099999999978,\"pid\":386930,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39299.384839244274,\"rnd-0.5952759936379659\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":189.0099999999978,\"pid\":386931,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":53,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.29269779368221216\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.8099999999978,\"pid\":386935,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39299.384839244274,\"rnd-0.8613154680789115\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.8099999999978,\"pid\":386936,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":38,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.2089838546439715\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.60999999999783,\"pid\":386938,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39299.384839244274,\"rnd-0.13648857734925124\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.60999999999783,\"pid\":386939,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":40,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9428384788842952\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":186.40999999999795,\"pid\":386959,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39299.384839244274,\"rnd-0.8773312595467158\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":186.40999999999795,\"pid\":386960,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":62,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.5336485495153231\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":181.20999999999825,\"pid\":387021,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39299.384839244274,\"rnd-0.9385075234075144\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":181.20999999999825,\"pid\":387022,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":18,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.592628047253716\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":181.00999999999826,\"pid\":387024,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39299.384839244274,\"rnd-0.8515728387023014\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":181.00999999999826,\"pid\":387025,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":24,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9152641515188993\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.4099999999983,\"pid\":387032,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39299.384839244274,\"rnd-0.15262659360830066\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.4099999999983,\"pid\":387033,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":44,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6846717127920257\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.2099999999983,\"pid\":387037,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39299.384839244274,\"rnd-0.347698000451391\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.2099999999983,\"pid\":387038,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":21,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.544979116510292\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.80999999999844,\"pid\":387083,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48015.07414811978,\"rnd-0.829752588472038\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.80999999999844,\"pid\":387084,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":18,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.22857767141222474\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.40999999999846,\"pid\":387089,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48015.07414811978,\"rnd-0.775995674437266\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.40999999999846,\"pid\":387090,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":71,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",178556.52805544922,\"rnd-0.29410252893169053\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.40999999999846,\"pid\":387091,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":42,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.10720659528453957\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.20999999999847,\"pid\":387094,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48015.07414811978,\"rnd-0.05733980675421102\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.20999999999847,\"pid\":387095,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":71,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",178556.52805544922,\"rnd-0.23928026530303348\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.20999999999847,\"pid\":387096,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.4531215109566429\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.8099999999985,\"pid\":387105,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48015.07414811978,\"rnd-0.22335653083195783\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.8099999999985,\"pid\":387106,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":68,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48015.07414811978,\"rnd-0.5687293513873337\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.6099999999985,\"pid\":387115,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":59,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",600,\"rnd-0.03340371462600533\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.6099999999988,\"pid\":387212,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",600,\"rnd-0.9957577948779786\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.4099999999988,\"pid\":387219,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.6700020100581219\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.00999999999883,\"pid\":387234,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.45697579174810077\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":170.80999999999884,\"pid\":387237,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.5906865884342423\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":170.80999999999884,\"pid\":387238,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":67,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.9627980197896859\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":169.00999999999894,\"pid\":387274,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.3946865662611909\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":169.00999999999894,\"pid\":387275,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":13,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.7878577731181491\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":165.40999999999914,\"pid\":387350,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48024.03162649204,\"rnd-0.9817131025095343\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":165.40999999999914,\"pid\":387351,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":16,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.1419179621915565\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.60999999999925,\"pid\":387394,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.920352355743099\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.60999999999925,\"pid\":387395,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":11,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.7275147575332064\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.20999999999927,\"pid\":387409,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.7343786943496557\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.40999999999931,\"pid\":387424,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.743824849958693\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.40999999999931,\"pid\":387425,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":17,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.361029043088116\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.00999999999934,\"pid\":387430,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.8634565145000774\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.00999999999934,\"pid\":387431,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":38,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.3210090723420769\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.80999999999935,\"pid\":387436,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9315837646987919\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.20999999999938,\"pid\":387449,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.20503628867500057\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":155.6099999999997,\"pid\":387542,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.9295047689275402\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":155.6099999999997,\"pid\":387543,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":62,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.0470911816942452\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.80999999999975,\"pid\":387557,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.5487949233818219\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.80999999999975,\"pid\":387558,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":20,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.2864540635356674\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":152.40999999999988,\"pid\":387602,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.014937858578210728\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":152.40999999999988,\"pid\":387603,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":29,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.26577321059937087\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.60999999999993,\"pid\":387621,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":12,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.22918174244788792\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.60999999999993,\"pid\":387622,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48963.17089705684,\"rnd-0.8626542260977597\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.60999999999993,\"pid\":387623,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":55,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.8624915508816071\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.40999999999994,\"pid\":387627,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":11,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.14410150923915332\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.40999999999994,\"pid\":387628,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48963.17089705684,\"rnd-0.46763701714694195\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.40999999999994,\"pid\":387629,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":19,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.45436503217156754\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.41,\"pid\":387648,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":11,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.378155971519355\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.41,\"pid\":387649,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48963.17089705684,\"rnd-0.3907586933253564\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.41,\"pid\":387650,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":12,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.744159650564606\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.41000000000017,\"pid\":387711,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":7,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.8477572372017803\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.41000000000017,\"pid\":387712,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48638.29110357395,\"rnd-0.2560741140359315\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.41000000000017,\"pid\":387713,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":14,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.3936482334677718\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.0100000000002,\"pid\":387723,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.44433213007054717\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.0100000000002,\"pid\":387724,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48638.29110357395,\"rnd-0.9903178736397149\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.0100000000002,\"pid\":387725,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":68,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.8958919554063332\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.4100000000004,\"pid\":387780,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.023245457973595007\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.4100000000004,\"pid\":387781,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":71,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",178504.05772689934,\"rnd-0.9992564161191757\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.4100000000004,\"pid\":387782,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":2,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.9357805945717117\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.01000000000042,\"pid\":387788,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.28691757996809986\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.01000000000042,\"pid\":387789,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":22,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.6088336694393035\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.21000000000046,\"pid\":387801,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.10156735822371621\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.21000000000046,\"pid\":387802,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":71,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",178504.05772689934,\"rnd-0.18696751086593522\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.21000000000046,\"pid\":387803,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":23,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.349505736765767\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.81000000000049,\"pid\":387810,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.13794153468819625\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.81000000000049,\"pid\":387811,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":71,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",178504.05772689934,\"rnd-0.261455553855547\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.81000000000049,\"pid\":387812,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":53,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.4633436583462893\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.6100000000005,\"pid\":387815,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.3321059792587835\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.6100000000005,\"pid\":387816,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":9,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.989601100215816\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.8100000000006,\"pid\":387843,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.24658010515272455\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.8100000000006,\"pid\":387844,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":71,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",178504.05772689934,\"rnd-0.055204191070874487\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.8100000000006,\"pid\":387845,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.03196567191571287\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.6100000000006,\"pid\":387847,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.9975983535523116\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.6100000000006,\"pid\":387848,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":70,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.5650920791998297\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000062,\"pid\":387850,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.1245633272544624\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000062,\"pid\":387851,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":68,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.27929457766487586\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000063,\"pid\":387853,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.6040686324994977\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000063,\"pid\":387854,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":66,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",600,\"rnd-0.3217664848370132\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.2100000000007,\"pid\":387875,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",35469.27031723282,\"rnd-0.6858850632273061\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.2100000000007,\"pid\":387876,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":23,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.6325739967122546\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000072,\"pid\":387883,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.49551890163438084\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000072,\"pid\":387884,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":71,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.938440880188653\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000075,\"pid\":387889,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.5854943406761111\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000075,\"pid\":387890,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":70,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",145829.82723674952,\"rnd-0.3403454055816626\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000075,\"pid\":387891,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":24,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9483055421317987\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.81000000000077,\"pid\":387892,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.5006357332041624\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.4100000000008,\"pid\":387901,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.5256771761404289\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.4100000000008,\"pid\":387902,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":66,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.05939474905219755\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.01000000000127,\"pid\":387985,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.9700500879898577\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.01000000000127,\"pid\":387986,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":29,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.23622759800827353\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.81000000000117,\"pid\":388054,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.6225861605925622\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.81000000000117,\"pid\":388055,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":62,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.11591576813075655\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.61000000000116,\"pid\":388056,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.5682330570944534\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":111.61000000000105,\"pid\":388113,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.9294106927450383\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":111.61000000000105,\"pid\":388114,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":49,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.1608511959628145\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.61000000000101,\"pid\":388136,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.3865441015652733\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.61000000000101,\"pid\":388137,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":21,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.424003231526626\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.210000000001,\"pid\":388139,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\",600,\"rnd-0.8603289410736727\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":106.61000000000098,\"pid\":388157,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",600,\"rnd-0.8603490238650229\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":105.41000000000096,\"pid\":388166,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",0,\"rnd-0.6232702026764281\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.01000000000087,\"pid\":388226,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":30,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.798093711199757\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.01000000000087,\"pid\":388227,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.792692756732694\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.01000000000087,\"pid\":388228,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":32,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9520664405717745\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.81000000000084,\"pid\":388253,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.45674584517725436\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.81000000000084,\"pid\":388254,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":39,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.41917678548126514\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.61000000000084,\"pid\":388256,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.7199808138850723\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.81000000000083,\"pid\":388265,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.5850160466321597\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.81000000000083,\"pid\":388266,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":64,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.949317245368934\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.61000000000082,\"pid\":388267,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.2819566468923822\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.61000000000082,\"pid\":388268,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":70,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",145829.82723674952,\"rnd-0.6787307827358322\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.61000000000082,\"pid\":388269,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9724118249203104\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.01000000000082,\"pid\":388276,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.9628985852686927\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.01000000000082,\"pid\":388277,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":70,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",145829.82723674952,\"rnd-0.2118227654069147\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.01000000000082,\"pid\":388278,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":20,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.5767424172727278\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":94.81000000000081,\"pid\":388279,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.5367978713772574\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.01000000000079,\"pid\":388298,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.29602330406023025\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.01000000000079,\"pid\":388299,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":26,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.07589504037607431\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.81000000000078,\"pid\":388304,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.7830605986449279\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.81000000000078,\"pid\":388305,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":28,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.47516762867841233\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.81000000000076,\"pid\":388322,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.8776438339635955\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.81000000000076,\"pid\":388323,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":20,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.5106249890318841\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.01000000000067,\"pid\":388361,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48001.08206050648,\"rnd-0.8090731601348504\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":85.01000000000067,\"pid\":388362,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":26,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.6511630774265009\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.81000000000067,\"pid\":388363,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.806447781297843\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.61000000000062,\"pid\":388391,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.257523485295142\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.61000000000062,\"pid\":388392,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":35,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6070867068935291\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":81.41000000000062,\"pid\":388393,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.34258890713494106\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.21000000000052,\"pid\":388473,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.5904878161661282\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.21000000000052,\"pid\":388474,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":54,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.3380596548956525\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.610000000000255,\"pid\":388727,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.9692573755408875\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.610000000000255,\"pid\":388728,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":20,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.14076409944149249\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.21000000000018,\"pid\":388818,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.20139232177618416\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.21000000000018,\"pid\":388819,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":22,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.5754734633526271\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.21000000000015,\"pid\":388854,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.9481751395924944\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.21000000000015,\"pid\":388855,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":31,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6234567497712067\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.81000000000013,\"pid\":388879,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.0027945476157298366\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":46.81000000000013,\"pid\":388880,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":68,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.834793669149738\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.41000000000011,\"pid\":388905,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.30235755255744867\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.41000000000011,\"pid\":388906,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":70,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",145829.82723674952,\"rnd-0.5916966816467977\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.41000000000011,\"pid\":388907,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":28,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6384199421041816\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"pid\":388969,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.5554423960475758\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"pid\":388970,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":54,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.40967756215713735\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.41000000000007,\"pid\":388972,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.29768303516118055\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.41000000000007,\"pid\":388973,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":23,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9244278624225424\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.210000000000065,\"pid\":388975,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.22173600884727862\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.210000000000065,\"pid\":388976,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":70,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",145829.82723674952,\"rnd-0.9986444243627055\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.210000000000065,\"pid\":388977,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":12,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.07909765598630236\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.01000000000006,\"pid\":388980,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.602319038959624\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.01000000000006,\"pid\":388981,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":70,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",145829.82723674952,\"rnd-0.6407872510716326\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.01000000000006,\"pid\":388982,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":14,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9299002180638378\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.81000000000006,\"pid\":388988,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.7483121987898835\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.81000000000006,\"pid\":388989,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":70,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",145829.82723674952,\"rnd-0.08078742700541075\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.81000000000006,\"pid\":388990,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":27,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.978804145552125\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.41000000000005,\"pid\":388994,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.2669755765696964\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.41000000000005,\"pid\":388995,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":70,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",145829.82723674952,\"rnd-0.28343229264114345\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.41000000000005,\"pid\":388996,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.8851719568485916\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.21000000000005,\"pid\":389003,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":69,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",145829.82723674952,\"rnd-0.08426548334689765\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.21000000000005,\"pid\":389004,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",600,\"rnd-0.042519456453124604\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.01000000000005,\"pid\":389012,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\",600,\"rnd-0.4020428587092113\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.01000000000005,\"pid\":389013,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\",29627.513956872703,\"rnd-0.6240810119152544\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.01000000000005,\"pid\":389014,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":8,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",600,\"rnd-0.07929212905775729\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.810000000000045,\"pid\":389019,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.8209429691742851\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"pid\":389021,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.5903871378405467\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.61000000000003,\"pid\":389022,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":23,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.8531241545463177\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.410000000000025,\"pid\":389026,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.08886929289037493\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.410000000000025,\"pid\":389027,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.198317540244781\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.41,\"pid\":389035,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.5188317317531279\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.209999999999994,\"pid\":389039,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.7392428997433298\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.209999999999994,\"pid\":389040,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":67,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.8047991956700011\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.40999999999998,\"pid\":389041,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.5778733510516676\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.40999999999998,\"pid\":389042,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":39,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.868544855047789\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.20999999999998,\"pid\":389044,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.4632972590445177\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.409999999999954,\"pid\":389045,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.05760003304891392\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.409999999999954,\"pid\":389046,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":54,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.39133701667354837\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.20999999999995,\"pid\":389047,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.24437882780292952\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"pid\":389049,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.8769205621654967\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"pid\":389050,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":64,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.26786784628047466\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.009999999999934,\"pid\":389054,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.027587488294911866\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.009999999999934,\"pid\":389055,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":70,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",145829.82723674952,\"rnd-0.3444377639234315\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.009999999999934,\"pid\":389056,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":4,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\",600,\"rnd-0.05215709400978752\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.809999999999924,\"pid\":389060,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\",600,\"rnd-0.028097447048256008\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"pid\":389061,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\",24952.50325529273,\"rnd-0.09541953369701717\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"pid\":389062,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\",600,\"rnd-0.1920504545851538\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.409999999999926,\"pid\":389063,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",600,\"rnd-0.20475899149930177\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.209999999999926,\"pid\":389065,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.47072831868700193\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.00999999999993,\"pid\":389066,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.27101682715280573\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"pid\":389068,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.41632435781478305\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"pid\":389069,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":54,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9732521959031795\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.00999999999994,\"pid\":389070,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",600,\"rnd-0.2835942150358175\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.409999999999958,\"pid\":389071,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",28316.26310182165,\"rnd-0.9897137890012093\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.409999999999958,\"pid\":389072,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":26,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",600,\"rnd-0.19454609397941458\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"pid\":389073,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",28316.26310182165,\"rnd-0.10907929995601107\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"pid\":389074,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",600,\"rnd-0.734499843587008\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.80999999999996,\"pid\":389075,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",40042.59217699253,\"rnd-0.1655079476858745\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.80999999999996,\"pid\":389076,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":63,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",600,\"rnd-0.2375111942134196\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"pid\":389078,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",600,\"rnd-0.7705879510549538\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.40999999999996,\"pid\":389081,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",28316.26310182165,\"rnd-0.639378289857006\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.40999999999996,\"pid\":389082,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\",600,\"rnd-0.32460733487062465\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.009999999999962,\"pid\":389083,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\",24952.50325529273,\"rnd-0.9210406813989538\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.009999999999962,\"pid\":389084,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":16,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",600,\"rnd-0.7567587016506314\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.809999999999963,\"pid\":389086,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n\\n  let securityThresh = ns.getServerMinSecurityLevel(target);\\n  while (ns.getServerSecurityLevel(target) > securityThresh) {\\n    ns.print(\\n      \\\"weaking \\\" +\\n        target +\\n        \\\" is \\\" +\\n        ns.getServerSecurityLevel(target) +\\n        \\\" want \\\" +\\n        securityThresh\\n    );\\n    await ns.weaken(target);\\n  }\\n}\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///b62bd240-ca7e-4514-9539-282e26cc956c\",\"moduleSequenceNumber\":1660}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":259,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n    let moneyStash = ns.getServerMoneyAvailable(target)\\n    while (moneyStash < moneyThresh) {\\n        ns.print(\\\"growing \\\" + target + \\\", have \\\" + moneyStash + \\\" want \\\" + moneyThresh);\\n        await ns.grow(target);\\n        moneyStash = ns.getServerMoneyAvailable(target)\\n    }\\n}\",\"filename\":\"richen.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"richen.js\",\"url\":\"blob:file:///54f104be-3642-45df-b110-b78c9843fc05\",\"moduleSequenceNumber\":21529}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":260,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const net = scan(ns);\\n  const srvs = net.filter((srv) => ns.hasRootAccess(srv));\\n  ns.tprintf(`got ${srvs.length} pwnd-servers, out of ${net.length}`);\\n\\n  for (let srv of srvs) {\\n    const srvRam = ns.getServerMaxRam(srv);\\n    ns.tprint(`server ${srv} (${srvRam} GB) running:`);\\n    const processes = ns.ps(srv);\\n    for (let i = 0; i < processes.length; ++i) {\\n      ns.tprint(\\n        \\\"  \\\" +\\n          processes[i].filename +\\n          \\\" -t \\\" +\\n          processes[i].threads +\\n          \\\" \\\" +\\n          processes[i].args\\n      );\\n    }\\n  }\\n}\",\"filename\":\"show-running.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///f40d0db9-6b26-4e78-a1dc-627fd5f96eba\",\"moduleSequenceNumber\":372},{\"filename\":\"show-running.js\",\"url\":\"blob:file:///486ba247-4f69-43e7-a2c0-bef52dfd44c3\",\"moduleSequenceNumber\":13906}],\"dependents\":[],\"ramUsage\":2.1,\"server\":\"home\",\"moduleSequenceNumber\":261,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ps\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const targetScript = ns.args.shift();\\n  const targetArgs = ns.args;\\n  const runSize = ns.getScriptRam(targetScript);\\n\\n  const net = scan(ns);\\n\\n  // availiable workforce\\n  const srvs = net.filter((srv) => ns.hasRootAccess(srv));\\n  ns.tprintf(`got ${srvs.length} pwnd-servers, out of ${net.length}`);\\n\\n  // excluding cashcows and home\\n  const exclude = [\\\"home\\\"];\\n\\n  // excluding cash cows\\n  for (let srv of srvs.filter((srv) => !exclude.includes(srv))) {\\n    const srvRam = ns.getServerMaxRam(srv);\\n    ns.tprint(`server ${srv} (${srvRam} GB) running:`);\\n    const processes = ns.ps(srv);\\n    for (let i = 0; i < processes.length; ++i) {\\n      ns.tprint(\\n        \\\"  \\\" +\\n          processes[i].filename +\\n          \\\" -t \\\" +\\n          processes[i].threads +\\n          \\\" \\\" +\\n          processes[i].args\\n      );\\n    }\\n    await ns.scp(\\\"hacker-lib.js\\\", srv);\\n    await ns.scp(targetScript, srv);\\n    await ns.killall(srv);\\n    const threads = Math.floor(srvRam / runSize);\\n    if (threads > 0) {\\n      ns.tprint(\\n        `  starting ${targetScript} with -t ${threads} and args ${targetArgs}`\\n      );\\n      await ns.exec(targetScript, srv, threads, ...targetArgs);\\n    }\\n  }\\n}\",\"filename\":\"run-on-all.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///9f2e82fb-565a-485a-aba1-14d78f14e8d2\",\"moduleSequenceNumber\":186},{\"filename\":\"run-on-all.js\",\"url\":\"blob:file:///e7d2623e-39dc-4857-bf13-1999f9eb192f\",\"moduleSequenceNumber\":354}],\"dependents\":[],\"ramUsage\":4.6,\"server\":\"home\",\"moduleSequenceNumber\":262,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ps\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { fmt } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const myRiches = ns.getServerMoneyAvailable(\\\"home\\\");\\n  const maxSrvs = ns.getPurchasedServerLimit();\\n  const maxRam = ns.getPurchasedServerMaxRam();\\n  let sizes = [];\\n  for (let size = 8; size <= maxRam; size = size * 2) {\\n    sizes.push(size);\\n  }\\n  //const sizes = [8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096...];\\n  sizes.forEach((size) => {\\n    const price = ns.getPurchasedServerCost(size);\\n    const buyQty = Math.floor(myRiches / price);\\n    const maxQty = Math.min(buyQty, maxSrvs);\\n\\n    ns.tprint(`${size} GB srv for ${fmt(price)}, can buy ${maxQty}`);\\n  });\\n}\",\"filename\":\"price-list.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///6410df82-09e8-4661-8b2e-d29be6f4db06\",\"moduleSequenceNumber\":93},{\"filename\":\"price-list.js\",\"url\":\"blob:file:///b05bb938-2404-4cd2-8ce9-c60334a88472\",\"moduleSequenceNumber\":439}],\"dependents\":[],\"ramUsage\":2.05,\"server\":\"home\",\"moduleSequenceNumber\":263,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPurchasedServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { best_target } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const targetRam = ns.args.shift();\\n  const targetScript = ns.args.shift();\\n  const targetArgs = ns.args;\\n  const runSize = ns.getScriptRam(targetScript);\\n  const threads = Math.floor(targetRam / runSize);\\n\\n  const psrvs = ns.getPurchasedServers();\\n  const maxSrvs = ns.getPurchasedServerLimit();\\n  ns.tprintf(\\n    `got ${psrvs.length} p-servers, max ${maxSrvs}:\\\\n${psrvs.join(\\\", \\\")}`\\n  );\\n  ns.tprintf(`adding servers with ${targetRam} GB RAM`);\\n  const target = best_target(ns)?.name;\\n  ns.tprint(`targeting ${target}`);\\n\\n  let i = psrvs.length;\\n  while (i < maxSrvs) {\\n    // Check if we have enough money to purchase a server\\n    if (\\n      ns.getServerMoneyAvailable(\\\"home\\\") > ns.getPurchasedServerCost(targetRam)\\n    ) {\\n      const hostname = await ns.purchaseServer(\\\"psrv-\\\" + i, targetRam);\\n      /* ns.tprintf(\\n        `got new server ${hostname}, running ${targetScript} -t ${threads} ${targetArgs.join(\\n          \\\" \\\"\\n        )}`\\n      );\\n      await ns.scp(targetScript, hostname);\\n      await ns.exec(targetScript, hostname, threads, ...targetArgs); */\\n      ++i;\\n      if (target) {\\n        ns.run(\\\"slave-host.js\\\", 1, hostname, target);\\n        await ns.sleep(20);\\n      }\\n    }\\n  }\\n}\",\"filename\":\"add-hosts.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///450a504e-365d-4d41-b494-6f1bf041ace7\",\"moduleSequenceNumber\":93},{\"filename\":\"add-hosts.js\",\"url\":\"blob:file:///6ddb176e-8919-47b8-86c1-2df53deb5846\",\"moduleSequenceNumber\":440}],\"dependents\":[],\"ramUsage\":8.15,\"server\":\"home\",\"moduleSequenceNumber\":264,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan, best_target } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const net = scan(ns);\\n\\n  // determine ports we can open\\n  let can_ports = 0;\\n  if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"FTPCrack.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"relaySMTP.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"HTTPWorm.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"SQLInject.exe\\\", \\\"home\\\")) can_ports++;\\n\\n  // check ma 1337 skillz\\n  const skillz = ns.getHackingLevel();\\n\\n  const pwnd = net.filter((srv) => ns.hasRootAccess(srv));\\n  const unpwnd = net.filter((srv) => !pwnd.includes(srv));\\n  const tgts = unpwnd.filter((srv) => {\\n    const needPorts = ns.getServerNumPortsRequired(srv);\\n    const needSkillz = ns.getServerRequiredHackingLevel(srv);\\n    return needPorts <= can_ports && needSkillz <= skillz;\\n  });\\n\\n  ns.tprintf(\\n    `got ${pwnd.length} p0wnd servers, out of ${net.length}, found ${tgts.length} targets`\\n  );\\n\\n  tgts.forEach((srv) => {\\n    const needPorts = ns.getServerNumPortsRequired(srv);\\n    const needSkillz = ns.getServerRequiredHackingLevel(srv);\\n    if (needPorts <= can_ports && needSkillz <= skillz) {\\n      ns.tprintf(`tgt ${srv}`);\\n      if (needPorts >= 1) ns.brutessh(srv);\\n      if (needPorts >= 2) ns.ftpcrack(srv);\\n      if (needPorts >= 3) ns.relaysmtp(srv);\\n      if (needPorts >= 4) ns.httpworm(srv);\\n      if (needPorts >= 5) ns.sqlinject(srv);\\n      ns.nuke(srv);\\n      ns.tprintf(`p0wnd ${srv}`);\\n      if (ns.fileExists(\\\"slave-host.js\\\", \\\"home\\\")) {\\n        ns.run(\\\"slave-host.js\\\", 1, srv, best_target(ns)?.name || \\\"\\\");\\n      }\\n    }\\n  });\\n}\",\"filename\":\"scan-pwn.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///de76b100-cde6-46f0-8769-24052252404d\",\"moduleSequenceNumber\":15730},{\"filename\":\"scan-pwn.js\",\"url\":\"blob:file:///19c50271-52bf-4c94-9a91-069e9100de80\",\"moduleSequenceNumber\":15888}],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"home\",\"moduleSequenceNumber\":265,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/**\\n *\\n * @param {import('./NS').NS} ns\\n **/\\nexport async function main(ns) {\\n  const srv = ns.args.shift();\\n  const targetScript = ns.args.shift();\\n  const targetArgs = ns.args;\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    await ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  switch (args.length) {\\n    case 1:\\n      return [...data.servers];\\n    case 2:\\n      return [...data.scripts];\\n    default:\\n      return [];\\n  }\\n}\",\"filename\":\"run-max.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///ef1253c0-cec4-47ef-9a0f-1a23b58c66b9\",\"moduleSequenceNumber\":82},{\"filename\":\"run-max.js\",\"url\":\"blob:file:///6036b34e-dee1-4650-a3ec-dd4ecf29fb53\",\"moduleSequenceNumber\":798}],\"dependents\":[],\"ramUsage\":3.05,\"server\":\"home\",\"moduleSequenceNumber\":266,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * @param {import('./NS').NS} ns\\n **/\\nexport async function main(ns) {\\n  const targetScript = ns.args.shift();\\n  const targetArgs = ns.args;\\n  const runSize = ns.getScriptRam(targetScript);\\n  // TODO how to get local hostname or local ram?\\n  const srvRam = ns.getServerMaxRam(\\\"home\\\") - ns.getServerUsedRam(\\\"home\\\");\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  ns.tprint(\\n    `  in 10s starting run ${targetScript} -t ${threads} ${targetArgs}`\\n  );\\n  ns.spawn(targetScript, threads, ...targetArgs);\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...data.scripts];\\n}\",\"filename\":\"run-max-local.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"run-max-local.js\",\"url\":\"blob:file:///a4e85d5d-8221-438c-a1a4-683d3a8561a0\",\"moduleSequenceNumber\":54146}],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"home\",\"moduleSequenceNumber\":267,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"spawn\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"home\",\"moduleSequenceNumber\":268,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  let target = ns.args[0];\\n  ns.tprint(\\\"farming and hacking target \\\" + target);\\n  const moneyThresh = ns.getServerMaxMoney(target) * 0.9;\\n  const securityThresh = ns.getServerMinSecurityLevel(target) + 2;\\n  while (true) {\\n    if (ns.getServerSecurityLevel(target) > securityThresh) {\\n      await ns.weaken(target);\\n    } else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n      await ns.grow(target);\\n    } else {\\n      await ns.hack(target);\\n    }\\n  }\\n}\",\"filename\":\"farm-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"farm-hack.js\",\"url\":\"blob:file:///e96d1bf9-3aae-4914-9a43-219272803565\",\"moduleSequenceNumber\":365}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":269,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  const moneyThresh = ns.getServerMaxMoney(target);\\n  let moneyStash = ns.getServerMoneyAvailable(target);\\n  while (moneyStash < moneyThresh) {\\n    ns.print(\\n      \\\"growing \\\" + target + \\\", have \\\" + moneyStash + \\\" want \\\" + moneyThresh\\n    );\\n    await ns.grow(target);\\n    moneyStash = ns.getServerMoneyAvailable(target);\\n  }\\n}\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///195618f6-0f37-4125-aca0-f4c88c695ca1\",\"moduleSequenceNumber\":64620}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":270,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///bd999b21-6e6b-4caa-b8dd-e77a5542d1a3\",\"moduleSequenceNumber\":16724}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"moduleSequenceNumber\":271,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan, srv_info, fmt } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => srv_info(ns, srv));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max / a.sec_min - b.money_max / a.sec_min);\\n\\n  output.forEach((info) => {\\n    ns.tprint(`Target ${info.name}:`);\\n    ns.tprint(\\n      `  money: ${fmt(info.money_curr)}/${fmt(info.money_max)} ${\\n        info.money_pct\\n      }%`\\n    );\\n    ns.tprint(`  sec  : ${info.sec_curr}/${info.sec_min} ${info.sec_pct}%`);\\n  });\\n}\",\"filename\":\"srv-stats.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///aea42e9b-fef4-4019-a8d5-9450a3f1174a\",\"moduleSequenceNumber\":1175},{\"filename\":\"srv-stats.js\",\"url\":\"blob:file:///ee771a46-195a-4ac1-af25-83f9ba7b9027\",\"moduleSequenceNumber\":1775}],\"dependents\":[],\"ramUsage\":2.25,\"server\":\"home\",\"moduleSequenceNumber\":272,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  let target = ns.args[0];\\n  ns.tprint(\\\"farming target \\\" + target);\\n  const moneyThresh = ns.getServerMaxMoney(target);\\n  const securityThresh = ns.getServerMinSecurityLevel(target) + 2;\\n  while (true) {\\n    if (ns.getServerSecurityLevel(target) > securityThresh) {\\n      await ns.weaken(target);\\n    } else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n      await ns.grow(target);\\n    } else {\\n      ns.print(\\\"server \\\" + target + \\\"is full and weak\\\");\\n      await ns.sleep(1000);\\n    }\\n  }\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///a0e1c54d-f82a-44c2-bd56-927abcc031a6\",\"moduleSequenceNumber\":261}],\"dependents\":[],\"ramUsage\":2.3,\"server\":\"home\",\"moduleSequenceNumber\":273,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { srv_info } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  let target = ns.args[0];\\n  ns.tprint(\\\"watching target \\\" + target);\\n  while (true) {\\n    const info = srv_info(ns, target);\\n    ns.tprint(\\\"watching target \\\" + target);\\n    ns.tprint(\\n      `  money: ${info.money_curr}/${info.money_max} ${info.money_pct}%`\\n    );\\n    ns.tprint(`  sec  : ${info.sec_curr}/${info.sec_max} ${info.sec_pct}%`);\\n    await ns.sleep(1000);\\n  }\\n}\",\"filename\":\"watch-srv.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///ce53f93c-d9a4-411c-8af5-94ec6811a587\",\"moduleSequenceNumber\":14723},{\"filename\":\"watch-srv.js\",\"url\":\"blob:file:///636c22a8-302a-45d5-8371-83edcb37c7cf\",\"moduleSequenceNumber\":15135}],\"dependents\":[],\"ramUsage\":2,\"server\":\"home\",\"moduleSequenceNumber\":274,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { sorted_targets, srv_money, percentage, fmt } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  //random backoff\\n  await ns.sleep(Math.floor(Math.random() * 10000));\\n\\n  while (true) {\\n    //random backoff\\n    await ns.sleep(Math.floor(Math.random() * 5000));\\n\\n    const output = sorted_targets(ns)\\n      .map((srv) => ({\\n        ...srv,\\n        ...srv_money(ns, srv.name),\\n      }))\\n      .filter((info) => info.money_curr < info.money_max)\\n      .filter((info) => info.name !== \\\"n00dles\\\");\\n\\n    ns.print(\\n      `top targets: ${output\\n        .map(\\n          (info) => `${info.name} ${fmt(info.money_max)}$ ${info.money_pct}%`\\n        )\\n        .join(\\\", \\\")}`\\n    );\\n\\n    if (output.length > 0) {\\n      const info = output[0];\\n      ns.print(`Target ${info.name}:`);\\n      ns.print(\\n        `  before money: ${fmt(info.money_curr)}/${fmt(info.money_max)} ${\\n          info.money_pct\\n        }%`\\n      );\\n      const amount = await ns.grow(info.name);\\n      const after = srv_money(ns, info.name);\\n      ns.print(\\n        `  after money: ${fmt(after.money_curr)}/${fmt(after.money_max)} ${\\n          after.money_pct\\n        }% (raised ${percentage(info.money_curr, after.money_curr)}%)`\\n      );\\n      ns.tprint(\\n        `grown ${info.name} to ${fmt(after.money_curr)}$ / ${fmt(\\n          info.money_max\\n        )}$  ${after.money_pct}% (+ ${percentage(amount, info.money_curr)}%)`\\n      );\\n    } else {\\n      ns.print(\\\"no more tagets available\\\");\\n    }\\n    await ns.sleep(100);\\n  }\\n}\",\"filename\":\"grow-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///85769806-3ef4-47b8-a048-dbc6543cd442\",\"moduleSequenceNumber\":138843},{\"filename\":\"grow-top.js\",\"url\":\"blob:file:///8b84dcf1-2846-4e0a-b60b-fa86bec71f0c\",\"moduleSequenceNumber\":139004}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":275,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import {\\n  sorted_targets,\\n  srv_sec,\\n  percentage,\\n  fmt,\\n  srv_money,\\n} from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  //random backoff\\n  await ns.sleep(Math.floor(Math.random() * 10000));\\n\\n  let haveTarget = false;\\n  while (true) {\\n    //random backoff\\n    await ns.sleep(Math.floor(Math.random() * 5000));\\n\\n    const infos = sorted_targets(ns).map((srv) => ({\\n      ...srv,\\n      ...srv_sec(ns, srv.name),\\n      ...srv_money(ns, srv.name),\\n    }));\\n    //      .filter((info) => info.name !== \\\"n00dles\\\");\\n\\n    //ns.tprint(`info: ${infos.map((info) => info.name).join(\\\", \\\")}`);\\n\\n    const output_s = infos\\n      .filter((info) => info.money_curr != 0)\\n      .filter((info) => info.money_curr >= 0.25 * info.money_max)\\n      .filter((info) => info.sec_curr <= info.sec_min + 2); // only with reasonably weak security\\n\\n    ns.print(\\n      `low-sec targets: ${output_s\\n        .map(\\n          (info) =>\\n            `${info.name} ${info.sec_curr}/${info.sec_min}, ${fmt(\\n              info.money_curr\\n            )}$/${fmt(info.money_max)}$`\\n        )\\n        .join(\\\", \\\")}`\\n    );\\n\\n    const output = output_s.filter(\\n      (info) => info.money_curr >= info.money_max * 0.5\\n    ); // only with decent money\\n\\n    ns.print(\\n      `top targets: ${output\\n        .map((info) => `${info.name} ${info.sec_curr}/${info.sec_min}`)\\n        .join(\\\", \\\")}`\\n    );\\n\\n    if (output.length > 0) {\\n      haveTarget = true;\\n      const info = output[0];\\n      ns.print(`Target ${info.name}:`);\\n      const preMoney = info.money_curr;\\n      ns.print(\\n        `  before hack sec: ${info.sec_curr}/${info.sec_min} ${\\n          info.sec_pct\\n        }%, money: ${fmt(preMoney)}`\\n      );\\n      const loot = await ns.hack(info.name);\\n      const postMoney = ns.getServerMoneyAvailable(info.name);\\n      ns.print(\\n        `  after hack sec:  ${info.sec_curr}/${info.sec_min} ${\\n          info.sec_pct\\n        }%, money: ${fmt(postMoney)}, got ${percentage(loot, preMoney)}%`\\n      );\\n      ns.print(\\n        `Hacked ${info.name}: got ${fmt(loot)} (${percentage(\\n          loot,\\n          preMoney\\n        )}%), now at sec ${info.sec_curr.toFixed(2)}/${info.sec_min} (${\\n          info.sec_pct\\n        }%)`\\n      );\\n    } else {\\n      if (haveTarget) {\\n        ns.print(\\\"no more tagets available\\\");\\n        haveTarget = false;\\n      }\\n    }\\n    await ns.sleep(1);\\n  }\\n}\",\"filename\":\"hack-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///d790b634-e044-4eba-808c-32f4308c3e55\",\"moduleSequenceNumber\":199994},{\"filename\":\"hack-top.js\",\"url\":\"blob:file:///cc53e543-12a5-45d9-9bd8-9aea794b3581\",\"moduleSequenceNumber\":204766}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"home\",\"moduleSequenceNumber\":276,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { sorted_targets, srv_sec } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  //random backoff\\n  await ns.sleep(Math.floor(Math.random() * 10000));\\n\\n  while (true) {\\n    //random backoff\\n    await ns.sleep(Math.floor(Math.random() * 5000));\\n\\n    const output = sorted_targets(ns)\\n      .map((srv) => ({\\n        ...srv,\\n        ...srv_sec(ns, srv.name),\\n      }))\\n      .filter((info) => info.sec_curr > info.sec_min + 1);\\n    //.filter((info) => info.name !== \\\"n00dles\\\");\\n\\n    ns.print(\\n      `top targets: ${output\\n        .map((info) => `${info.name} ${info.sec_curr}/${info.sec_min}`)\\n        .join(\\\", \\\")}`\\n    );\\n\\n    if (output.length > 0) {\\n      const info = output[0];\\n      ns.print(\\n        `Target ${info.name}, before: ${info.sec_curr}/${info.sec_min} ${info.sec_pct}%`\\n      );\\n      await ns.weaken(info.name);\\n      const post = srv_sec(ns, info.name);\\n      ns.print(\\n        `  after sec: ${post.sec_curr}/${post.sec_min} ${post.sec_pct}%`\\n      );\\n      ns.tprint(\\n        `weakened ${info.name}: ${+post.sec_curr.toFixed(2)}/${\\n          post.sec_min\\n        }, now at ${post.sec_pct}%`\\n      );\\n    }\\n    await ns.sleep(100);\\n  }\\n}\",\"filename\":\"weaken-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///f3bec316-e196-46ce-8df0-0e861499f3e2\",\"moduleSequenceNumber\":379648},{\"filename\":\"weaken-top.js\",\"url\":\"blob:file:///45688db2-833f-438f-88e1-0287c68f7004\",\"moduleSequenceNumber\":380202}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":277,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import {\\n  sorted_targets,\\n  best_target,\\n  srv_info,\\n  fmt,\\n  tfmt,\\n} from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const output = sorted_targets(ns).map((srv) => ({\\n    ...srv,\\n    ...srv_info(ns, srv.name),\\n  }));\\n\\n  output.reverse().forEach((info) => {\\n    ns.tprint(`Target ${info.name}:`);\\n    ns.tprint(\\n      `  money: ${fmt(info.money_curr)}/${fmt(info.money_max)} ${\\n        info.money_pct\\n      }%`\\n    );\\n    ns.tprint(`  sec  : ${info.sec_curr}/${info.sec_min} ${info.sec_pct}%`);\\n    ns.tprint(`  score: ${fmt(info.score)}`);\\n    ns.tprint(`  growth: ${fmt(info.growth)}`);\\n    ns.tprint(\\n      `  times: grow ${tfmt(ns.getGrowTime(info.name))} weak ${tfmt(\\n        ns.getWeakenTime(info.name)\\n      )} hack ${tfmt(ns.getHackTime(info.name))} `\\n    );\\n  });\\n\\n  ns.tprint(`best target is ${best_target(ns).name}`);\\n}\",\"filename\":\"targets.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///d0f78f89-9506-4856-9c10-5fa957db6074\",\"moduleSequenceNumber\":13031},{\"filename\":\"targets.js\",\"url\":\"blob:file:///407a5816-4465-4e08-85c5-901c045fd82e\",\"moduleSequenceNumber\":18023}],\"dependents\":[],\"ramUsage\":2.5,\"server\":\"home\",\"moduleSequenceNumber\":278,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  const net = scan(ns);\\n  const srvs = net.filter((srv) => ns.hasRootAccess(srv));\\n  ns.tprintf(`got ${srvs.length} pwnd-servers, out of ${net.length}`);\\n  ns.tprintf(\\\"attacking \\\" + target || \\\" top growing servers\\\");\\n\\n  const exclude = [\\\"home\\\"];\\n\\n  // excluding home\\n  if (ns.fileExists(\\\"slave-host.js\\\", \\\"home\\\")) {\\n    const targets = srvs.filter((srv) => !exclude.includes(srv));\\n    // ns.tprint(\\\"targets: \\\" + targets.join(\\\",\\\"));\\n    for (let srv of targets) {\\n      ns.run(\\\"slave-host.js\\\", 1, srv, target);\\n      await ns.sleep(20);\\n    }\\n  }\\n}\",\"filename\":\"slave-net.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///62d64342-7665-491c-933c-6e059007ef5d\",\"moduleSequenceNumber\":15730},{\"filename\":\"slave-net.js\",\"url\":\"blob:file:///846427e2-f92f-4612-bdd3-95c0c2c437f0\",\"moduleSequenceNumber\":16713}],\"dependents\":[],\"ramUsage\":2.95,\"server\":\"home\",\"moduleSequenceNumber\":279,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n\\n  const scriptWeaken = \\\"loop-weaken.js\\\";\\n  const scriptGrow = \\\"loop-grow.js\\\";\\n  const scriptHack = \\\"loop-hack.js\\\";\\n\\n  /* ns.tprint(\\n    `target ${target}, scripts: ${scriptWeaken},${scriptGrow},${scriptHack}`\\n  );*/\\n\\n  const srv = \\\"home\\\";\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n\\n  const size = sizeWeaken; //all have same size\\n\\n  const partGrow = 0.8;\\n  const partWeaken = 0.1;\\n\\n  const srvRam = ns.getServerMaxRam(srv) - ns.getServerUsedRam(srv);\\n  const srvThreads = srvRam / size;\\n\\n  const countWeaken = srvThreads * partWeaken;\\n  const countGrow = srvThreads * partGrow;\\n  let countHack = srvThreads - countGrow - countWeaken;\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${Math.floor(\\n      countWeaken\\n    )} weaken / ${Math.floor(countGrow)} grow / ${Math.floor(\\n      countHack\\n    )} hack threads`\\n  );\\n\\n  if (countWeaken > 0) ns.run(scriptWeaken, countWeaken, target);\\n  if (countGrow > 0) ns.run(scriptGrow, countGrow, target);\\n  if (countHack > 0) ns.run(scriptHack, countHack, target);\\n}\",\"filename\":\"slave-home.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///cf450f7c-0e3e-4835-9bcf-95815cc2e97a\",\"moduleSequenceNumber\":15730},{\"filename\":\"slave-home.js\",\"url\":\"blob:file:///455b4529-5992-4f6d-8ea5-d8648714b8a8\",\"moduleSequenceNumber\":16714}],\"dependents\":[],\"ramUsage\":2.8,\"server\":\"home\",\"moduleSequenceNumber\":280,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\nconst scriptWeaken = \\\"weaken-top.js\\\";\\nconst scriptGrow = \\\"grow-top.js\\\";\\nconst scriptHack = \\\"hack-top.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n  const partGrow = (ns.args[0] || 40) / 100;\\n  const partWeaken = 1.0 - partGrow;\\n  const hackFactor = 0.2;\\n\\n  const srv = ns.getHostName();\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const countWeaken = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partWeaken) / sizeWeaken\\n  );\\n  const countGrow = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partGrow) / sizeGrow\\n  );\\n  const countHack = Math.floor((srvRam * hackFactor) / sizeHack);\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${countWeaken} weaken / ${countGrow} grow / ${countHack} hack threads`\\n  );\\n\\n  if (countWeaken > 0) ns.run(scriptWeaken, countWeaken);\\n  if (countGrow > 0) ns.run(scriptGrow, srv, countGrow);\\n  if (countHack > 0) ns.spawn(scriptHack, srv, countHack);\\n}\",\"filename\":\"slave-self.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.75,\"server\":\"home\",\"moduleSequenceNumber\":281,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"spawn\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { search } from \\\"./hacker-lib.js\\\";\\n\\nexport function connect(path) {\\n  const doc = eval(\\\"document\\\");\\n  const terminalInput = doc.getElementById(\\\"terminal-input\\\");\\n  terminalInput.value = `home;${path}`;\\n  const handler = Object.keys(terminalInput)[1];\\n  terminalInput[handler].onChange({ target: terminalInput });\\n  terminalInput[handler].onKeyDown({ keyCode: 13, preventDefault: () => null });\\n}\\n\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  const path = search(ns, target);\\n  if (path && path.length > 0 && path[0] == \\\"home\\\") {\\n    path.shift();\\n  }\\n  if (path) {\\n    const connectStr = \\\"connect \\\" + path.join(\\\"; connect \\\");\\n    connect(connectStr);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...data.servers];\\n}\",\"filename\":\"route.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///340d532c-fa4e-4ff1-8743-686cddcedb6b\",\"moduleSequenceNumber\":93},{\"filename\":\"route.js\",\"url\":\"blob:file:///e1170bff-7933-4a0c-859c-5636dec01720\",\"moduleSequenceNumber\":3500}],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"home\",\"moduleSequenceNumber\":282,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const srv = ns.args[0];\\n  const target = ns.args[1];\\n\\n  const scriptWeaken = !target ? \\\"weaken-top.js\\\" : \\\"loop-weaken.js\\\";\\n  const scriptGrow = !target ? \\\"grow-top.js\\\" : \\\"loop-grow.js\\\";\\n  const scriptHack = !target ? \\\"hack-top.js\\\" : \\\"loop-hack.js\\\";\\n\\n  ns.tprint(\\n    `host ${srv}, target ${target}, scripts: ${scriptWeaken},${scriptGrow},${scriptHack}`\\n  );\\n\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n\\n  const size = sizeWeaken; //all have same size\\n\\n  const partGrow = 0.8;\\n  const partWeaken = 0.1;\\n\\n  const srvRam = ns.getServerMaxRam(srv);\\n  const srvThreads = srvRam / size;\\n\\n  const countWeaken = srvThreads * partWeaken;\\n  const countGrow = srvThreads * partGrow;\\n  let countHack = srvThreads - countGrow - countWeaken;\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${Math.floor(\\n      countWeaken\\n    )} weaken / ${Math.floor(countGrow)} grow / ${Math.floor(\\n      countHack\\n    )} hack threads`\\n  );\\n\\n  await ns.scp(\\\"hacker-lib.js\\\", srv);\\n  await ns.scp(scriptWeaken, srv);\\n  await ns.scp(scriptGrow, srv);\\n  await ns.scp(scriptHack, srv);\\n  await ns.scp(\\\"weaken-after.js\\\", \\\"home\\\", srv);\\n  await ns.scp(\\\"grow-after.js\\\", \\\"home\\\", srv);\\n  await ns.scp(\\\"hack-after.js\\\", \\\"home\\\", srv);\\n  ns.killall(srv);\\n\\n  if (countWeaken > 0) ns.exec(scriptWeaken, srv, countWeaken, target);\\n  if (countGrow > 0) ns.exec(scriptGrow, srv, countGrow, target);\\n  if (countHack > 0) ns.exec(scriptHack, srv, countHack, target);\\n  ns.tprint(\\\"done slaving \\\" + srv);\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...data.servers];\\n}\",\"filename\":\"slave-host.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///fb062e79-c358-45a8-9ea8-7ca3f50b8bcf\",\"moduleSequenceNumber\":93},{\"filename\":\"slave-host.js\",\"url\":\"blob:file:///45467c9d-08ad-4cc9-8d13-047509cbeb08\",\"moduleSequenceNumber\":441}],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"home\",\"moduleSequenceNumber\":283,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst psrvs = ns.getPurchasedServers()\\n\\tfor (let srv of psrvs) {\\n\\t\\tns.run(\\\"run-max.js\\\", 1, srv, \\\"weaken-top.js\\\")\\n\\t}\\n}\",\"filename\":\"yourallweak.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"yourallweak.js\",\"url\":\"blob:file:///32d41ad2-5894-451b-a641-cf89adcd67a5\",\"moduleSequenceNumber\":146014}],\"dependents\":[],\"ramUsage\":4.85,\"server\":\"home\",\"moduleSequenceNumber\":284,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///cfbc7d54-e3ca-4e5a-94c3-5eaad96b9d12\",\"moduleSequenceNumber\":16722}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":285,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///edc861fc-6c2b-4d3b-bf29-93eb784f98c5\",\"moduleSequenceNumber\":16723}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":286,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/**\\n *\\n * @param {import('./NS').NS} ns\\n **/\\nexport async function main(ns) {\\n  const targetScript = ns.args.shift();\\n  const targetArgs = ns.args;\\n  const runSize = ns.getScriptRam(targetScript);\\n\\n  for (const srv of ns.getPurchasedServers()) {\\n    const srvRam = ns.getServerMaxRam(srv);\\n    const threads = Math.floor(srvRam / runSize);\\n    if (threads > 0) {\\n      await ns.scp(targetScript, srv);\\n      ns.killall(srv);\\n      ns.tprint(\\n        `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n      );\\n      await ns.exec(targetScript, srv, threads, ...targetArgs);\\n    }\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...data.scripts];\\n}\",\"filename\":\"run-max-pservs.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///4dd174cd-0ac2-477b-a8f8-b5ae795c1c10\",\"moduleSequenceNumber\":72366},{\"filename\":\"run-max-pservs.js\",\"url\":\"blob:file:///e4322d07-3789-4771-a06e-d65e38da8d76\",\"moduleSequenceNumber\":108273}],\"dependents\":[],\"ramUsage\":6.4,\"server\":\"home\",\"moduleSequenceNumber\":287,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    const server = ns.args[0];\\n    if (args.help || !server) {\\n        ns.tprint(\\\"This script does a more detailed analysis of a server.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()} SERVER`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n    const ram = ns.getServerRam(server);\\n    const money = ns.getServerMoneyAvailable(server);\\n    const maxMoney = ns.getServerMaxMoney(server);\\n    const minSec = ns.getServerMinSecurityLevel(server);\\n    const sec = ns.getServerSecurityLevel(server);\\n    ns.tprint(`\\n\\n${server}:\\n    RAM        : ${ram[1]} / ${ram[0]} (${ram[1] / ram[0] * 100}%)\\n    $          : ${ns.nFormat(money, \\\"$0.000a\\\")} / ${ns.nFormat(maxMoney, \\\"$0.000a\\\")} (${(money / maxMoney * 100).toFixed(2)}%)\\n    security   : ${minSec.toFixed(2)} / ${sec.toFixed(2)}\\n    growth     : ${ns.getServerGrowth(server)}\\n    hack time  : ${ns.tFormat(ns.getHackTime(server))}\\n    grow time  : ${ns.tFormat(ns.getGrowTime(server))}\\n    weaken time: ${ns.tFormat(ns.getWeakenTime(server))}\\n    grow x2    : ${(ns.growthAnalyze(server, 2)).toFixed(2)} threads\\n    grow x3    : ${(ns.growthAnalyze(server, 3)).toFixed(2)} threads\\n    grow x4    : ${(ns.growthAnalyze(server, 4)).toFixed(2)} threads\\n    hack 10%   : ${(.10 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hack 25%   : ${(.25 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hack 50%   : ${(.50 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hackChance : ${(ns.hackAnalyzeChance(server) * 100).toFixed(2)}%\\n`);\\n}\",\"filename\":\"/official/analyze_server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/official/analyze_server.js\",\"url\":\"blob:file:///cd7ca598-c15f-4b0d-843a-e4000637a699\",\"moduleSequenceNumber\":69258}],\"dependents\":[],\"ramUsage\":5.35,\"server\":\"home\",\"moduleSequenceNumber\":288,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const flags = ns.flags([\\n    [\\\"refreshrate\\\", 200],\\n    [\\\"help\\\", false],\\n  ]);\\n  if (flags._.length === 0 || flags.help) {\\n    ns.tprint(\\n      \\\"This script helps visualize the money and security of a server.\\\"\\n    );\\n    ns.tprint(`USAGE: run ${ns.getScriptName()} SERVER_NAME`);\\n    ns.tprint(\\\"Example:\\\");\\n    ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n    return;\\n  }\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  while (true) {\\n    const server = flags._[0];\\n    let money = ns.getServerMoneyAvailable(server);\\n    if (money === 0) money = 1;\\n    const maxMoney = ns.getServerMaxMoney(server);\\n    const minSec = ns.getServerMinSecurityLevel(server);\\n    const sec = ns.getServerSecurityLevel(server);\\n    ns.clearLog(server);\\n    ns.print(`${server}:`);\\n    ns.print(\\n      ` $_______: ${ns.nFormat(money, \\\"$0.000a\\\")} / ${ns.nFormat(\\n        maxMoney,\\n        \\\"$0.000a\\\"\\n      )} (${((money / maxMoney) * 100).toFixed(2)}%)`\\n    );\\n    ns.print(` security: +${(sec - minSec).toFixed(2)}`);\\n    ns.print(\\n      ` hack____: ${ns.tFormat(ns.getHackTime(server))} (t=${Math.ceil(\\n        ns.hackAnalyzeThreads(server, money)\\n      )})`\\n    );\\n    ns.print(\\n      ` grow____: ${ns.tFormat(ns.getGrowTime(server))} (t=${Math.ceil(\\n        ns.growthAnalyze(server, maxMoney / money)\\n      )})`\\n    );\\n    ns.print(\\n      ` weaken__: ${ns.tFormat(ns.getWeakenTime(server))} (t=${Math.ceil(\\n        (sec - minSec) * 20\\n      )})`\\n    );\\n    await ns.sleep(flags.refreshrate);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return data.servers;\\n}\",\"filename\":\"/official/monitor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/official/monitor.js\",\"url\":\"blob:file:///df4d02b5-f726-4dda-8ffe-f683fcf96d57\",\"moduleSequenceNumber\":16712}],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"home\",\"moduleSequenceNumber\":289,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyzeThreads\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { best_target } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = best_target(ns);\\n\\n  ns.tprintf(`new target is ${target.name}`);\\n  ns.run(\\\"official/monitor.js\\\", 1, target.name);\\n\\n  ns.run(\\\"slave-net.js\\\", 1, target.name);\\n  ns.run(\\\"slave-home.js\\\", 1, target.name);\\n}\",\"filename\":\"retarget.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///f7679b01-1e12-4f3b-97e2-68cda287fecb\",\"moduleSequenceNumber\":15730},{\"filename\":\"retarget.js\",\"url\":\"blob:file:///646b1203-b249-4acc-ab35-cc48def899ba\",\"moduleSequenceNumber\":16711}],\"dependents\":[],\"ramUsage\":3.15,\"server\":\"home\",\"moduleSequenceNumber\":290,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan, srv_info, fmt } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => srv_info(ns, srv));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max / a.sec_min - b.money_max / a.sec_min);\\n\\n  output.forEach((info) => {\\n    ns.tprint(`Target ${info.name}:`);\\n    ns.tprint(\\n      `  money: ${fmt(info.money_curr)}/${fmt(info.money_max)} ${\\n        info.money_pct\\n      }%`\\n    );\\n    ns.tprint(`  sec  : ${info.sec_curr}/${info.sec_min} ${info.sec_pct}%`);\\n  });\\n}\",\"filename\":\"/archive/srv-stats.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.25,\"server\":\"home\",\"moduleSequenceNumber\":291,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const args = ns.flags([['help', false]]);\\n    const hostname = args._[0];\\n    if(args.help || !hostname) {\\n        ns.tprint(\\\"This script will generate money by hacking a target server.\\\");\\n        ns.tprint(`USAGE: run ${ns.getScriptName()} SERVER_NAME`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n    while (true) {\\n        if (ns.getServerSecurityLevel(hostname) > ns.getServerMinSecurityLevel(hostname)) {\\n            await ns.weaken(hostname);\\n        } else if (ns.getServerMoneyAvailable(hostname) < ns.getServerMaxMoney(hostname)) {\\n            await ns.grow(hostname);\\n        } else {\\n            await ns.hack(hostname);\\n        }\\n    }\\n}\",\"filename\":\"/official/basic_hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":292,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    if (args.help) {\\n        ns.tprint(\\\"This script will enhance your HUD (Heads up Display) with custom statistics.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\n        return;\\n    }\\n    \\n    const doc = document; // This is expensive! (25GB RAM) Perhaps there's a way around it? ;)\\n    const hook0 = doc.getElementById('overview-extra-hook-0');\\n    const hook1 = doc.getElementById('overview-extra-hook-1');\\n    while (true) {\\n        try {\\n            const headers = []\\n            const values = [];\\n            // Add script income per second\\n            headers.push(\\\"ScrInc\\\");\\n            values.push(ns.getScriptIncome()[0].toPrecision(5) + '/sec');\\n            // Add script exp gain rate per second\\n            headers.push(\\\"ScrExp\\\");\\n            values.push(ns.getScriptExpGain().toPrecision(5) + '/sec');\\n            // TODO: Add more neat stuff\\n\\n            // Now drop it into the placeholder elements\\n            hook0.innerText = headers.join(\\\" \\\\n\\\");\\n            hook1.innerText = values.join(\\\"\\\\n\\\");\\n        } catch (err) { // This might come in handy later\\n            ns.print(\\\"ERROR: Update Skipped: \\\" + String(err));\\n        }\\n        await ns.sleep(1000);\\n    }\\n}\",\"filename\":\"/official/custom-stats.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":26.8,\"server\":\"home\",\"moduleSequenceNumber\":293,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"dom\",\"name\":\"document\",\"cost\":25},{\"type\":\"fn\",\"name\":\"getScriptIncome\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getScriptExpGain\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst args = ns.flags([[\\\"help\\\", false]]);\\n\\tif (args.help || args._.length < 2) {\\n\\t\\tns.tprint(\\\"This script deploys another script on a server with maximum threads possible.\\\");\\n\\t\\tns.tprint(`Usage: run ${ns.getScriptName()} HOST SCRIPT ARGUMENTS`);\\n\\t\\tns.tprint(\\\"Example:\\\");\\n\\t\\tns.tprint(`> run ${ns.getScriptName()} n00dles basic_hack.js foodnstuff`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst host = args._[0];\\n\\tconst script = args._[1];\\n\\tconst script_args = args._.slice(2);\\n\\n\\tif (!ns.serverExists(host)) {\\n\\t\\tns.tprint(`Server '${host}' does not exist. Aborting.`);\\n\\t\\treturn;\\n\\t}\\n\\tif (!ns.ls(ns.getHostname()).find(f => f === script)) {\\n\\t\\tns.tprint(`Script '${script}' does not exist. Aborting.`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst threads = Math.floor((ns.getServerMaxRam(host) - ns.getServerUsedRam(host)) / ns.getScriptRam(script));\\n\\tns.tprint(`Launching script '${script}' on server '${host}' with ${threads} threads and the following arguments: ${script_args}`);\\n\\tawait ns.scp(script, ns.getHostname(), host);\\n\\tns.exec(script, host, threads, ...script_args);\\n}\",\"filename\":\"/official/deploy.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.05,\"server\":\"home\",\"moduleSequenceNumber\":294,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function scan(ns, parent, server, list) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        list.push(child);\\n        \\n        scan(ns, server, child, list);\\n    }\\n}\\n\\nexport function list_servers(ns) {\\n    const list = [];\\n    scan(ns, '', 'home', list);\\n    return list;\\n}\\n\\nexport async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    if (args.help) {\\n        ns.tprint(\\\"This script helps you find an unsolved coding contract.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\n        return;\\n    }\\n\\n    let servers = list_servers(ns);\\n    const boughtServers = ns.getPurchasedServers(ns);\\n    servers = servers.filter(s => !boughtServers.includes(s));\\n    const hostname = servers.find(s => ns.ls(s).find(f => f.endsWith(\\\".cct\\\")))\\n    if(!hostname) {\\n        ns.tprint(\\\"No coding contract found.\\\");\\n        return;\\n    }\\n\\n    ns.tprint(`Found coding contract on '${hostname}'.`)\\n}\",\"filename\":\"/official/find_coding_contract.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.25,\"server\":\"home\",\"moduleSequenceNumber\":295,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function recursiveScan(ns, parent, server, target, route) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        if (child == target) {\\n            route.unshift(child);\\n            route.unshift(server);\\n            return true;\\n        }\\n\\n        if (recursiveScan(ns, server, child, target, route)) {\\n            route.unshift(server);\\n            return true;\\n        }\\n    }\\n    return false;\\n}\\n\\nexport async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    let route = [];\\n    let server = args._[0];\\n    if (!server || args.help) {\\n        ns.tprint(\\\"This script helps you find a server on the network and shows you the path to get to it.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()} SERVER`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n\\n    recursiveScan(ns, '', 'home', server, route);\\n    for (const i in route) {\\n        await ns.sleep(500);\\n        const extra = i > 0 ? \\\"└ \\\" : \\\"\\\";\\n        ns.tprint(`${\\\" \\\".repeat(i)}${extra}${route[i]}`);\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return data.servers;\\n}\",\"filename\":\"/official/find_server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":296,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function scan(ns, parent, server, list) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        list.push(child);\\n        \\n        scan(ns, server, child, list);\\n    }\\n}\\n\\nexport function list_servers(ns) {\\n    const list = [];\\n    scan(ns, '', 'home', list);\\n    return list;\\n}\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst args = ns.flags([[\\\"help\\\", false]]);\\n    if (args.help) {\\n        ns.tprint(\\\"This script lists all servers on which you can run scripts.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\n        return;\\n    }\\n\\n\\tconst servers = list_servers(ns).filter(s => ns.hasRootAccess(s)).concat(['home']);\\n    for(const server of servers) {\\n        const used = ns.getServerUsedRam(server);\\n        const max = ns.getServerMaxRam(server);\\n        ns.tprint(`${server} is opened. ${used} GB / ${max} GB (${(100*used/max).toFixed(2)}%)`)\\n    }\\n}\",\"filename\":\"/official/opened_servers.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":297,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  ns.purchaseTor();\\n}\",\"filename\":\"restart.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"restart.js\",\"url\":\"blob:file:///7ce8a684-b9db-4924-b6a5-f4d6a33e9ebe\",\"moduleSequenceNumber\":102476}],\"dependents\":[],\"ramUsage\":3.6,\"server\":\"home\",\"moduleSequenceNumber\":298,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"purchaseTor\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    const server = ns.args[0];\\n    if (args.help || !server) {\\n        ns.tprint(\\\"This script does a more detailed analysis of a server.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()} SERVER`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n    const ram = ns.getServerRam(server);\\n    const money = ns.getServerMoneyAvailable(server);\\n    const maxMoney = ns.getServerMaxMoney(server);\\n    const minSec = ns.getServerMinSecurityLevel(server);\\n    const sec = ns.getServerSecurityLevel(server);\\n    ns.tprint(`\\n\\n${server}:\\n    RAM        : ${ram[1]} / ${ram[0]} (${ram[1] / ram[0] * 100}%)\\n    $          : ${ns.nFormat(money, \\\"$0.000a\\\")} / ${ns.nFormat(maxMoney, \\\"$0.000a\\\")} (${(money / maxMoney * 100).toFixed(2)}%)\\n    security   : ${minSec.toFixed(2)} / ${sec.toFixed(2)}\\n    growth     : ${ns.getServerGrowth(server)}\\n    hack time  : ${ns.tFormat(ns.getHackTime(server))}\\n    grow time  : ${ns.tFormat(ns.getGrowTime(server))}\\n    weaken time: ${ns.tFormat(ns.getWeakenTime(server))}\\n    grow x2    : ${(ns.growthAnalyze(server, 2)).toFixed(2)} threads\\n    grow x3    : ${(ns.growthAnalyze(server, 3)).toFixed(2)} threads\\n    grow x4    : ${(ns.growthAnalyze(server, 4)).toFixed(2)} threads\\n    hack 10%   : ${(.10 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hack 25%   : ${(.25 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hack 50%   : ${(.50 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hackChance : ${(ns.hackAnalyzeChance(server) * 100).toFixed(2)}%\\n`);\\n}\",\"filename\":\"analyze_server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.35,\"server\":\"home\",\"moduleSequenceNumber\":299,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const args = ns.flags([['help', false]]);\\n    const hostname = args._[0];\\n    if(args.help || !hostname) {\\n        ns.tprint(\\\"This script will generate money by hacking a target server.\\\");\\n        ns.tprint(`USAGE: run ${ns.getScriptName()} SERVER_NAME`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n    while (true) {\\n        if (ns.getServerSecurityLevel(hostname) > ns.getServerMinSecurityLevel(hostname)) {\\n            await ns.weaken(hostname);\\n        } else if (ns.getServerMoneyAvailable(hostname) < ns.getServerMaxMoney(hostname)) {\\n            await ns.grow(hostname);\\n        } else {\\n            await ns.hack(hostname);\\n        }\\n    }\\n}\",\"filename\":\"basic_hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":300,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    if (args.help) {\\n        ns.tprint(\\\"This script will enhance your HUD (Heads up Display) with custom statistics.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\n        return;\\n    }\\n    \\n    const doc = document; // This is expensive! (25GB RAM) Perhaps there's a way around it? ;)\\n    const hook0 = doc.getElementById('overview-extra-hook-0');\\n    const hook1 = doc.getElementById('overview-extra-hook-1');\\n    while (true) {\\n        try {\\n            const headers = []\\n            const values = [];\\n            // Add script income per second\\n            headers.push(\\\"ScrInc\\\");\\n            values.push(ns.getScriptIncome()[0].toPrecision(5) + '/sec');\\n            // Add script exp gain rate per second\\n            headers.push(\\\"ScrExp\\\");\\n            values.push(ns.getScriptExpGain().toPrecision(5) + '/sec');\\n            // TODO: Add more neat stuff\\n\\n            // Now drop it into the placeholder elements\\n            hook0.innerText = headers.join(\\\" \\\\n\\\");\\n            hook1.innerText = values.join(\\\"\\\\n\\\");\\n        } catch (err) { // This might come in handy later\\n            ns.print(\\\"ERROR: Update Skipped: \\\" + String(err));\\n        }\\n        await ns.sleep(1000);\\n    }\\n}\",\"filename\":\"custom-stats.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":26.8,\"server\":\"home\",\"moduleSequenceNumber\":301,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"dom\",\"name\":\"document\",\"cost\":25},{\"type\":\"fn\",\"name\":\"getScriptIncome\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getScriptExpGain\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst args = ns.flags([[\\\"help\\\", false]]);\\n\\tif (args.help || args._.length < 2) {\\n\\t\\tns.tprint(\\\"This script deploys another script on a server with maximum threads possible.\\\");\\n\\t\\tns.tprint(`Usage: run ${ns.getScriptName()} HOST SCRIPT ARGUMENTS`);\\n\\t\\tns.tprint(\\\"Example:\\\");\\n\\t\\tns.tprint(`> run ${ns.getScriptName()} n00dles basic_hack.js foodnstuff`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst host = args._[0];\\n\\tconst script = args._[1];\\n\\tconst script_args = args._.slice(2);\\n\\n\\tif (!ns.serverExists(host)) {\\n\\t\\tns.tprint(`Server '${host}' does not exist. Aborting.`);\\n\\t\\treturn;\\n\\t}\\n\\tif (!ns.ls(ns.getHostname()).find(f => f === script)) {\\n\\t\\tns.tprint(`Script '${script}' does not exist. Aborting.`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst threads = Math.floor((ns.getServerMaxRam(host) - ns.getServerUsedRam(host)) / ns.getScriptRam(script));\\n\\tns.tprint(`Launching script '${script}' on server '${host}' with ${threads} threads and the following arguments: ${script_args}`);\\n\\tawait ns.scp(script, ns.getHostname(), host);\\n\\tns.exec(script, host, threads, ...script_args);\\n}\",\"filename\":\"deploy.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.05,\"server\":\"home\",\"moduleSequenceNumber\":302,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function scan(ns, parent, server, list) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        list.push(child);\\n        \\n        scan(ns, server, child, list);\\n    }\\n}\\n\\nexport function list_servers(ns) {\\n    const list = [];\\n    scan(ns, '', 'home', list);\\n    return list;\\n}\\n\\nexport async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    if (args.help) {\\n        ns.tprint(\\\"This script helps you find an unsolved coding contract.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\n        return;\\n    }\\n\\n    let servers = list_servers(ns);\\n    const boughtServers = ns.getPurchasedServers(ns);\\n    servers = servers.filter(s => !boughtServers.includes(s));\\n    const hostname = servers.find(s => ns.ls(s).find(f => f.endsWith(\\\".cct\\\")))\\n    if(!hostname) {\\n        ns.tprint(\\\"No coding contract found.\\\");\\n        return;\\n    }\\n\\n    ns.tprint(`Found coding contract on '${hostname}'.`)\\n}\",\"filename\":\"find_coding_contract.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.25,\"server\":\"home\",\"moduleSequenceNumber\":303,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function recursiveScan(ns, parent, server, target, route) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        if (child == target) {\\n            route.unshift(child);\\n            route.unshift(server);\\n            return true;\\n        }\\n\\n        if (recursiveScan(ns, server, child, target, route)) {\\n            route.unshift(server);\\n            return true;\\n        }\\n    }\\n    return false;\\n}\\n\\nexport async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    let route = [];\\n    let server = args._[0];\\n    if (!server || args.help) {\\n        ns.tprint(\\\"This script helps you find a server on the network and shows you the path to get to it.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()} SERVER`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n\\n    recursiveScan(ns, '', 'home', server, route);\\n    for (const i in route) {\\n        await ns.sleep(500);\\n        const extra = i > 0 ? \\\"└ \\\" : \\\"\\\";\\n        ns.tprint(`${\\\" \\\".repeat(i)}${extra}${route[i]}`);\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return data.servers;\\n}\",\"filename\":\"find_server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":304,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const flags = ns.flags([\\n    [\\\"refreshrate\\\", 200],\\n    [\\\"help\\\", false],\\n  ]);\\n  if (flags._.length === 0 || flags.help) {\\n    ns.tprint(\\n      \\\"This script helps visualize the money and security of a server.\\\"\\n    );\\n    ns.tprint(`USAGE: run ${ns.getScriptName()} SERVER_NAME`);\\n    ns.tprint(\\\"Example:\\\");\\n    ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n    return;\\n  }\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  while (true) {\\n    const server = flags._[0];\\n    let money = ns.getServerMoneyAvailable(server);\\n    if (money === 0) money = 1;\\n    const maxMoney = ns.getServerMaxMoney(server);\\n    const minSec = ns.getServerMinSecurityLevel(server);\\n    const sec = ns.getServerSecurityLevel(server);\\n    ns.clearLog(server);\\n    ns.print(`${server}:`);\\n    ns.print(\\n      ` $_______: ${ns.nFormat(money, \\\"$0.000a\\\")} / ${ns.nFormat(\\n        maxMoney,\\n        \\\"$0.000a\\\"\\n      )} (${((money / maxMoney) * 100).toFixed(2)}%)`\\n    );\\n    ns.print(` security: +${(sec - minSec).toFixed(2)}`);\\n    ns.print(\\n      ` hack____: ${ns.tFormat(ns.getHackTime(server))} (t=${Math.ceil(\\n        ns.hackAnalyzeThreads(server, money)\\n      )})`\\n    );\\n    ns.print(\\n      ` grow____: ${ns.tFormat(ns.getGrowTime(server))} (t=${Math.ceil(\\n        ns.growthAnalyze(server, maxMoney / money)\\n      )})`\\n    );\\n    ns.print(\\n      ` weaken__: ${ns.tFormat(ns.getWeakenTime(server))} (t=${Math.ceil(\\n        (sec - minSec) * 20\\n      )})`\\n    );\\n    await ns.sleep(flags.refreshrate);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return data.servers;\\n}\",\"filename\":\"monitor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"home\",\"moduleSequenceNumber\":305,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyzeThreads\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function scan(ns, parent, server, list) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        list.push(child);\\n        \\n        scan(ns, server, child, list);\\n    }\\n}\\n\\nexport function list_servers(ns) {\\n    const list = [];\\n    scan(ns, '', 'home', list);\\n    return list;\\n}\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst args = ns.flags([[\\\"help\\\", false]]);\\n    if (args.help) {\\n        ns.tprint(\\\"This script lists all servers on which you can run scripts.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\n        return;\\n    }\\n\\n\\tconst servers = list_servers(ns).filter(s => ns.hasRootAccess(s)).concat(['home']);\\n    for(const server of servers) {\\n        const used = ns.getServerUsedRam(server);\\n        const max = ns.getServerMaxRam(server);\\n        ns.tprint(`${server} is opened. ${used} GB / ${max} GB (${(100*used/max).toFixed(2)}%)`)\\n    }\\n}\",\"filename\":\"opened_servers.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":306,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const srv = ns.args[0];\\n\\n  const scriptWeaken = \\\"weaken-top.js\\\";\\n  const scriptGrow = \\\"grow-top.js\\\";\\n  const scriptHack = \\\"hack-top.js\\\";\\n\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n  const partGrow = (ns.args[2] || 45) / 100;\\n\\n  const partWeaken = 1.0 - partGrow;\\n  const hackFactor = 0.1;\\n\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const countWeaken = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partWeaken) / sizeWeaken\\n  );\\n  const countGrow = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partGrow) / sizeGrow\\n  );\\n  const countHack = Math.floor((srvRam * hackFactor) / sizeHack);\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${countWeaken} weaken / ${countGrow} grow / ${countHack} hack threads`\\n  );\\n\\n  await ns.scp(\\\"hacker-lib.js\\\", srv);\\n  await ns.scp(scriptWeaken, srv);\\n  await ns.scp(scriptGrow, srv);\\n  await ns.scp(scriptHack, srv);\\n  ns.killall(srv);\\n\\n  if (countWeaken > 0) ns.exec(scriptWeaken, srv, countWeaken);\\n  if (countGrow > 0) ns.exec(scriptGrow, srv, countGrow);\\n  if (countHack > 0) ns.exec(scriptHack, srv, countHack);\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...data.servers];\\n}\",\"filename\":\"slave-host-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"home\",\"moduleSequenceNumber\":307,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0] || undefined;\\n\\n  const scriptWeaken = !target ? \\\"weaken-top.js\\\" : \\\"loop-weaken.js\\\";\\n  const scriptGrow = !target ? \\\"grow-top.js\\\" : \\\"loop-grow.js\\\";\\n  const scriptHack = !target ? \\\"hack-top.js\\\" : \\\"loop-hack.js\\\";\\n\\n  ns.tprint(\\n    `target ${target}, scripts: ${scriptWeaken},${scriptGrow},${scriptHack}`\\n  );\\n\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n  const partGrow = (ns.args[1] || 45) / 100;\\n  const partWeaken = 1.0 - partGrow;\\n  const hackFactor = 0.1;\\n\\n  const srv = \\\"home\\\";\\n  const srvRam = ns.getServerMaxRam(srv) * 0.99;\\n\\n  const countWeaken = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partWeaken) / sizeWeaken\\n  );\\n  const countGrow = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partGrow) / sizeGrow\\n  );\\n  const countHack = Math.floor((srvRam * hackFactor) / sizeHack);\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${countWeaken} weaken / ${countGrow} grow / ${countHack} hack threads`\\n  );\\n\\n  if (countWeaken > 0) ns.run(scriptWeaken, countWeaken, target);\\n  if (countGrow > 0) ns.run(scriptGrow, countGrow, target);\\n  if (countHack > 0) ns.run(scriptHack, countHack, target);\\n}\",\"filename\":\"slave-home-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///a8a3ee6e-4326-4570-bc83-86c527ea350d\",\"moduleSequenceNumber\":379648},{\"filename\":\"slave-home-top.js\",\"url\":\"blob:file:///5ea8701c-ec0e-4a51-ba90-ea8298945cc4\",\"moduleSequenceNumber\":379992}],\"dependents\":[],\"ramUsage\":2.75,\"server\":\"home\",\"moduleSequenceNumber\":308,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"../hacker-lib.js\\\";\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const srv = ns.args[0];\\n\\n  const scriptWeaken = \\\"weaken-top.js\\\";\\n  const scriptGrow = \\\"grow-top.js\\\";\\n  const scriptHack = \\\"hack-top.js\\\";\\n\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n  const partGrow = (ns.args[2] || 45) / 100;\\n\\n  const partWeaken = 1.0 - partGrow;\\n  const hackFactor = 0.1;\\n\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const countWeaken = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partWeaken) / sizeWeaken\\n  );\\n  const countGrow = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partGrow) / sizeGrow\\n  );\\n  const countHack = Math.floor((srvRam * hackFactor) / sizeHack);\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${countWeaken} weaken / ${countGrow} grow / ${countHack} hack threads`\\n  );\\n\\n  await ns.scp(\\\"hacker-lib.js\\\", srv);\\n  await ns.scp(scriptWeaken, srv);\\n  await ns.scp(scriptGrow, srv);\\n  await ns.scp(scriptHack, srv);\\n  ns.killall(srv);\\n\\n  if (countWeaken > 0) ns.exec(scriptWeaken, srv, countWeaken);\\n  if (countGrow > 0) ns.exec(scriptGrow, srv, countGrow);\\n  if (countHack > 0) ns.exec(scriptHack, srv, countHack);\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...data.servers];\\n}\",\"filename\":\"/archive/slave-host-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"server\":\"home\",\"moduleSequenceNumber\":309}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"../hacker-lib.js\\\";\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const scriptWeaken = \\\"weaken-top.js\\\";\\n  const scriptGrow = \\\"grow-top.js\\\";\\n  const scriptHack = \\\"hack-top.js\\\";\\n\\n  ns.tprint(\\n    `target ${target}, scripts: ${scriptWeaken},${scriptGrow},${scriptHack}`\\n  );\\n\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n  const partGrow = (ns.args[1] || 45) / 100;\\n  const partWeaken = 1.0 - partGrow;\\n  const hackFactor = 0.1;\\n\\n  const srv = \\\"home\\\";\\n  const srvRam = ns.getServerMaxRam(srv) * 0.99;\\n\\n  const countWeaken = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partWeaken) / sizeWeaken\\n  );\\n  const countGrow = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partGrow) / sizeGrow\\n  );\\n  const countHack = Math.floor((srvRam * hackFactor) / sizeHack);\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${countWeaken} weaken / ${countGrow} grow / ${countHack} hack threads`\\n  );\\n\\n  if (countWeaken > 0) ns.run(scriptWeaken, countWeaken);\\n  if (countGrow > 0) ns.run(scriptGrow, countGrow);\\n  if (countHack > 0) ns.run(scriptHack, countHack);\\n}\",\"filename\":\"/archive/slave-home-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"server\":\"home\",\"moduleSequenceNumber\":310}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  var factions = [];\\n  const faction_list = [\\n    \\\"CyberSec\\\",\\n    \\\"Tian Di Hui\\\",\\n    \\\"Netburners\\\",\\n    \\\"Sector-12\\\",\\n    \\\"Chongqing\\\",\\n    \\\"New Tokyo\\\",\\n    \\\"Ishima\\\",\\n    \\\"Aevum\\\",\\n    \\\"Volhaven\\\",\\n    \\\"NiteSec\\\",\\n    \\\"The Black Hand\\\",\\n    \\\"BitRunners\\\",\\n    \\\"ECorp\\\",\\n    \\\"MegaCorp\\\",\\n    \\\"KuaiGong International\\\",\\n    \\\"Four Sigma\\\",\\n    \\\"NWO\\\",\\n    \\\"Blade Industries\\\",\\n    \\\"OmniTek Incorporated\\\",\\n    \\\"Bachman & Associates\\\",\\n    \\\"Clarke Incorporated\\\",\\n    \\\"Fulcrum Secret Technologies\\\",\\n    \\\"Slum Snakes\\\",\\n    \\\"Tetrads\\\",\\n    \\\"Silhouette\\\",\\n    \\\"Speakers for the Dead\\\",\\n    \\\"The Dark Army\\\",\\n    \\\"The Syndicate\\\",\\n    \\\"The Covenant\\\",\\n    \\\"Daedalus\\\",\\n    \\\"Illuminati\\\",\\n  ];\\n  ns.tail();\\n  for (let f of faction_list) {\\n    if (ns.joinFaction(f) || ns.getFactionRep(f) > 0) {\\n      factions.push(f);\\n    }\\n  }\\n  for (let f of factions) {\\n    var augs = ns.getAugmentationsFromFaction(f);\\n    for (let a of augs) {\\n      ns.purchaseAugmentation(f, a);\\n    }\\n  }\\n}\",\"filename\":\"/web/factions.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/web/factions.js\",\"url\":\"blob:file:///93fd1f3e-218c-4624-aa9f-1cb5fca769ad\",\"moduleSequenceNumber\":70588}],\"dependents\":[],\"ramUsage\":15.6,\"server\":\"home\",\"moduleSequenceNumber\":311,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {}\",\"filename\":\"smooth_criminal.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":312,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst path = \\\"connect hong-fang-tea; connect CSEC\\\";\\n}\\nexport function connect(path) {\\n\\tconst doc = eval(\\\"document\\\");\\n\\tconst terminalInput = doc.getElementById(\\\"terminal-input\\\"); \\n\\tterminalInput.value = `home;${path}`; \\n\\tconst handler = Object.keys(terminalInput)[1]; \\n\\tterminalInput[handler].onChange({target:terminalInput});\\n\\tterminalInput[handler].onKeyDown({keyCode:13,preventDefault:()=>null});\\n}\",\"filename\":\"experiment.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"experiment.js\",\"url\":\"blob:file:///2420907e-b77b-4679-aefe-cdf868d0da41\",\"moduleSequenceNumber\":119308}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":313,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tawait ns.weaken(ns.args[0]);\\n}\",\"filename\":\"/web/weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/web/weaken.js\",\"url\":\"blob:file:///ba5bc332-85ad-4bcc-b3cd-fa8011461216\",\"moduleSequenceNumber\":65093}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":314,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tawait ns.grow(ns.args[0]);\\n}\",\"filename\":\"/web/grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/web/grow.js\",\"url\":\"blob:file:///db0be560-7fcf-4ab9-bdac-ae688687455d\",\"moduleSequenceNumber\":79406}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":315,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tawait ns.hack(ns.args[0]);\\n}\",\"filename\":\"/web/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/web/hack.js\",\"url\":\"blob:file:///f60d669f-a1b1-4c9e-8390-09105886942a\",\"moduleSequenceNumber\":67221}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"moduleSequenceNumber\":316,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  // Parameters\\n  // param 1: Server you want to hack\\n  // param 2: OPTIONAL - Server you want to start the hack from, i.e. any public servers, purchased servers or 'home'\\n  //\\n  // EXAMPLE 1: run masterHack.js joesguns\\n  // This will start hacking 'joesguns' using the RAM of 'joesguns'\\n  //\\n  // EXAMPLE 2: run masterHack.js joesguns s1\\n  // This will start hacking 'joesguns' using the RAM of my purchased server 's1'\\n  //\\n  // This 'masterHack.js' process will stay active on whatever server you execute it from.\\n  // I usually start it from 'home', then I can track all my earnings in one place.\\n  // Keep in mind, when using 'home' as second parameter the script might use all available RAM\\n  // and you might become unable to execute any other scripts on 'home' until you kill the process.\\n\\n  var target = ns.args[0];\\n  var serverToHackFrom = target; // For single argument calls - server will hack itself\\n  var hackScript = \\\"hack.js\\\";\\n  var growScript = \\\"grow.js\\\";\\n  var weakenScript = \\\"weaken.js\\\";\\n  var hackScriptRAM = ns.getScriptRam(hackScript);\\n  var growScriptRAM = ns.getScriptRam(growScript);\\n  var serverMaxMoney = ns.getServerMaxMoney(target);\\n  var serverGrowthPercentage = ns.getServerGrowth(target) / 100;\\n  var serverMaxRAM;\\n  var serverGrowthRate;\\n  var moneyThresh = serverMaxMoney * 0.9; // 0.90 to maintain near 100% server money.  You can use 0.75 when starting out/using low thread counts\\n  var securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n  var currentServerMoney;\\n  var currentServerSecurity;\\n  var useThreadsHack;\\n  var possibleThreads;\\n  var maxHackFactor = 0.001;\\n  var growWeakenRatio = 0.9; // How many threads are used for growing vs. weaking (90:10).\\n  var sleepTime;\\n  var cores = 1; // I didn't bother with cores for now. Uncomment the line 51 if you want to use this.\\n  var coreMultiplier;\\n  const hackSecurityIncrease = 0.002; // Yes these values are constant. Grow security increase is hack * 2 = 0.004 per thread. hackAnalyzeSecurity() just wastes RAM and this script is too big already.\\n  const serverMaxGrowthRate = 1.0035; // Taken from the source code. I couldn't find a way to calculate the future growth amount without checking the src code for the growthAnalyze() function.\\n  const serverBaseGrowthRate = 1.03; // Taken from the source code\\n  const bitNodeMultiplierServerGrowthRate = 1; // Adjust this according to your BitNode as long as you are not in BN5 or don't have SF-5. In BN5 or with SF-5 you can use ns.getBitNodeMultipliers().ServerGrowthRate instead.\\n  // Check https://github.com/danielyxie/bitburner/blob/62ac7f7d170b14bb7a9988411d7c6f17e690f058/src/BitNode/BitNode.tsx and search for the initBitNodeMultipliers function, there you will find all the different multipliers.\\n\\n  // If second argument is provided, hack will run from this server instead\\n  if (ns.args[1]) {\\n    serverToHackFrom = ns.args[1];\\n  }\\n  serverMaxRAM = ns.getServerMaxRam(serverToHackFrom);\\n  // cores = ns.getServer(serverToHackFrom).cpuCores; // Not sure if this is relevant anywhere outside of 'home'\\n  coreMultiplier = 1 + (cores - 1) / 16;\\n\\n  // Gain root access. Make sure you have the nuke.js script on 'home'\\n  if (!ns.hasRootAccess(target)) {\\n    ns.exec(\\\"nuke.js\\\", \\\"home\\\", 1, target);\\n    await ns.sleep(2000);\\n  }\\n\\n  // Copy the work scripts, if not already on server\\n  if (!ns.fileExists(hackScript, serverToHackFrom)) {\\n    await ns.scp(hackScript, \\\"home\\\", serverToHackFrom);\\n  }\\n  if (!ns.fileExists(growScript, serverToHackFrom)) {\\n    await ns.scp(growScript, \\\"home\\\", serverToHackFrom);\\n  }\\n  if (!ns.fileExists(weakenScript, serverToHackFrom)) {\\n    await ns.scp(weakenScript, \\\"home\\\", serverToHackFrom);\\n  }\\n\\n  // To prevent the script from crashing/terminating after closing and restarting the game.\\n  while (\\n    ns.isRunning(hackScript, serverToHackFrom, target) ||\\n    ns.isRunning(growScript, serverToHackFrom, target) ||\\n    ns.isRunning(weakenScript, serverToHackFrom, target)\\n  ) {\\n    await ns.sleep(10000);\\n  }\\n\\n  // Main loop - will terminate if no RAM available\\n  while (\\n    1 <\\n    (possibleThreads = Math.floor(\\n      (serverMaxRAM - ns.getServerUsedRam(serverToHackFrom)) / growScriptRAM\\n    ))\\n  ) {\\n    currentServerMoney = ns.getServerMoneyAvailable(target);\\n    currentServerSecurity = ns.getServerSecurityLevel(target);\\n\\n    // The first to cases are for new servers with high SECURITY LEVELS and to quickly grow the server to above the threshold\\n    if (\\n      currentServerSecurity > securityThresh &&\\n      currentServerMoney < moneyThresh\\n    ) {\\n      sleepTime = ns.getWeakenTime(target) + 1000; // Added 1 second to the 'sleepTime' variables to prevent any issues with overlapping work scripts\\n      ns.exec(\\n        growScript,\\n        serverToHackFrom,\\n        Math.ceil(possibleThreads / 2),\\n        target\\n      );\\n      ns.exec(\\n        weakenScript,\\n        serverToHackFrom,\\n        Math.floor(possibleThreads / 2),\\n        target\\n      );\\n      await ns.sleep(sleepTime); // wait for the weaken command to finish\\n    } else if (currentServerMoney < moneyThresh) {\\n      sleepTime = ns.getWeakenTime(target) + 1000;\\n      ns.exec(\\n        growScript,\\n        serverToHackFrom,\\n        Math.floor(possibleThreads * growWeakenRatio),\\n        target\\n      );\\n      ns.exec(\\n        weakenScript,\\n        serverToHackFrom,\\n        Math.ceil(possibleThreads * (1 - growWeakenRatio)),\\n        target\\n      );\\n      await ns.sleep(sleepTime); // wait for the weaken command to finish\\n    } else {\\n      // Define max amount that can be restored with one grow (using all available threads) and therefore will be used to define hack threads.\\n      // This loop narrows the hack factor to the best possible value and considers the necessary growth threads AFTER the hack has been performed, since\\n      // the work time is determined with SECURITY LEVEL before start, but the grow amount is determined using the updated SECURITY LEVEL when grow() finishes.\\n      // The code/formula for calculating the grow threads (line 101 - 104) is fully taken from the 'numCycleForGrowth' function that is used by growthAnalyze and others in the source code. I'm not that smort. I simply adjusted it to my needs.\\n      // Maybe they could implement the possibility to give growthAnalyze additional security levels/'hackDifficulty' as a parameter. That way you don't need to use getHackingMultipliers() and save >> 4 << GB.\\n      // Also I didn't bother optimizing the 'growWeakenRatio', as 90% is good enough already. It will be just a few more hack threads, if any at all - even with large RAM sizes.\\n      while (\\n        maxHackFactor < 0.999 &&\\n        Math.floor(\\n          (possibleThreads / growScriptRAM -\\n            (useThreadsHack = Math.floor(\\n              ns.hackAnalyzeThreads(target, currentServerMoney * maxHackFactor)\\n            )) /\\n              hackScriptRAM) *\\n            growScriptRAM *\\n            growWeakenRatio\\n        ) >\\n          Math.floor(\\n            Math.log(serverMaxMoney / (serverMaxMoney * (1 - maxHackFactor))) /\\n              (Math.log(\\n                (serverGrowthRate =\\n                  1 +\\n                  (serverBaseGrowthRate - 1) /\\n                    (currentServerSecurity +\\n                      hackSecurityIncrease * useThreadsHack)) >\\n                  serverMaxGrowthRate\\n                  ? serverMaxGrowthRate\\n                  : serverGrowthRate\\n              ) *\\n                ns.getHackingMultipliers().growth *\\n                serverGrowthPercentage *\\n                bitNodeMultiplierServerGrowthRate *\\n                coreMultiplier)\\n          )\\n      ) {\\n        maxHackFactor += 0.001; // increase by 0.1% with each iteration\\n      }\\n      maxHackFactor -= 0.001; // Since it's more than 'possibleThreads' can handle now, we need to dial it back once.\\n      sleepTime = ns.getHackTime(target) + 1000;\\n      useThreadsHack = Math.min(useThreadsHack, possibleThreads); // Prevents going above RAM limit or hacking too much\\n      ns.tprint(\\n        `threads for hacking ${useThreadsHack} = min(${useThreadsHack},${possibleThreads})`\\n      );\\n      if (useThreadsHack > 0) {\\n        ns.exec(hackScript, serverToHackFrom, useThreadsHack, target);\\n      }\\n      possibleThreads = Math.floor(\\n        (serverMaxRAM - ns.getServerUsedRam(serverToHackFrom)) / growScriptRAM\\n      );\\n      if (possibleThreads >= 2) {\\n        sleepTime = ns.getWeakenTime(target) + 1000;\\n        const growThreads = Math.floor(possibleThreads * growWeakenRatio);\\n        if (growThreads)\\n          ns.exec(growScript, serverToHackFrom, growThreads, target);\\n        ns.exec(\\n          weakenScript,\\n          serverToHackFrom,\\n          Math.ceil(possibleThreads * (1 - growWeakenRatio)),\\n          target\\n        );\\n      }\\n      await ns.sleep(sleepTime); // wait for the weaken command to finish\\n      maxHackFactor = 0.001;\\n    }\\n  }\\n  ns.tprint(\\n    \\\"Script was terminated. Not enough RAM available on '\\\" +\\n      serverToHackFrom +\\n      \\\"'.\\\"\\n  );\\n}\",\"filename\":\"/web/masterHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/web/masterHack.js\",\"url\":\"blob:file:///33c0237d-0cc3-409d-b3c3-5ef89f14c4fb\",\"moduleSequenceNumber\":107195}],\"dependents\":[],\"ramUsage\":9.55,\"server\":\"home\",\"moduleSequenceNumber\":317,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyzeThreads\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getHackingMultipliers\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar serv = ns.args[0];\\n\\tif(ns.fileExists(\\\"BruteSSH.exe\\\"))\\n\\t\\tns.brutessh(serv);\\n\\n\\tif(ns.fileExists(\\\"FTPCrack.exe\\\"))\\n\\t\\tns.ftpcrack(serv);\\n\\n\\tif(ns.fileExists(\\\"relaySMTP.exe\\\"))\\n\\t\\tns.relaysmtp(serv);\\n\\n\\tif(ns.fileExists(\\\"HTTPWorm.exe\\\"))\\n\\t\\tns.httpworm(serv);\\n\\n\\tif(ns.fileExists(\\\"SQLInject.exe\\\"))\\n\\t\\tns.sqlinject(serv);\\n\\n\\tns.nuke(serv);\\n}\",\"filename\":\"/web/nuke.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2,\"server\":\"home\",\"moduleSequenceNumber\":318,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst want_ram = ns.args[0]\\n\\n\\tconst psrvs = ns.getPurchasedServers().map(name => ({\\n\\t\\tname, ram:\\n\\t\\t\\tns.getServerMaxRam(name)\\n\\t}))\\n\\tfor (let srv of psrvs) {\\n\\t\\tns.tprint(`${srv.name} has ${srv.ram} GB`)\\n\\n\\t\\tif (srv.ram < want_ram) {\\n\\t\\t\\tns.tprint(\\\"uprageding \\\" + srv.name)\\n\\t\\t\\tns.killall(srv.name)\\n\\t\\t\\tns.deleteServer(srv.name)\\n\\t\\t\\tns.purchaseServer(srv.name, want_ram)\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"upgrade-pservs.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"upgrade-pservs.js\",\"url\":\"blob:file:///42b3fc06-1b95-4a15-8ab2-bc57a993a9f5\",\"moduleSequenceNumber\":38941}],\"dependents\":[],\"ramUsage\":8.9,\"server\":\"home\",\"moduleSequenceNumber\":319,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { idle_threads } from \\\"neo/get-idle-capa.js\\\";\\n\\n/** @param {import('../NS').NS} ns **/\\nexport function getNeededThreads(ns, server) {\\n  let money = ns.getServerMaxMoney(server) * 0.25;\\n  if (money === 0) money = 1;\\n  const maxMoney = ns.getServerMaxMoney(server);\\n  const minSec = ns.getServerMinSecurityLevel(server);\\n  const sec = ns.getServerSecurityLevel(server);\\n\\n  const thack = Math.ceil(ns.hackAnalyzeThreads(server, money));\\n  const tgrow = Math.ceil(\\n    ns.growthAnalyze(server, maxMoney / (maxMoney - money))\\n  );\\n\\n  const tweaken = Math.ceil((sec - minSec) * 20);\\n  const tweaken2 = Math.ceil(tgrow / 12.5);\\n\\n  /* ns.tprint(\\n    JSON.stringify({ money, maxMoney, minSec, sec, thack, tgrow, tweaken })\\n  ); */\\n\\n  return { thack, tgrow, tweaken, tweaken2 };\\n}\\n\\nexport function after(millis) {\\n  return Date.now() + millis;\\n}\\n\\n/** @param {import('../NS').NS} ns **/\\nexport function launch(ns, capa, threads, action, target, wait_ms) {\\n  let have = 0;\\n  for (const srv of capa.sort((a, b) => a.threads - b.threads)) {\\n    const launchThreads = Math.min(srv.threads, threads - have);\\n    if (!launchThreads || launchThreads < 0) continue;\\n    const pid = ns.exec(\\n      `${action}-after.js`,\\n      srv.name,\\n      launchThreads,\\n      target,\\n      wait_ms,\\n      `rnd-${Math.random()}`\\n    );\\n\\n    /*ns.tprint(\\n      `launching ${action} on ${\\n        srv.name\\n      } with ${launchThreads} threads, target ${target}, waittime ${ns.tFormat(\\n        wait_ms\\n      )}`\\n    ); */\\n    if (pid !== 0) have += launchThreads;\\n    else\\n      ns.print(\\n        `failed to launch on ${srv.name}: ${action} -t ${launchThreads} ${target}, free ${srv.threads}`\\n      );\\n    if (have >= threads) {\\n      return true;\\n    }\\n  }\\n  return false;\\n}\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const flags = ns.flags([\\n    [\\\"refreshrate\\\", 200],\\n    [\\\"help\\\", false],\\n  ]);\\n  if (flags._.length === 0 || flags.help) {\\n    ns.tprint(\\\"This script monitors and starts campaigns for a server.\\\");\\n    ns.tprint(`USAGE: run ${ns.getScriptName()} SERVER_NAME`);\\n    ns.tprint(\\\"Example:\\\");\\n    ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n    return;\\n  }\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  let active = []; //active campaigns\\n  while (true) {\\n    const server = flags._[0];\\n    const { thack, tgrow, tweaken, tweaken2 } = getNeededThreads(ns, server);\\n\\n    const maxMoney = ns.getServerMaxMoney(server);\\n    let money = ns.getServerMoneyAvailable(server);\\n    if (money === 0) money = 1;\\n    const money_pct = (money / maxMoney) * 100;\\n    const protection =\\n      ns.getServerSecurityLevel(server) - ns.getServerMinSecurityLevel(server);\\n\\n    ns.clearLog(server);\\n    ns.print(`${server}:`);\\n    ns.print(\\n      ` $_______: ${ns.nFormat(money, \\\"$0.000a\\\")} / ${ns.nFormat(\\n        maxMoney,\\n        \\\"$0.000a\\\"\\n      )} (${money_pct.toFixed(2)}%)`\\n    );\\n\\n    const hacktime = ns.getHackTime(server);\\n    const growtime = ns.getGrowTime(server);\\n    const weakentime = ns.getWeakenTime(server);\\n\\n    ns.print(` security: +${protection.toFixed(2)}`);\\n    ns.print(` hack____: ${ns.tFormat(hacktime)} (t=${thack})`);\\n    ns.print(` grow____: ${ns.tFormat(growtime)} (t=${tgrow})`);\\n    ns.print(` weaken__: ${ns.tFormat(weakentime)} (t=${tweaken})`);\\n    ns.print(` weaken_2: ${ns.tFormat(weakentime)} (t=${tweaken2})`);\\n\\n    // get idle capa\\n    let { capa, total } = idle_threads(ns, 1.75);\\n\\n    if (protection > 1) {\\n      const otherWeakeners = active.filter((entry) => entry.type == \\\"weaken\\\");\\n      const otherWeakenThreads = otherWeakeners\\n        .map((entry) => entry.threads)\\n        .reduce((sum, threads) => sum + threads, 0);\\n      if (otherWeakeners.length == 0 || otherWeakenThreads < tweaken) {\\n        const launchThreads = Math.min(total, tweaken - otherWeakenThreads);\\n        if (launch(ns, capa, launchThreads, \\\"weaken\\\", server, 0))\\n          active.push({\\n            type: \\\"weaken\\\",\\n            threads: launchThreads,\\n            dur: weakentime,\\n            start: 0,\\n            eta: after(weakentime),\\n          });\\n        else\\n          ns.print(\\n            `expedite weaken with ${launchThreads} of ${total} threads failed`\\n          );\\n\\n        const update = idle_threads(ns, 1.75);\\n        capa = update.capa;\\n        total = update.total;\\n      }\\n    }\\n\\n    // prep server money\\n    if (money_pct < 99) {\\n      const otherGrowers = active.filter((entry) => entry.type == \\\"grow\\\");\\n      const otherGrowThreads = otherGrowers\\n        .map((entry) => entry.threads)\\n        .reduce((sum, threads) => sum + threads, 0);\\n      if (otherGrowers.length == 0 || otherGrowThreads < tgrow) {\\n        const launchThreads = Math.min(total, tgrow - otherGrowThreads);\\n        if (launch(ns, capa, launchThreads, \\\"grow\\\", server, 0))\\n          active.push({\\n            type: \\\"grow\\\",\\n            threads: launchThreads,\\n            dur: growtime,\\n            start: 0,\\n            eta: after(growtime),\\n          });\\n        else\\n          ns.print(\\n            `expedite growth with ${launchThreads} of ${total} threads failed`\\n          );\\n        const update = idle_threads(ns, 1.7);\\n        capa = update.capa;\\n        total = update.total;\\n      }\\n    }\\n\\n    // server is ok, launch campaign\\n    if (money_pct >= 95 && protection <= 2) {\\n      const buffer = 200; //ms\\n\\n      // hwgw\\n      if (total >= thack + tweaken2 + tgrow + tweaken) {\\n        let wait_h1, wait_w1_1, wait_g1, wait_w1_2;\\n\\n        // calc wait times based on longest action\\n        wait_w1_1 = buffer;\\n        wait_w1_2 = weakentime + 3 * buffer - weakentime;\\n        wait_g1 = weakentime + 2 * buffer - growtime;\\n        wait_h1 = weakentime - hacktime;\\n\\n        // launch immediately, script will active wait (consider launching delayed)\\n        if (launch(ns, capa, tweaken, \\\"weaken\\\", server, wait_w1_1))\\n          active.push({\\n            type: \\\"weaken\\\",\\n            threads: tweaken,\\n            dur: weakentime,\\n            start: after(wait_w1_1),\\n            eta: after(wait_w1_1 + weakentime),\\n          });\\n        else ns.print(\\\"w1 failed\\\");\\n        let update = idle_threads(ns, 1.7);\\n        capa = update.capa;\\n        total = update.total;\\n\\n        if (launch(ns, capa, tweaken2, \\\"weaken\\\", server, wait_w1_2))\\n          active.push({\\n            type: \\\"weaken\\\",\\n            threads: tweaken,\\n            dur: weakentime,\\n            start: after(wait_w1_2),\\n            eta: after(wait_w1_2 + weakentime),\\n          });\\n        else ns.print(\\\"w2 failed\\\");\\n        update = idle_threads(ns, 1.7);\\n        capa = update.capa;\\n        total = update.total;\\n\\n        if (launch(ns, capa, tgrow, \\\"grow\\\", server, wait_g1))\\n          active.push({\\n            type: \\\"grow\\\",\\n            threads: tgrow,\\n            dur: growtime,\\n            start: after(wait_g1),\\n            eta: after(wait_g1 + growtime),\\n          });\\n        else ns.print(\\\"g failed\\\");\\n        update = idle_threads(ns, 1.7);\\n        capa = update.capa;\\n        total = update.total;\\n\\n        if (launch(ns, capa, thack, \\\"hack\\\", server, wait_h1))\\n          active.push({\\n            type: \\\"hack\\\",\\n            threads: thack,\\n            dur: hacktime,\\n            start: after(wait_h1),\\n            eta: after(wait_h1 + hacktime),\\n          });\\n        else ns.print(\\\"h failed\\\");\\n        update = idle_threads(ns, 1.7);\\n        capa = update.capa;\\n        total = update.total;\\n      } else {\\n        ns.print(`free: ${total}, need: ${thack + tweaken + tgrow + tweaken}`);\\n        // lets just hack things\\n        /*      const now = Math.random() * 10;\\n        if (launch(ns, capa, thack, \\\"hack\\\", server, now))\\n          active.push({\\n            type: \\\"hack\\\",\\n            threads: thack,\\n            dur: hacktime,\\n            start: after(now),\\n            eta: after(now + hacktime),\\n          });\\n        else ns.print(\\\"h failed\\\");\\n        const update = idle_threads(ns, 1.7);\\n        capa = update.capa;\\n        total = update.total;\\n      }*/\\n      }\\n    }\\n\\n    const now = Date.now();\\n    const waiting = active.filter((active) => active.start > now);\\n    const running = active.filter(\\n      (active) => active.start <= now && active.eta >= now\\n    );\\n    const done = active.filter((active) => active.eta < now);\\n    active = active.filter((active) => active.eta >= now);\\n\\n    ns.print(\\n      `waiting: ${waiting.length}, running: ${running.length}, done: ${\\n        done.length\\n      },free: ${total}, need: ${thack + tweaken + tgrow + tweaken}`\\n    );\\n    await ns.sleep(200);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return data.servers;\\n}\",\"filename\":\"/neo/coordinate.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///8aebfbc7-eda1-468b-900e-e8f2c8c3f7ee\",\"moduleSequenceNumber\":268},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///cfbe3ee2-5328-4247-8d48-10d2290bd988\",\"moduleSequenceNumber\":321},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///0ce23301-558e-441d-bf39-f3a456d674c3\",\"moduleSequenceNumber\":527}],\"dependents\":[],\"ramUsage\":5.8,\"server\":\"home\",\"moduleSequenceNumber\":527,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hackAnalyzeThreads\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"hacker-lib.js\\\";\\n\\n/** @param {import('../NS').NS} ns **/\\nexport function idle_threads(ns, size) {\\n  const srvs = scan(ns).filter((srv) => ns.hasRootAccess(srv));\\n  const capa = srvs.map((srv) => {\\n    let freeRam = ns.getServerMaxRam(srv) - ns.getServerUsedRam(srv);\\n    if (srv == \\\"home\\\") {\\n      freeRam = Math.max(freeRam - 20, 0);\\n    }\\n    const idleThreads = Math.floor(freeRam / size);\\n    return { name: srv, threads: idleThreads, free: freeRam };\\n  });\\n  const total = capa.reduce((sum, elem) => sum + elem.threads, 0);\\n  return { capa, total };\\n}\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const { capa, total } = idle_threads(ns, 1.7);\\n  for (const elem of capa) {\\n    if (elem.threads > 0) {\\n      ns.tprint(`${elem.name}: ${elem.threads} (${elem.free} GB)`);\\n    }\\n  }\\n  ns.tprint(total + \\\" threads can be added\\\");\\n}\",\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///e4ea4cd9-7d09-41b2-9df2-71a6b91ed92f\",\"moduleSequenceNumber\":14317},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///ccf4644d-8e53-4cc3-be40-56856e910dc3\",\"moduleSequenceNumber\":14368}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":321,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"/neo/grow-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":322,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"/neo/hack-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/neo/hack-after.js\",\"url\":\"blob:file:///6f2dd913-09ac-4f6b-9201-35e0122f11c7\",\"moduleSequenceNumber\":78666}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"moduleSequenceNumber\":323,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"/neo/weaken-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":324,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///23323d6e-49d1-4c04-a816-aa4cfe694805\",\"moduleSequenceNumber\":538}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":538,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c87c5fe2-cdea-44c5-a468-c9ecd26c266c\",\"moduleSequenceNumber\":3233}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"moduleSequenceNumber\":3233,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f5d3e13c-d71e-404f-aa63-e3bf6cbb4cb7\",\"moduleSequenceNumber\":533}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":533,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { idle_threads } from \\\"neo/get-idle-capa.js\\\";\\nimport { launch } from \\\"neo/coordinate.js\\\";\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const { capa, total } = idle_threads(ns, 1.7);\\n  const threads = 10;\\n  const action = \\\"weaken\\\";\\n  const target = \\\"comptek\\\";\\n  const wait_ms = 0;\\n\\n  if (launch(ns, capa, threads, action, target, wait_ms)) {\\n    ns.tprintf(\\\"success\\\");\\n  } else ns.tprintf(\\\"failed\\\");\\n}\",\"filename\":\"/neo/single-launch.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///ba0fb9b7-12a1-4493-b21d-fc84df3ff9a1\",\"moduleSequenceNumber\":125102},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///1072684e-8bc5-4e20-8779-26f7f4b46074\",\"moduleSequenceNumber\":125096},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///43f05307-550d-4312-8934-37a89b85154a\",\"moduleSequenceNumber\":125099},{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///03356182-89e7-4f93-8c58-5d2e21d81a97\",\"moduleSequenceNumber\":125102},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///9dccaf4e-12d5-4d06-aefa-ea00081eaa88\",\"moduleSequenceNumber\":125096},{\"filename\":\"/neo/single-launch.js\",\"url\":\"blob:file:///82dca534-9d81-4046-8eb0-7f5094888789\",\"moduleSequenceNumber\":125153}],\"dependents\":[],\"ramUsage\":3.25,\"server\":\"home\",\"moduleSequenceNumber\":328,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan, sorted_targets } from \\\"./hacker-lib.js\\\";\\n\\nconst num_tgts = 10\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const net = scan(ns);\\n\\n  // determine ports we can open\\n  let can_ports = 0;\\n  if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"FTPCrack.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"relaySMTP.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"HTTPWorm.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"SQLInject.exe\\\", \\\"home\\\")) can_ports++;\\n\\n  // check ma 1337 skillz\\n  const skillz = ns.getHackingLevel();\\n\\n  const pwnd = net.filter((srv) => ns.hasRootAccess(srv));\\n  const unpwnd = net.filter((srv) => !pwnd.includes(srv));\\n  const tgts = unpwnd.filter((srv) => {\\n    const needPorts = ns.getServerNumPortsRequired(srv);\\n    const needSkillz = ns.getServerRequiredHackingLevel(srv);\\n    return needPorts <= can_ports && needSkillz <= skillz;\\n  });\\n\\n  ns.tprintf(\\n    `got ${pwnd.length} p0wnd servers, out of ${net.length}, found ${tgts.length} targets`\\n  );\\n\\n  tgts.forEach((srv) => {\\n    const needPorts = ns.getServerNumPortsRequired(srv);\\n    const needSkillz = ns.getServerRequiredHackingLevel(srv);\\n    if (needPorts <= can_ports && needSkillz <= skillz) {\\n      ns.tprintf(`tgt ${srv}`);\\n      if (needPorts >= 1) ns.brutessh(srv);\\n      if (needPorts >= 2) ns.ftpcrack(srv);\\n      if (needPorts >= 3) ns.relaysmtp(srv);\\n      if (needPorts >= 4) ns.httpworm(srv);\\n      if (needPorts >= 5) ns.sqlinject(srv);\\n      ns.nuke(srv);\\n      ns.tprintf(`p0wnd ${srv}`);\\n    }\\n  });\\n\\n  if (ns.fileExists(\\\"/neo/coordinate.js\\\", \\\"home\\\")) {\\n    const all_tgt = sorted_targets(ns).map((elem) => elem.name);\\n    const output = all_tgt.splice(0, num_tgts);\\n\\n    ns.tprint(\\\"coordinaterd attack on: \\\" + output.join(\\\" \\\"));\\n\\n    output.forEach((target) => {\\n      ns.run(\\\"/neo/coordinate.js\\\", 1, target);\\n    });\\n  } else {\\n    ns.tprint(\\\"no neo/coordinate.js\\\");\\n  }\\n}\",\"filename\":\"/neo/runc.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///856b339d-3497-41f5-8fab-60d0341a34e7\",\"moduleSequenceNumber\":93},{\"filename\":\"/neo/runc.js\",\"url\":\"blob:file:///2ac4aa86-7727-48d2-b4a0-a2e652997d5c\",\"moduleSequenceNumber\":334}],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"home\",\"moduleSequenceNumber\":329,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = -54000;\\n  ns.disableLog(\\\"ALL\\\");\\n  ns.tail();\\n  while (true) {\\n    ns.clearLog();\\n\\n    const karma = ns.heart.break();\\n    if (karma > target)\\n      ns.print(`Current Karma : ${karma}, ${(karma / target).toFixed(2)}%`);\\n\\n    const crime = \\\"Homicide\\\";\\n\\n    const { karma: dkarma, money, time, ...stats } = ns.getCrimeStats(crime);\\n    ns.print(`${crime}, chance: ${(ns.getCrimeChance(crime) * 100.0).toFixed(\\n      2\\n    )}%,\\nKarma: -${dkarma}, dur: ${ns.tFormat(time)}, gain: ${ns.nFormat(\\n      money,\\n      \\\"$0.000a\\\"\\n    )}\\n   ${JSON.stringify(stats, null, 2)}`);\\n    const dur = ns.commitCrime(crime);\\n    await ns.asleep(dur);\\n  }\\n}\",\"filename\":\"/sing/killkill.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sing/killkill.js\",\"url\":\"blob:file:///b1987547-e97b-4e84-b5ea-e5e990d5b73b\",\"moduleSequenceNumber\":1856}],\"dependents\":[],\"ramUsage\":16.6,\"server\":\"home\",\"moduleSequenceNumber\":330,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getCrimeStats\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getCrimeChance\",\"cost\":5},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = -54000;\\n  ns.disableLog(\\\"ALL\\\");\\n  ns.tail();\\n  while (true) {\\n    ns.clearLog();\\n\\n    const karma = ns.heart.break();\\n    if (karma > target)\\n      ns.print(`Current Karma : ${karma}, ${(karma / target).toFixed(2)}%`);\\n\\n    const crime = \\\"Mug someone\\\";\\n\\n    const { karma: dkarma, money, time, ...stats } = ns.getCrimeStats(crime);\\n    ns.print(`${crime}, chance: ${(ns.getCrimeChance(crime) * 100.0).toFixed(\\n      2\\n    )}%, \\nKarma: -${dkarma}, dur: ${ns.tFormat(time)}, gain: ${ns.nFormat(\\n      money,\\n      \\\"$0.000a\\\"\\n    )}\\n${JSON.stringify(stats, null, 2)}`);\\n\\n    ns.print(\\n      `Homicide chance: ${(ns.getCrimeChance(\\\"Homicide\\\") * 100.0).toFixed(2)}%`\\n    );\\n\\n    ns.commitCrime(crime);\\n    await ns.asleep(5000);\\n  }\\n}\",\"filename\":\"/sing/mugshot.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sing/mugshot.js\",\"url\":\"blob:file:///0ac83b09-e220-4491-88fa-95aae3a6049f\",\"moduleSequenceNumber\":25410}],\"dependents\":[],\"ramUsage\":16.6,\"server\":\"home\",\"moduleSequenceNumber\":331,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getCrimeStats\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getCrimeChance\",\"cost\":5},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const crimes = [\\n  \\\"Shoplift\\\",\\n  \\\"Rob Store\\\",\\n  \\\"Mug\\\",\\n  \\\"Larceny\\\",\\n  \\\"Deal Drugs\\\",\\n  \\\"Bond Forgery\\\",\\n  \\\"Traffick Arms\\\",\\n  \\\"Homicide\\\",\\n  \\\"Grand Theft Auto\\\",\\n  \\\"Kidnap\\\",\\n  \\\"Assassination\\\",\\n  \\\"Heist\\\",\\n];\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  crimes.forEach((crime) => {\\n    const { karma, money, time, ...stats } = ns.getCrimeStats(crime);\\n    ns.tprint(`${crime}, chance: ${(ns.getCrimeChance(crime) * 100.0).toFixed(\\n      2\\n    )}%, Karma: ${karma}, dur: ${ns.tFormat(time)}, gain: ${ns.nFormat(\\n      money,\\n      \\\"$0.000a\\\"\\n    )}\\n   ${JSON.stringify(stats, null, 2)}`);\\n  });\\n}\",\"filename\":\"/sing/menu.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sing/menu.js\",\"url\":\"blob:file:///6331ae5e-01e0-448d-a64d-1b5e26f893f0\",\"moduleSequenceNumber\":26137}],\"dependents\":[],\"ramUsage\":11.6,\"server\":\"home\",\"moduleSequenceNumber\":332,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getCrimeStats\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getCrimeChance\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  while (true) {\\n    const time = ns.commitCrime(\\\"Heist\\\");\\n    await ns.asleep(time);\\n  }\\n}\",\"filename\":\"/sing/moneyjob.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sing/moneyjob.js\",\"url\":\"blob:file:///142a6807-01c5-4444-8e70-583872928226\",\"moduleSequenceNumber\":6090}],\"dependents\":[],\"ramUsage\":6.6,\"server\":\"home\",\"moduleSequenceNumber\":333,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  while (true) {\\n    const members = ns.gang.getMemberNames();\\n    const tasks = ns.gang\\n      .getTaskNames()\\n      .map((name) => ns.gang.getTaskStats(name));\\n\\n    const trainTask = tasks.find((task) => {\\n      return task.name.toLowerCase().includes(\\\"train\\\") && task.strWeight > 0;\\n    });\\n\\n    if (ns.gang.canRecruitMember()) {\\n      const newGuy = `r00kie-${members.length}`;\\n      if (ns.gang.recruitMember(newGuy)) {\\n        ns.tprint(\\\"new gang member : \\\" + newGuy);\\n        members.push(newGuy);\\n        ns.gang.setMemberTask(newGuy, trainTask.name);\\n      }\\n    }\\n\\n    const equipment = ns.gang\\n      .getEquipmentNames()\\n      .map((name) => ({ name, ...ns.gang.getEquipmentStats(name) }))\\n      .map((stats) => ({\\n        ...stats,\\n        price: ns.gang.getEquipmentCost(stats.name),\\n        type: ns.gang.getEquipmentType(stats.name),\\n      }))\\n      .filter((stats) => stats.str > 0 || stats.def > 0 || stats.agi > 0);\\n\\n    for (let ganger of members.map((name) => ({\\n      name,\\n      ...ns.gang.getMemberInformation(name),\\n    }))) {\\n      const hasEquip = [...ganger.augmentations, ...ganger.upgrades];\\n      const needs = equipment.filter((equip) => !hasEquip.includes(equip.name));\\n\\n      ns.print(\\n        `gang member ${ganger.name} has: ${hasEquip.join(\\\", \\\")}, needs: ${needs\\n          .map((eqp) => eqp.name)\\n          .join(\\\", \\\")}`\\n      );\\n\\n      for (let eqp of needs) {\\n        if (eqp.price < ns.getServerMoneyAvailable(\\\"home\\\")) {\\n          ns.tprint(`purchased ${eqp.name} for ${ganger.name}`);\\n          ns.gang.purchaseEquipment(ganger.name, eqp.name);\\n        }\\n      }\\n    }\\n\\n    await ns.sleep(20);\\n  }\\n}\",\"filename\":\"gang-mgmt-combat.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"gang-mgmt-combat.js\",\"url\":\"blob:file:///4c54e22e-8a2a-4562-b28a-82c88b00933d\",\"moduleSequenceNumber\":66672}],\"dependents\":[],\"ramUsage\":22.7,\"server\":\"home\",\"moduleSequenceNumber\":334,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskStats\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getEquipmentStats\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentType\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  while (true) {\\n    const members = ns.gang.getMemberNames();\\n    const tasks = ns.gang\\n      .getTaskNames()\\n      .map((name) => ns.gang.getTaskStats(name));\\n\\n    const trainTask = tasks.find((task) => {\\n      return task.name.toLowerCase().includes(\\\"train\\\") && task.hackWeight > 0;\\n    });\\n\\n    if (ns.gang.canRecruitMember()) {\\n      const newGuy = `r00kie-${members.length}`;\\n      if (ns.gang.recruitMember(newGuy)) {\\n        ns.tprint(\\\"new gang member : \\\" + newGuy);\\n        members.push(newGuy);\\n        ns.gang.setMemberTask(newGuy, trainTask.name);\\n      }\\n    }\\n\\n    const equipment = ns.gang\\n      .getEquipmentNames()\\n      .map((name) => ({ name, ...ns.gang.getEquipmentStats(name) }))\\n      .map((stats) => ({\\n        ...stats,\\n        price: ns.gang.getEquipmentCost(stats.name),\\n        type: ns.gang.getEquipmentType(stats.name),\\n      }))\\n      .filter((stats) => stats.hack > 0);\\n\\n    for (let ganger of members.map((name) => ({\\n      name,\\n      ...ns.gang.getMemberInformation(name),\\n    }))) {\\n      const hasEquip = [...ganger.augmentations, ...ganger.upgrades];\\n      const needs = equipment.filter((equip) => !hasEquip.includes(equip.name));\\n\\n      ns.print(\\n        `gang member ${ganger.name} has: ${hasEquip.join(\\\", \\\")}, needs: ${needs\\n          .map((eqp) => eqp.name)\\n          .join(\\\", \\\")}`\\n      );\\n\\n      for (let eqp of needs) {\\n        if (eqp.price < ns.getServerMoneyAvailable(\\\"home\\\")) {\\n          ns.tprint(`purchased ${eqp.name} for ${ganger.name}`);\\n          ns.gang.purchaseEquipment(ganger.name, eqp.name);\\n        }\\n      }\\n    }\\n\\n    await ns.sleep(20);\\n  }\\n}\",\"filename\":\"gang-mgmt-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":22.8,\"server\":\"home\",\"moduleSequenceNumber\":335,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskStats\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getEquipmentStats\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentType\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const crimes = [\\n  \\\"Shoplift\\\",\\n  \\\"Rob Store\\\",\\n  \\\"Mug\\\",\\n  \\\"Larceny\\\",\\n  \\\"Deal Drugs\\\",\\n  \\\"Bond Forgery\\\",\\n  \\\"Traffick Arms\\\",\\n  \\\"Homicide\\\",\\n  \\\"Grand Theft Auto\\\",\\n  \\\"Kidnap\\\",\\n  \\\"Assassination\\\",\\n  \\\"Heist\\\",\\n];\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const crime = ns.args.join(\\\" \\\");\\n  const target = -54000;\\n  ns.disableLog(\\\"ALL\\\");\\n  ns.tail();\\n  while (true) {\\n    ns.clearLog();\\n\\n    const { karma: dkarma, money, time, ...stats } = ns.getCrimeStats(crime);\\n    const karma = ns.heart.break();\\n\\n    if (karma > target)\\n      ns.print(\\n        `Current Karma : ${karma}, ${(karma / target).toFixed(\\n          2\\n        )}%, delta Karma: -${dkarma}`\\n      );\\n\\n    ns.print(`${crime}, chance: ${(ns.getCrimeChance(crime) * 100.0).toFixed(\\n      2\\n    )}%, \\n    dur: ${ns.tFormat(time)}, gain: ${ns.nFormat(money, \\\"$0.000a\\\")}\\n   ${JSON.stringify(stats, null, 2)}`);\\n    const dur = ns.commitCrime(crime);\\n    await ns.asleep(dur);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...crimes];\\n}\",\"filename\":\"/sing/crimeloop.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/sing/crimeloop.js\",\"url\":\"blob:file:///0208f6d1-d3d0-4cae-922c-048e7414190a\",\"moduleSequenceNumber\":3234}],\"dependents\":[],\"ramUsage\":16.6,\"server\":\"home\",\"moduleSequenceNumber\":3234,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getCrimeStats\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getCrimeChance\",\"cost\":5},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"eyJjdG9yIjoiQml0YnVybmVyU2F2ZU9iamVjdCIsImRhdGEiOnsiUGxheWVyU2F2ZSI6IntcImN0b3JcIjpcIlBsYXllck9iamVjdFwiLFwiZGF0YVwiOntcImhhY2tpbmdcIjozODEsXCJocFwiOjMzLFwibWF4X2hwXCI6MzMsXCJzdHJlbmd0aFwiOjIxMyxcImRlZmVuc2VcIjoyMzQsXCJkZXh0ZXJpdHlcIjoyNTMsXCJhZ2lsaXR5XCI6MjM0LFwiY2hhcmlzbWFcIjoyMDcsXCJpbnRlbGxpZ2VuY2VcIjowLFwiaGFja2luZ19jaGFuY2VfbXVsdFwiOjEuMzE4Nzg1MjgsXCJoYWNraW5nX3NwZWVkX211bHRcIjoxLjMxODc4NTI4LFwiaGFja2luZ19tb25leV9tdWx0XCI6MS4zMTg3ODUyOCxcImhhY2tpbmdfZ3Jvd19tdWx0XCI6MS4zMTg3ODUyOCxcImhhY2tpbmdfZXhwXCI6MjgxMzQ1NC42NDY4NjQ4NjQ1LFwic3RyZW5ndGhfZXhwXCI6NTA1NDAuMTQxOTM4MTE3NDY0LFwiZGVmZW5zZV9leHBcIjo1MDU0MC4xNDE5MzgxMTc0NjQsXCJkZXh0ZXJpdHlfZXhwXCI6NTgxMjEuMTYzMjI4ODI3MDEsXCJhZ2lsaXR5X2V4cFwiOjUwNTU5LjkyMzcxNzMxNzQ2LFwiY2hhcmlzbWFfZXhwXCI6MjY2OTYuNzY5MTUxNTU2ODczLFwiaW50ZWxsaWdlbmNlX2V4cFwiOjAsXCJoYWNraW5nX211bHRcIjoxLjM4NDcyNDU0NCxcInN0cmVuZ3RoX211bHRcIjoxLjQ1MDY2MzgwODAwMDAwMDMsXCJkZWZlbnNlX211bHRcIjoxLjU5NTczMDE4ODgwMDAwMDQsXCJkZXh0ZXJpdHlfbXVsdFwiOjEuNjc1NTE2Njk4MjQwMDAwNSxcImFnaWxpdHlfbXVsdFwiOjEuNTk5MzU2ODQ4MzIwMDAwNSxcImNoYXJpc21hX211bHRcIjoxLjYzNTI5Mzc0NzIsXCJoYWNraW5nX2V4cF9tdWx0XCI6MS4zMTg3ODUyOCxcInN0cmVuZ3RoX2V4cF9tdWx0XCI6MS4zMTg3ODUyOCxcImRlZmVuc2VfZXhwX211bHRcIjoxLjMxODc4NTI4LFwiZGV4dGVyaXR5X2V4cF9tdWx0XCI6MS41MTY2MDMwNzE5OTk5OTk5LFwiYWdpbGl0eV9leHBfbXVsdFwiOjEuMzE4Nzg1MjgsXCJjaGFyaXNtYV9leHBfbXVsdFwiOjEuMzE4Nzg1MjgsXCJjb21wYW55X3JlcF9tdWx0XCI6MS4zMTg3ODUyOCxcImZhY3Rpb25fcmVwX211bHRcIjoxLjMxODc4NTI4LFwibW9uZXlcIjo5MzM2MTc3NTcuODI1NDI1NCxcImNpdHlcIjpcIlNlY3Rvci0xMlwiLFwibG9jYXRpb25cIjpcIkNlbnRyYWwgSW50ZWxsaWdlbmNlIEFnZW5jeVwiLFwiam9ic1wiOntcIkNlbnRyYWwgSW50ZWxsaWdlbmNlIEFnZW5jeVwiOlwiU2VjdXJpdHkgR3VhcmRcIn0sXCJjb21wYW55TmFtZVwiOlwiQ2VudHJhbCBJbnRlbGxpZ2VuY2UgQWdlbmN5XCIsXCJjdXJyZW50U2VydmVyXCI6XCJob21lXCIsXCJwdXJjaGFzZWRTZXJ2ZXJzXCI6W1wicHNydi0wXCIsXCJwc3J2LTFcIixcInBzcnYtMlwiLFwicHNydi0zXCIsXCJwc3J2LTRcIixcInBzcnYtNVwiLFwicHNydi02XCIsXCJwc3J2LTdcIixcInBzcnYtOFwiLFwicHNydi05XCIsXCJwc3J2LTEwXCIsXCJwc3J2LTExXCIsXCJwc3J2LTEyXCIsXCJwc3J2LTEzXCIsXCJwc3J2LTE0XCIsXCJwc3J2LTE1XCIsXCJwc3J2LTE2XCIsXCJwc3J2LTE3XCIsXCJwc3J2LTE4XCIsXCJwc3J2LTE5XCIsXCJwc3J2LTIwXCIsXCJwc3J2LTIxXCIsXCJwc3J2LTIyXCIsXCJwc3J2LTIzXCIsXCJwc3J2LTI0XCJdLFwiaGFja25ldE5vZGVzXCI6W3tcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjoxLFwibGV2ZWxcIjoxLFwibW9uZXlHYWluUmF0ZVBlclNlY29uZFwiOjAuMDk4OTA4ODk2LFwib25saW5lVGltZVNlY29uZHNcIjoxNjA1NjcuNjAwMDAwNzkwODcsXCJyYW1cIjoxLFwidG90YWxNb25leUdlbmVyYXRlZFwiOjE1ODgxLjU2NDA0OTE1NDgzNyxcIm5hbWVcIjpcImhhY2tuZXQtbm9kZS0wXCJ9fV0sXCJoYXNoTWFuYWdlclwiOntcImN0b3JcIjpcIkhhc2hNYW5hZ2VyXCIsXCJkYXRhXCI6e1wiY2FwYWNpdHlcIjowLFwiaGFzaGVzXCI6MCxcInVwZ3JhZGVzXCI6e1wiU2VsbCBmb3IgTW9uZXlcIjowLFwiU2VsbCBmb3IgQ29ycG9yYXRpb24gRnVuZHNcIjowLFwiUmVkdWNlIE1pbmltdW0gU2VjdXJpdHlcIjowLFwiSW5jcmVhc2UgTWF4aW11bSBNb25leVwiOjAsXCJJbXByb3ZlIFN0dWR5aW5nXCI6MCxcIkltcHJvdmUgR3ltIFRyYWluaW5nXCI6MCxcIkV4Y2hhbmdlIGZvciBDb3Jwb3JhdGlvbiBSZXNlYXJjaFwiOjAsXCJFeGNoYW5nZSBmb3IgQmxhZGVidXJuZXIgUmFua1wiOjAsXCJFeGNoYW5nZSBmb3IgQmxhZGVidXJuZXIgU1BcIjowLFwiR2VuZXJhdGUgQ29kaW5nIENvbnRyYWN0XCI6MH19fSxcImZhY3Rpb25zXCI6W1wiU2x1bSBTbmFrZXNcIixcIlNlY3Rvci0xMlwiLFwiVGhlIFN5bmRpY2F0ZVwiXSxcImZhY3Rpb25JbnZpdGF0aW9uc1wiOltdLFwicXVldWVkQXVnbWVudGF0aW9uc1wiOltdLFwiYXVnbWVudGF0aW9uc1wiOlt7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJTbWFydFNvbmFyIEltcGxhbnRcIn0se1wibGV2ZWxcIjoxLFwibmFtZVwiOlwiQ29tYmF0IFJpYiBJXCJ9LHtcImxldmVsXCI6MSxcIm5hbWVcIjpcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSVwifSx7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJMdW1pbkNsb2FraW5nLVYxIFNraW4gSW1wbGFudFwifSx7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJMdW1pbkNsb2FraW5nLVYyIFNraW4gSW1wbGFudFwifSx7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJXaXJlZCBSZWZsZXhlc1wifSx7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJCaXRXaXJlXCJ9LHtcImxldmVsXCI6MyxcIm5hbWVcIjpcIk5ldXJvRmx1eCBHb3Zlcm5vclwifV0sXCJzb3VyY2VGaWxlc1wiOlt7XCJsdmxcIjozLFwiblwiOjF9LHtcImx2bFwiOjEsXCJuXCI6Mn1dLFwibnVtUGVvcGxlS2lsbGVkXCI6MTA2NjMsXCJrYXJtYVwiOi04NzYyOSxcImNyaW1lX21vbmV5X211bHRcIjoyLjgxMDY2MTEyODAwMDAwMDUsXCJjcmltZV9zdWNjZXNzX211bHRcIjoxLjYzNTI5Mzc0NzIsXCJpc1dvcmtpbmdcIjp0cnVlLFwiZm9jdXNcIjpmYWxzZSxcIndvcmtUeXBlXCI6XCJTdHVkeWluZyBvciBUYWtpbmcgYSBjbGFzcyBhdCB1bml2ZXJzaXR5XCIsXCJ3b3JrQ29zdE11bHRcIjozLFwid29ya0V4cE11bHRcIjoyLFwiY3VycmVudFdvcmtGYWN0aW9uTmFtZVwiOlwiXCIsXCJjdXJyZW50V29ya0ZhY3Rpb25EZXNjcmlwdGlvblwiOlwiXCIsXCJ3b3JrSGFja0V4cEdhaW5SYXRlXCI6MCxcIndvcmtTdHJFeHBHYWluUmF0ZVwiOjAsXCJ3b3JrRGVmRXhwR2FpblJhdGVcIjowLFwid29ya0RleEV4cEdhaW5SYXRlXCI6MCxcIndvcmtBZ2lFeHBHYWluUmF0ZVwiOjAsXCJ3b3JrQ2hhRXhwR2FpblJhdGVcIjoxLjA1NTAyODIyNCxcIndvcmtSZXBHYWluUmF0ZVwiOjAsXCJ3b3JrTW9uZXlHYWluUmF0ZVwiOjAsXCJ3b3JrTW9uZXlMb3NzUmF0ZVwiOjE5MixcIndvcmtIYWNrRXhwR2FpbmVkXCI6MCxcIndvcmtTdHJFeHBHYWluZWRcIjowLFwid29ya0RlZkV4cEdhaW5lZFwiOjAsXCJ3b3JrRGV4RXhwR2FpbmVkXCI6MCxcIndvcmtBZ2lFeHBHYWluZWRcIjowLFwid29ya0NoYUV4cEdhaW5lZFwiOjU0ODguMjU2ODIxMjQ4MzIzLFwid29ya1JlcEdhaW5lZFwiOjAsXCJ3b3JrTW9uZXlHYWluZWRcIjotOTk4NzgzLjk5OTk5OTkwNDcsXCJjcmVhdGVQcm9ncmFtTmFtZVwiOlwiXCIsXCJjcmVhdGVQcm9ncmFtUmVxTHZsXCI6MTAwLFwiY2xhc3NOYW1lXCI6XCJ0YWtpbmcgYSBMZWFkZXJzaGlwIGNvdXJzZVwiLFwiY3JpbWVUeXBlXCI6XCJcIixcInRpbWVXb3JrZWRcIjoxMjA0ODAwLFwidGltZVdvcmtlZENyZWF0ZVByb2dyYW1cIjowLFwidGltZU5lZWRlZFRvQ29tcGxldGVXb3JrXCI6Mjg4MDAwMDAsXCJ3b3JrX21vbmV5X211bHRcIjoxLjMxODc4NTI4LFwiaGFja25ldF9ub2RlX21vbmV5X211bHRcIjoxLjMxODc4NTI4LFwiaGFja25ldF9ub2RlX3B1cmNoYXNlX2Nvc3RfbXVsdFwiOjAuNjk4NjE1MjgsXCJoYWNrbmV0X25vZGVfcmFtX2Nvc3RfbXVsdFwiOjAuNjk4NjE1MjgsXCJoYWNrbmV0X25vZGVfY29yZV9jb3N0X211bHRcIjowLjY5ODYxNTI4LFwiaGFja25ldF9ub2RlX2xldmVsX2Nvc3RfbXVsdFwiOjAuNjk4NjE1MjgsXCJoYXNXc2VBY2NvdW50XCI6ZmFsc2UsXCJoYXNUaXhBcGlBY2Nlc3NcIjpmYWxzZSxcImhhczRTRGF0YVwiOmZhbHNlLFwiaGFzNFNEYXRhVGl4QXBpXCI6ZmFsc2UsXCJnYW5nXCI6e1wiY3RvclwiOlwiR2FuZ1wiLFwiZGF0YVwiOntcImZhY05hbWVcIjpcIlNsdW0gU25ha2VzXCIsXCJtZW1iZXJzXCI6W3tcImN0b3JcIjpcIkdhbmdNZW1iZXJcIixcImRhdGFcIjp7XCJ0YXNrXCI6XCJWaWdpbGFudGUgSnVzdGljZVwiLFwiZWFybmVkUmVzcGVjdFwiOjMwMDQ3Ljc0MTA4Njk3NTE4LFwiaGFja1wiOjEwOCxcInN0clwiOjUzMixcImRlZlwiOjU2MCxcImRleFwiOjIwOSxcImFnaVwiOjI0NCxcImNoYVwiOjEwOCxcImhhY2tfZXhwXCI6OTIwNi41MTI1OTg0MjY0NjEsXCJzdHJfZXhwXCI6NTg3NzYuMzQwMDY0Mzk1NTQsXCJkZWZfZXhwXCI6NjM2MzQuMzg3NDk4OTM1NTcsXCJkZXhfZXhwXCI6NDI0NTIuNjM2MjY0NTMyMjMsXCJhZ2lfZXhwXCI6Mjk1NDQuOTgwMTU1OTIyODQsXCJjaGFfZXhwXCI6MTI4ODAuOTAyOTcxOTI1NzQ3LFwiaGFja19tdWx0XCI6MS4xNTUwMDAwMDAwMDAwMDAyLFwic3RyX211bHRcIjozLjUwNzg4ODM4NDAwMDAwMSxcImRlZl9tdWx0XCI6My42MzM4NTYyNzAzODcyMDA0LFwiZGV4X211bHRcIjoxLjQ4NTAwMDAwMDAwMDAwMDMsXCJhZ2lfbXVsdFwiOjEuODgxMzA4MDAwMDAwMDAwNCxcImNoYV9tdWx0XCI6MS4wNCxcImhhY2tfYXNjX3BvaW50c1wiOjAsXCJzdHJfYXNjX3BvaW50c1wiOjAsXCJkZWZfYXNjX3BvaW50c1wiOjAsXCJkZXhfYXNjX3BvaW50c1wiOjAsXCJhZ2lfYXNjX3BvaW50c1wiOjAsXCJjaGFfYXNjX3BvaW50c1wiOjAsXCJ1cGdyYWRlc1wiOltcIk5VS0UgUm9vdGtpdFwiLFwiU291bHN0ZWFsZXIgUm9vdGtpdFwiLFwiQmFzZWJhbGwgQmF0XCIsXCJLYXRhbmFcIixcIkJ1bGxldHByb29mIFZlc3RcIixcIkZ1bGwgQm9keSBBcm1vclwiLFwiRm9yZCBGbGV4IFYyMFwiLFwiR2xvY2sgMThDXCIsXCJMaXF1aWQgQm9keSBBcm1vclwiLFwiUDkwQ1wiLFwiU3RleXIgQVVHXCIsXCJBSy00N1wiLFwiTTE1QTEwIEFzc2F1bHQgUmlmbGVcIixcIkdyYXBoZW5lIFBsYXRpbmcgQXJtb3JcIixcIkFXTSBTbmlwZXIgUmlmbGVcIl0sXCJhdWdtZW50YXRpb25zXCI6W10sXCJuYW1lXCI6XCJzY3VtbG9yZFwifX0se1wiY3RvclwiOlwiR2FuZ01lbWJlclwiLFwiZGF0YVwiOntcInRhc2tcIjpcIlRyYWZmaWNrIElsbGVnYWwgQXJtc1wiLFwiZWFybmVkUmVzcGVjdFwiOjI2NzI4Ljg4MjI1NzkwMTkxLFwiaGFja1wiOjExNSxcInN0clwiOjUzNixcImRlZlwiOjU2MyxcImRleFwiOjIxMixcImFnaVwiOjI0MixcImNoYVwiOjExNixcImhhY2tfZXhwXCI6MTEyMDQuNTE1Mzg3MDA3NTQzLFwic3RyX2V4cFwiOjYwOTgxLjgzMjczMTY5NDIyLFwiZGVmX2V4cFwiOjY1MzQwLjgyMDAwMDU0Njg2LFwiZGV4X2V4cFwiOjQ0NTUyLjg0ODA2MTA0NDE2LFwiYWdpX2V4cFwiOjI4NDc2LjEzNjkxNjY5OTA4LFwiY2hhX2V4cFwiOjE2NDA3LjkzMDc0MjY5MTU4LFwiaGFja19tdWx0XCI6MS4xNTUwMDAwMDAwMDAwMDAyLFwic3RyX211bHRcIjozLjUwNzg4ODM4NDAwMDAwMSxcImRlZl9tdWx0XCI6My42MzM4NTYyNzAzODcyMDEsXCJkZXhfbXVsdFwiOjEuNDg1MDAwMDAwMDAwMDAwMyxcImFnaV9tdWx0XCI6MS44ODEzMDgsXCJjaGFfbXVsdFwiOjEuMDQsXCJoYWNrX2FzY19wb2ludHNcIjowLFwic3RyX2FzY19wb2ludHNcIjowLFwiZGVmX2FzY19wb2ludHNcIjowLFwiZGV4X2FzY19wb2ludHNcIjowLFwiYWdpX2FzY19wb2ludHNcIjowLFwiY2hhX2FzY19wb2ludHNcIjowLFwidXBncmFkZXNcIjpbXCJOVUtFIFJvb3RraXRcIixcIlNvdWxzdGVhbGVyIFJvb3RraXRcIixcIkJhc2ViYWxsIEJhdFwiLFwiQnVsbGV0cHJvb2YgVmVzdFwiLFwiRnVsbCBCb2R5IEFybW9yXCIsXCJLYXRhbmFcIixcIkZvcmQgRmxleCBWMjBcIixcIkdsb2NrIDE4Q1wiLFwiUDkwQ1wiLFwiU3RleXIgQVVHXCIsXCJMaXF1aWQgQm9keSBBcm1vclwiLFwiR3JhcGhlbmUgUGxhdGluZyBBcm1vclwiLFwiQUstNDdcIixcIk0xNUExMCBBc3NhdWx0IFJpZmxlXCIsXCJBV00gU25pcGVyIFJpZmxlXCJdLFwiYXVnbWVudGF0aW9uc1wiOltdLFwibmFtZVwiOlwiam9obm55X2NvbGRfaGFuZHNcIn19LHtcImN0b3JcIjpcIkdhbmdNZW1iZXJcIixcImRhdGFcIjp7XCJ0YXNrXCI6XCJUcmFmZmljayBJbGxlZ2FsIEFybXNcIixcImVhcm5lZFJlc3BlY3RcIjoxMzE0OC4wMDEyMDg1NDEyNTYsXCJoYWNrXCI6MTAyLFwic3RyXCI6Mjg4MSxcImRlZlwiOjMwOTgsXCJkZXhcIjoxMTYwLFwiYWdpXCI6MTQyNCxcImNoYVwiOjY4LFwiaGFja19leHBcIjozOTExLjk1NzcwMzE0NTUyNzQsXCJzdHJfZXhwXCI6MTQ2MjUzOS41NTU3MjE1ODAzLFwiZGVmX2V4cFwiOjE2NDk1NzkuMzQ0MjI1NDI1LFwiZGV4X2V4cFwiOjEwNjE1NzguNjg5MTQ2NTQxOCxcImFnaV9leHBcIjoxMTEwMzY1LjAyNDk5MjYzNyxcImNoYV9leHBcIjozOTA3LjA1NDgzNzUzNjIxNSxcImhhY2tfbXVsdFwiOjEsXCJzdHJfbXVsdFwiOjMuNTA3ODg4Mzg0MDAwMDAxLFwiZGVmX211bHRcIjozLjYzMzg1NjI3MDM4NzIwMTMsXCJkZXhfbXVsdFwiOjEuNDg1MDAwMDAwMDAwMDAwMyxcImFnaV9tdWx0XCI6MS44MDg5NSxcImNoYV9tdWx0XCI6MSxcImhhY2tfYXNjX3BvaW50c1wiOjQ0NDEuMDEzMzMzMzMyMTA1LFwic3RyX2FzY19wb2ludHNcIjoyMDg3NS45OTgzNjk3NTEwNTQsXCJkZWZfYXNjX3BvaW50c1wiOjIxODI4LjQ0ODE0ODYxMDQxLFwiZGV4X2FzY19wb2ludHNcIjoyMDUyMS40MDE0NDEyMTg2NDQsXCJhZ2lfYXNjX3BvaW50c1wiOjIwNTc4LjYyMzg1NDcwNjY1NyxcImNoYV9hc2NfcG9pbnRzXCI6MCxcInVwZ3JhZGVzXCI6W1wiQmFzZWJhbGwgQmF0XCIsXCJLYXRhbmFcIixcIkdsb2NrIDE4Q1wiLFwiQnVsbGV0cHJvb2YgVmVzdFwiLFwiRnVsbCBCb2R5IEFybW9yXCIsXCJMaXF1aWQgQm9keSBBcm1vclwiLFwiR3JhcGhlbmUgUGxhdGluZyBBcm1vclwiLFwiUDkwQ1wiLFwiU3RleXIgQVVHXCIsXCJBSy00N1wiLFwiTTE1QTEwIEFzc2F1bHQgUmlmbGVcIixcIkFXTSBTbmlwZXIgUmlmbGVcIl0sXCJhdWdtZW50YXRpb25zXCI6W10sXCJuYW1lXCI6XCJyMDBraWUtMlwifX0se1wiY3RvclwiOlwiR2FuZ01lbWJlclwiLFwiZGF0YVwiOntcInRhc2tcIjpcIlZpZ2lsYW50ZSBKdXN0aWNlXCIsXCJlYXJuZWRSZXNwZWN0XCI6MjI1MTIuODMwNzk3ODY3MTUsXCJoYWNrXCI6OTMsXCJzdHJcIjo1MTcsXCJkZWZcIjo1NDUsXCJkZXhcIjoyMDQsXCJhZ2lcIjoyMzMsXCJjaGFcIjoxMDksXCJoYWNrX2V4cFwiOjkwMzcuMzkzNjk5NzUyMzgsXCJzdHJfZXhwXCI6NTE2NjUuNTU3ODQ4Mjg3MTM1LFwiZGVmX2V4cFwiOjU2MDAxLjUwMzA4MzA3ODYzNSxcImRleF9leHBcIjozNzYwMy45NDMxODc0NTQ5NyxcImFnaV9leHBcIjoyNDQzNS40MTE0NzAzNTY0MzcsXCJjaGFfZXhwXCI6MTMyNDUuNTQ2MjM2NzU5MTE5LFwiaGFja19tdWx0XCI6MSxcInN0cl9tdWx0XCI6My41MDc4ODgzODQwMDAwMDEsXCJkZWZfbXVsdFwiOjMuNjMzODU2MjcwMzg3MjAxMyxcImRleF9tdWx0XCI6MS40ODUwMDAwMDAwMDAwMDAzLFwiYWdpX211bHRcIjoxLjg4MTMwODAwMDAwMDAwMDQsXCJjaGFfbXVsdFwiOjEuMDQsXCJoYWNrX2FzY19wb2ludHNcIjowLFwic3RyX2FzY19wb2ludHNcIjowLFwiZGVmX2FzY19wb2ludHNcIjowLFwiZGV4X2FzY19wb2ludHNcIjowLFwiYWdpX2FzY19wb2ludHNcIjowLFwiY2hhX2FzY19wb2ludHNcIjowLFwidXBncmFkZXNcIjpbXCJCYXNlYmFsbCBCYXRcIixcIkJ1bGxldHByb29mIFZlc3RcIixcIkZ1bGwgQm9keSBBcm1vclwiLFwiRm9yZCBGbGV4IFYyMFwiLFwiS2F0YW5hXCIsXCJHbG9jayAxOENcIixcIkxpcXVpZCBCb2R5IEFybW9yXCIsXCJHcmFwaGVuZSBQbGF0aW5nIEFybW9yXCIsXCJQOTBDXCIsXCJTdGV5ciBBVUdcIixcIkFLLTQ3XCIsXCJNMTVBMTAgQXNzYXVsdCBSaWZsZVwiLFwiQVdNIFNuaXBlciBSaWZsZVwiXSxcImF1Z21lbnRhdGlvbnNcIjpbXSxcIm5hbWVcIjpcInIwMGtpZS0zXCJ9fSx7XCJjdG9yXCI6XCJHYW5nTWVtYmVyXCIsXCJkYXRhXCI6e1widGFza1wiOlwiVmlnaWxhbnRlIEp1c3RpY2VcIixcImVhcm5lZFJlc3BlY3RcIjo5MjgyLjE5Njc2Nzc1MDU4LFwiaGFja1wiOjcxLFwic3RyXCI6NDM3LFwiZGVmXCI6NDYwLFwiZGV4XCI6MTgxLFwiYWdpXCI6MjE4LFwiY2hhXCI6NzQsXCJoYWNrX2V4cFwiOjQzNjcuMTM5NTA5MjkyODE5LFwic3RyX2V4cFwiOjI1MDgwLjc4OTc5ODgyMDYyLFwiZGVmX2V4cFwiOjI2NTU4LjcxOTE4Nzc3MDA1MyxcImRleF9leHBcIjoyMzA1NC45MDAzMjkyMTkxNjMsXCJhZ2lfZXhwXCI6MTkwMDkuMjIxNzk0NzkyMzYsXCJjaGFfZXhwXCI6NDM0MS40NjYxMDczMTMyMzksXCJoYWNrX211bHRcIjoxLFwic3RyX211bHRcIjozLjUwNzg4ODM4NDAwMDAwMSxcImRlZl9tdWx0XCI6My42MzM4NTYyNzAzODcyMDEzLFwiZGV4X211bHRcIjoxLjQ4NTAwMDAwMDAwMDAwMDMsXCJhZ2lfbXVsdFwiOjEuODgxMzA4MDAwMDAwMDAwNCxcImNoYV9tdWx0XCI6MS4wNCxcImhhY2tfYXNjX3BvaW50c1wiOjAsXCJzdHJfYXNjX3BvaW50c1wiOjAsXCJkZWZfYXNjX3BvaW50c1wiOjAsXCJkZXhfYXNjX3BvaW50c1wiOjAsXCJhZ2lfYXNjX3BvaW50c1wiOjAsXCJjaGFfYXNjX3BvaW50c1wiOjAsXCJ1cGdyYWRlc1wiOltcIkJhc2ViYWxsIEJhdFwiLFwiQnVsbGV0cHJvb2YgVmVzdFwiLFwiRnVsbCBCb2R5IEFybW9yXCIsXCJGb3JkIEZsZXggVjIwXCIsXCJLYXRhbmFcIixcIkdsb2NrIDE4Q1wiLFwiTGlxdWlkIEJvZHkgQXJtb3JcIixcIkdyYXBoZW5lIFBsYXRpbmcgQXJtb3JcIixcIlA5MENcIixcIlN0ZXlyIEFVR1wiLFwiQUstNDdcIixcIk0xNUExMCBBc3NhdWx0IFJpZmxlXCIsXCJBV00gU25pcGVyIFJpZmxlXCJdLFwiYXVnbWVudGF0aW9uc1wiOltdLFwibmFtZVwiOlwicjAwa2llLTRcIn19LHtcImN0b3JcIjpcIkdhbmdNZW1iZXJcIixcImRhdGFcIjp7XCJ0YXNrXCI6XCJWaWdpbGFudGUgSnVzdGljZVwiLFwiZWFybmVkUmVzcGVjdFwiOjIxNjc4LjY5NDc1MTk3MjY4MixcImhhY2tcIjo5MyxcInN0clwiOjUxNSxcImRlZlwiOjU0MyxcImRleFwiOjIwMyxcImFnaVwiOjIzMixcImNoYVwiOjEwOSxcImhhY2tfZXhwXCI6OTAzMi45Mzg3ODY3MDMxMzYsXCJzdHJfZXhwXCI6NTAzOTUuMjI0MjAxMTcxODU1LFwiZGVmX2V4cFwiOjU0ODQwLjk2NTEwMjY0MjA5LFwiZGV4X2V4cFwiOjM3MTI1LjA1NjI2NDUyMTA1LFwiYWdpX2V4cFwiOjIzOTk4LjYyNzM2MzI0ODQ3NyxcImNoYV9leHBcIjoxMzIzMy4wMTY0NDEyNDYwNTQsXCJoYWNrX211bHRcIjoxLFwic3RyX211bHRcIjozLjUwNzg4ODM4NDAwMDAwMSxcImRlZl9tdWx0XCI6My42MzM4NTYyNzAzODcyMDEzLFwiZGV4X211bHRcIjoxLjQ4NTAwMDAwMDAwMDAwMDMsXCJhZ2lfbXVsdFwiOjEuODgxMzA4MDAwMDAwMDAwNCxcImNoYV9tdWx0XCI6MS4wNCxcImhhY2tfYXNjX3BvaW50c1wiOjAsXCJzdHJfYXNjX3BvaW50c1wiOjAsXCJkZWZfYXNjX3BvaW50c1wiOjAsXCJkZXhfYXNjX3BvaW50c1wiOjAsXCJhZ2lfYXNjX3BvaW50c1wiOjAsXCJjaGFfYXNjX3BvaW50c1wiOjAsXCJ1cGdyYWRlc1wiOltcIkJhc2ViYWxsIEJhdFwiLFwiQnVsbGV0cHJvb2YgVmVzdFwiLFwiRnVsbCBCb2R5IEFybW9yXCIsXCJGb3JkIEZsZXggVjIwXCIsXCJLYXRhbmFcIixcIkdsb2NrIDE4Q1wiLFwiTGlxdWlkIEJvZHkgQXJtb3JcIixcIkdyYXBoZW5lIFBsYXRpbmcgQXJtb3JcIixcIlA5MENcIixcIlN0ZXlyIEFVR1wiLFwiQUstNDdcIixcIk0xNUExMCBBc3NhdWx0IFJpZmxlXCIsXCJBV00gU25pcGVyIFJpZmxlXCJdLFwiYXVnbWVudGF0aW9uc1wiOltdLFwibmFtZVwiOlwicjAwa2llLTVcIn19LHtcImN0b3JcIjpcIkdhbmdNZW1iZXJcIixcImRhdGFcIjp7XCJ0YXNrXCI6XCJWaWdpbGFudGUgSnVzdGljZVwiLFwiZWFybmVkUmVzcGVjdFwiOjgzNjIuNTI3NzQyODA5MzMyLFwiaGFja1wiOjcxLFwic3RyXCI6NDIzLFwiZGVmXCI6NDQ2LFwiZGV4XCI6MTc1LFwiYWdpXCI6MjA5LFwiY2hhXCI6NzMsXCJoYWNrX2V4cFwiOjQzMDEuMTE5OTk5OTk4NzE3NSxcInN0cl9leHBcIjoyMTk1NC40NjY1ODU2NjQ4MzUsXCJkZWZfZXhwXCI6MjM1MzcuNDQ0MjY3ODE0NSxcImRleF9leHBcIjoyMDExMC4yNjc0MjIyOTA3NyxcImFnaV9leHBcIjoxNjI1NS4zNzkzMDQ5MTIzNjUsXCJjaGFfZXhwXCI6NDEyMy4wNTQ2MDAwMDE5NSxcImhhY2tfbXVsdFwiOjEsXCJzdHJfbXVsdFwiOjMuNTA3ODg4Mzg0MDAwMDAxLFwiZGVmX211bHRcIjozLjYzMzg1NjI3MDM4NzIwMTMsXCJkZXhfbXVsdFwiOjEuNDg1MDAwMDAwMDAwMDAwMyxcImFnaV9tdWx0XCI6MS44ODEzMDgwMDAwMDAwMDA0LFwiY2hhX211bHRcIjoxLjA0LFwiaGFja19hc2NfcG9pbnRzXCI6MCxcInN0cl9hc2NfcG9pbnRzXCI6MCxcImRlZl9hc2NfcG9pbnRzXCI6MCxcImRleF9hc2NfcG9pbnRzXCI6MCxcImFnaV9hc2NfcG9pbnRzXCI6MCxcImNoYV9hc2NfcG9pbnRzXCI6MCxcInVwZ3JhZGVzXCI6W1wiQmFzZWJhbGwgQmF0XCIsXCJCdWxsZXRwcm9vZiBWZXN0XCIsXCJGdWxsIEJvZHkgQXJtb3JcIixcIkthdGFuYVwiLFwiRm9yZCBGbGV4IFYyMFwiLFwiR2xvY2sgMThDXCIsXCJMaXF1aWQgQm9keSBBcm1vclwiLFwiR3JhcGhlbmUgUGxhdGluZyBBcm1vclwiLFwiUDkwQ1wiLFwiU3RleXIgQVVHXCIsXCJBSy00N1wiLFwiTTE1QTEwIEFzc2F1bHQgUmlmbGVcIixcIkFXTSBTbmlwZXIgUmlmbGVcIl0sXCJhdWdtZW50YXRpb25zXCI6W10sXCJuYW1lXCI6XCJyMDBraWUtNlwifX0se1wiY3RvclwiOlwiR2FuZ01lbWJlclwiLFwiZGF0YVwiOntcInRhc2tcIjpcIlRyYWZmaWNrIElsbGVnYWwgQXJtc1wiLFwiZWFybmVkUmVzcGVjdFwiOjIwODMwLjU1NjgwMDQxNzgwMixcImhhY2tcIjo5OCxcInN0clwiOjc2NCxcImRlZlwiOjgwMCxcImRleFwiOjMyMCxcImFnaVwiOjM4OSxcImNoYVwiOjEwMixcImhhY2tfZXhwXCI6MTA4MTIuMTU3NzY3ODUwODE4LFwic3RyX2V4cFwiOjQ2OTI0Ny43OTMyOTQxNzg1LFwiZGVmX2V4cFwiOjUwNjk3NC4zMTMxNDMzMzUsXCJkZXhfZXhwXCI6NDQyOTcyLjIwOTg3MDU2MTEsXCJhZ2lfZXhwXCI6NDMyMDcyLjY3NjkwMDI5MjYsXCJjaGFfZXhwXCI6MTIwNjIuNjk5NjgwNjA2MDgsXCJoYWNrX211bHRcIjoxLFwic3RyX211bHRcIjozLjUwNzg4ODM4NDAwMDAwMSxcImRlZl9tdWx0XCI6My42MzM4NTYyNzAzODcyMDEzLFwiZGV4X211bHRcIjoxLjQ4NTAwMDAwMDAwMDAwMDMsXCJhZ2lfbXVsdFwiOjEuODA4OTUsXCJjaGFfbXVsdFwiOjEsXCJoYWNrX2FzY19wb2ludHNcIjowLFwic3RyX2FzY19wb2ludHNcIjowLFwiZGVmX2FzY19wb2ludHNcIjowLFwiZGV4X2FzY19wb2ludHNcIjowLFwiYWdpX2FzY19wb2ludHNcIjowLFwiY2hhX2FzY19wb2ludHNcIjowLFwidXBncmFkZXNcIjpbXCJCYXNlYmFsbCBCYXRcIixcIkJ1bGxldHByb29mIFZlc3RcIixcIkZ1bGwgQm9keSBBcm1vclwiLFwiS2F0YW5hXCIsXCJHbG9jayAxOENcIixcIkxpcXVpZCBCb2R5IEFybW9yXCIsXCJHcmFwaGVuZSBQbGF0aW5nIEFybW9yXCIsXCJQOTBDXCIsXCJTdGV5ciBBVUdcIixcIkFLLTQ3XCIsXCJNMTVBMTAgQXNzYXVsdCBSaWZsZVwiLFwiQVdNIFNuaXBlciBSaWZsZVwiXSxcImF1Z21lbnRhdGlvbnNcIjpbXSxcIm5hbWVcIjpcInIwMGtpZS03XCJ9fSx7XCJjdG9yXCI6XCJHYW5nTWVtYmVyXCIsXCJkYXRhXCI6e1widGFza1wiOlwiVHJhZmZpY2sgSWxsZWdhbCBBcm1zXCIsXCJlYXJuZWRSZXNwZWN0XCI6MTk3MTguMzkyODIwNzU1MTU4LFwiaGFja1wiOjk4LFwic3RyXCI6NzM2LFwiZGVmXCI6NzczLFwiZGV4XCI6MzA4LFwiYWdpXCI6Mzc0LFwiY2hhXCI6MTAxLFwiaGFja19leHBcIjoxMDcwMC40NjA5NzI4NDYzNzUsXCJzdHJfZXhwXCI6MzY2MDI1LjgwMDk4NDYyNTA2LFwiZGVmX2V4cFwiOjM5OTkwNS40ODQzODA2NDY0MyxcImRleF9leHBcIjozNDIwNjQuNzkxMjk0NzMwNSxcImFnaV9leHBcIjozMzI3NDkuMDcxODAyNjgxMzcsXCJjaGFfZXhwXCI6MTE4NjYuMDI3ODQwMDA4NjMsXCJoYWNrX211bHRcIjoxLFwic3RyX211bHRcIjozLjUwNzg4ODM4NDAwMDAwMSxcImRlZl9tdWx0XCI6My42MzM4NTYyNzAzODcyMDEzLFwiZGV4X211bHRcIjoxLjQ4NTAwMDAwMDAwMDAwMDMsXCJhZ2lfbXVsdFwiOjEuODA4OTUsXCJjaGFfbXVsdFwiOjEsXCJoYWNrX2FzY19wb2ludHNcIjowLFwic3RyX2FzY19wb2ludHNcIjowLFwiZGVmX2FzY19wb2ludHNcIjowLFwiZGV4X2FzY19wb2ludHNcIjowLFwiYWdpX2FzY19wb2ludHNcIjowLFwiY2hhX2FzY19wb2ludHNcIjowLFwidXBncmFkZXNcIjpbXCJCYXNlYmFsbCBCYXRcIixcIkthdGFuYVwiLFwiQnVsbGV0cHJvb2YgVmVzdFwiLFwiRnVsbCBCb2R5IEFybW9yXCIsXCJHbG9jayAxOENcIixcIkxpcXVpZCBCb2R5IEFybW9yXCIsXCJHcmFwaGVuZSBQbGF0aW5nIEFybW9yXCIsXCJQOTBDXCIsXCJTdGV5ciBBVUdcIixcIkFLLTQ3XCIsXCJNMTVBMTAgQXNzYXVsdCBSaWZsZVwiLFwiQVdNIFNuaXBlciBSaWZsZVwiXSxcImF1Z21lbnRhdGlvbnNcIjpbXSxcIm5hbWVcIjpcInIwMGtpZS04XCJ9fSx7XCJjdG9yXCI6XCJHYW5nTWVtYmVyXCIsXCJkYXRhXCI6e1widGFza1wiOlwiVmlnaWxhbnRlIEp1c3RpY2VcIixcImVhcm5lZFJlc3BlY3RcIjo4MDU2LjU4MjM4NjIwMzYzNyxcImhhY2tcIjozMixcInN0clwiOjcyNCxcImRlZlwiOjc2NixcImRleFwiOjI5NCxcImFnaVwiOjM2MCxcImNoYVwiOjMwLFwiaGFja19leHBcIjo5MDUuNTU2NTgzMzU5MDM3OSxcInN0cl9leHBcIjozMjc5MTcuMTMzMTA1NTkxMixcImRlZl9leHBcIjozNzU5NDMuMzI5Nzc5MDg2MDUsXCJkZXhfZXhwXCI6MjUxODYzLjgyMTA1MjM2MzUsXCJhZ2lfZXhwXCI6MjYzMzM2Ljk2OTI2MTA2OSxcImNoYV9leHBcIjo4MDYuMTIzODk0NTU4NTAyMixcImhhY2tfbXVsdFwiOjEsXCJzdHJfbXVsdFwiOjMuNTA3ODg4Mzg0MDAwMDAxLFwiZGVmX211bHRcIjozLjYzMzg1NjI3MDM4NzIwMTMsXCJkZXhfbXVsdFwiOjEuNDg1MDAwMDAwMDAwMDAwMyxcImFnaV9tdWx0XCI6MS44MDg5NSxcImNoYV9tdWx0XCI6MSxcImhhY2tfYXNjX3BvaW50c1wiOjAsXCJzdHJfYXNjX3BvaW50c1wiOjAsXCJkZWZfYXNjX3BvaW50c1wiOjAsXCJkZXhfYXNjX3BvaW50c1wiOjAsXCJhZ2lfYXNjX3BvaW50c1wiOjAsXCJjaGFfYXNjX3BvaW50c1wiOjAsXCJ1cGdyYWRlc1wiOltcIkJhc2ViYWxsIEJhdFwiLFwiS2F0YW5hXCIsXCJHbG9jayAxOENcIixcIkJ1bGxldHByb29mIFZlc3RcIixcIkZ1bGwgQm9keSBBcm1vclwiLFwiTGlxdWlkIEJvZHkgQXJtb3JcIixcIkdyYXBoZW5lIFBsYXRpbmcgQXJtb3JcIixcIlA5MENcIixcIlN0ZXlyIEFVR1wiLFwiQUstNDdcIixcIk0xNUExMCBBc3NhdWx0IFJpZmxlXCIsXCJBV00gU25pcGVyIFJpZmxlXCJdLFwiYXVnbWVudGF0aW9uc1wiOltdLFwibmFtZVwiOlwicjAwa2llLTlcIn19XSxcIndhbnRlZFwiOjEsXCJyZXNwZWN0XCI6MTgwMzY3LjI1MjQ1NTk2NDI4LFwiaXNIYWNraW5nR2FuZ1wiOmZhbHNlLFwicmVzcGVjdEdhaW5SYXRlXCI6MS42NDEzNjMwNDQyMjYyOTEsXCJ3YW50ZWRHYWluUmF0ZVwiOi0wLjAwODcxOTMzODE5MjQ1OTAyNSxcIm1vbmV5R2FpblJhdGVcIjo5Mjg1Ni4wNDY0MTQ2MTI1OSxcInN0b3JlZEN5Y2xlc1wiOjMsXCJzdG9yZWRUZXJyaXRvcnlBbmRQb3dlckN5Y2xlc1wiOjQwLFwidGVycml0b3J5Q2xhc2hDaGFuY2VcIjowLFwidGVycml0b3J5V2FyZmFyZUVuZ2FnZWRcIjpmYWxzZSxcIm5vdGlmeU1lbWJlckRlYXRoXCI6dHJ1ZX19LFwiY29ycG9yYXRpb25cIjpudWxsLFwiYmxhZGVidXJuZXJcIjpudWxsLFwiYmxhZGVidXJuZXJfbWF4X3N0YW1pbmFfbXVsdFwiOjEsXCJibGFkZWJ1cm5lcl9zdGFtaW5hX2dhaW5fbXVsdFwiOjEsXCJibGFkZWJ1cm5lcl9hbmFseXNpc19tdWx0XCI6MSxcImJsYWRlYnVybmVyX3N1Y2Nlc3NfY2hhbmNlX211bHRcIjoxLFwic2xlZXZlc1wiOltdLFwicmVzbGVldmVzXCI6W10sXCJzbGVldmVzRnJvbUNvdmVuYW50XCI6MCxcImJpdE5vZGVOXCI6NCxcImxhc3RVcGRhdGVcIjoxNjQ1OTc3OTA3OTYzLFwidG90YWxQbGF5dGltZVwiOjMwMTMyMzQ4MDAsXCJwbGF5dGltZVNpbmNlTGFzdEF1Z1wiOjE2MDg3NTIwMCxcInBsYXl0aW1lU2luY2VMYXN0Qml0bm9kZVwiOjQwNzc0NjIwMCxcIm1vbmV5U291cmNlQVwiOntcImN0b3JcIjpcIk1vbmV5U291cmNlVHJhY2tlclwiLFwiZGF0YVwiOntcImJsYWRlYnVybmVyXCI6MCxcImNhc2lub1wiOjAsXCJjbGFzc1wiOi0xMTU2NjA4LFwiY29kaW5nY29udHJhY3RcIjowLFwiY29ycG9yYXRpb25cIjowLFwiY3JpbWVcIjo4NDM4MDAzODIuMDEzNjUwNSxcImdhbmdcIjotMTg0NDg3MzIyMC44NTI5NzQ3LFwiaGFja2luZ1wiOjMwNzMwNTQ1NjIuNjgzODIwMixcImhhY2tuZXRcIjoxNTg4MS41NjQwNDkxNTQ4MzcsXCJoYWNrbmV0X2V4cGVuc2VzXCI6LTY5OC42MTUyOCxcImhvc3BpdGFsaXphdGlvblwiOjAsXCJpbmZpbHRyYXRpb25cIjowLFwic2xlZXZlc1wiOjAsXCJzdG9ja1wiOjAsXCJ0b3RhbFwiOjkzMzYxNjc1Ny44MjU0MjU0LFwid29ya1wiOjE3MjM2LjUyMzYwOTU5OTg5LFwic2VydmVyc1wiOi04MjUwNDA3NzcuNDkxMzE2NixcIm90aGVyXCI6LTMxMjIwMDAwMCxcImF1Z21lbnRhdGlvbnNcIjowfX0sXCJtb25leVNvdXJjZUJcIjp7XCJjdG9yXCI6XCJNb25leVNvdXJjZVRyYWNrZXJcIixcImRhdGFcIjp7XCJibGFkZWJ1cm5lclwiOjAsXCJjYXNpbm9cIjowLFwiY2xhc3NcIjotMTE1NjYwOCxcImNvZGluZ2NvbnRyYWN0XCI6MCxcImNvcnBvcmF0aW9uXCI6MCxcImNyaW1lXCI6ODcyMDk2MDMxLjI5MzYyNzYsXCJnYW5nXCI6LTE4NDQ4NzMyMjAuODUyOTc0NyxcImhhY2tpbmdcIjo1NDA5MDY1MzA3LjQxOTY4MixcImhhY2tuZXRcIjoyODE5NTYuNzc2ODU0NDQzMSxcImhhY2tuZXRfZXhwZW5zZXNcIjotODkxNS40NDY0OTE1NDQ3MzIsXCJob3NwaXRhbGl6YXRpb25cIjowLFwiaW5maWx0cmF0aW9uXCI6MCxcInNsZWV2ZXNcIjowLFwic3RvY2tcIjowLFwidG90YWxcIjo5NzI5ODQ1MzQuMDQ4ODM1OSxcIndvcmtcIjoxNzIzNi41MjM2MDk1OTk4OSxcInNlcnZlcnNcIjotMTE3ODg2OTQyNS4yMTQ5NjE1LFwib3RoZXJcIjotNjI0OTAwMDAwLFwiYXVnbWVudGF0aW9uc1wiOi0xNjU4NjY3ODI4LjQ1MDc0MX19LFwic2NyaXB0UHJvZFNpbmNlTGFzdEF1Z1wiOjI1NTg5NzEwOTIsXCJleHBsb2l0c1wiOltdLFwiYWNoaWV2ZW1lbnRzXCI6W3tcIklEXCI6XCJGSVJTVF9IQUNLTkVUX05PREVcIixcInVubG9ja2VkT25cIjoxNjQyOTY5MDU3MTcyfSx7XCJJRFwiOlwiTlMyXCIsXCJ1bmxvY2tlZE9uXCI6MTY0Mjk3MDgwMDU4MH0se1wiSURcIjpcIkJSVVRFU1NILkVYRVwiLFwidW5sb2NrZWRPblwiOjE2NDI5NzU3ODA1ODF9LHtcIklEXCI6XCJDWUJFUlNFQ1wiLFwidW5sb2NrZWRPblwiOjE2NDI5Nzc2NDA2MDJ9LHtcIklEXCI6XCJGVFBDUkFDSy5FWEVcIixcInVubG9ja2VkT25cIjoxNjQyOTgzNzAwNTg5fSx7XCJJRFwiOlwiSEFDS05FVF9OT0RFXzEwTVwiLFwidW5sb2NrZWRPblwiOjE2NDMxOTg1NzY5OTd9LHtcIklEXCI6XCJUT1JcIixcInVubG9ja2VkT25cIjoxNjQzMTk5MTE3MDAwfSx7XCJJRFwiOlwiSU5TVEFMTF8xXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MzIzOTkyNTIxMH0se1wiSURcIjpcIkRSQUlOX1NFUlZFUlwiLFwidW5sb2NrZWRPblwiOjE2NDMyNDA1MjUyMDN9LHtcIklEXCI6XCJSRUxBWVNNVFAuRVhFXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MzQxNTM0NDY5N30se1wiSURcIjpcIkhUVFBXT1JNLkVYRVwiLFwidW5sb2NrZWRPblwiOjE2NDM0MTUzNDQ3MzB9LHtcIklEXCI6XCJTUUxJTkpFQ1QuRVhFXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MzQxNTM0NDczMn0se1wiSURcIjpcIlRIRV9CTEFDS19IQU5EXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MzQxNTc2NDY5MH0se1wiSURcIjpcIk5JVEVTRUNcIixcInVubG9ja2VkT25cIjoxNjQzNDE1OTQ0NzA0fSx7XCJJRFwiOlwiRlJPWkVcIixcInVubG9ja2VkT25cIjoxNjQzNTY3MzU1ODY5fSx7XCJJRFwiOlwiRE9OQVRJT05cIixcInVubG9ja2VkT25cIjoxNjQzNjYyMjI3MDg1fSx7XCJJRFwiOlwiQklUUlVOTkVSU1wiLFwidW5sb2NrZWRPblwiOjE2NDM2NzA2MjcwOTB9LHtcIklEXCI6XCJGT1JNVUxBUy5FWEVcIixcInVubG9ja2VkT25cIjoxNjQzNzAyNjAzOTUwfSx7XCJJRFwiOlwiVFJBVkVMXCIsXCJ1bmxvY2tlZE9uXCI6MTY0Mzc0MzQ2MTA2OX0se1wiSURcIjpcIk1BWF9IQUNLTkVUX05PREVcIixcInVubG9ja2VkT25cIjoxNjQzNzQ3MDAxMDg0fSx7XCJJRFwiOlwiREFFREFMVVNcIixcInVubG9ja2VkT25cIjoxNjQzOTkwNzg2MTA1fSx7XCJJRFwiOlwiV09SS09VVFwiLFwidW5sb2NrZWRPblwiOjE2NDQxNjgzOTQ3OTh9LHtcIklEXCI6XCJIT1NQSVRBTElaRURcIixcInVubG9ja2VkT25cIjoxNjQ0MTY4NjM0ODAyfSx7XCJJRFwiOlwiU0YxLjFcIixcInVubG9ja2VkT25cIjoxNjQ0MTczODU1Nzk0fSx7XCJJRFwiOlwiU0NSSVBUU18zMFwiLFwidW5sb2NrZWRPblwiOjE2NDQyNjQ2Njk2Mjh9LHtcIklEXCI6XCJTQ1JJUFRfMzJHQlwiLFwidW5sb2NrZWRPblwiOjE2NDQ0NDI0MzY2NzJ9LHtcIklEXCI6XCJSRVBVVEFUSU9OXzEwTVwiLFwidW5sb2NrZWRPblwiOjE2NDQ2MTc3ODg5OTZ9LHtcIklEXCI6XCJHQU5HXCIsXCJ1bmxvY2tlZE9uXCI6MTY0NDY5MzY2ODM5N30se1wiSURcIjpcIkZVTExfR0FOR1wiLFwidW5sb2NrZWRPblwiOjE2NDQ4NDg4NjAyMTV9LHtcIklEXCI6XCJHQU5HX01FTUJFUl9QT1dFUlwiLFwidW5sb2NrZWRPblwiOjE2NDQ5NTYwMTg4Mjl9LHtcIklEXCI6XCJTRjIuMVwiLFwidW5sb2NrZWRPblwiOjE2NDUwODgyNTY2NjN9XSxcImZhY3Rpb25Xb3JrVHlwZVwiOlwiRmFjdGlvbiBGaWVsZCBXb3JrXCIsXCJjb21taXR0aW5nQ3JpbWVUaHJ1U2luZ0ZuXCI6ZmFsc2UsXCJzaW5nRm5DcmltZVdvcmtlclNjcmlwdFwiOm51bGx9fSIsIkFsbFNlcnZlcnNTYXZlIjoie1wiaG9tZVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJob21lXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIwLjEuMS4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6dHJ1ZSxcIm1heFJhbVwiOjUxMixcIm1lc3NhZ2VzXCI6W1wiaGFja2Vycy1zdGFydGluZy1oYW5kYm9vay5saXRcIixcImowLm1zZ1wiLFwiajEubXNnXCIsXCJjc2VjLXRlc3QubXNnXCIsXCJqMi5tc2dcIixcIm5pdGVzZWMtdGVzdC5tc2dcIixcImozLm1zZ1wiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkhvbWUgUENcIixcInByb2dyYW1zXCI6W1wiTlVLRS5leGVcIixcImIxdF9mbHVtMy5leGVcIixcImZsMWdodC5leGVcIixcIkJydXRlU1NILmV4ZVwiLFwiRlRQQ3JhY2suZXhlXCIsXCJEZWVwc2NhblYxLmV4ZVwiLFwicmVsYXlTTVRQLmV4ZVwiLFwiRGVlcHNjYW5WMi5leGVcIixcIkhUVFBXb3JtLmV4ZVwiLFwiU1FMSW5qZWN0LmV4ZVwiXSxcInJhbVVzZWRcIjo1MTAuNjUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwiL29mZmljaWFsL21vbml0b3IuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2MzgwLjAwOTk5OTk5NjM5MSxcInBpZFwiOjUsXCJyYW1Vc2FnZVwiOjQuMTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCIvb2ZmaWNpYWwvbW9uaXRvci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNTEwNTMzODEtYWExMy00M2ViLWJiOWMtMTIwYzYyY2UzZGRmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwODd9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDIxMF19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxODQ3LjIwMjY3NDY4ODAwMDMsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjgwOTk5OTk5NjM5MTUsXCJwaWRcIjoxMCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9tZVwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZDNmOWI1ZDUtNjdmZi00ZTg4LWI2ZTctNGQ0MGM5ZGIxMzViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwOTF9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwiZ2FuZy1tZ210LWNvbWJhdC5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNDYuNDA5OTk5OTk2NDIyLFwicGlkXCI6NjksXCJyYW1Vc2FnZVwiOjIyLjcsXCJzZXJ2ZXJcIjpcImhvbWVcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJnYW5nLW1nbXQtY29tYmF0LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82NjMyNjQzZi00ZWRmLTRhNjgtOWE1NS1mZTMwNmI0MmQ1ODFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTI2N31dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMTg5NTQwNjAwLDM0MDAsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNDk2NC45MDc3NzA4OCxcIm9ubGluZU1vbmV5TWFkZVwiOjE4OTU0MDYwMCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjIzMS42MDk5OTk5OTY1MjYsXCJwaWRcIjo3MCxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJob21lXCIsXCJ0aHJlYWRzXCI6MTAwLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzg1Y2E2NGE4LTM0N2ItNDVkZS1iMmIwLWFiYjhiMGU2NTE1YVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzA1fV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIl0sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwiL25lby9jb29yZGluYXRlLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk3LjAwOTk5OTk5OTk5ODksXCJwaWRcIjoxODMsXCJyYW1Vc2FnZVwiOjUuOCxcInNlcnZlclwiOlwiaG9tZVwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNjMjk3ZWUxLTJhNzQtNDExMy05YmRmLWE2ZmNjNWI3NzEwZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzJ9LHtcImZpbGVuYW1lXCI6XCIvbmVvL2dldC1pZGxlLWNhcGEuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2NlNGE5NjAxLWFhM2EtNDY2Zi1hMTEwLWMxN2FlNTdjZGRiMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODZ9LHtcImZpbGVuYW1lXCI6XCIvbmVvL2Nvb3JkaW5hdGUuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RhMmVkOWZjLTY3NmItNGQ3YS05NDZiLTE2ZjVhMDJmYzQ5Y1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NTB9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDguNzAxNjIwNDc5MzI0NDg2XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMjgsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcInRocmVhZHNcIjoxNjIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzJhY2MxZWFiLTY5ODUtNDlhMy04YTNmLTNiN2RlNGMwNWU1YVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MzU0fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG5cXG4gIGxldCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIHdoaWxlIChucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCkge1xcbiAgICBucy5wcmludChcXG4gICAgICBcXFwid2Vha2luZyBcXFwiICtcXG4gICAgICAgIHRhcmdldCArXFxuICAgICAgICBcXFwiIGlzIFxcXCIgK1xcbiAgICAgICAgbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpICtcXG4gICAgICAgIFxcXCIgd2FudCBcXFwiICtcXG4gICAgICAgIHNlY3VyaXR5VGhyZXNoXFxuICAgICk7XFxuICAgIGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2I2MmJkMjQwLWNhN2UtNDUxNC05NTM5LTI4MmUyNmNjOTU2Y1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNjYwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuOTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI1OSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAgIGNvbnN0IG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuICAgIGxldCBtb25leVN0YXNoID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KVxcbiAgICB3aGlsZSAobW9uZXlTdGFzaCA8IG1vbmV5VGhyZXNoKSB7XFxuICAgICAgICBucy5wcmludChcXFwiZ3Jvd2luZyBcXFwiICsgdGFyZ2V0ICsgXFxcIiwgaGF2ZSBcXFwiICsgbW9uZXlTdGFzaCArIFxcXCIgd2FudCBcXFwiICsgbW9uZXlUaHJlc2gpO1xcbiAgICAgICAgYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICAgICAgbW9uZXlTdGFzaCA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldClcXG4gICAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJyaWNoZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJyaWNoZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzU0ZjEwNGJlLTM2NDItNDVkZi1iMTEwLWI3OGM5ODQzZmMwNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMTUyOX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjk1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI0MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc2NhbiB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCBuZXQgPSBzY2FuKG5zKTtcXG4gIGNvbnN0IHNydnMgPSBuZXQuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSk7XFxuICBucy50cHJpbnRmKGBnb3QgJHtzcnZzLmxlbmd0aH0gcHduZC1zZXJ2ZXJzLCBvdXQgb2YgJHtuZXQubGVuZ3RofWApO1xcblxcbiAgZm9yIChsZXQgc3J2IG9mIHNydnMpIHtcXG4gICAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuICAgIG5zLnRwcmludChgc2VydmVyICR7c3J2fSAoJHtzcnZSYW19IEdCKSBydW5uaW5nOmApO1xcbiAgICBjb25zdCBwcm9jZXNzZXMgPSBucy5wcyhzcnYpO1xcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2Nlc3Nlcy5sZW5ndGg7ICsraSkge1xcbiAgICAgIG5zLnRwcmludChcXG4gICAgICAgIFxcXCIgIFxcXCIgK1xcbiAgICAgICAgICBwcm9jZXNzZXNbaV0uZmlsZW5hbWUgK1xcbiAgICAgICAgICBcXFwiIC10IFxcXCIgK1xcbiAgICAgICAgICBwcm9jZXNzZXNbaV0udGhyZWFkcyArXFxuICAgICAgICAgIFxcXCIgXFxcIiArXFxuICAgICAgICAgIHByb2Nlc3Nlc1tpXS5hcmdzXFxuICAgICAgKTtcXG4gICAgfVxcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJzaG93LXJ1bm5pbmcuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9jOGQ0MmU0OC02ZGZhLTQzZGItODY3MS0zYTk2NDE5ZTY0MWNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTg1fSx7XCJmaWxlbmFtZVwiOlwic2hvdy1ydW5uaW5nLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xOTk2ZWU2OC00MjkzLTQxODYtYTU4ZS1kYjg0N2MxNzMyYjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzY0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuMSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjM5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInBzXCIsXCJjb3N0XCI6MC4yfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzY2FuIH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldFNjcmlwdCA9IG5zLmFyZ3Muc2hpZnQoKTtcXG4gIGNvbnN0IHRhcmdldEFyZ3MgPSBucy5hcmdzO1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcblxcbiAgY29uc3QgbmV0ID0gc2Nhbihucyk7XFxuXFxuICAvLyBhdmFpbGlhYmxlIHdvcmtmb3JjZVxcbiAgY29uc3Qgc3J2cyA9IG5ldC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKTtcXG4gIG5zLnRwcmludGYoYGdvdCAke3NydnMubGVuZ3RofSBwd25kLXNlcnZlcnMsIG91dCBvZiAke25ldC5sZW5ndGh9YCk7XFxuXFxuICAvLyBleGNsdWRpbmcgY2FzaGNvd3MgYW5kIGhvbWVcXG4gIGNvbnN0IGV4Y2x1ZGUgPSBbXFxcImhvbWVcXFwiXTtcXG5cXG4gIC8vIGV4Y2x1ZGluZyBjYXNoIGNvd3NcXG4gIGZvciAobGV0IHNydiBvZiBzcnZzLmZpbHRlcigoc3J2KSA9PiAhZXhjbHVkZS5pbmNsdWRlcyhzcnYpKSkge1xcbiAgICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG4gICAgbnMudHByaW50KGBzZXJ2ZXIgJHtzcnZ9ICgke3NydlJhbX0gR0IpIHJ1bm5pbmc6YCk7XFxuICAgIGNvbnN0IHByb2Nlc3NlcyA9IG5zLnBzKHNydik7XFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcHJvY2Vzc2VzLmxlbmd0aDsgKytpKSB7XFxuICAgICAgbnMudHByaW50KFxcbiAgICAgICAgXFxcIiAgXFxcIiArXFxuICAgICAgICAgIHByb2Nlc3Nlc1tpXS5maWxlbmFtZSArXFxuICAgICAgICAgIFxcXCIgLXQgXFxcIiArXFxuICAgICAgICAgIHByb2Nlc3Nlc1tpXS50aHJlYWRzICtcXG4gICAgICAgICAgXFxcIiBcXFwiICtcXG4gICAgICAgICAgcHJvY2Vzc2VzW2ldLmFyZ3NcXG4gICAgICApO1xcbiAgICB9XFxuICAgIGF3YWl0IG5zLnNjcChcXFwiaGFja2VyLWxpYi5qc1xcXCIsIHNydik7XFxuICAgIGF3YWl0IG5zLnNjcCh0YXJnZXRTY3JpcHQsIHNydik7XFxuICAgIGF3YWl0IG5zLmtpbGxhbGwoc3J2KTtcXG4gICAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICAgIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICAgIG5zLnRwcmludChcXG4gICAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgICApO1xcbiAgICAgIGF3YWl0IG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcInJ1bi1vbi1hbGwuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85ZjJlODJmYi01NjVhLTQ4NWEtYWJhMS0xNGQ3OGYxNGU4ZDJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTg2fSx7XCJmaWxlbmFtZVwiOlwicnVuLW9uLWFsbC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZTdkMjYyM2UtMzlkYy00ODU3LWJmMTMtMTk5OWY5ZWIxOTJmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1NH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo0LjYsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIzNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJwc1wiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjcFwiLFwiY29zdFwiOjAuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImtpbGxhbGxcIixcImNvc3RcIjowLjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBmbXQgfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgbXlSaWNoZXMgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShcXFwiaG9tZVxcXCIpO1xcbiAgY29uc3QgbWF4U3J2cyA9IG5zLmdldFB1cmNoYXNlZFNlcnZlckxpbWl0KCk7XFxuICBjb25zdCBtYXhSYW0gPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJNYXhSYW0oKTtcXG4gIGxldCBzaXplcyA9IFtdO1xcbiAgZm9yIChsZXQgc2l6ZSA9IDg7IHNpemUgPD0gbWF4UmFtOyBzaXplID0gc2l6ZSAqIDIpIHtcXG4gICAgc2l6ZXMucHVzaChzaXplKTtcXG4gIH1cXG4gIC8vY29uc3Qgc2l6ZXMgPSBbOCwgMTYsIDMyLCA2NCwgMTI4LCAyNTYsIDUxMiwgMTAyNCwgMjA0OCwgNDA5Ni4uLl07XFxuICBzaXplcy5mb3JFYWNoKChzaXplKSA9PiB7XFxuICAgIGNvbnN0IHByaWNlID0gbnMuZ2V0UHVyY2hhc2VkU2VydmVyQ29zdChzaXplKTtcXG4gICAgY29uc3QgYnV5UXR5ID0gTWF0aC5mbG9vcihteVJpY2hlcyAvIHByaWNlKTtcXG4gICAgY29uc3QgbWF4UXR5ID0gTWF0aC5taW4oYnV5UXR5LCBtYXhTcnZzKTtcXG5cXG4gICAgbnMudHByaW50KGAke3NpemV9IEdCIHNydiBmb3IgJHtmbXQocHJpY2UpfSwgY2FuIGJ1eSAke21heFF0eX1gKTtcXG4gIH0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJwcmljZS1saXN0LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzJkYmZmOWEwLTU0OTAtNGQ4MC1hNDhmLThkYzE5YWY0YjNiMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjA5fSx7XCJmaWxlbmFtZVwiOlwicHJpY2UtbGlzdC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYjMxZWE4ZDMtMDJkZS00MGFlLWFlNmYtYWQyYzlhODRmYmExXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE5NjM1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuMDUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTk2MzUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFB1cmNoYXNlZFNlcnZlckxpbWl0XCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFB1cmNoYXNlZFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRQdXJjaGFzZWRTZXJ2ZXJDb3N0XCIsXCJjb3N0XCI6MC4yNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgYmVzdF90YXJnZXQgfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0UmFtID0gbnMuYXJncy5zaGlmdCgpO1xcbiAgY29uc3QgdGFyZ2V0U2NyaXB0ID0gbnMuYXJncy5zaGlmdCgpO1xcbiAgY29uc3QgdGFyZ2V0QXJncyA9IG5zLmFyZ3M7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcih0YXJnZXRSYW0gLyBydW5TaXplKTtcXG5cXG4gIGNvbnN0IHBzcnZzID0gbnMuZ2V0UHVyY2hhc2VkU2VydmVycygpO1xcbiAgY29uc3QgbWF4U3J2cyA9IG5zLmdldFB1cmNoYXNlZFNlcnZlckxpbWl0KCk7XFxuICBucy50cHJpbnRmKFxcbiAgICBgZ290ICR7cHNydnMubGVuZ3RofSBwLXNlcnZlcnMsIG1heCAke21heFNydnN9OlxcXFxuJHtwc3J2cy5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICk7XFxuICBucy50cHJpbnRmKGBhZGRpbmcgc2VydmVycyB3aXRoICR7dGFyZ2V0UmFtfSBHQiBSQU1gKTtcXG4gIGNvbnN0IHRhcmdldCA9IGJlc3RfdGFyZ2V0KG5zKT8ubmFtZTtcXG4gIG5zLnRwcmludChgdGFyZ2V0aW5nICR7dGFyZ2V0fWApO1xcblxcbiAgbGV0IGkgPSBwc3J2cy5sZW5ndGg7XFxuICB3aGlsZSAoaSA8IG1heFNydnMpIHtcXG4gICAgLy8gQ2hlY2sgaWYgd2UgaGF2ZSBlbm91Z2ggbW9uZXkgdG8gcHVyY2hhc2UgYSBzZXJ2ZXJcXG4gICAgaWYgKFxcbiAgICAgIG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKFxcXCJob21lXFxcIikgPiBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJDb3N0KHRhcmdldFJhbSlcXG4gICAgKSB7XFxuICAgICAgY29uc3QgaG9zdG5hbWUgPSBhd2FpdCBucy5wdXJjaGFzZVNlcnZlcihcXFwicHNydi1cXFwiICsgaSwgdGFyZ2V0UmFtKTtcXG4gICAgICAvKiBucy50cHJpbnRmKFxcbiAgICAgICAgYGdvdCBuZXcgc2VydmVyICR7aG9zdG5hbWV9LCBydW5uaW5nICR7dGFyZ2V0U2NyaXB0fSAtdCAke3RocmVhZHN9ICR7dGFyZ2V0QXJncy5qb2luKFxcbiAgICAgICAgICBcXFwiIFxcXCJcXG4gICAgICAgICl9YFxcbiAgICAgICk7XFxuICAgICAgYXdhaXQgbnMuc2NwKHRhcmdldFNjcmlwdCwgaG9zdG5hbWUpO1xcbiAgICAgIGF3YWl0IG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBob3N0bmFtZSwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7ICovXFxuICAgICAgKytpO1xcbiAgICAgIGlmICh0YXJnZXQpIHtcXG4gICAgICAgIG5zLnJ1bihcXFwic2xhdmUtaG9zdC5qc1xcXCIsIDEsIGhvc3RuYW1lLCB0YXJnZXQpO1xcbiAgICAgICAgYXdhaXQgbnMuc2xlZXAoMjApO1xcbiAgICAgIH1cXG4gICAgfVxcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJhZGQtaG9zdHMuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNWQ0NDZmODQtYzIxMS00MGQ2LTk1YjgtZDFkNGUyYmE4MGY2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkyMDl9LHtcImZpbGVuYW1lXCI6XCJhZGQtaG9zdHMuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzBiZTkwNTI2LTMwNTEtNGJiNC04MGQ2LTBjOTgyMTZjODFhY1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM0Mn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo4LjE1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzQyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0UHVyY2hhc2VkU2VydmVyc1wiLFwiY29zdFwiOjIuMjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRQdXJjaGFzZWRTZXJ2ZXJMaW1pdFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFB1cmNoYXNlZFNlcnZlckNvc3RcIixcImNvc3RcIjowLjI1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwicHVyY2hhc2VTZXJ2ZXJcIixcImNvc3RcIjoyLjI1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwicnVuXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc2NhbiwgYmVzdF90YXJnZXQgfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgbmV0ID0gc2Nhbihucyk7XFxuXFxuICAvLyBkZXRlcm1pbmUgcG9ydHMgd2UgY2FuIG9wZW5cXG4gIGxldCBjYW5fcG9ydHMgPSAwO1xcbiAgaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIGNhbl9wb3J0cysrO1xcbiAgaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkZUUENyYWNrLmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIGNhbl9wb3J0cysrO1xcbiAgaWYgKG5zLmZpbGVFeGlzdHMoXFxcInJlbGF5U01UUC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSBjYW5fcG9ydHMrKztcXG4gIGlmIChucy5maWxlRXhpc3RzKFxcXCJIVFRQV29ybS5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSBjYW5fcG9ydHMrKztcXG4gIGlmIChucy5maWxlRXhpc3RzKFxcXCJTUUxJbmplY3QuZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkgY2FuX3BvcnRzKys7XFxuXFxuICAvLyBjaGVjayBtYSAxMzM3IHNraWxselxcbiAgY29uc3Qgc2tpbGx6ID0gbnMuZ2V0SGFja2luZ0xldmVsKCk7XFxuXFxuICBjb25zdCBwd25kID0gbmV0LmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpO1xcbiAgY29uc3QgdW5wd25kID0gbmV0LmZpbHRlcigoc3J2KSA9PiAhcHduZC5pbmNsdWRlcyhzcnYpKTtcXG4gIGNvbnN0IHRndHMgPSB1bnB3bmQuZmlsdGVyKChzcnYpID0+IHtcXG4gICAgY29uc3QgbmVlZFBvcnRzID0gbnMuZ2V0U2VydmVyTnVtUG9ydHNSZXF1aXJlZChzcnYpO1xcbiAgICBjb25zdCBuZWVkU2tpbGx6ID0gbnMuZ2V0U2VydmVyUmVxdWlyZWRIYWNraW5nTGV2ZWwoc3J2KTtcXG4gICAgcmV0dXJuIG5lZWRQb3J0cyA8PSBjYW5fcG9ydHMgJiYgbmVlZFNraWxseiA8PSBza2lsbHo7XFxuICB9KTtcXG5cXG4gIG5zLnRwcmludGYoXFxuICAgIGBnb3QgJHtwd25kLmxlbmd0aH0gcDB3bmQgc2VydmVycywgb3V0IG9mICR7bmV0Lmxlbmd0aH0sIGZvdW5kICR7dGd0cy5sZW5ndGh9IHRhcmdldHNgXFxuICApO1xcblxcbiAgdGd0cy5mb3JFYWNoKChzcnYpID0+IHtcXG4gICAgY29uc3QgbmVlZFBvcnRzID0gbnMuZ2V0U2VydmVyTnVtUG9ydHNSZXF1aXJlZChzcnYpO1xcbiAgICBjb25zdCBuZWVkU2tpbGx6ID0gbnMuZ2V0U2VydmVyUmVxdWlyZWRIYWNraW5nTGV2ZWwoc3J2KTtcXG4gICAgaWYgKG5lZWRQb3J0cyA8PSBjYW5fcG9ydHMgJiYgbmVlZFNraWxseiA8PSBza2lsbHopIHtcXG4gICAgICBucy50cHJpbnRmKGB0Z3QgJHtzcnZ9YCk7XFxuICAgICAgaWYgKG5lZWRQb3J0cyA+PSAxKSBucy5icnV0ZXNzaChzcnYpO1xcbiAgICAgIGlmIChuZWVkUG9ydHMgPj0gMikgbnMuZnRwY3JhY2soc3J2KTtcXG4gICAgICBpZiAobmVlZFBvcnRzID49IDMpIG5zLnJlbGF5c210cChzcnYpO1xcbiAgICAgIGlmIChuZWVkUG9ydHMgPj0gNCkgbnMuaHR0cHdvcm0oc3J2KTtcXG4gICAgICBpZiAobmVlZFBvcnRzID49IDUpIG5zLnNxbGluamVjdChzcnYpO1xcbiAgICAgIG5zLm51a2Uoc3J2KTtcXG4gICAgICBucy50cHJpbnRmKGBwMHduZCAke3Nydn1gKTtcXG4gICAgICBpZiAobnMuZmlsZUV4aXN0cyhcXFwic2xhdmUtaG9zdC5qc1xcXCIsIFxcXCJob21lXFxcIikpIHtcXG4gICAgICAgIG5zLnJ1bihcXFwic2xhdmUtaG9zdC5qc1xcXCIsIDEsIHNydiwgYmVzdF90YXJnZXQobnMpPy5uYW1lIHx8IFxcXCJcXFwiKTtcXG4gICAgICB9XFxuICAgIH1cXG4gIH0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJzY2FuLXB3bi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85ZGQ2OTUyYy05NzZlLTRjZWEtOWI1OC02N2ZlYWU0MTg0ZGJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIwOX0se1wiZmlsZW5hbWVcIjpcInNjYW4tcHduLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8yZTAzY2Y0NC04NmJlLTRmNDctYWY3NC00ZmI1ODkzMjk1YjdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3Njl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzY5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImZpbGVFeGlzdHNcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRIYWNraW5nTGV2ZWxcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJOdW1Qb3J0c1JlcXVpcmVkXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyUmVxdWlyZWRIYWNraW5nTGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJmdHBjcmFja1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJyZWxheXNtdHBcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaHR0cHdvcm1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic3FsaW5qZWN0XCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIm51a2VcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwicnVuXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc2NhbiB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3Qgc3J2ID0gbnMuYXJncy5zaGlmdCgpO1xcbiAgY29uc3QgdGFyZ2V0U2NyaXB0ID0gbnMuYXJncy5zaGlmdCgpO1xcbiAgY29uc3QgdGFyZ2V0QXJncyA9IG5zLmFyZ3M7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBhd2FpdCBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIGF1dG9jb21wbGV0ZShkYXRhLCBhcmdzKSB7XFxuICBzd2l0Y2ggKGFyZ3MubGVuZ3RoKSB7XFxuICAgIGNhc2UgMTpcXG4gICAgICByZXR1cm4gWy4uLmRhdGEuc2VydmVyc107XFxuICAgIGNhc2UgMjpcXG4gICAgICByZXR1cm4gWy4uLmRhdGEuc2NyaXB0c107XFxuICAgIGRlZmF1bHQ6XFxuICAgICAgcmV0dXJuIFtdO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJydW4tbWF4LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZWYxMjUzYzAtY2VjNC00N2VmLTlhMGYtMWEyM2I1OGM2NmI5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjgyfSx7XCJmaWxlbmFtZVwiOlwicnVuLW1heC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNjAzNmIzNGUtZGVlMS00NjUwLWEzZWMtZGQ0ZWNmMjlmYjUzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjc5OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjA1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkyMzMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM31dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldFNjcmlwdCA9IG5zLmFyZ3Muc2hpZnQoKTtcXG4gIGNvbnN0IHRhcmdldEFyZ3MgPSBucy5hcmdzO1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgLy8gVE9ETyBob3cgdG8gZ2V0IGxvY2FsIGhvc3RuYW1lIG9yIGxvY2FsIHJhbT9cXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShcXFwiaG9tZVxcXCIpIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShcXFwiaG9tZVxcXCIpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBucy50cHJpbnQoXFxuICAgIGAgIGluIDEwcyBzdGFydGluZyBydW4gJHt0YXJnZXRTY3JpcHR9IC10ICR7dGhyZWFkc30gJHt0YXJnZXRBcmdzfWBcXG4gICk7XFxuICBucy5zcGF3bih0YXJnZXRTY3JpcHQsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gYXV0b2NvbXBsZXRlKGRhdGEsIGFyZ3MpIHtcXG4gIHJldHVybiBbLi4uZGF0YS5zY3JpcHRzXTtcXG59XCIsXCJmaWxlbmFtZVwiOlwicnVuLW1heC1sb2NhbC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcInJ1bi1tYXgtbG9jYWwuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2E0ZTg1ZDVkLTgyMjEtNDM4Yy1hMWE0LTY4M2QzYTg1NjFhMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1NDE0Nn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIyOSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJVc2VkUmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNwYXduXCIsXCJjb3N0XCI6Mn1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjA5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgbGV0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBucy50cHJpbnQoXFxcImZhcm1pbmcgYW5kIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgY29uc3QgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC45O1xcbiAgY29uc3Qgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyAyO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgaWYgKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKSB7XFxuICAgICAgYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIH0gZWxzZSBpZiAobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKSB7XFxuICAgICAgYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgfVxcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2U5NmQxYmY5LTNhYWUtNDkxNC05YTQzLTIxOTI3MjgwMzU2NVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNjV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxODEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBsZXQgbW9uZXlTdGFzaCA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuICB3aGlsZSAobW9uZXlTdGFzaCA8IG1vbmV5VGhyZXNoKSB7XFxuICAgIG5zLnByaW50KFxcbiAgICAgIFxcXCJncm93aW5nIFxcXCIgKyB0YXJnZXQgKyBcXFwiLCBoYXZlIFxcXCIgKyBtb25leVN0YXNoICsgXFxcIiB3YW50IFxcXCIgKyBtb25leVRocmVzaFxcbiAgICApO1xcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG1vbmV5U3Rhc2ggPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMTk1NjE4ZjYtMGYzNy00MTI1LWFjYTAtZjRjODhjNjk1Y2ExXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjY0NjIwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuOTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTE5NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84NWNhNjRhOC0zNDdiLTQ1ZGUtYjJiMC1hYmI4YjBlNjUxNWFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcwNX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIxMyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IHNjYW4sIHNydl9pbmZvLCBmbXQgfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiBzcnZfaW5mbyhucywgc3J2KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLyBhLnNlY19taW4gLSBiLm1vbmV5X21heCAvIGEuc2VjX21pbik7XFxuXFxuICBvdXRwdXQuZm9yRWFjaCgoaW5mbykgPT4ge1xcbiAgICBucy50cHJpbnQoYFRhcmdldCAke2luZm8ubmFtZX06YCk7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBtb25leTogJHtmbXQoaW5mby5tb25leV9jdXJyKX0vJHtmbXQoaW5mby5tb25leV9tYXgpfSAke1xcbiAgICAgICAgaW5mby5tb25leV9wY3RcXG4gICAgICB9JWBcXG4gICAgKTtcXG4gICAgbnMudHByaW50KGAgIHNlYyAgOiAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufSAke2luZm8uc2VjX3BjdH0lYCk7XFxuICB9KTtcXG59XCIsXCJmaWxlbmFtZVwiOlwic3J2LXN0YXRzLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYWVhNDJlOWItZmVmNC00MDE5LWE4ZDUtOTQ1MGEzZjExNzRhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjExNzV9LHtcImZpbGVuYW1lXCI6XCJzcnYtc3RhdHMuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2VlNzcxYTQ2LTE5NWEtNGFjMS1hZjI1LTgzZjliYTdiOTAyN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzc1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuMjUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjUzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGxldCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgbnMudHByaW50KFxcXCJmYXJtaW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIGNvbnN0IG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgMjtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGlmIChucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCkge1xcbiAgICAgIGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICB9IGVsc2UgaWYgKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCkge1xcbiAgICAgIGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBucy5wcmludChcXFwic2VydmVyIFxcXCIgKyB0YXJnZXQgKyBcXFwiaXMgZnVsbCBhbmQgd2Vha1xcXCIpO1xcbiAgICAgIGF3YWl0IG5zLnNsZWVwKDEwMDApO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hMGUxYzU0ZC1mODJhLTQ0YzItYmQ1Ni05MjdhYmNjMDMxYTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjYxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuMyxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTgzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzcnZfaW5mbyB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwid2F0Y2hpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgaW5mbyA9IHNydl9pbmZvKG5zLCB0YXJnZXQpO1xcbiAgICBucy50cHJpbnQoXFxcIndhdGNoaW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIG1vbmV5OiAke2luZm8ubW9uZXlfY3Vycn0vJHtpbmZvLm1vbmV5X21heH0gJHtpbmZvLm1vbmV5X3BjdH0lYFxcbiAgICApO1xcbiAgICBucy50cHJpbnQoYCAgc2VjICA6ICR7aW5mby5zZWNfY3Vycn0vJHtpbmZvLnNlY19tYXh9ICR7aW5mby5zZWNfcGN0fSVgKTtcXG4gICAgYXdhaXQgbnMuc2xlZXAoMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcIndhdGNoLXNydi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2NlNTNmOTNjLWQ5YTQtNDExYy04YWY1LTk0ZWM2ODExYTU4N1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNDcyM30se1wiZmlsZW5hbWVcIjpcIndhdGNoLXNydi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNjM2YzIyYTgtMzAyYS00NWQ1LTgzNzEtODNlZGNiMzdjN2NmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE1MTM1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI1MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc29ydGVkX3RhcmdldHMsIHNydl9tb25leSwgcGVyY2VudGFnZSwgZm10IH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIC8vcmFuZG9tIGJhY2tvZmZcXG4gIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAwKSk7XFxuXFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICAvL3JhbmRvbSBiYWNrb2ZmXFxuICAgIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwMDApKTtcXG5cXG4gICAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpXFxuICAgICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgICAgLi4uc3J2LFxcbiAgICAgICAgLi4uc3J2X21vbmV5KG5zLCBzcnYubmFtZSksXFxuICAgICAgfSkpXFxuICAgICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9jdXJyIDwgaW5mby5tb25leV9tYXgpXFxuICAgICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgICBucy5wcmludChcXG4gICAgICBgdG9wIHRhcmdldHM6ICR7b3V0cHV0XFxuICAgICAgICAubWFwKFxcbiAgICAgICAgICAoaW5mbykgPT4gYCR7aW5mby5uYW1lfSAke2ZtdChpbmZvLm1vbmV5X21heCl9JCAke2luZm8ubW9uZXlfcGN0fSVgXFxuICAgICAgICApXFxuICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuXFxuICAgIGlmIChvdXRwdXQubGVuZ3RoID4gMCkge1xcbiAgICAgIGNvbnN0IGluZm8gPSBvdXRwdXRbMF07XFxuICAgICAgbnMucHJpbnQoYFRhcmdldCAke2luZm8ubmFtZX06YCk7XFxuICAgICAgbnMucHJpbnQoXFxuICAgICAgICBgICBiZWZvcmUgbW9uZXk6ICR7Zm10KGluZm8ubW9uZXlfY3Vycil9LyR7Zm10KGluZm8ubW9uZXlfbWF4KX0gJHtcXG4gICAgICAgICAgaW5mby5tb25leV9wY3RcXG4gICAgICAgIH0lYFxcbiAgICAgICk7XFxuICAgICAgY29uc3QgYW1vdW50ID0gYXdhaXQgbnMuZ3JvdyhpbmZvLm5hbWUpO1xcbiAgICAgIGNvbnN0IGFmdGVyID0gc3J2X21vbmV5KG5zLCBpbmZvLm5hbWUpO1xcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYCAgYWZ0ZXIgbW9uZXk6ICR7Zm10KGFmdGVyLm1vbmV5X2N1cnIpfS8ke2ZtdChhZnRlci5tb25leV9tYXgpfSAke1xcbiAgICAgICAgICBhZnRlci5tb25leV9wY3RcXG4gICAgICAgIH0lIChyYWlzZWQgJHtwZXJjZW50YWdlKGluZm8ubW9uZXlfY3VyciwgYWZ0ZXIubW9uZXlfY3Vycil9JSlgXFxuICAgICAgKTtcXG4gICAgICBucy50cHJpbnQoXFxuICAgICAgICBgZ3Jvd24gJHtpbmZvLm5hbWV9IHRvICR7Zm10KGFmdGVyLm1vbmV5X2N1cnIpfSQgLyAke2ZtdChcXG4gICAgICAgICAgaW5mby5tb25leV9tYXhcXG4gICAgICAgICl9JCAgJHthZnRlci5tb25leV9wY3R9JSAoKyAke3BlcmNlbnRhZ2UoYW1vdW50LCBpbmZvLm1vbmV5X2N1cnIpfSUpYFxcbiAgICAgICk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbnMucHJpbnQoXFxcIm5vIG1vcmUgdGFnZXRzIGF2YWlsYWJsZVxcXCIpO1xcbiAgICB9XFxuICAgIGF3YWl0IG5zLnNsZWVwKDEwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctdG9wLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vODU3Njk4MDYtM2VmNC00N2I4LWEwNDgtZGJjNjU0M2NkNDQyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjEzODg0M30se1wiZmlsZW5hbWVcIjpcImdyb3ctdG9wLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84Yjg0ZGNmMS0yODQ2LTRlMGEtYjYwYi1mYTg2YmVjNzFmMGNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTM5MDA0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTk1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHtcXG4gIHNvcnRlZF90YXJnZXRzLFxcbiAgc3J2X3NlYyxcXG4gIHBlcmNlbnRhZ2UsXFxuICBmbXQsXFxuICBzcnZfbW9uZXksXFxufSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgLy9yYW5kb20gYmFja29mZlxcbiAgYXdhaXQgbnMuc2xlZXAoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDApKTtcXG5cXG4gIGxldCBoYXZlVGFyZ2V0ID0gZmFsc2U7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICAvL3JhbmRvbSBiYWNrb2ZmXFxuICAgIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwMDApKTtcXG5cXG4gICAgY29uc3QgaW5mb3MgPSBzb3J0ZWRfdGFyZ2V0cyhucykubWFwKChzcnYpID0+ICh7XFxuICAgICAgLi4uc3J2LFxcbiAgICAgIC4uLnNydl9zZWMobnMsIHNydi5uYW1lKSxcXG4gICAgICAuLi5zcnZfbW9uZXkobnMsIHNydi5uYW1lKSxcXG4gICAgfSkpO1xcbiAgICAvLyAgICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gICAgLy9ucy50cHJpbnQoYGluZm86ICR7aW5mb3MubWFwKChpbmZvKSA9PiBpbmZvLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YCk7XFxuXFxuICAgIGNvbnN0IG91dHB1dF9zID0gaW5mb3NcXG4gICAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X2N1cnIgIT0gMClcXG4gICAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X2N1cnIgPj0gMC4yNSAqIGluZm8ubW9uZXlfbWF4KVxcbiAgICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8uc2VjX2N1cnIgPD0gaW5mby5zZWNfbWluICsgMik7IC8vIG9ubHkgd2l0aCByZWFzb25hYmx5IHdlYWsgc2VjdXJpdHlcXG5cXG4gICAgbnMucHJpbnQoXFxuICAgICAgYGxvdy1zZWMgdGFyZ2V0czogJHtvdXRwdXRfc1xcbiAgICAgICAgLm1hcChcXG4gICAgICAgICAgKGluZm8pID0+XFxuICAgICAgICAgICAgYCR7aW5mby5uYW1lfSAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufSwgJHtmbXQoXFxuICAgICAgICAgICAgICBpbmZvLm1vbmV5X2N1cnJcXG4gICAgICAgICAgICApfSQvJHtmbXQoaW5mby5tb25leV9tYXgpfSRgXFxuICAgICAgICApXFxuICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuXFxuICAgIGNvbnN0IG91dHB1dCA9IG91dHB1dF9zLmZpbHRlcihcXG4gICAgICAoaW5mbykgPT4gaW5mby5tb25leV9jdXJyID49IGluZm8ubW9uZXlfbWF4ICogMC41XFxuICAgICk7IC8vIG9ubHkgd2l0aCBkZWNlbnQgbW9uZXlcXG5cXG4gICAgbnMucHJpbnQoXFxuICAgICAgYHRvcCB0YXJnZXRzOiAke291dHB1dFxcbiAgICAgICAgLm1hcCgoaW5mbykgPT4gYCR7aW5mby5uYW1lfSAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufWApXFxuICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuXFxuICAgIGlmIChvdXRwdXQubGVuZ3RoID4gMCkge1xcbiAgICAgIGhhdmVUYXJnZXQgPSB0cnVlO1xcbiAgICAgIGNvbnN0IGluZm8gPSBvdXRwdXRbMF07XFxuICAgICAgbnMucHJpbnQoYFRhcmdldCAke2luZm8ubmFtZX06YCk7XFxuICAgICAgY29uc3QgcHJlTW9uZXkgPSBpbmZvLm1vbmV5X2N1cnI7XFxuICAgICAgbnMucHJpbnQoXFxuICAgICAgICBgICBiZWZvcmUgaGFjayBzZWM6ICR7aW5mby5zZWNfY3Vycn0vJHtpbmZvLnNlY19taW59ICR7XFxuICAgICAgICAgIGluZm8uc2VjX3BjdFxcbiAgICAgICAgfSUsIG1vbmV5OiAke2ZtdChwcmVNb25leSl9YFxcbiAgICAgICk7XFxuICAgICAgY29uc3QgbG9vdCA9IGF3YWl0IG5zLmhhY2soaW5mby5uYW1lKTtcXG4gICAgICBjb25zdCBwb3N0TW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShpbmZvLm5hbWUpO1xcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYCAgYWZ0ZXIgaGFjayBzZWM6ICAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufSAke1xcbiAgICAgICAgICBpbmZvLnNlY19wY3RcXG4gICAgICAgIH0lLCBtb25leTogJHtmbXQocG9zdE1vbmV5KX0sIGdvdCAke3BlcmNlbnRhZ2UobG9vdCwgcHJlTW9uZXkpfSVgXFxuICAgICAgKTtcXG4gICAgICBucy5wcmludChcXG4gICAgICAgIGBIYWNrZWQgJHtpbmZvLm5hbWV9OiBnb3QgJHtmbXQobG9vdCl9ICgke3BlcmNlbnRhZ2UoXFxuICAgICAgICAgIGxvb3QsXFxuICAgICAgICAgIHByZU1vbmV5XFxuICAgICAgICApfSUpLCBub3cgYXQgc2VjICR7aW5mby5zZWNfY3Vyci50b0ZpeGVkKDIpfS8ke2luZm8uc2VjX21pbn0gKCR7XFxuICAgICAgICAgIGluZm8uc2VjX3BjdFxcbiAgICAgICAgfSUpYFxcbiAgICAgICk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgaWYgKGhhdmVUYXJnZXQpIHtcXG4gICAgICAgIG5zLnByaW50KFxcXCJubyBtb3JlIHRhZ2V0cyBhdmFpbGFibGVcXFwiKTtcXG4gICAgICAgIGhhdmVUYXJnZXQgPSBmYWxzZTtcXG4gICAgICB9XFxuICAgIH1cXG4gICAgYXdhaXQgbnMuc2xlZXAoMSk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stdG9wLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZDc5MGI2MzQtZTA0NC00ZWJhLTgwOGMtMzJmNDMwOGMzZTU1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE5OTk5NH0se1wiZmlsZW5hbWVcIjpcImhhY2stdG9wLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9jYzUzZTU0My0xMmE1LTQ1ZDktOWJkOC05YWVhNzk0YjM1ODFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjA0NzY2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIwMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IHNvcnRlZF90YXJnZXRzLCBzcnZfc2VjIH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIC8vcmFuZG9tIGJhY2tvZmZcXG4gIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAwKSk7XFxuXFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICAvL3JhbmRvbSBiYWNrb2ZmXFxuICAgIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwMDApKTtcXG5cXG4gICAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpXFxuICAgICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgICAgLi4uc3J2LFxcbiAgICAgICAgLi4uc3J2X3NlYyhucywgc3J2Lm5hbWUpLFxcbiAgICAgIH0pKVxcbiAgICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8uc2VjX2N1cnIgPiBpbmZvLnNlY19taW4gKyAxKTtcXG4gICAgLy8uZmlsdGVyKChpbmZvKSA9PiBpbmZvLm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICAgIG5zLnByaW50KFxcbiAgICAgIGB0b3AgdGFyZ2V0czogJHtvdXRwdXRcXG4gICAgICAgIC5tYXAoKGluZm8pID0+IGAke2luZm8ubmFtZX0gJHtpbmZvLnNlY19jdXJyfS8ke2luZm8uc2VjX21pbn1gKVxcbiAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcblxcbiAgICBpZiAob3V0cHV0Lmxlbmd0aCA+IDApIHtcXG4gICAgICBjb25zdCBpbmZvID0gb3V0cHV0WzBdO1xcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYFRhcmdldCAke2luZm8ubmFtZX0sIGJlZm9yZTogJHtpbmZvLnNlY19jdXJyfS8ke2luZm8uc2VjX21pbn0gJHtpbmZvLnNlY19wY3R9JWBcXG4gICAgICApO1xcbiAgICAgIGF3YWl0IG5zLndlYWtlbihpbmZvLm5hbWUpO1xcbiAgICAgIGNvbnN0IHBvc3QgPSBzcnZfc2VjKG5zLCBpbmZvLm5hbWUpO1xcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYCAgYWZ0ZXIgc2VjOiAke3Bvc3Quc2VjX2N1cnJ9LyR7cG9zdC5zZWNfbWlufSAke3Bvc3Quc2VjX3BjdH0lYFxcbiAgICAgICk7XFxuICAgICAgbnMudHByaW50KFxcbiAgICAgICAgYHdlYWtlbmVkICR7aW5mby5uYW1lfTogJHsrcG9zdC5zZWNfY3Vyci50b0ZpeGVkKDIpfS8ke1xcbiAgICAgICAgICBwb3N0LnNlY19taW5cXG4gICAgICAgIH0sIG5vdyBhdCAke3Bvc3Quc2VjX3BjdH0lYFxcbiAgICAgICk7XFxuICAgIH1cXG4gICAgYXdhaXQgbnMuc2xlZXAoMTAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLXRvcC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2YzYmVjMzE2LWUxOTYtNDZjZS04ZGYwLTBlODYxNDk5ZjNlMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNzk2NDh9LHtcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tdG9wLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy80NTY4OGRiMi04MzNmLTQzOGYtODhlMS0wMjg3YzY4ZjcwMDRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzgwMjAyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjU3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7XFxuICBzb3J0ZWRfdGFyZ2V0cyxcXG4gIGJlc3RfdGFyZ2V0LFxcbiAgc3J2X2luZm8sXFxuICBmbXQsXFxuICB0Zm10LFxcbn0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5tYXAoKHNydikgPT4gKHtcXG4gICAgLi4uc3J2LFxcbiAgICAuLi5zcnZfaW5mbyhucywgc3J2Lm5hbWUpLFxcbiAgfSkpO1xcblxcbiAgb3V0cHV0LnJldmVyc2UoKS5mb3JFYWNoKChpbmZvKSA9PiB7XFxuICAgIG5zLnRwcmludChgVGFyZ2V0ICR7aW5mby5uYW1lfTpgKTtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIG1vbmV5OiAke2ZtdChpbmZvLm1vbmV5X2N1cnIpfS8ke2ZtdChpbmZvLm1vbmV5X21heCl9ICR7XFxuICAgICAgICBpbmZvLm1vbmV5X3BjdFxcbiAgICAgIH0lYFxcbiAgICApO1xcbiAgICBucy50cHJpbnQoYCAgc2VjICA6ICR7aW5mby5zZWNfY3Vycn0vJHtpbmZvLnNlY19taW59ICR7aW5mby5zZWNfcGN0fSVgKTtcXG4gICAgbnMudHByaW50KGAgIHNjb3JlOiAke2ZtdChpbmZvLnNjb3JlKX1gKTtcXG4gICAgbnMudHByaW50KGAgIGdyb3d0aDogJHtmbXQoaW5mby5ncm93dGgpfWApO1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgdGltZXM6IGdyb3cgJHt0Zm10KG5zLmdldEdyb3dUaW1lKGluZm8ubmFtZSkpfSB3ZWFrICR7dGZtdChcXG4gICAgICAgIG5zLmdldFdlYWtlblRpbWUoaW5mby5uYW1lKVxcbiAgICAgICl9IGhhY2sgJHt0Zm10KG5zLmdldEhhY2tUaW1lKGluZm8ubmFtZSkpfSBgXFxuICAgICk7XFxuICB9KTtcXG5cXG4gIG5zLnRwcmludChgYmVzdCB0YXJnZXQgaXMgJHtiZXN0X3RhcmdldChucykubmFtZX1gKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwidGFyZ2V0cy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82ZDgyMmZhZi05NjhmLTRjZDEtYWQ3NS02YmFhYzZlZWExNzRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIwOX0se1wiZmlsZW5hbWVcIjpcInRhcmdldHMuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzg2MGM3OTUxLTU3ZmMtNDc1MS04OWUxLTYyNmI1Yjk3ODAxOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQxM31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MTMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRHcm93VGltZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRXZWFrZW5UaW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEhhY2tUaW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc2NhbiB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgY29uc3QgbmV0ID0gc2Nhbihucyk7XFxuICBjb25zdCBzcnZzID0gbmV0LmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpO1xcbiAgbnMudHByaW50ZihgZ290ICR7c3J2cy5sZW5ndGh9IHB3bmQtc2VydmVycywgb3V0IG9mICR7bmV0Lmxlbmd0aH1gKTtcXG4gIG5zLnRwcmludGYoXFxcImF0dGFja2luZyBcXFwiICsgdGFyZ2V0IHx8IFxcXCIgdG9wIGdyb3dpbmcgc2VydmVyc1xcXCIpO1xcblxcbiAgY29uc3QgZXhjbHVkZSA9IFtcXFwiaG9tZVxcXCJdO1xcblxcbiAgLy8gZXhjbHVkaW5nIGhvbWVcXG4gIGlmIChucy5maWxlRXhpc3RzKFxcXCJzbGF2ZS1ob3N0LmpzXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcbiAgICBjb25zdCB0YXJnZXRzID0gc3J2cy5maWx0ZXIoKHNydikgPT4gIWV4Y2x1ZGUuaW5jbHVkZXMoc3J2KSk7XFxuICAgIC8vIG5zLnRwcmludChcXFwidGFyZ2V0czogXFxcIiArIHRhcmdldHMuam9pbihcXFwiLFxcXCIpKTtcXG4gICAgZm9yIChsZXQgc3J2IG9mIHRhcmdldHMpIHtcXG4gICAgICBucy5ydW4oXFxcInNsYXZlLWhvc3QuanNcXFwiLCAxLCBzcnYsIHRhcmdldCk7XFxuICAgICAgYXdhaXQgbnMuc2xlZXAoMjApO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcInNsYXZlLW5ldC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzFmYWEzNDRmLWJmOWMtNDBkYi1iYTE3LWNjYzcwOTc4MzU1OFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyNDl9LHtcImZpbGVuYW1lXCI6XCJzbGF2ZS1uZXQuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzU4ODhhZjIwLTA5ODMtNDUzNi04ZmQzLTc0MjBmOTdhNDc0MFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzAwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuOTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI0NSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImZpbGVFeGlzdHNcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJydW5cIixcImNvc3RcIjoxfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzY2FuIH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuXFxuICBjb25zdCBzY3JpcHRXZWFrZW4gPSBcXFwibG9vcC13ZWFrZW4uanNcXFwiO1xcbiAgY29uc3Qgc2NyaXB0R3JvdyA9IFxcXCJsb29wLWdyb3cuanNcXFwiO1xcbiAgY29uc3Qgc2NyaXB0SGFjayA9IFxcXCJsb29wLWhhY2suanNcXFwiO1xcblxcbiAgLyogbnMudHByaW50KFxcbiAgICBgdGFyZ2V0ICR7dGFyZ2V0fSwgc2NyaXB0czogJHtzY3JpcHRXZWFrZW59LCR7c2NyaXB0R3Jvd30sJHtzY3JpcHRIYWNrfWBcXG4gICk7Ki9cXG5cXG4gIGNvbnN0IHNydiA9IFxcXCJob21lXFxcIjtcXG4gIGNvbnN0IHNpemVXZWFrZW4gPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0V2Vha2VuKTtcXG4gIGNvbnN0IHNpemVHcm93ID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdEdyb3cpO1xcbiAgY29uc3Qgc2l6ZUhhY2sgPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0SGFjayk7XFxuXFxuICBjb25zdCBzaXplID0gc2l6ZVdlYWtlbjsgLy9hbGwgaGF2ZSBzYW1lIHNpemVcXG5cXG4gIGNvbnN0IHBhcnRHcm93ID0gMC44O1xcbiAgY29uc3QgcGFydFdlYWtlbiA9IDAuMTtcXG5cXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShzcnYpO1xcbiAgY29uc3Qgc3J2VGhyZWFkcyA9IHNydlJhbSAvIHNpemU7XFxuXFxuICBjb25zdCBjb3VudFdlYWtlbiA9IHNydlRocmVhZHMgKiBwYXJ0V2Vha2VuO1xcbiAgY29uc3QgY291bnRHcm93ID0gc3J2VGhyZWFkcyAqIHBhcnRHcm93O1xcbiAgbGV0IGNvdW50SGFjayA9IHNydlRocmVhZHMgLSBjb3VudEdyb3cgLSBjb3VudFdlYWtlbjtcXG5cXG4gIG5zLnRwcmludChcXG4gICAgYHNlcnZlciAke3Nydn0gKCR7c3J2UmFtfSBHQik6ICR7TWF0aC5mbG9vcihcXG4gICAgICBjb3VudFdlYWtlblxcbiAgICApfSB3ZWFrZW4gLyAke01hdGguZmxvb3IoY291bnRHcm93KX0gZ3JvdyAvICR7TWF0aC5mbG9vcihcXG4gICAgICBjb3VudEhhY2tcXG4gICAgKX0gaGFjayB0aHJlYWRzYFxcbiAgKTtcXG5cXG4gIGlmIChjb3VudFdlYWtlbiA+IDApIG5zLnJ1bihzY3JpcHRXZWFrZW4sIGNvdW50V2Vha2VuLCB0YXJnZXQpO1xcbiAgaWYgKGNvdW50R3JvdyA+IDApIG5zLnJ1bihzY3JpcHRHcm93LCBjb3VudEdyb3csIHRhcmdldCk7XFxuICBpZiAoY291bnRIYWNrID4gMCkgbnMucnVuKHNjcmlwdEhhY2ssIGNvdW50SGFjaywgdGFyZ2V0KTtcXG59XCIsXCJmaWxlbmFtZVwiOlwic2xhdmUtaG9tZS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzMxOWE3Y2JmLTNiODktNDkyMC1hMTJlLTg3OTAzNGE0NjdiN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyNDl9LHtcImZpbGVuYW1lXCI6XCJzbGF2ZS1ob21lLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kZmQyYzExYy1jN2EwLTQxNzYtOTFmYS02ZDFlNzIwZWI2NTNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcwMX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjgsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI0MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJVc2VkUmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInJ1blwiLFwiY29zdFwiOjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IHNjYW4gfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbmNvbnN0IHNjcmlwdFdlYWtlbiA9IFxcXCJ3ZWFrZW4tdG9wLmpzXFxcIjtcXG5jb25zdCBzY3JpcHRHcm93ID0gXFxcImdyb3ctdG9wLmpzXFxcIjtcXG5jb25zdCBzY3JpcHRIYWNrID0gXFxcImhhY2stdG9wLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHNpemVXZWFrZW4gPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0V2Vha2VuKTtcXG4gIGNvbnN0IHNpemVHcm93ID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdEdyb3cpO1xcbiAgY29uc3Qgc2l6ZUhhY2sgPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0SGFjayk7XFxuICBjb25zdCBwYXJ0R3JvdyA9IChucy5hcmdzWzBdIHx8IDQwKSAvIDEwMDtcXG4gIGNvbnN0IHBhcnRXZWFrZW4gPSAxLjAgLSBwYXJ0R3JvdztcXG4gIGNvbnN0IGhhY2tGYWN0b3IgPSAwLjI7XFxuXFxuICBjb25zdCBzcnYgPSBucy5nZXRIb3N0TmFtZSgpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCBjb3VudFdlYWtlbiA9IE1hdGguZmxvb3IoXFxuICAgIChzcnZSYW0gKiAoMS4wIC0gaGFja0ZhY3RvcikgKiBwYXJ0V2Vha2VuKSAvIHNpemVXZWFrZW5cXG4gICk7XFxuICBjb25zdCBjb3VudEdyb3cgPSBNYXRoLmZsb29yKFxcbiAgICAoc3J2UmFtICogKDEuMCAtIGhhY2tGYWN0b3IpICogcGFydEdyb3cpIC8gc2l6ZUdyb3dcXG4gICk7XFxuICBjb25zdCBjb3VudEhhY2sgPSBNYXRoLmZsb29yKChzcnZSYW0gKiBoYWNrRmFjdG9yKSAvIHNpemVIYWNrKTtcXG5cXG4gIG5zLnRwcmludChcXG4gICAgYHNlcnZlciAke3Nydn0gKCR7c3J2UmFtfSBHQik6ICR7Y291bnRXZWFrZW59IHdlYWtlbiAvICR7Y291bnRHcm93fSBncm93IC8gJHtjb3VudEhhY2t9IGhhY2sgdGhyZWFkc2BcXG4gICk7XFxuXFxuICBpZiAoY291bnRXZWFrZW4gPiAwKSBucy5ydW4oc2NyaXB0V2Vha2VuLCBjb3VudFdlYWtlbik7XFxuICBpZiAoY291bnRHcm93ID4gMCkgbnMucnVuKHNjcmlwdEdyb3csIHNydiwgY291bnRHcm93KTtcXG4gIGlmIChjb3VudEhhY2sgPiAwKSBucy5zcGF3bihzY3JpcHRIYWNrLCBzcnYsIGNvdW50SGFjayk7XFxufVwiLFwiZmlsZW5hbWVcIjpcInNsYXZlLXNlbGYuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuNzUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI0NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJydW5cIixcImNvc3RcIjoxfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic3Bhd25cIixcImNvc3RcIjoyfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzZWFyY2ggfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbmV4cG9ydCBmdW5jdGlvbiBjb25uZWN0KHBhdGgpIHtcXG4gIGNvbnN0IGRvYyA9IGV2YWwoXFxcImRvY3VtZW50XFxcIik7XFxuICBjb25zdCB0ZXJtaW5hbElucHV0ID0gZG9jLmdldEVsZW1lbnRCeUlkKFxcXCJ0ZXJtaW5hbC1pbnB1dFxcXCIpO1xcbiAgdGVybWluYWxJbnB1dC52YWx1ZSA9IGBob21lOyR7cGF0aH1gO1xcbiAgY29uc3QgaGFuZGxlciA9IE9iamVjdC5rZXlzKHRlcm1pbmFsSW5wdXQpWzFdO1xcbiAgdGVybWluYWxJbnB1dFtoYW5kbGVyXS5vbkNoYW5nZSh7IHRhcmdldDogdGVybWluYWxJbnB1dCB9KTtcXG4gIHRlcm1pbmFsSW5wdXRbaGFuZGxlcl0ub25LZXlEb3duKHsga2V5Q29kZTogMTMsIHByZXZlbnREZWZhdWx0OiAoKSA9PiBudWxsIH0pO1xcbn1cXG5cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGNvbnN0IHBhdGggPSBzZWFyY2gobnMsIHRhcmdldCk7XFxuICBpZiAocGF0aCAmJiBwYXRoLmxlbmd0aCA+IDAgJiYgcGF0aFswXSA9PSBcXFwiaG9tZVxcXCIpIHtcXG4gICAgcGF0aC5zaGlmdCgpO1xcbiAgfVxcbiAgaWYgKHBhdGgpIHtcXG4gICAgY29uc3QgY29ubmVjdFN0ciA9IFxcXCJjb25uZWN0IFxcXCIgKyBwYXRoLmpvaW4oXFxcIjsgY29ubmVjdCBcXFwiKTtcXG4gICAgY29ubmVjdChjb25uZWN0U3RyKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIGF1dG9jb21wbGV0ZShkYXRhLCBhcmdzKSB7XFxuICByZXR1cm4gWy4uLmRhdGEuc2VydmVyc107XFxufVwiLFwiZmlsZW5hbWVcIjpcInJvdXRlLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOTE5ZTc2YmItMmVkNC00MWIzLThmYmItOTE4N2NjMGVlZDBhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE0NDY3fSx7XCJmaWxlbmFtZVwiOlwicm91dGUuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2FiN2M2ZDFmLWJhZmQtNDFiYi1iM2EzLTUzZTVjZWZjNmMzZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNTQ5NH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIyNyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImNvbm5lY3RcIixcImNvc3RcIjoyfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc2NhbiB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCBzcnYgPSBucy5hcmdzWzBdO1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1sxXTtcXG5cXG4gIGNvbnN0IHNjcmlwdFdlYWtlbiA9ICF0YXJnZXQgPyBcXFwid2Vha2VuLXRvcC5qc1xcXCIgOiBcXFwibG9vcC13ZWFrZW4uanNcXFwiO1xcbiAgY29uc3Qgc2NyaXB0R3JvdyA9ICF0YXJnZXQgPyBcXFwiZ3Jvdy10b3AuanNcXFwiIDogXFxcImxvb3AtZ3Jvdy5qc1xcXCI7XFxuICBjb25zdCBzY3JpcHRIYWNrID0gIXRhcmdldCA/IFxcXCJoYWNrLXRvcC5qc1xcXCIgOiBcXFwibG9vcC1oYWNrLmpzXFxcIjtcXG5cXG4gIG5zLnRwcmludChcXG4gICAgYGhvc3QgJHtzcnZ9LCB0YXJnZXQgJHt0YXJnZXR9LCBzY3JpcHRzOiAke3NjcmlwdFdlYWtlbn0sJHtzY3JpcHRHcm93fSwke3NjcmlwdEhhY2t9YFxcbiAgKTtcXG5cXG4gIGNvbnN0IHNpemVXZWFrZW4gPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0V2Vha2VuKTtcXG4gIGNvbnN0IHNpemVHcm93ID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdEdyb3cpO1xcbiAgY29uc3Qgc2l6ZUhhY2sgPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0SGFjayk7XFxuXFxuICBjb25zdCBzaXplID0gc2l6ZVdlYWtlbjsgLy9hbGwgaGF2ZSBzYW1lIHNpemVcXG5cXG4gIGNvbnN0IHBhcnRHcm93ID0gMC44O1xcbiAgY29uc3QgcGFydFdlYWtlbiA9IDAuMTtcXG5cXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcbiAgY29uc3Qgc3J2VGhyZWFkcyA9IHNydlJhbSAvIHNpemU7XFxuXFxuICBjb25zdCBjb3VudFdlYWtlbiA9IHNydlRocmVhZHMgKiBwYXJ0V2Vha2VuO1xcbiAgY29uc3QgY291bnRHcm93ID0gc3J2VGhyZWFkcyAqIHBhcnRHcm93O1xcbiAgbGV0IGNvdW50SGFjayA9IHNydlRocmVhZHMgLSBjb3VudEdyb3cgLSBjb3VudFdlYWtlbjtcXG5cXG4gIG5zLnRwcmludChcXG4gICAgYHNlcnZlciAke3Nydn0gKCR7c3J2UmFtfSBHQik6ICR7TWF0aC5mbG9vcihcXG4gICAgICBjb3VudFdlYWtlblxcbiAgICApfSB3ZWFrZW4gLyAke01hdGguZmxvb3IoY291bnRHcm93KX0gZ3JvdyAvICR7TWF0aC5mbG9vcihcXG4gICAgICBjb3VudEhhY2tcXG4gICAgKX0gaGFjayB0aHJlYWRzYFxcbiAgKTtcXG5cXG4gIGF3YWl0IG5zLnNjcChcXFwiaGFja2VyLWxpYi5qc1xcXCIsIHNydik7XFxuICBhd2FpdCBucy5zY3Aoc2NyaXB0V2Vha2VuLCBzcnYpO1xcbiAgYXdhaXQgbnMuc2NwKHNjcmlwdEdyb3csIHNydik7XFxuICBhd2FpdCBucy5zY3Aoc2NyaXB0SGFjaywgc3J2KTtcXG4gIGF3YWl0IG5zLnNjcChcXFwid2Vha2VuLWFmdGVyLmpzXFxcIiwgXFxcImhvbWVcXFwiLCBzcnYpO1xcbiAgYXdhaXQgbnMuc2NwKFxcXCJncm93LWFmdGVyLmpzXFxcIiwgXFxcImhvbWVcXFwiLCBzcnYpO1xcbiAgYXdhaXQgbnMuc2NwKFxcXCJoYWNrLWFmdGVyLmpzXFxcIiwgXFxcImhvbWVcXFwiLCBzcnYpO1xcbiAgbnMua2lsbGFsbChzcnYpO1xcblxcbiAgaWYgKGNvdW50V2Vha2VuID4gMCkgbnMuZXhlYyhzY3JpcHRXZWFrZW4sIHNydiwgY291bnRXZWFrZW4sIHRhcmdldCk7XFxuICBpZiAoY291bnRHcm93ID4gMCkgbnMuZXhlYyhzY3JpcHRHcm93LCBzcnYsIGNvdW50R3JvdywgdGFyZ2V0KTtcXG4gIGlmIChjb3VudEhhY2sgPiAwKSBucy5leGVjKHNjcmlwdEhhY2ssIHNydiwgY291bnRIYWNrLCB0YXJnZXQpO1xcbiAgbnMudHByaW50KFxcXCJkb25lIHNsYXZpbmcgXFxcIiArIHNydik7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGUoZGF0YSwgYXJncykge1xcbiAgcmV0dXJuIFsuLi5kYXRhLnNlcnZlcnNdO1xcbn1cIixcImZpbGVuYW1lXCI6XCJzbGF2ZS1ob3N0LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RiZjk3MDZkLTBhNDYtNGJjNS05ZTRlLTNiY2M1ZTFiYWNmN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjA5fSx7XCJmaWxlbmFtZVwiOlwic2xhdmUtaG9zdC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNTYwNDYyMDUtYTZkYS00YzA4LWIyYzQtODdkNGM1MjUyM2IxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzQzfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuMTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNDMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NwXCIsXCJjb3N0XCI6MC42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwia2lsbGFsbFwiLFwiY29zdFwiOjAuNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdGNvbnN0IHBzcnZzID0gbnMuZ2V0UHVyY2hhc2VkU2VydmVycygpXFxuXFx0Zm9yIChsZXQgc3J2IG9mIHBzcnZzKSB7XFxuXFx0XFx0bnMucnVuKFxcXCJydW4tbWF4LmpzXFxcIiwgMSwgc3J2LCBcXFwid2Vha2VuLXRvcC5qc1xcXCIpXFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJ5b3VyYWxsd2Vhay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcInlvdXJhbGx3ZWFrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zMmQ0MWFkMi01ODk0LTQ1MWItYTY0MS1jZjg5YWRjZDY3YTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTQ2MDE0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuODUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjY1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0UHVyY2hhc2VkU2VydmVyc1wiLFwiY29zdFwiOjIuMjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJydW5cIixcImNvc3RcIjoxfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy81MTRmZGFiMy1mZGZmLTRlMDctYjY3NC03NjgzZWUwNmM2ZWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcwM31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkyMTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNzg2MmM0YjYtNWM0OC00NDFjLWFhMDUtZWEzYjM3YThlNjQ0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MDR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjExLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IHNjYW4gfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKlxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldFNjcmlwdCA9IG5zLmFyZ3Muc2hpZnQoKTtcXG4gIGNvbnN0IHRhcmdldEFyZ3MgPSBucy5hcmdzO1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcblxcbiAgZm9yIChjb25zdCBzcnYgb2YgbnMuZ2V0UHVyY2hhc2VkU2VydmVycygpKSB7XFxuICAgIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcbiAgICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gICAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgICAgYXdhaXQgbnMuc2NwKHRhcmdldFNjcmlwdCwgc3J2KTtcXG4gICAgICBucy5raWxsYWxsKHNydik7XFxuICAgICAgbnMudHByaW50KFxcbiAgICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgICApO1xcbiAgICAgIGF3YWl0IG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgICB9XFxuICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGUoZGF0YSwgYXJncykge1xcbiAgcmV0dXJuIFsuLi5kYXRhLnNjcmlwdHNdO1xcbn1cIixcImZpbGVuYW1lXCI6XCJydW4tbWF4LXBzZXJ2cy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzRkZDE3NGNkLTBhYzItNDc3Yi1hOGY4LWI1YWU3OTVjMWMxMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo3MjM2Nn0se1wiZmlsZW5hbWVcIjpcInJ1bi1tYXgtcHNlcnZzLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lNDMyMmQwNy0zNzg5LTQ3NzEtYTA2ZS1kNjVlMzhkYThkNzZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTA4MjczfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjYuNCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjMxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0UHVyY2hhc2VkU2VydmVyc1wiLFwiY29zdFwiOjIuMjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NwXCIsXCJjb3N0XCI6MC42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwia2lsbGFsbFwiLFwiY29zdFwiOjAuNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgIGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuICAgIGNvbnN0IHNlcnZlciA9IG5zLmFyZ3NbMF07XFxuICAgIGlmIChhcmdzLmhlbHAgfHwgIXNlcnZlcikge1xcbiAgICAgICAgbnMudHByaW50KFxcXCJUaGlzIHNjcmlwdCBkb2VzIGEgbW9yZSBkZXRhaWxlZCBhbmFseXNpcyBvZiBhIHNlcnZlci5cXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgVXNhZ2U6IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX0gU0VSVkVSYCk7XFxuICAgICAgICBucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYD4gcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBuMDBkbGVzYCk7XFxuICAgICAgICByZXR1cm47XFxuICAgIH1cXG4gICAgY29uc3QgcmFtID0gbnMuZ2V0U2VydmVyUmFtKHNlcnZlcik7XFxuICAgIGNvbnN0IG1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoc2VydmVyKTtcXG4gICAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leShzZXJ2ZXIpO1xcbiAgICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNlcnZlcik7XFxuICAgIGNvbnN0IHNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwoc2VydmVyKTtcXG4gICAgbnMudHByaW50KGBcXG5cXG4ke3NlcnZlcn06XFxuICAgIFJBTSAgICAgICAgOiAke3JhbVsxXX0gLyAke3JhbVswXX0gKCR7cmFtWzFdIC8gcmFtWzBdICogMTAwfSUpXFxuICAgICQgICAgICAgICAgOiAke25zLm5Gb3JtYXQobW9uZXksIFxcXCIkMC4wMDBhXFxcIil9IC8gJHtucy5uRm9ybWF0KG1heE1vbmV5LCBcXFwiJDAuMDAwYVxcXCIpfSAoJHsobW9uZXkgLyBtYXhNb25leSAqIDEwMCkudG9GaXhlZCgyKX0lKVxcbiAgICBzZWN1cml0eSAgIDogJHttaW5TZWMudG9GaXhlZCgyKX0gLyAke3NlYy50b0ZpeGVkKDIpfVxcbiAgICBncm93dGggICAgIDogJHtucy5nZXRTZXJ2ZXJHcm93dGgoc2VydmVyKX1cXG4gICAgaGFjayB0aW1lICA6ICR7bnMudEZvcm1hdChucy5nZXRIYWNrVGltZShzZXJ2ZXIpKX1cXG4gICAgZ3JvdyB0aW1lICA6ICR7bnMudEZvcm1hdChucy5nZXRHcm93VGltZShzZXJ2ZXIpKX1cXG4gICAgd2Vha2VuIHRpbWU6ICR7bnMudEZvcm1hdChucy5nZXRXZWFrZW5UaW1lKHNlcnZlcikpfVxcbiAgICBncm93IHgyICAgIDogJHsobnMuZ3Jvd3RoQW5hbHl6ZShzZXJ2ZXIsIDIpKS50b0ZpeGVkKDIpfSB0aHJlYWRzXFxuICAgIGdyb3cgeDMgICAgOiAkeyhucy5ncm93dGhBbmFseXplKHNlcnZlciwgMykpLnRvRml4ZWQoMil9IHRocmVhZHNcXG4gICAgZ3JvdyB4NCAgICA6ICR7KG5zLmdyb3d0aEFuYWx5emUoc2VydmVyLCA0KSkudG9GaXhlZCgyKX0gdGhyZWFkc1xcbiAgICBoYWNrIDEwJSAgIDogJHsoLjEwIC8gbnMuaGFja0FuYWx5emUoc2VydmVyKSkudG9GaXhlZCgyKX0gdGhyZWFkc1xcbiAgICBoYWNrIDI1JSAgIDogJHsoLjI1IC8gbnMuaGFja0FuYWx5emUoc2VydmVyKSkudG9GaXhlZCgyKX0gdGhyZWFkc1xcbiAgICBoYWNrIDUwJSAgIDogJHsoLjUwIC8gbnMuaGFja0FuYWx5emUoc2VydmVyKSkudG9GaXhlZCgyKX0gdGhyZWFkc1xcbiAgICBoYWNrQ2hhbmNlIDogJHsobnMuaGFja0FuYWx5emVDaGFuY2Uoc2VydmVyKSAqIDEwMCkudG9GaXhlZCgyKX0lXFxuYCk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9vZmZpY2lhbC9hbmFseXplX3NlcnZlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIi9vZmZpY2lhbC9hbmFseXplX3NlcnZlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vY2Q3Y2E1OTgtYzE1Zi00YjBkLTg0M2EtZTQwMDA2MzdhNjk5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjY5MjU4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjUuMzUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjY5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyUmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0SGFja1RpbWVcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0R3Jvd1RpbWVcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0V2Vha2VuVGltZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93dGhBbmFseXplXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tBbmFseXplXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tBbmFseXplQ2hhbmNlXCIsXCJjb3N0XCI6MX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgZmxhZ3MgPSBucy5mbGFncyhbXFxuICAgIFtcXFwicmVmcmVzaHJhdGVcXFwiLCAyMDBdLFxcbiAgICBbXFxcImhlbHBcXFwiLCBmYWxzZV0sXFxuICBdKTtcXG4gIGlmIChmbGFncy5fLmxlbmd0aCA9PT0gMCB8fCBmbGFncy5oZWxwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBcXFwiVGhpcyBzY3JpcHQgaGVscHMgdmlzdWFsaXplIHRoZSBtb25leSBhbmQgc2VjdXJpdHkgb2YgYSBzZXJ2ZXIuXFxcIlxcbiAgICApO1xcbiAgICBucy50cHJpbnQoYFVTQUdFOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IFNFUlZFUl9OQU1FYCk7XFxuICAgIG5zLnRwcmludChcXFwiRXhhbXBsZTpcXFwiKTtcXG4gICAgbnMudHByaW50KGA+IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX0gbjAwZGxlc2ApO1xcbiAgICByZXR1cm47XFxuICB9XFxuICBucy50YWlsKCk7XFxuICBucy5kaXNhYmxlTG9nKFxcXCJBTExcXFwiKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IHNlcnZlciA9IGZsYWdzLl9bMF07XFxuICAgIGxldCBtb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHNlcnZlcik7XFxuICAgIGlmIChtb25leSA9PT0gMCkgbW9uZXkgPSAxO1xcbiAgICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHNlcnZlcik7XFxuICAgIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc2VydmVyKTtcXG4gICAgY29uc3Qgc2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbChzZXJ2ZXIpO1xcbiAgICBucy5jbGVhckxvZyhzZXJ2ZXIpO1xcbiAgICBucy5wcmludChgJHtzZXJ2ZXJ9OmApO1xcbiAgICBucy5wcmludChcXG4gICAgICBgICRfX19fX19fOiAke25zLm5Gb3JtYXQobW9uZXksIFxcXCIkMC4wMDBhXFxcIil9IC8gJHtucy5uRm9ybWF0KFxcbiAgICAgICAgbWF4TW9uZXksXFxuICAgICAgICBcXFwiJDAuMDAwYVxcXCJcXG4gICAgICApfSAoJHsoKG1vbmV5IC8gbWF4TW9uZXkpICogMTAwKS50b0ZpeGVkKDIpfSUpYFxcbiAgICApO1xcbiAgICBucy5wcmludChgIHNlY3VyaXR5OiArJHsoc2VjIC0gbWluU2VjKS50b0ZpeGVkKDIpfWApO1xcbiAgICBucy5wcmludChcXG4gICAgICBgIGhhY2tfX19fOiAke25zLnRGb3JtYXQobnMuZ2V0SGFja1RpbWUoc2VydmVyKSl9ICh0PSR7TWF0aC5jZWlsKFxcbiAgICAgICAgbnMuaGFja0FuYWx5emVUaHJlYWRzKHNlcnZlciwgbW9uZXkpXFxuICAgICAgKX0pYFxcbiAgICApO1xcbiAgICBucy5wcmludChcXG4gICAgICBgIGdyb3dfX19fOiAke25zLnRGb3JtYXQobnMuZ2V0R3Jvd1RpbWUoc2VydmVyKSl9ICh0PSR7TWF0aC5jZWlsKFxcbiAgICAgICAgbnMuZ3Jvd3RoQW5hbHl6ZShzZXJ2ZXIsIG1heE1vbmV5IC8gbW9uZXkpXFxuICAgICAgKX0pYFxcbiAgICApO1xcbiAgICBucy5wcmludChcXG4gICAgICBgIHdlYWtlbl9fOiAke25zLnRGb3JtYXQobnMuZ2V0V2Vha2VuVGltZShzZXJ2ZXIpKX0gKHQ9JHtNYXRoLmNlaWwoXFxuICAgICAgICAoc2VjIC0gbWluU2VjKSAqIDIwXFxuICAgICAgKX0pYFxcbiAgICApO1xcbiAgICBhd2FpdCBucy5zbGVlcChmbGFncy5yZWZyZXNocmF0ZSk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGUoZGF0YSwgYXJncykge1xcbiAgcmV0dXJuIGRhdGEuc2VydmVycztcXG59XCIsXCJmaWxlbmFtZVwiOlwiL29mZmljaWFsL21vbml0b3IuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL29mZmljaWFsL21vbml0b3IuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2FiMDliNWRiLTQ2MGYtNDQwYy1hYmI3LTdhMTRkYjhkYTk4NVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNjk5fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuMTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTY5OSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEhhY2tUaW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tBbmFseXplVGhyZWFkc1wiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRHcm93VGltZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93dGhBbmFseXplXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFdlYWtlblRpbWVcIixcImNvc3RcIjowLjA1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBiZXN0X3RhcmdldCB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBiZXN0X3RhcmdldChucyk7XFxuXFxuICBucy50cHJpbnRmKGBuZXcgdGFyZ2V0IGlzICR7dGFyZ2V0Lm5hbWV9YCk7XFxuICBucy5ydW4oXFxcIm9mZmljaWFsL21vbml0b3IuanNcXFwiLCAxLCB0YXJnZXQubmFtZSk7XFxuXFxuICBucy5ydW4oXFxcInNsYXZlLW5ldC5qc1xcXCIsIDEsIHRhcmdldC5uYW1lKTtcXG4gIG5zLnJ1bihcXFwic2xhdmUtaG9tZS5qc1xcXCIsIDEsIHRhcmdldC5uYW1lKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwicmV0YXJnZXQuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kYjRiMDNkOS1kZmE1LTQxODItYjQ3Ny1jNjY3MGUwMDI5MDlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjQ5fSx7XCJmaWxlbmFtZVwiOlwicmV0YXJnZXQuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RkZjE2Y2UyLTI1YjYtNGNkOS04Y2I3LTg4NjA4ZGY5NWY1ZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNjk4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuMTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIyNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInJ1blwiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IHNjYW4sIHNydl9pbmZvLCBmbXQgfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiBzcnZfaW5mbyhucywgc3J2KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLyBhLnNlY19taW4gLSBiLm1vbmV5X21heCAvIGEuc2VjX21pbik7XFxuXFxuICBvdXRwdXQuZm9yRWFjaCgoaW5mbykgPT4ge1xcbiAgICBucy50cHJpbnQoYFRhcmdldCAke2luZm8ubmFtZX06YCk7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBtb25leTogJHtmbXQoaW5mby5tb25leV9jdXJyKX0vJHtmbXQoaW5mby5tb25leV9tYXgpfSAke1xcbiAgICAgICAgaW5mby5tb25leV9wY3RcXG4gICAgICB9JWBcXG4gICAgKTtcXG4gICAgbnMudHByaW50KGAgIHNlYyAgOiAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufSAke2luZm8uc2VjX3BjdH0lYCk7XFxuICB9KTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiL2FyY2hpdmUvc3J2LXN0YXRzLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjI1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxMzksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgIGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbWydoZWxwJywgZmFsc2VdXSk7XFxuICAgIGNvbnN0IGhvc3RuYW1lID0gYXJncy5fWzBdO1xcbiAgICBpZihhcmdzLmhlbHAgfHwgIWhvc3RuYW1lKSB7XFxuICAgICAgICBucy50cHJpbnQoXFxcIlRoaXMgc2NyaXB0IHdpbGwgZ2VuZXJhdGUgbW9uZXkgYnkgaGFja2luZyBhIHRhcmdldCBzZXJ2ZXIuXFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYFVTQUdFOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IFNFUlZFUl9OQU1FYCk7XFxuICAgICAgICBucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYD4gcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBuMDBkbGVzYCk7XFxuICAgICAgICByZXR1cm47XFxuICAgIH1cXG4gICAgd2hpbGUgKHRydWUpIHtcXG4gICAgICAgIGlmIChucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKGhvc3RuYW1lKSA+IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoaG9zdG5hbWUpKSB7XFxuICAgICAgICAgICAgYXdhaXQgbnMud2Vha2VuKGhvc3RuYW1lKTtcXG4gICAgICAgIH0gZWxzZSBpZiAobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoaG9zdG5hbWUpIDwgbnMuZ2V0U2VydmVyTWF4TW9uZXkoaG9zdG5hbWUpKSB7XFxuICAgICAgICAgICAgYXdhaXQgbnMuZ3Jvdyhob3N0bmFtZSk7XFxuICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICAgIGF3YWl0IG5zLmhhY2soaG9zdG5hbWUpO1xcbiAgICAgICAgfVxcbiAgICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9vZmZpY2lhbC9iYXNpY19oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjczLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgIGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuICAgIGlmIChhcmdzLmhlbHApIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgd2lsbCBlbmhhbmNlIHlvdXIgSFVEIChIZWFkcyB1cCBEaXNwbGF5KSB3aXRoIGN1c3RvbSBzdGF0aXN0aWNzLlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGBVc2FnZTogcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfWApO1xcbiAgICAgICAgbnMudHByaW50KFxcXCJFeGFtcGxlOlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGA+IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX1gKTtcXG4gICAgICAgIHJldHVybjtcXG4gICAgfVxcbiAgICBcXG4gICAgY29uc3QgZG9jID0gZG9jdW1lbnQ7IC8vIFRoaXMgaXMgZXhwZW5zaXZlISAoMjVHQiBSQU0pIFBlcmhhcHMgdGhlcmUncyBhIHdheSBhcm91bmQgaXQ/IDspXFxuICAgIGNvbnN0IGhvb2swID0gZG9jLmdldEVsZW1lbnRCeUlkKCdvdmVydmlldy1leHRyYS1ob29rLTAnKTtcXG4gICAgY29uc3QgaG9vazEgPSBkb2MuZ2V0RWxlbWVudEJ5SWQoJ292ZXJ2aWV3LWV4dHJhLWhvb2stMScpO1xcbiAgICB3aGlsZSAodHJ1ZSkge1xcbiAgICAgICAgdHJ5IHtcXG4gICAgICAgICAgICBjb25zdCBoZWFkZXJzID0gW11cXG4gICAgICAgICAgICBjb25zdCB2YWx1ZXMgPSBbXTtcXG4gICAgICAgICAgICAvLyBBZGQgc2NyaXB0IGluY29tZSBwZXIgc2Vjb25kXFxuICAgICAgICAgICAgaGVhZGVycy5wdXNoKFxcXCJTY3JJbmNcXFwiKTtcXG4gICAgICAgICAgICB2YWx1ZXMucHVzaChucy5nZXRTY3JpcHRJbmNvbWUoKVswXS50b1ByZWNpc2lvbig1KSArICcvc2VjJyk7XFxuICAgICAgICAgICAgLy8gQWRkIHNjcmlwdCBleHAgZ2FpbiByYXRlIHBlciBzZWNvbmRcXG4gICAgICAgICAgICBoZWFkZXJzLnB1c2goXFxcIlNjckV4cFxcXCIpO1xcbiAgICAgICAgICAgIHZhbHVlcy5wdXNoKG5zLmdldFNjcmlwdEV4cEdhaW4oKS50b1ByZWNpc2lvbig1KSArICcvc2VjJyk7XFxuICAgICAgICAgICAgLy8gVE9ETzogQWRkIG1vcmUgbmVhdCBzdHVmZlxcblxcbiAgICAgICAgICAgIC8vIE5vdyBkcm9wIGl0IGludG8gdGhlIHBsYWNlaG9sZGVyIGVsZW1lbnRzXFxuICAgICAgICAgICAgaG9vazAuaW5uZXJUZXh0ID0gaGVhZGVycy5qb2luKFxcXCLCoFxcXFxuXFxcIik7XFxuICAgICAgICAgICAgaG9vazEuaW5uZXJUZXh0ID0gdmFsdWVzLmpvaW4oXFxcIlxcXFxuXFxcIik7XFxuICAgICAgICB9IGNhdGNoIChlcnIpIHsgLy8gVGhpcyBtaWdodCBjb21lIGluIGhhbmR5IGxhdGVyXFxuICAgICAgICAgICAgbnMucHJpbnQoXFxcIkVSUk9SOiBVcGRhdGUgU2tpcHBlZDogXFxcIiArIFN0cmluZyhlcnIpKTtcXG4gICAgICAgIH1cXG4gICAgICAgIGF3YWl0IG5zLnNsZWVwKDEwMDApO1xcbiAgICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9vZmZpY2lhbC9jdXN0b20tc3RhdHMuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjI2LjgsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjc0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJkb21cIixcIm5hbWVcIjpcImRvY3VtZW50XCIsXCJjb3N0XCI6MjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRJbmNvbWVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRFeHBHYWluXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHRjb25zdCBhcmdzID0gbnMuZmxhZ3MoW1tcXFwiaGVscFxcXCIsIGZhbHNlXV0pO1xcblxcdGlmIChhcmdzLmhlbHAgfHwgYXJncy5fLmxlbmd0aCA8IDIpIHtcXG5cXHRcXHRucy50cHJpbnQoXFxcIlRoaXMgc2NyaXB0IGRlcGxveXMgYW5vdGhlciBzY3JpcHQgb24gYSBzZXJ2ZXIgd2l0aCBtYXhpbXVtIHRocmVhZHMgcG9zc2libGUuXFxcIik7XFxuXFx0XFx0bnMudHByaW50KGBVc2FnZTogcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBIT1NUIFNDUklQVCBBUkdVTUVOVFNgKTtcXG5cXHRcXHRucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuXFx0XFx0bnMudHByaW50KGA+IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX0gbjAwZGxlcyBiYXNpY19oYWNrLmpzIGZvb2Ruc3R1ZmZgKTtcXG5cXHRcXHRyZXR1cm47XFxuXFx0fVxcblxcblxcdGNvbnN0IGhvc3QgPSBhcmdzLl9bMF07XFxuXFx0Y29uc3Qgc2NyaXB0ID0gYXJncy5fWzFdO1xcblxcdGNvbnN0IHNjcmlwdF9hcmdzID0gYXJncy5fLnNsaWNlKDIpO1xcblxcblxcdGlmICghbnMuc2VydmVyRXhpc3RzKGhvc3QpKSB7XFxuXFx0XFx0bnMudHByaW50KGBTZXJ2ZXIgJyR7aG9zdH0nIGRvZXMgbm90IGV4aXN0LiBBYm9ydGluZy5gKTtcXG5cXHRcXHRyZXR1cm47XFxuXFx0fVxcblxcdGlmICghbnMubHMobnMuZ2V0SG9zdG5hbWUoKSkuZmluZChmID0+IGYgPT09IHNjcmlwdCkpIHtcXG5cXHRcXHRucy50cHJpbnQoYFNjcmlwdCAnJHtzY3JpcHR9JyBkb2VzIG5vdCBleGlzdC4gQWJvcnRpbmcuYCk7XFxuXFx0XFx0cmV0dXJuO1xcblxcdH1cXG5cXG5cXHRjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcigobnMuZ2V0U2VydmVyTWF4UmFtKGhvc3QpIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShob3N0KSkgLyBucy5nZXRTY3JpcHRSYW0oc2NyaXB0KSk7XFxuXFx0bnMudHByaW50KGBMYXVuY2hpbmcgc2NyaXB0ICcke3NjcmlwdH0nIG9uIHNlcnZlciAnJHtob3N0fScgd2l0aCAke3RocmVhZHN9IHRocmVhZHMgYW5kIHRoZSBmb2xsb3dpbmcgYXJndW1lbnRzOiAke3NjcmlwdF9hcmdzfWApO1xcblxcdGF3YWl0IG5zLnNjcChzY3JpcHQsIG5zLmdldEhvc3RuYW1lKCksIGhvc3QpO1xcblxcdG5zLmV4ZWMoc2NyaXB0LCBob3N0LCB0aHJlYWRzLCAuLi5zY3JpcHRfYXJncyk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9vZmZpY2lhbC9kZXBsb3kuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuMDUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjc1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2VydmVyRXhpc3RzXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwibHNcIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRIb3N0bmFtZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyVXNlZFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY3BcIixcImNvc3RcIjowLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJmdW5jdGlvbiBzY2FuKG5zLCBwYXJlbnQsIHNlcnZlciwgbGlzdCkge1xcbiAgICBjb25zdCBjaGlsZHJlbiA9IG5zLnNjYW4oc2VydmVyKTtcXG4gICAgZm9yIChsZXQgY2hpbGQgb2YgY2hpbGRyZW4pIHtcXG4gICAgICAgIGlmIChwYXJlbnQgPT0gY2hpbGQpIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgIH1cXG4gICAgICAgIGxpc3QucHVzaChjaGlsZCk7XFxuICAgICAgICBcXG4gICAgICAgIHNjYW4obnMsIHNlcnZlciwgY2hpbGQsIGxpc3QpO1xcbiAgICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBsaXN0X3NlcnZlcnMobnMpIHtcXG4gICAgY29uc3QgbGlzdCA9IFtdO1xcbiAgICBzY2FuKG5zLCAnJywgJ2hvbWUnLCBsaXN0KTtcXG4gICAgcmV0dXJuIGxpc3Q7XFxufVxcblxcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgIGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuICAgIGlmIChhcmdzLmhlbHApIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgaGVscHMgeW91IGZpbmQgYW4gdW5zb2x2ZWQgY29kaW5nIGNvbnRyYWN0LlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGBVc2FnZTogcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfWApO1xcbiAgICAgICAgbnMudHByaW50KFxcXCJFeGFtcGxlOlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGA+IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX1gKTtcXG4gICAgICAgIHJldHVybjtcXG4gICAgfVxcblxcbiAgICBsZXQgc2VydmVycyA9IGxpc3Rfc2VydmVycyhucyk7XFxuICAgIGNvbnN0IGJvdWdodFNlcnZlcnMgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJzKG5zKTtcXG4gICAgc2VydmVycyA9IHNlcnZlcnMuZmlsdGVyKHMgPT4gIWJvdWdodFNlcnZlcnMuaW5jbHVkZXMocykpO1xcbiAgICBjb25zdCBob3N0bmFtZSA9IHNlcnZlcnMuZmluZChzID0+IG5zLmxzKHMpLmZpbmQoZiA9PiBmLmVuZHNXaXRoKFxcXCIuY2N0XFxcIikpKVxcbiAgICBpZighaG9zdG5hbWUpIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiTm8gY29kaW5nIGNvbnRyYWN0IGZvdW5kLlxcXCIpO1xcbiAgICAgICAgcmV0dXJuO1xcbiAgICB9XFxuXFxuICAgIG5zLnRwcmludChgRm91bmQgY29kaW5nIGNvbnRyYWN0IG9uICcke2hvc3RuYW1lfScuYClcXG59XCIsXCJmaWxlbmFtZVwiOlwiL29mZmljaWFsL2ZpbmRfY29kaW5nX2NvbnRyYWN0LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo0LjI1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI3NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRQdXJjaGFzZWRTZXJ2ZXJzXCIsXCJjb3N0XCI6Mi4yNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImxzXCIsXCJjb3N0XCI6MC4yfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJmdW5jdGlvbiByZWN1cnNpdmVTY2FuKG5zLCBwYXJlbnQsIHNlcnZlciwgdGFyZ2V0LCByb3V0ZSkge1xcbiAgICBjb25zdCBjaGlsZHJlbiA9IG5zLnNjYW4oc2VydmVyKTtcXG4gICAgZm9yIChsZXQgY2hpbGQgb2YgY2hpbGRyZW4pIHtcXG4gICAgICAgIGlmIChwYXJlbnQgPT0gY2hpbGQpIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgIH1cXG4gICAgICAgIGlmIChjaGlsZCA9PSB0YXJnZXQpIHtcXG4gICAgICAgICAgICByb3V0ZS51bnNoaWZ0KGNoaWxkKTtcXG4gICAgICAgICAgICByb3V0ZS51bnNoaWZ0KHNlcnZlcik7XFxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XFxuICAgICAgICB9XFxuXFxuICAgICAgICBpZiAocmVjdXJzaXZlU2Nhbihucywgc2VydmVyLCBjaGlsZCwgdGFyZ2V0LCByb3V0ZSkpIHtcXG4gICAgICAgICAgICByb3V0ZS51bnNoaWZ0KHNlcnZlcik7XFxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XFxuICAgICAgICB9XFxuICAgIH1cXG4gICAgcmV0dXJuIGZhbHNlO1xcbn1cXG5cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgICBjb25zdCBhcmdzID0gbnMuZmxhZ3MoW1tcXFwiaGVscFxcXCIsIGZhbHNlXV0pO1xcbiAgICBsZXQgcm91dGUgPSBbXTtcXG4gICAgbGV0IHNlcnZlciA9IGFyZ3MuX1swXTtcXG4gICAgaWYgKCFzZXJ2ZXIgfHwgYXJncy5oZWxwKSB7XFxuICAgICAgICBucy50cHJpbnQoXFxcIlRoaXMgc2NyaXB0IGhlbHBzIHlvdSBmaW5kIGEgc2VydmVyIG9uIHRoZSBuZXR3b3JrIGFuZCBzaG93cyB5b3UgdGhlIHBhdGggdG8gZ2V0IHRvIGl0LlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGBVc2FnZTogcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBTRVJWRVJgKTtcXG4gICAgICAgIG5zLnRwcmludChcXFwiRXhhbXBsZTpcXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgPiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IG4wMGRsZXNgKTtcXG4gICAgICAgIHJldHVybjtcXG4gICAgfVxcblxcbiAgICByZWN1cnNpdmVTY2FuKG5zLCAnJywgJ2hvbWUnLCBzZXJ2ZXIsIHJvdXRlKTtcXG4gICAgZm9yIChjb25zdCBpIGluIHJvdXRlKSB7XFxuICAgICAgICBhd2FpdCBucy5zbGVlcCg1MDApO1xcbiAgICAgICAgY29uc3QgZXh0cmEgPSBpID4gMCA/IFxcXCLilJQgXFxcIiA6IFxcXCJcXFwiO1xcbiAgICAgICAgbnMudHByaW50KGAke1xcXCIgXFxcIi5yZXBlYXQoaSl9JHtleHRyYX0ke3JvdXRlW2ldfWApO1xcbiAgICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGUoZGF0YSwgYXJncykge1xcbiAgICByZXR1cm4gZGF0YS5zZXJ2ZXJzO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvb2ZmaWNpYWwvZmluZF9zZXJ2ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuOCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyNzcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJmdW5jdGlvbiBzY2FuKG5zLCBwYXJlbnQsIHNlcnZlciwgbGlzdCkge1xcbiAgICBjb25zdCBjaGlsZHJlbiA9IG5zLnNjYW4oc2VydmVyKTtcXG4gICAgZm9yIChsZXQgY2hpbGQgb2YgY2hpbGRyZW4pIHtcXG4gICAgICAgIGlmIChwYXJlbnQgPT0gY2hpbGQpIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgIH1cXG4gICAgICAgIGxpc3QucHVzaChjaGlsZCk7XFxuICAgICAgICBcXG4gICAgICAgIHNjYW4obnMsIHNlcnZlciwgY2hpbGQsIGxpc3QpO1xcbiAgICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBsaXN0X3NlcnZlcnMobnMpIHtcXG4gICAgY29uc3QgbGlzdCA9IFtdO1xcbiAgICBzY2FuKG5zLCAnJywgJ2hvbWUnLCBsaXN0KTtcXG4gICAgcmV0dXJuIGxpc3Q7XFxufVxcblxcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuICAgIGlmIChhcmdzLmhlbHApIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgbGlzdHMgYWxsIHNlcnZlcnMgb24gd2hpY2ggeW91IGNhbiBydW4gc2NyaXB0cy5cXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgVXNhZ2U6IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX1gKTtcXG4gICAgICAgIG5zLnRwcmludChcXFwiRXhhbXBsZTpcXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgPiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9YCk7XFxuICAgICAgICByZXR1cm47XFxuICAgIH1cXG5cXG5cXHRjb25zdCBzZXJ2ZXJzID0gbGlzdF9zZXJ2ZXJzKG5zKS5maWx0ZXIocyA9PiBucy5oYXNSb290QWNjZXNzKHMpKS5jb25jYXQoWydob21lJ10pO1xcbiAgICBmb3IoY29uc3Qgc2VydmVyIG9mIHNlcnZlcnMpIHtcXG4gICAgICAgIGNvbnN0IHVzZWQgPSBucy5nZXRTZXJ2ZXJVc2VkUmFtKHNlcnZlcik7XFxuICAgICAgICBjb25zdCBtYXggPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc2VydmVyKTtcXG4gICAgICAgIG5zLnRwcmludChgJHtzZXJ2ZXJ9IGlzIG9wZW5lZC4gJHt1c2VkfSBHQiAvICR7bWF4fSBHQiAoJHsoMTAwKnVzZWQvbWF4KS50b0ZpeGVkKDIpfSUpYClcXG4gICAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCIvb2ZmaWNpYWwvb3BlbmVkX3NlcnZlcnMuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuOTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjc4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyVXNlZFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIG5zLnB1cmNoYXNlVG9yKCk7XFxufVwiLFwiZmlsZW5hbWVcIjpcInJlc3RhcnQuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJyZXN0YXJ0LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83Y2U4YTY4NC1iOWRiLTQ5MjQtYjZhNS1mNGQ2YTMzZTllYmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTAyNDc2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuNixcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjIzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwicHVyY2hhc2VUb3JcIixcImNvc3RcIjoyfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJleHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgICBjb25zdCBhcmdzID0gbnMuZmxhZ3MoW1tcXFwiaGVscFxcXCIsIGZhbHNlXV0pO1xcbiAgICBjb25zdCBzZXJ2ZXIgPSBucy5hcmdzWzBdO1xcbiAgICBpZiAoYXJncy5oZWxwIHx8ICFzZXJ2ZXIpIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgZG9lcyBhIG1vcmUgZGV0YWlsZWQgYW5hbHlzaXMgb2YgYSBzZXJ2ZXIuXFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYFVzYWdlOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IFNFUlZFUmApO1xcbiAgICAgICAgbnMudHByaW50KFxcXCJFeGFtcGxlOlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGA+IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX0gbjAwZGxlc2ApO1xcbiAgICAgICAgcmV0dXJuO1xcbiAgICB9XFxuICAgIGNvbnN0IHJhbSA9IG5zLmdldFNlcnZlclJhbShzZXJ2ZXIpO1xcbiAgICBjb25zdCBtb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHNlcnZlcik7XFxuICAgIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkoc2VydmVyKTtcXG4gICAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzZXJ2ZXIpO1xcbiAgICBjb25zdCBzZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHNlcnZlcik7XFxuICAgIG5zLnRwcmludChgXFxuXFxuJHtzZXJ2ZXJ9OlxcbiAgICBSQU0gICAgICAgIDogJHtyYW1bMV19IC8gJHtyYW1bMF19ICgke3JhbVsxXSAvIHJhbVswXSAqIDEwMH0lKVxcbiAgICAkICAgICAgICAgIDogJHtucy5uRm9ybWF0KG1vbmV5LCBcXFwiJDAuMDAwYVxcXCIpfSAvICR7bnMubkZvcm1hdChtYXhNb25leSwgXFxcIiQwLjAwMGFcXFwiKX0gKCR7KG1vbmV5IC8gbWF4TW9uZXkgKiAxMDApLnRvRml4ZWQoMil9JSlcXG4gICAgc2VjdXJpdHkgICA6ICR7bWluU2VjLnRvRml4ZWQoMil9IC8gJHtzZWMudG9GaXhlZCgyKX1cXG4gICAgZ3Jvd3RoICAgICA6ICR7bnMuZ2V0U2VydmVyR3Jvd3RoKHNlcnZlcil9XFxuICAgIGhhY2sgdGltZSAgOiAke25zLnRGb3JtYXQobnMuZ2V0SGFja1RpbWUoc2VydmVyKSl9XFxuICAgIGdyb3cgdGltZSAgOiAke25zLnRGb3JtYXQobnMuZ2V0R3Jvd1RpbWUoc2VydmVyKSl9XFxuICAgIHdlYWtlbiB0aW1lOiAke25zLnRGb3JtYXQobnMuZ2V0V2Vha2VuVGltZShzZXJ2ZXIpKX1cXG4gICAgZ3JvdyB4MiAgICA6ICR7KG5zLmdyb3d0aEFuYWx5emUoc2VydmVyLCAyKSkudG9GaXhlZCgyKX0gdGhyZWFkc1xcbiAgICBncm93IHgzICAgIDogJHsobnMuZ3Jvd3RoQW5hbHl6ZShzZXJ2ZXIsIDMpKS50b0ZpeGVkKDIpfSB0aHJlYWRzXFxuICAgIGdyb3cgeDQgICAgOiAkeyhucy5ncm93dGhBbmFseXplKHNlcnZlciwgNCkpLnRvRml4ZWQoMil9IHRocmVhZHNcXG4gICAgaGFjayAxMCUgICA6ICR7KC4xMCAvIG5zLmhhY2tBbmFseXplKHNlcnZlcikpLnRvRml4ZWQoMil9IHRocmVhZHNcXG4gICAgaGFjayAyNSUgICA6ICR7KC4yNSAvIG5zLmhhY2tBbmFseXplKHNlcnZlcikpLnRvRml4ZWQoMil9IHRocmVhZHNcXG4gICAgaGFjayA1MCUgICA6ICR7KC41MCAvIG5zLmhhY2tBbmFseXplKHNlcnZlcikpLnRvRml4ZWQoMil9IHRocmVhZHNcXG4gICAgaGFja0NoYW5jZSA6ICR7KG5zLmhhY2tBbmFseXplQ2hhbmNlKHNlcnZlcikgKiAxMDApLnRvRml4ZWQoMil9JVxcbmApO1xcbn1cIixcImZpbGVuYW1lXCI6XCJhbmFseXplX3NlcnZlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6NS4zNSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTczLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyUmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0SGFja1RpbWVcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0R3Jvd1RpbWVcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0V2Vha2VuVGltZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93dGhBbmFseXplXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tBbmFseXplXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tBbmFseXplQ2hhbmNlXCIsXCJjb3N0XCI6MX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gICAgY29uc3QgYXJncyA9IG5zLmZsYWdzKFtbJ2hlbHAnLCBmYWxzZV1dKTtcXG4gICAgY29uc3QgaG9zdG5hbWUgPSBhcmdzLl9bMF07XFxuICAgIGlmKGFyZ3MuaGVscCB8fCAhaG9zdG5hbWUpIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgd2lsbCBnZW5lcmF0ZSBtb25leSBieSBoYWNraW5nIGEgdGFyZ2V0IHNlcnZlci5cXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgVVNBR0U6IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX0gU0VSVkVSX05BTUVgKTtcXG4gICAgICAgIG5zLnRwcmludChcXFwiRXhhbXBsZTpcXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgPiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IG4wMGRsZXNgKTtcXG4gICAgICAgIHJldHVybjtcXG4gICAgfVxcbiAgICB3aGlsZSAodHJ1ZSkge1xcbiAgICAgICAgaWYgKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwoaG9zdG5hbWUpID4gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChob3N0bmFtZSkpIHtcXG4gICAgICAgICAgICBhd2FpdCBucy53ZWFrZW4oaG9zdG5hbWUpO1xcbiAgICAgICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShob3N0bmFtZSkgPCBucy5nZXRTZXJ2ZXJNYXhNb25leShob3N0bmFtZSkpIHtcXG4gICAgICAgICAgICBhd2FpdCBucy5ncm93KGhvc3RuYW1lKTtcXG4gICAgICAgIH0gZWxzZSB7XFxuICAgICAgICAgICAgYXdhaXQgbnMuaGFjayhob3N0bmFtZSk7XFxuICAgICAgICB9XFxuICAgIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiYmFzaWNfaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxNzUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gICAgY29uc3QgYXJncyA9IG5zLmZsYWdzKFtbXFxcImhlbHBcXFwiLCBmYWxzZV1dKTtcXG4gICAgaWYgKGFyZ3MuaGVscCkge1xcbiAgICAgICAgbnMudHByaW50KFxcXCJUaGlzIHNjcmlwdCB3aWxsIGVuaGFuY2UgeW91ciBIVUQgKEhlYWRzIHVwIERpc3BsYXkpIHdpdGggY3VzdG9tIHN0YXRpc3RpY3MuXFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYFVzYWdlOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9YCk7XFxuICAgICAgICBucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYD4gcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfWApO1xcbiAgICAgICAgcmV0dXJuO1xcbiAgICB9XFxuICAgIFxcbiAgICBjb25zdCBkb2MgPSBkb2N1bWVudDsgLy8gVGhpcyBpcyBleHBlbnNpdmUhICgyNUdCIFJBTSkgUGVyaGFwcyB0aGVyZSdzIGEgd2F5IGFyb3VuZCBpdD8gOylcXG4gICAgY29uc3QgaG9vazAgPSBkb2MuZ2V0RWxlbWVudEJ5SWQoJ292ZXJ2aWV3LWV4dHJhLWhvb2stMCcpO1xcbiAgICBjb25zdCBob29rMSA9IGRvYy5nZXRFbGVtZW50QnlJZCgnb3ZlcnZpZXctZXh0cmEtaG9vay0xJyk7XFxuICAgIHdoaWxlICh0cnVlKSB7XFxuICAgICAgICB0cnkge1xcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSBbXVxcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IFtdO1xcbiAgICAgICAgICAgIC8vIEFkZCBzY3JpcHQgaW5jb21lIHBlciBzZWNvbmRcXG4gICAgICAgICAgICBoZWFkZXJzLnB1c2goXFxcIlNjckluY1xcXCIpO1xcbiAgICAgICAgICAgIHZhbHVlcy5wdXNoKG5zLmdldFNjcmlwdEluY29tZSgpWzBdLnRvUHJlY2lzaW9uKDUpICsgJy9zZWMnKTtcXG4gICAgICAgICAgICAvLyBBZGQgc2NyaXB0IGV4cCBnYWluIHJhdGUgcGVyIHNlY29uZFxcbiAgICAgICAgICAgIGhlYWRlcnMucHVzaChcXFwiU2NyRXhwXFxcIik7XFxuICAgICAgICAgICAgdmFsdWVzLnB1c2gobnMuZ2V0U2NyaXB0RXhwR2FpbigpLnRvUHJlY2lzaW9uKDUpICsgJy9zZWMnKTtcXG4gICAgICAgICAgICAvLyBUT0RPOiBBZGQgbW9yZSBuZWF0IHN0dWZmXFxuXFxuICAgICAgICAgICAgLy8gTm93IGRyb3AgaXQgaW50byB0aGUgcGxhY2Vob2xkZXIgZWxlbWVudHNcXG4gICAgICAgICAgICBob29rMC5pbm5lclRleHQgPSBoZWFkZXJzLmpvaW4oXFxcIsKgXFxcXG5cXFwiKTtcXG4gICAgICAgICAgICBob29rMS5pbm5lclRleHQgPSB2YWx1ZXMuam9pbihcXFwiXFxcXG5cXFwiKTtcXG4gICAgICAgIH0gY2F0Y2ggKGVycikgeyAvLyBUaGlzIG1pZ2h0IGNvbWUgaW4gaGFuZHkgbGF0ZXJcXG4gICAgICAgICAgICBucy5wcmludChcXFwiRVJST1I6IFVwZGF0ZSBTa2lwcGVkOiBcXFwiICsgU3RyaW5nKGVycikpO1xcbiAgICAgICAgfVxcbiAgICAgICAgYXdhaXQgbnMuc2xlZXAoMTAwMCk7XFxuICAgIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiY3VzdG9tLXN0YXRzLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyNi44LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxNzcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImRvbVwiLFwibmFtZVwiOlwiZG9jdW1lbnRcIixcImNvc3RcIjoyNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdEluY29tZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdEV4cEdhaW5cIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuXFx0aWYgKGFyZ3MuaGVscCB8fCBhcmdzLl8ubGVuZ3RoIDwgMikge1xcblxcdFxcdG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgZGVwbG95cyBhbm90aGVyIHNjcmlwdCBvbiBhIHNlcnZlciB3aXRoIG1heGltdW0gdGhyZWFkcyBwb3NzaWJsZS5cXFwiKTtcXG5cXHRcXHRucy50cHJpbnQoYFVzYWdlOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IEhPU1QgU0NSSVBUIEFSR1VNRU5UU2ApO1xcblxcdFxcdG5zLnRwcmludChcXFwiRXhhbXBsZTpcXFwiKTtcXG5cXHRcXHRucy50cHJpbnQoYD4gcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBuMDBkbGVzIGJhc2ljX2hhY2suanMgZm9vZG5zdHVmZmApO1xcblxcdFxcdHJldHVybjtcXG5cXHR9XFxuXFxuXFx0Y29uc3QgaG9zdCA9IGFyZ3MuX1swXTtcXG5cXHRjb25zdCBzY3JpcHQgPSBhcmdzLl9bMV07XFxuXFx0Y29uc3Qgc2NyaXB0X2FyZ3MgPSBhcmdzLl8uc2xpY2UoMik7XFxuXFxuXFx0aWYgKCFucy5zZXJ2ZXJFeGlzdHMoaG9zdCkpIHtcXG5cXHRcXHRucy50cHJpbnQoYFNlcnZlciAnJHtob3N0fScgZG9lcyBub3QgZXhpc3QuIEFib3J0aW5nLmApO1xcblxcdFxcdHJldHVybjtcXG5cXHR9XFxuXFx0aWYgKCFucy5scyhucy5nZXRIb3N0bmFtZSgpKS5maW5kKGYgPT4gZiA9PT0gc2NyaXB0KSkge1xcblxcdFxcdG5zLnRwcmludChgU2NyaXB0ICcke3NjcmlwdH0nIGRvZXMgbm90IGV4aXN0LiBBYm9ydGluZy5gKTtcXG5cXHRcXHRyZXR1cm47XFxuXFx0fVxcblxcblxcdGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKChucy5nZXRTZXJ2ZXJNYXhSYW0oaG9zdCkgLSBucy5nZXRTZXJ2ZXJVc2VkUmFtKGhvc3QpKSAvIG5zLmdldFNjcmlwdFJhbShzY3JpcHQpKTtcXG5cXHRucy50cHJpbnQoYExhdW5jaGluZyBzY3JpcHQgJyR7c2NyaXB0fScgb24gc2VydmVyICcke2hvc3R9JyB3aXRoICR7dGhyZWFkc30gdGhyZWFkcyBhbmQgdGhlIGZvbGxvd2luZyBhcmd1bWVudHM6ICR7c2NyaXB0X2FyZ3N9YCk7XFxuXFx0YXdhaXQgbnMuc2NwKHNjcmlwdCwgbnMuZ2V0SG9zdG5hbWUoKSwgaG9zdCk7XFxuXFx0bnMuZXhlYyhzY3JpcHQsIGhvc3QsIHRocmVhZHMsIC4uLnNjcmlwdF9hcmdzKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZGVwbG95LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo0LjA1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxNzksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzZXJ2ZXJFeGlzdHNcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJsc1wiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEhvc3RuYW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJVc2VkUmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjcFwiLFwiY29zdFwiOjAuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImZ1bmN0aW9uIHNjYW4obnMsIHBhcmVudCwgc2VydmVyLCBsaXN0KSB7XFxuICAgIGNvbnN0IGNoaWxkcmVuID0gbnMuc2NhbihzZXJ2ZXIpO1xcbiAgICBmb3IgKGxldCBjaGlsZCBvZiBjaGlsZHJlbikge1xcbiAgICAgICAgaWYgKHBhcmVudCA9PSBjaGlsZCkge1xcbiAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgfVxcbiAgICAgICAgbGlzdC5wdXNoKGNoaWxkKTtcXG4gICAgICAgIFxcbiAgICAgICAgc2Nhbihucywgc2VydmVyLCBjaGlsZCwgbGlzdCk7XFxuICAgIH1cXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIGxpc3Rfc2VydmVycyhucykge1xcbiAgICBjb25zdCBsaXN0ID0gW107XFxuICAgIHNjYW4obnMsICcnLCAnaG9tZScsIGxpc3QpO1xcbiAgICByZXR1cm4gbGlzdDtcXG59XFxuXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gICAgY29uc3QgYXJncyA9IG5zLmZsYWdzKFtbXFxcImhlbHBcXFwiLCBmYWxzZV1dKTtcXG4gICAgaWYgKGFyZ3MuaGVscCkge1xcbiAgICAgICAgbnMudHByaW50KFxcXCJUaGlzIHNjcmlwdCBoZWxwcyB5b3UgZmluZCBhbiB1bnNvbHZlZCBjb2RpbmcgY29udHJhY3QuXFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYFVzYWdlOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9YCk7XFxuICAgICAgICBucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYD4gcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfWApO1xcbiAgICAgICAgcmV0dXJuO1xcbiAgICB9XFxuXFxuICAgIGxldCBzZXJ2ZXJzID0gbGlzdF9zZXJ2ZXJzKG5zKTtcXG4gICAgY29uc3QgYm91Z2h0U2VydmVycyA9IG5zLmdldFB1cmNoYXNlZFNlcnZlcnMobnMpO1xcbiAgICBzZXJ2ZXJzID0gc2VydmVycy5maWx0ZXIocyA9PiAhYm91Z2h0U2VydmVycy5pbmNsdWRlcyhzKSk7XFxuICAgIGNvbnN0IGhvc3RuYW1lID0gc2VydmVycy5maW5kKHMgPT4gbnMubHMocykuZmluZChmID0+IGYuZW5kc1dpdGgoXFxcIi5jY3RcXFwiKSkpXFxuICAgIGlmKCFob3N0bmFtZSkge1xcbiAgICAgICAgbnMudHByaW50KFxcXCJObyBjb2RpbmcgY29udHJhY3QgZm91bmQuXFxcIik7XFxuICAgICAgICByZXR1cm47XFxuICAgIH1cXG5cXG4gICAgbnMudHByaW50KGBGb3VuZCBjb2RpbmcgY29udHJhY3Qgb24gJyR7aG9zdG5hbWV9Jy5gKVxcbn1cIixcImZpbGVuYW1lXCI6XCJmaW5kX2NvZGluZ19jb250cmFjdC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6NC4yNSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTg1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFB1cmNoYXNlZFNlcnZlcnNcIixcImNvc3RcIjoyLjI1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwibHNcIixcImNvc3RcIjowLjJ9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImZ1bmN0aW9uIHJlY3Vyc2l2ZVNjYW4obnMsIHBhcmVudCwgc2VydmVyLCB0YXJnZXQsIHJvdXRlKSB7XFxuICAgIGNvbnN0IGNoaWxkcmVuID0gbnMuc2NhbihzZXJ2ZXIpO1xcbiAgICBmb3IgKGxldCBjaGlsZCBvZiBjaGlsZHJlbikge1xcbiAgICAgICAgaWYgKHBhcmVudCA9PSBjaGlsZCkge1xcbiAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgfVxcbiAgICAgICAgaWYgKGNoaWxkID09IHRhcmdldCkge1xcbiAgICAgICAgICAgIHJvdXRlLnVuc2hpZnQoY2hpbGQpO1xcbiAgICAgICAgICAgIHJvdXRlLnVuc2hpZnQoc2VydmVyKTtcXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIGlmIChyZWN1cnNpdmVTY2FuKG5zLCBzZXJ2ZXIsIGNoaWxkLCB0YXJnZXQsIHJvdXRlKSkge1xcbiAgICAgICAgICAgIHJvdXRlLnVuc2hpZnQoc2VydmVyKTtcXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcXG4gICAgICAgIH1cXG4gICAgfVxcbiAgICByZXR1cm4gZmFsc2U7XFxufVxcblxcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgIGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuICAgIGxldCByb3V0ZSA9IFtdO1xcbiAgICBsZXQgc2VydmVyID0gYXJncy5fWzBdO1xcbiAgICBpZiAoIXNlcnZlciB8fCBhcmdzLmhlbHApIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgaGVscHMgeW91IGZpbmQgYSBzZXJ2ZXIgb24gdGhlIG5ldHdvcmsgYW5kIHNob3dzIHlvdSB0aGUgcGF0aCB0byBnZXQgdG8gaXQuXFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYFVzYWdlOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IFNFUlZFUmApO1xcbiAgICAgICAgbnMudHByaW50KFxcXCJFeGFtcGxlOlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGA+IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX0gbjAwZGxlc2ApO1xcbiAgICAgICAgcmV0dXJuO1xcbiAgICB9XFxuXFxuICAgIHJlY3Vyc2l2ZVNjYW4obnMsICcnLCAnaG9tZScsIHNlcnZlciwgcm91dGUpO1xcbiAgICBmb3IgKGNvbnN0IGkgaW4gcm91dGUpIHtcXG4gICAgICAgIGF3YWl0IG5zLnNsZWVwKDUwMCk7XFxuICAgICAgICBjb25zdCBleHRyYSA9IGkgPiAwID8gXFxcIuKUlCBcXFwiIDogXFxcIlxcXCI7XFxuICAgICAgICBucy50cHJpbnQoYCR7XFxcIiBcXFwiLnJlcGVhdChpKX0ke2V4dHJhfSR7cm91dGVbaV19YCk7XFxuICAgIH1cXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIGF1dG9jb21wbGV0ZShkYXRhLCBhcmdzKSB7XFxuICAgIHJldHVybiBkYXRhLnNlcnZlcnM7XFxufVwiLFwiZmlsZW5hbWVcIjpcImZpbmRfc2VydmVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjgsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTE4NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IGZsYWdzID0gbnMuZmxhZ3MoW1xcbiAgICBbXFxcInJlZnJlc2hyYXRlXFxcIiwgMjAwXSxcXG4gICAgW1xcXCJoZWxwXFxcIiwgZmFsc2VdLFxcbiAgXSk7XFxuICBpZiAoZmxhZ3MuXy5sZW5ndGggPT09IDAgfHwgZmxhZ3MuaGVscCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgXFxcIlRoaXMgc2NyaXB0IGhlbHBzIHZpc3VhbGl6ZSB0aGUgbW9uZXkgYW5kIHNlY3VyaXR5IG9mIGEgc2VydmVyLlxcXCJcXG4gICAgKTtcXG4gICAgbnMudHByaW50KGBVU0FHRTogcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBTRVJWRVJfTkFNRWApO1xcbiAgICBucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuICAgIG5zLnRwcmludChgPiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IG4wMGRsZXNgKTtcXG4gICAgcmV0dXJuO1xcbiAgfVxcbiAgbnMudGFpbCgpO1xcbiAgbnMuZGlzYWJsZUxvZyhcXFwiQUxMXFxcIik7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBzZXJ2ZXIgPSBmbGFncy5fWzBdO1xcbiAgICBsZXQgbW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShzZXJ2ZXIpO1xcbiAgICBpZiAobW9uZXkgPT09IDApIG1vbmV5ID0gMTtcXG4gICAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leShzZXJ2ZXIpO1xcbiAgICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNlcnZlcik7XFxuICAgIGNvbnN0IHNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwoc2VydmVyKTtcXG4gICAgbnMuY2xlYXJMb2coc2VydmVyKTtcXG4gICAgbnMucHJpbnQoYCR7c2VydmVyfTpgKTtcXG4gICAgbnMucHJpbnQoXFxuICAgICAgYCAkX19fX19fXzogJHtucy5uRm9ybWF0KG1vbmV5LCBcXFwiJDAuMDAwYVxcXCIpfSAvICR7bnMubkZvcm1hdChcXG4gICAgICAgIG1heE1vbmV5LFxcbiAgICAgICAgXFxcIiQwLjAwMGFcXFwiXFxuICAgICAgKX0gKCR7KChtb25leSAvIG1heE1vbmV5KSAqIDEwMCkudG9GaXhlZCgyKX0lKWBcXG4gICAgKTtcXG4gICAgbnMucHJpbnQoYCBzZWN1cml0eTogKyR7KHNlYyAtIG1pblNlYykudG9GaXhlZCgyKX1gKTtcXG4gICAgbnMucHJpbnQoXFxuICAgICAgYCBoYWNrX19fXzogJHtucy50Rm9ybWF0KG5zLmdldEhhY2tUaW1lKHNlcnZlcikpfSAodD0ke01hdGguY2VpbChcXG4gICAgICAgIG5zLmhhY2tBbmFseXplVGhyZWFkcyhzZXJ2ZXIsIG1vbmV5KVxcbiAgICAgICl9KWBcXG4gICAgKTtcXG4gICAgbnMucHJpbnQoXFxuICAgICAgYCBncm93X19fXzogJHtucy50Rm9ybWF0KG5zLmdldEdyb3dUaW1lKHNlcnZlcikpfSAodD0ke01hdGguY2VpbChcXG4gICAgICAgIG5zLmdyb3d0aEFuYWx5emUoc2VydmVyLCBtYXhNb25leSAvIG1vbmV5KVxcbiAgICAgICl9KWBcXG4gICAgKTtcXG4gICAgbnMucHJpbnQoXFxuICAgICAgYCB3ZWFrZW5fXzogJHtucy50Rm9ybWF0KG5zLmdldFdlYWtlblRpbWUoc2VydmVyKSl9ICh0PSR7TWF0aC5jZWlsKFxcbiAgICAgICAgKHNlYyAtIG1pblNlYykgKiAyMFxcbiAgICAgICl9KWBcXG4gICAgKTtcXG4gICAgYXdhaXQgbnMuc2xlZXAoZmxhZ3MucmVmcmVzaHJhdGUpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gYXV0b2NvbXBsZXRlKGRhdGEsIGFyZ3MpIHtcXG4gIHJldHVybiBkYXRhLnNlcnZlcnM7XFxufVwiLFwiZmlsZW5hbWVcIjpcIm1vbml0b3IuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuMTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIxNyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEhhY2tUaW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tBbmFseXplVGhyZWFkc1wiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRHcm93VGltZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93dGhBbmFseXplXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFdlYWtlblRpbWVcIixcImNvc3RcIjowLjA1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJmdW5jdGlvbiBzY2FuKG5zLCBwYXJlbnQsIHNlcnZlciwgbGlzdCkge1xcbiAgICBjb25zdCBjaGlsZHJlbiA9IG5zLnNjYW4oc2VydmVyKTtcXG4gICAgZm9yIChsZXQgY2hpbGQgb2YgY2hpbGRyZW4pIHtcXG4gICAgICAgIGlmIChwYXJlbnQgPT0gY2hpbGQpIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgIH1cXG4gICAgICAgIGxpc3QucHVzaChjaGlsZCk7XFxuICAgICAgICBcXG4gICAgICAgIHNjYW4obnMsIHNlcnZlciwgY2hpbGQsIGxpc3QpO1xcbiAgICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBsaXN0X3NlcnZlcnMobnMpIHtcXG4gICAgY29uc3QgbGlzdCA9IFtdO1xcbiAgICBzY2FuKG5zLCAnJywgJ2hvbWUnLCBsaXN0KTtcXG4gICAgcmV0dXJuIGxpc3Q7XFxufVxcblxcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuICAgIGlmIChhcmdzLmhlbHApIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgbGlzdHMgYWxsIHNlcnZlcnMgb24gd2hpY2ggeW91IGNhbiBydW4gc2NyaXB0cy5cXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgVXNhZ2U6IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX1gKTtcXG4gICAgICAgIG5zLnRwcmludChcXFwiRXhhbXBsZTpcXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgPiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9YCk7XFxuICAgICAgICByZXR1cm47XFxuICAgIH1cXG5cXG5cXHRjb25zdCBzZXJ2ZXJzID0gbGlzdF9zZXJ2ZXJzKG5zKS5maWx0ZXIocyA9PiBucy5oYXNSb290QWNjZXNzKHMpKS5jb25jYXQoWydob21lJ10pO1xcbiAgICBmb3IoY29uc3Qgc2VydmVyIG9mIHNlcnZlcnMpIHtcXG4gICAgICAgIGNvbnN0IHVzZWQgPSBucy5nZXRTZXJ2ZXJVc2VkUmFtKHNlcnZlcik7XFxuICAgICAgICBjb25zdCBtYXggPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc2VydmVyKTtcXG4gICAgICAgIG5zLnRwcmludChgJHtzZXJ2ZXJ9IGlzIG9wZW5lZC4gJHt1c2VkfSBHQiAvICR7bWF4fSBHQiAoJHsoMTAwKnVzZWQvbWF4KS50b0ZpeGVkKDIpfSUpYClcXG4gICAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJvcGVuZWRfc2VydmVycy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS45NSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjE5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyVXNlZFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzY2FuIH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHNydiA9IG5zLmFyZ3NbMF07XFxuXFxuICBjb25zdCBzY3JpcHRXZWFrZW4gPSBcXFwid2Vha2VuLXRvcC5qc1xcXCI7XFxuICBjb25zdCBzY3JpcHRHcm93ID0gXFxcImdyb3ctdG9wLmpzXFxcIjtcXG4gIGNvbnN0IHNjcmlwdEhhY2sgPSBcXFwiaGFjay10b3AuanNcXFwiO1xcblxcbiAgY29uc3Qgc2l6ZVdlYWtlbiA9IG5zLmdldFNjcmlwdFJhbShzY3JpcHRXZWFrZW4pO1xcbiAgY29uc3Qgc2l6ZUdyb3cgPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0R3Jvdyk7XFxuICBjb25zdCBzaXplSGFjayA9IG5zLmdldFNjcmlwdFJhbShzY3JpcHRIYWNrKTtcXG4gIGNvbnN0IHBhcnRHcm93ID0gKG5zLmFyZ3NbMl0gfHwgNDUpIC8gMTAwO1xcblxcbiAgY29uc3QgcGFydFdlYWtlbiA9IDEuMCAtIHBhcnRHcm93O1xcbiAgY29uc3QgaGFja0ZhY3RvciA9IDAuMTtcXG5cXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgY291bnRXZWFrZW4gPSBNYXRoLmZsb29yKFxcbiAgICAoc3J2UmFtICogKDEuMCAtIGhhY2tGYWN0b3IpICogcGFydFdlYWtlbikgLyBzaXplV2Vha2VuXFxuICApO1xcbiAgY29uc3QgY291bnRHcm93ID0gTWF0aC5mbG9vcihcXG4gICAgKHNydlJhbSAqICgxLjAgLSBoYWNrRmFjdG9yKSAqIHBhcnRHcm93KSAvIHNpemVHcm93XFxuICApO1xcbiAgY29uc3QgY291bnRIYWNrID0gTWF0aC5mbG9vcigoc3J2UmFtICogaGFja0ZhY3RvcikgLyBzaXplSGFjayk7XFxuXFxuICBucy50cHJpbnQoXFxuICAgIGBzZXJ2ZXIgJHtzcnZ9ICgke3NydlJhbX0gR0IpOiAke2NvdW50V2Vha2VufSB3ZWFrZW4gLyAke2NvdW50R3Jvd30gZ3JvdyAvICR7Y291bnRIYWNrfSBoYWNrIHRocmVhZHNgXFxuICApO1xcblxcbiAgYXdhaXQgbnMuc2NwKFxcXCJoYWNrZXItbGliLmpzXFxcIiwgc3J2KTtcXG4gIGF3YWl0IG5zLnNjcChzY3JpcHRXZWFrZW4sIHNydik7XFxuICBhd2FpdCBucy5zY3Aoc2NyaXB0R3Jvdywgc3J2KTtcXG4gIGF3YWl0IG5zLnNjcChzY3JpcHRIYWNrLCBzcnYpO1xcbiAgbnMua2lsbGFsbChzcnYpO1xcblxcbiAgaWYgKGNvdW50V2Vha2VuID4gMCkgbnMuZXhlYyhzY3JpcHRXZWFrZW4sIHNydiwgY291bnRXZWFrZW4pO1xcbiAgaWYgKGNvdW50R3JvdyA+IDApIG5zLmV4ZWMoc2NyaXB0R3Jvdywgc3J2LCBjb3VudEdyb3cpO1xcbiAgaWYgKGNvdW50SGFjayA+IDApIG5zLmV4ZWMoc2NyaXB0SGFjaywgc3J2LCBjb3VudEhhY2spO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gYXV0b2NvbXBsZXRlKGRhdGEsIGFyZ3MpIHtcXG4gIHJldHVybiBbLi4uZGF0YS5zZXJ2ZXJzXTtcXG59XCIsXCJmaWxlbmFtZVwiOlwic2xhdmUtaG9zdC10b3AuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuMTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjcFwiLFwiY29zdFwiOjAuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImtpbGxhbGxcIixcImNvc3RcIjowLjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzY2FuIH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF0gfHwgdW5kZWZpbmVkO1xcblxcbiAgY29uc3Qgc2NyaXB0V2Vha2VuID0gIXRhcmdldCA/IFxcXCJ3ZWFrZW4tdG9wLmpzXFxcIiA6IFxcXCJsb29wLXdlYWtlbi5qc1xcXCI7XFxuICBjb25zdCBzY3JpcHRHcm93ID0gIXRhcmdldCA/IFxcXCJncm93LXRvcC5qc1xcXCIgOiBcXFwibG9vcC1ncm93LmpzXFxcIjtcXG4gIGNvbnN0IHNjcmlwdEhhY2sgPSAhdGFyZ2V0ID8gXFxcImhhY2stdG9wLmpzXFxcIiA6IFxcXCJsb29wLWhhY2suanNcXFwiO1xcblxcbiAgbnMudHByaW50KFxcbiAgICBgdGFyZ2V0ICR7dGFyZ2V0fSwgc2NyaXB0czogJHtzY3JpcHRXZWFrZW59LCR7c2NyaXB0R3Jvd30sJHtzY3JpcHRIYWNrfWBcXG4gICk7XFxuXFxuICBjb25zdCBzaXplV2Vha2VuID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdFdlYWtlbik7XFxuICBjb25zdCBzaXplR3JvdyA9IG5zLmdldFNjcmlwdFJhbShzY3JpcHRHcm93KTtcXG4gIGNvbnN0IHNpemVIYWNrID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdEhhY2spO1xcbiAgY29uc3QgcGFydEdyb3cgPSAobnMuYXJnc1sxXSB8fCA0NSkgLyAxMDA7XFxuICBjb25zdCBwYXJ0V2Vha2VuID0gMS4wIC0gcGFydEdyb3c7XFxuICBjb25zdCBoYWNrRmFjdG9yID0gMC4xO1xcblxcbiAgY29uc3Qgc3J2ID0gXFxcImhvbWVcXFwiO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydikgKiAwLjk5O1xcblxcbiAgY29uc3QgY291bnRXZWFrZW4gPSBNYXRoLmZsb29yKFxcbiAgICAoc3J2UmFtICogKDEuMCAtIGhhY2tGYWN0b3IpICogcGFydFdlYWtlbikgLyBzaXplV2Vha2VuXFxuICApO1xcbiAgY29uc3QgY291bnRHcm93ID0gTWF0aC5mbG9vcihcXG4gICAgKHNydlJhbSAqICgxLjAgLSBoYWNrRmFjdG9yKSAqIHBhcnRHcm93KSAvIHNpemVHcm93XFxuICApO1xcbiAgY29uc3QgY291bnRIYWNrID0gTWF0aC5mbG9vcigoc3J2UmFtICogaGFja0ZhY3RvcikgLyBzaXplSGFjayk7XFxuXFxuICBucy50cHJpbnQoXFxuICAgIGBzZXJ2ZXIgJHtzcnZ9ICgke3NydlJhbX0gR0IpOiAke2NvdW50V2Vha2VufSB3ZWFrZW4gLyAke2NvdW50R3Jvd30gZ3JvdyAvICR7Y291bnRIYWNrfSBoYWNrIHRocmVhZHNgXFxuICApO1xcblxcbiAgaWYgKGNvdW50V2Vha2VuID4gMCkgbnMucnVuKHNjcmlwdFdlYWtlbiwgY291bnRXZWFrZW4sIHRhcmdldCk7XFxuICBpZiAoY291bnRHcm93ID4gMCkgbnMucnVuKHNjcmlwdEdyb3csIGNvdW50R3JvdywgdGFyZ2V0KTtcXG4gIGlmIChjb3VudEhhY2sgPiAwKSBucy5ydW4oc2NyaXB0SGFjaywgY291bnRIYWNrLCB0YXJnZXQpO1xcbn1cIixcImZpbGVuYW1lXCI6XCJzbGF2ZS1ob21lLXRvcC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2E4YTNlZTZlLTQzMjYtNDU3MC1iYzgzLTg2YzUyN2VhMzUwZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNzk2NDh9LHtcImZpbGVuYW1lXCI6XCJzbGF2ZS1ob21lLXRvcC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNWVhODcwMWMtZWMwZS00YTUxLWJhOTAtZWE4Mjk4OTQ1Y2M0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM3OTk5Mn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjc1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4OSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJydW5cIixcImNvc3RcIjoxfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzY2FuIH0gZnJvbSBcXFwiLi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3Qgc3J2ID0gbnMuYXJnc1swXTtcXG5cXG4gIGNvbnN0IHNjcmlwdFdlYWtlbiA9IFxcXCJ3ZWFrZW4tdG9wLmpzXFxcIjtcXG4gIGNvbnN0IHNjcmlwdEdyb3cgPSBcXFwiZ3Jvdy10b3AuanNcXFwiO1xcbiAgY29uc3Qgc2NyaXB0SGFjayA9IFxcXCJoYWNrLXRvcC5qc1xcXCI7XFxuXFxuICBjb25zdCBzaXplV2Vha2VuID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdFdlYWtlbik7XFxuICBjb25zdCBzaXplR3JvdyA9IG5zLmdldFNjcmlwdFJhbShzY3JpcHRHcm93KTtcXG4gIGNvbnN0IHNpemVIYWNrID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdEhhY2spO1xcbiAgY29uc3QgcGFydEdyb3cgPSAobnMuYXJnc1syXSB8fCA0NSkgLyAxMDA7XFxuXFxuICBjb25zdCBwYXJ0V2Vha2VuID0gMS4wIC0gcGFydEdyb3c7XFxuICBjb25zdCBoYWNrRmFjdG9yID0gMC4xO1xcblxcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCBjb3VudFdlYWtlbiA9IE1hdGguZmxvb3IoXFxuICAgIChzcnZSYW0gKiAoMS4wIC0gaGFja0ZhY3RvcikgKiBwYXJ0V2Vha2VuKSAvIHNpemVXZWFrZW5cXG4gICk7XFxuICBjb25zdCBjb3VudEdyb3cgPSBNYXRoLmZsb29yKFxcbiAgICAoc3J2UmFtICogKDEuMCAtIGhhY2tGYWN0b3IpICogcGFydEdyb3cpIC8gc2l6ZUdyb3dcXG4gICk7XFxuICBjb25zdCBjb3VudEhhY2sgPSBNYXRoLmZsb29yKChzcnZSYW0gKiBoYWNrRmFjdG9yKSAvIHNpemVIYWNrKTtcXG5cXG4gIG5zLnRwcmludChcXG4gICAgYHNlcnZlciAke3Nydn0gKCR7c3J2UmFtfSBHQik6ICR7Y291bnRXZWFrZW59IHdlYWtlbiAvICR7Y291bnRHcm93fSBncm93IC8gJHtjb3VudEhhY2t9IGhhY2sgdGhyZWFkc2BcXG4gICk7XFxuXFxuICBhd2FpdCBucy5zY3AoXFxcImhhY2tlci1saWIuanNcXFwiLCBzcnYpO1xcbiAgYXdhaXQgbnMuc2NwKHNjcmlwdFdlYWtlbiwgc3J2KTtcXG4gIGF3YWl0IG5zLnNjcChzY3JpcHRHcm93LCBzcnYpO1xcbiAgYXdhaXQgbnMuc2NwKHNjcmlwdEhhY2ssIHNydik7XFxuICBucy5raWxsYWxsKHNydik7XFxuXFxuICBpZiAoY291bnRXZWFrZW4gPiAwKSBucy5leGVjKHNjcmlwdFdlYWtlbiwgc3J2LCBjb3VudFdlYWtlbik7XFxuICBpZiAoY291bnRHcm93ID4gMCkgbnMuZXhlYyhzY3JpcHRHcm93LCBzcnYsIGNvdW50R3Jvdyk7XFxuICBpZiAoY291bnRIYWNrID4gMCkgbnMuZXhlYyhzY3JpcHRIYWNrLCBzcnYsIGNvdW50SGFjayk7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGUoZGF0YSwgYXJncykge1xcbiAgcmV0dXJuIFsuLi5kYXRhLnNlcnZlcnNdO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvYXJjaGl2ZS9zbGF2ZS1ob3N0LXRvcC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTM3fX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc2NhbiB9IGZyb20gXFxcIi4uL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHNjcmlwdFdlYWtlbiA9IFxcXCJ3ZWFrZW4tdG9wLmpzXFxcIjtcXG4gIGNvbnN0IHNjcmlwdEdyb3cgPSBcXFwiZ3Jvdy10b3AuanNcXFwiO1xcbiAgY29uc3Qgc2NyaXB0SGFjayA9IFxcXCJoYWNrLXRvcC5qc1xcXCI7XFxuXFxuICBucy50cHJpbnQoXFxuICAgIGB0YXJnZXQgJHt0YXJnZXR9LCBzY3JpcHRzOiAke3NjcmlwdFdlYWtlbn0sJHtzY3JpcHRHcm93fSwke3NjcmlwdEhhY2t9YFxcbiAgKTtcXG5cXG4gIGNvbnN0IHNpemVXZWFrZW4gPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0V2Vha2VuKTtcXG4gIGNvbnN0IHNpemVHcm93ID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdEdyb3cpO1xcbiAgY29uc3Qgc2l6ZUhhY2sgPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0SGFjayk7XFxuICBjb25zdCBwYXJ0R3JvdyA9IChucy5hcmdzWzFdIHx8IDQ1KSAvIDEwMDtcXG4gIGNvbnN0IHBhcnRXZWFrZW4gPSAxLjAgLSBwYXJ0R3JvdztcXG4gIGNvbnN0IGhhY2tGYWN0b3IgPSAwLjE7XFxuXFxuICBjb25zdCBzcnYgPSBcXFwiaG9tZVxcXCI7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KSAqIDAuOTk7XFxuXFxuICBjb25zdCBjb3VudFdlYWtlbiA9IE1hdGguZmxvb3IoXFxuICAgIChzcnZSYW0gKiAoMS4wIC0gaGFja0ZhY3RvcikgKiBwYXJ0V2Vha2VuKSAvIHNpemVXZWFrZW5cXG4gICk7XFxuICBjb25zdCBjb3VudEdyb3cgPSBNYXRoLmZsb29yKFxcbiAgICAoc3J2UmFtICogKDEuMCAtIGhhY2tGYWN0b3IpICogcGFydEdyb3cpIC8gc2l6ZUdyb3dcXG4gICk7XFxuICBjb25zdCBjb3VudEhhY2sgPSBNYXRoLmZsb29yKChzcnZSYW0gKiBoYWNrRmFjdG9yKSAvIHNpemVIYWNrKTtcXG5cXG4gIG5zLnRwcmludChcXG4gICAgYHNlcnZlciAke3Nydn0gKCR7c3J2UmFtfSBHQik6ICR7Y291bnRXZWFrZW59IHdlYWtlbiAvICR7Y291bnRHcm93fSBncm93IC8gJHtjb3VudEhhY2t9IGhhY2sgdGhyZWFkc2BcXG4gICk7XFxuXFxuICBpZiAoY291bnRXZWFrZW4gPiAwKSBucy5ydW4oc2NyaXB0V2Vha2VuLCBjb3VudFdlYWtlbik7XFxuICBpZiAoY291bnRHcm93ID4gMCkgbnMucnVuKHNjcmlwdEdyb3csIGNvdW50R3Jvdyk7XFxuICBpZiAoY291bnRIYWNrID4gMCkgbnMucnVuKHNjcmlwdEhhY2ssIGNvdW50SGFjayk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9hcmNoaXZlL3NsYXZlLWhvbWUtdG9wLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjowLFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxMzV9fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIHZhciBmYWN0aW9ucyA9IFtdO1xcbiAgY29uc3QgZmFjdGlvbl9saXN0ID0gW1xcbiAgICBcXFwiQ3liZXJTZWNcXFwiLFxcbiAgICBcXFwiVGlhbiBEaSBIdWlcXFwiLFxcbiAgICBcXFwiTmV0YnVybmVyc1xcXCIsXFxuICAgIFxcXCJTZWN0b3ItMTJcXFwiLFxcbiAgICBcXFwiQ2hvbmdxaW5nXFxcIixcXG4gICAgXFxcIk5ldyBUb2t5b1xcXCIsXFxuICAgIFxcXCJJc2hpbWFcXFwiLFxcbiAgICBcXFwiQWV2dW1cXFwiLFxcbiAgICBcXFwiVm9saGF2ZW5cXFwiLFxcbiAgICBcXFwiTml0ZVNlY1xcXCIsXFxuICAgIFxcXCJUaGUgQmxhY2sgSGFuZFxcXCIsXFxuICAgIFxcXCJCaXRSdW5uZXJzXFxcIixcXG4gICAgXFxcIkVDb3JwXFxcIixcXG4gICAgXFxcIk1lZ2FDb3JwXFxcIixcXG4gICAgXFxcIkt1YWlHb25nIEludGVybmF0aW9uYWxcXFwiLFxcbiAgICBcXFwiRm91ciBTaWdtYVxcXCIsXFxuICAgIFxcXCJOV09cXFwiLFxcbiAgICBcXFwiQmxhZGUgSW5kdXN0cmllc1xcXCIsXFxuICAgIFxcXCJPbW5pVGVrIEluY29ycG9yYXRlZFxcXCIsXFxuICAgIFxcXCJCYWNobWFuICYgQXNzb2NpYXRlc1xcXCIsXFxuICAgIFxcXCJDbGFya2UgSW5jb3Jwb3JhdGVkXFxcIixcXG4gICAgXFxcIkZ1bGNydW0gU2VjcmV0IFRlY2hub2xvZ2llc1xcXCIsXFxuICAgIFxcXCJTbHVtIFNuYWtlc1xcXCIsXFxuICAgIFxcXCJUZXRyYWRzXFxcIixcXG4gICAgXFxcIlNpbGhvdWV0dGVcXFwiLFxcbiAgICBcXFwiU3BlYWtlcnMgZm9yIHRoZSBEZWFkXFxcIixcXG4gICAgXFxcIlRoZSBEYXJrIEFybXlcXFwiLFxcbiAgICBcXFwiVGhlIFN5bmRpY2F0ZVxcXCIsXFxuICAgIFxcXCJUaGUgQ292ZW5hbnRcXFwiLFxcbiAgICBcXFwiRGFlZGFsdXNcXFwiLFxcbiAgICBcXFwiSWxsdW1pbmF0aVxcXCIsXFxuICBdO1xcbiAgbnMudGFpbCgpO1xcbiAgZm9yIChsZXQgZiBvZiBmYWN0aW9uX2xpc3QpIHtcXG4gICAgaWYgKG5zLmpvaW5GYWN0aW9uKGYpIHx8IG5zLmdldEZhY3Rpb25SZXAoZikgPiAwKSB7XFxuICAgICAgZmFjdGlvbnMucHVzaChmKTtcXG4gICAgfVxcbiAgfVxcbiAgZm9yIChsZXQgZiBvZiBmYWN0aW9ucykge1xcbiAgICB2YXIgYXVncyA9IG5zLmdldEF1Z21lbnRhdGlvbnNGcm9tRmFjdGlvbihmKTtcXG4gICAgZm9yIChsZXQgYSBvZiBhdWdzKSB7XFxuICAgICAgbnMucHVyY2hhc2VBdWdtZW50YXRpb24oZiwgYSk7XFxuICAgIH1cXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiL3dlYi9mYWN0aW9ucy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIi93ZWIvZmFjdGlvbnMuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzkzZmQxZjNlLTIxOGMtNDYyNC1hYTlmLTFjYjVmY2E3NjlhZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo3MDU4OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxNS42LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxNTksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJqb2luRmFjdGlvblwiLFwiY29zdFwiOjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRGYWN0aW9uUmVwXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEF1Z21lbnRhdGlvbnNGcm9tRmFjdGlvblwiLFwiY29zdFwiOjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJwdXJjaGFzZUF1Z21lbnRhdGlvblwiLFwiY29zdFwiOjV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge31cIixcImZpbGVuYW1lXCI6XCJzbW9vdGhfY3JpbWluYWwuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNixcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjQ5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHRjb25zdCBwYXRoID0gXFxcImNvbm5lY3QgaG9uZy1mYW5nLXRlYTsgY29ubmVjdCBDU0VDXFxcIjtcXG59XFxuZXhwb3J0IGZ1bmN0aW9uIGNvbm5lY3QocGF0aCkge1xcblxcdGNvbnN0IGRvYyA9IGV2YWwoXFxcImRvY3VtZW50XFxcIik7XFxuXFx0Y29uc3QgdGVybWluYWxJbnB1dCA9IGRvYy5nZXRFbGVtZW50QnlJZChcXFwidGVybWluYWwtaW5wdXRcXFwiKTsgXFxuXFx0dGVybWluYWxJbnB1dC52YWx1ZSA9IGBob21lOyR7cGF0aH1gOyBcXG5cXHRjb25zdCBoYW5kbGVyID0gT2JqZWN0LmtleXModGVybWluYWxJbnB1dClbMV07IFxcblxcdHRlcm1pbmFsSW5wdXRbaGFuZGxlcl0ub25DaGFuZ2Uoe3RhcmdldDp0ZXJtaW5hbElucHV0fSk7XFxuXFx0dGVybWluYWxJbnB1dFtoYW5kbGVyXS5vbktleURvd24oe2tleUNvZGU6MTMscHJldmVudERlZmF1bHQ6KCk9Pm51bGx9KTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZXhwZXJpbWVudC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImV4cGVyaW1lbnQuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzI0MjA5MDdlLWI3N2ItNDY3OS1hZWZlLWNkZjg2OGQwZGE0MVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxMTkzMDh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS42LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI5NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0YXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvd2ViL3dlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIi93ZWIvd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iYTViYzMzMi04NWFkLTRiY2MtYjNjZC1mYTgwMTE0NjEyMTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NjUwOTN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTY5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0YXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiL3dlYi9ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL3dlYi9ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kYjBiZTU2MC03ZmNmLTRhYjktYmRhYy1hZTY4ODY4NzQ1NWRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Nzk0MDZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTYxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi93ZWIvaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIi93ZWIvaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZjYwZDY2OWYtYTFiMS00YzllLTgzOTAtMDkxMDU4ODY5NDJhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjY3MjIxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTYzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAvLyBQYXJhbWV0ZXJzXFxuICAvLyBwYXJhbSAxOiBTZXJ2ZXIgeW91IHdhbnQgdG8gaGFja1xcbiAgLy8gcGFyYW0gMjogT1BUSU9OQUwgLSBTZXJ2ZXIgeW91IHdhbnQgdG8gc3RhcnQgdGhlIGhhY2sgZnJvbSwgaS5lLiBhbnkgcHVibGljIHNlcnZlcnMsIHB1cmNoYXNlZCBzZXJ2ZXJzIG9yICdob21lJ1xcbiAgLy9cXG4gIC8vIEVYQU1QTEUgMTogcnVuIG1hc3RlckhhY2suanMgam9lc2d1bnNcXG4gIC8vIFRoaXMgd2lsbCBzdGFydCBoYWNraW5nICdqb2VzZ3VucycgdXNpbmcgdGhlIFJBTSBvZiAnam9lc2d1bnMnXFxuICAvL1xcbiAgLy8gRVhBTVBMRSAyOiBydW4gbWFzdGVySGFjay5qcyBqb2VzZ3VucyBzMVxcbiAgLy8gVGhpcyB3aWxsIHN0YXJ0IGhhY2tpbmcgJ2pvZXNndW5zJyB1c2luZyB0aGUgUkFNIG9mIG15IHB1cmNoYXNlZCBzZXJ2ZXIgJ3MxJ1xcbiAgLy9cXG4gIC8vIFRoaXMgJ21hc3RlckhhY2suanMnIHByb2Nlc3Mgd2lsbCBzdGF5IGFjdGl2ZSBvbiB3aGF0ZXZlciBzZXJ2ZXIgeW91IGV4ZWN1dGUgaXQgZnJvbS5cXG4gIC8vIEkgdXN1YWxseSBzdGFydCBpdCBmcm9tICdob21lJywgdGhlbiBJIGNhbiB0cmFjayBhbGwgbXkgZWFybmluZ3MgaW4gb25lIHBsYWNlLlxcbiAgLy8gS2VlcCBpbiBtaW5kLCB3aGVuIHVzaW5nICdob21lJyBhcyBzZWNvbmQgcGFyYW1ldGVyIHRoZSBzY3JpcHQgbWlnaHQgdXNlIGFsbCBhdmFpbGFibGUgUkFNXFxuICAvLyBhbmQgeW91IG1pZ2h0IGJlY29tZSB1bmFibGUgdG8gZXhlY3V0ZSBhbnkgb3RoZXIgc2NyaXB0cyBvbiAnaG9tZScgdW50aWwgeW91IGtpbGwgdGhlIHByb2Nlc3MuXFxuXFxuICB2YXIgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIHZhciBzZXJ2ZXJUb0hhY2tGcm9tID0gdGFyZ2V0OyAvLyBGb3Igc2luZ2xlIGFyZ3VtZW50IGNhbGxzIC0gc2VydmVyIHdpbGwgaGFjayBpdHNlbGZcXG4gIHZhciBoYWNrU2NyaXB0ID0gXFxcImhhY2suanNcXFwiO1xcbiAgdmFyIGdyb3dTY3JpcHQgPSBcXFwiZ3Jvdy5qc1xcXCI7XFxuICB2YXIgd2Vha2VuU2NyaXB0ID0gXFxcIndlYWtlbi5qc1xcXCI7XFxuICB2YXIgaGFja1NjcmlwdFJBTSA9IG5zLmdldFNjcmlwdFJhbShoYWNrU2NyaXB0KTtcXG4gIHZhciBncm93U2NyaXB0UkFNID0gbnMuZ2V0U2NyaXB0UmFtKGdyb3dTY3JpcHQpO1xcbiAgdmFyIHNlcnZlck1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIHZhciBzZXJ2ZXJHcm93dGhQZXJjZW50YWdlID0gbnMuZ2V0U2VydmVyR3Jvd3RoKHRhcmdldCkgLyAxMDA7XFxuICB2YXIgc2VydmVyTWF4UkFNO1xcbiAgdmFyIHNlcnZlckdyb3d0aFJhdGU7XFxuICB2YXIgbW9uZXlUaHJlc2ggPSBzZXJ2ZXJNYXhNb25leSAqIDAuOTsgLy8gMC45MCB0byBtYWludGFpbiBuZWFyIDEwMCUgc2VydmVyIG1vbmV5LiAgWW91IGNhbiB1c2UgMC43NSB3aGVuIHN0YXJ0aW5nIG91dC91c2luZyBsb3cgdGhyZWFkIGNvdW50c1xcbiAgdmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG4gIHZhciBjdXJyZW50U2VydmVyTW9uZXk7XFxuICB2YXIgY3VycmVudFNlcnZlclNlY3VyaXR5O1xcbiAgdmFyIHVzZVRocmVhZHNIYWNrO1xcbiAgdmFyIHBvc3NpYmxlVGhyZWFkcztcXG4gIHZhciBtYXhIYWNrRmFjdG9yID0gMC4wMDE7XFxuICB2YXIgZ3Jvd1dlYWtlblJhdGlvID0gMC45OyAvLyBIb3cgbWFueSB0aHJlYWRzIGFyZSB1c2VkIGZvciBncm93aW5nIHZzLiB3ZWFraW5nICg5MDoxMCkuXFxuICB2YXIgc2xlZXBUaW1lO1xcbiAgdmFyIGNvcmVzID0gMTsgLy8gSSBkaWRuJ3QgYm90aGVyIHdpdGggY29yZXMgZm9yIG5vdy4gVW5jb21tZW50IHRoZSBsaW5lIDUxIGlmIHlvdSB3YW50IHRvIHVzZSB0aGlzLlxcbiAgdmFyIGNvcmVNdWx0aXBsaWVyO1xcbiAgY29uc3QgaGFja1NlY3VyaXR5SW5jcmVhc2UgPSAwLjAwMjsgLy8gWWVzIHRoZXNlIHZhbHVlcyBhcmUgY29uc3RhbnQuIEdyb3cgc2VjdXJpdHkgaW5jcmVhc2UgaXMgaGFjayAqIDIgPSAwLjAwNCBwZXIgdGhyZWFkLiBoYWNrQW5hbHl6ZVNlY3VyaXR5KCkganVzdCB3YXN0ZXMgUkFNIGFuZCB0aGlzIHNjcmlwdCBpcyB0b28gYmlnIGFscmVhZHkuXFxuICBjb25zdCBzZXJ2ZXJNYXhHcm93dGhSYXRlID0gMS4wMDM1OyAvLyBUYWtlbiBmcm9tIHRoZSBzb3VyY2UgY29kZS4gSSBjb3VsZG4ndCBmaW5kIGEgd2F5IHRvIGNhbGN1bGF0ZSB0aGUgZnV0dXJlIGdyb3d0aCBhbW91bnQgd2l0aG91dCBjaGVja2luZyB0aGUgc3JjIGNvZGUgZm9yIHRoZSBncm93dGhBbmFseXplKCkgZnVuY3Rpb24uXFxuICBjb25zdCBzZXJ2ZXJCYXNlR3Jvd3RoUmF0ZSA9IDEuMDM7IC8vIFRha2VuIGZyb20gdGhlIHNvdXJjZSBjb2RlXFxuICBjb25zdCBiaXROb2RlTXVsdGlwbGllclNlcnZlckdyb3d0aFJhdGUgPSAxOyAvLyBBZGp1c3QgdGhpcyBhY2NvcmRpbmcgdG8geW91ciBCaXROb2RlIGFzIGxvbmcgYXMgeW91IGFyZSBub3QgaW4gQk41IG9yIGRvbid0IGhhdmUgU0YtNS4gSW4gQk41IG9yIHdpdGggU0YtNSB5b3UgY2FuIHVzZSBucy5nZXRCaXROb2RlTXVsdGlwbGllcnMoKS5TZXJ2ZXJHcm93dGhSYXRlIGluc3RlYWQuXFxuICAvLyBDaGVjayBodHRwczovL2dpdGh1Yi5jb20vZGFuaWVseXhpZS9iaXRidXJuZXIvYmxvYi82MmFjN2Y3ZDE3MGIxNGJiN2E5OTg4NDExZDdjNmYxN2U2OTBmMDU4L3NyYy9CaXROb2RlL0JpdE5vZGUudHN4IGFuZCBzZWFyY2ggZm9yIHRoZSBpbml0Qml0Tm9kZU11bHRpcGxpZXJzIGZ1bmN0aW9uLCB0aGVyZSB5b3Ugd2lsbCBmaW5kIGFsbCB0aGUgZGlmZmVyZW50IG11bHRpcGxpZXJzLlxcblxcbiAgLy8gSWYgc2Vjb25kIGFyZ3VtZW50IGlzIHByb3ZpZGVkLCBoYWNrIHdpbGwgcnVuIGZyb20gdGhpcyBzZXJ2ZXIgaW5zdGVhZFxcbiAgaWYgKG5zLmFyZ3NbMV0pIHtcXG4gICAgc2VydmVyVG9IYWNrRnJvbSA9IG5zLmFyZ3NbMV07XFxuICB9XFxuICBzZXJ2ZXJNYXhSQU0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc2VydmVyVG9IYWNrRnJvbSk7XFxuICAvLyBjb3JlcyA9IG5zLmdldFNlcnZlcihzZXJ2ZXJUb0hhY2tGcm9tKS5jcHVDb3JlczsgLy8gTm90IHN1cmUgaWYgdGhpcyBpcyByZWxldmFudCBhbnl3aGVyZSBvdXRzaWRlIG9mICdob21lJ1xcbiAgY29yZU11bHRpcGxpZXIgPSAxICsgKGNvcmVzIC0gMSkgLyAxNjtcXG5cXG4gIC8vIEdhaW4gcm9vdCBhY2Nlc3MuIE1ha2Ugc3VyZSB5b3UgaGF2ZSB0aGUgbnVrZS5qcyBzY3JpcHQgb24gJ2hvbWUnXFxuICBpZiAoIW5zLmhhc1Jvb3RBY2Nlc3ModGFyZ2V0KSkge1xcbiAgICBucy5leGVjKFxcXCJudWtlLmpzXFxcIiwgXFxcImhvbWVcXFwiLCAxLCB0YXJnZXQpO1xcbiAgICBhd2FpdCBucy5zbGVlcCgyMDAwKTtcXG4gIH1cXG5cXG4gIC8vIENvcHkgdGhlIHdvcmsgc2NyaXB0cywgaWYgbm90IGFscmVhZHkgb24gc2VydmVyXFxuICBpZiAoIW5zLmZpbGVFeGlzdHMoaGFja1NjcmlwdCwgc2VydmVyVG9IYWNrRnJvbSkpIHtcXG4gICAgYXdhaXQgbnMuc2NwKGhhY2tTY3JpcHQsIFxcXCJob21lXFxcIiwgc2VydmVyVG9IYWNrRnJvbSk7XFxuICB9XFxuICBpZiAoIW5zLmZpbGVFeGlzdHMoZ3Jvd1NjcmlwdCwgc2VydmVyVG9IYWNrRnJvbSkpIHtcXG4gICAgYXdhaXQgbnMuc2NwKGdyb3dTY3JpcHQsIFxcXCJob21lXFxcIiwgc2VydmVyVG9IYWNrRnJvbSk7XFxuICB9XFxuICBpZiAoIW5zLmZpbGVFeGlzdHMod2Vha2VuU2NyaXB0LCBzZXJ2ZXJUb0hhY2tGcm9tKSkge1xcbiAgICBhd2FpdCBucy5zY3Aod2Vha2VuU2NyaXB0LCBcXFwiaG9tZVxcXCIsIHNlcnZlclRvSGFja0Zyb20pO1xcbiAgfVxcblxcbiAgLy8gVG8gcHJldmVudCB0aGUgc2NyaXB0IGZyb20gY3Jhc2hpbmcvdGVybWluYXRpbmcgYWZ0ZXIgY2xvc2luZyBhbmQgcmVzdGFydGluZyB0aGUgZ2FtZS5cXG4gIHdoaWxlIChcXG4gICAgbnMuaXNSdW5uaW5nKGhhY2tTY3JpcHQsIHNlcnZlclRvSGFja0Zyb20sIHRhcmdldCkgfHxcXG4gICAgbnMuaXNSdW5uaW5nKGdyb3dTY3JpcHQsIHNlcnZlclRvSGFja0Zyb20sIHRhcmdldCkgfHxcXG4gICAgbnMuaXNSdW5uaW5nKHdlYWtlblNjcmlwdCwgc2VydmVyVG9IYWNrRnJvbSwgdGFyZ2V0KVxcbiAgKSB7XFxuICAgIGF3YWl0IG5zLnNsZWVwKDEwMDAwKTtcXG4gIH1cXG5cXG4gIC8vIE1haW4gbG9vcCAtIHdpbGwgdGVybWluYXRlIGlmIG5vIFJBTSBhdmFpbGFibGVcXG4gIHdoaWxlIChcXG4gICAgMSA8XFxuICAgIChwb3NzaWJsZVRocmVhZHMgPSBNYXRoLmZsb29yKFxcbiAgICAgIChzZXJ2ZXJNYXhSQU0gLSBucy5nZXRTZXJ2ZXJVc2VkUmFtKHNlcnZlclRvSGFja0Zyb20pKSAvIGdyb3dTY3JpcHRSQU1cXG4gICAgKSlcXG4gICkge1xcbiAgICBjdXJyZW50U2VydmVyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcbiAgICBjdXJyZW50U2VydmVyU2VjdXJpdHkgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICAgIC8vIFRoZSBmaXJzdCB0byBjYXNlcyBhcmUgZm9yIG5ldyBzZXJ2ZXJzIHdpdGggaGlnaCBTRUNVUklUWSBMRVZFTFMgYW5kIHRvIHF1aWNrbHkgZ3JvdyB0aGUgc2VydmVyIHRvIGFib3ZlIHRoZSB0aHJlc2hvbGRcXG4gICAgaWYgKFxcbiAgICAgIGN1cnJlbnRTZXJ2ZXJTZWN1cml0eSA+IHNlY3VyaXR5VGhyZXNoICYmXFxuICAgICAgY3VycmVudFNlcnZlck1vbmV5IDwgbW9uZXlUaHJlc2hcXG4gICAgKSB7XFxuICAgICAgc2xlZXBUaW1lID0gbnMuZ2V0V2Vha2VuVGltZSh0YXJnZXQpICsgMTAwMDsgLy8gQWRkZWQgMSBzZWNvbmQgdG8gdGhlICdzbGVlcFRpbWUnIHZhcmlhYmxlcyB0byBwcmV2ZW50IGFueSBpc3N1ZXMgd2l0aCBvdmVybGFwcGluZyB3b3JrIHNjcmlwdHNcXG4gICAgICBucy5leGVjKFxcbiAgICAgICAgZ3Jvd1NjcmlwdCxcXG4gICAgICAgIHNlcnZlclRvSGFja0Zyb20sXFxuICAgICAgICBNYXRoLmNlaWwocG9zc2libGVUaHJlYWRzIC8gMiksXFxuICAgICAgICB0YXJnZXRcXG4gICAgICApO1xcbiAgICAgIG5zLmV4ZWMoXFxuICAgICAgICB3ZWFrZW5TY3JpcHQsXFxuICAgICAgICBzZXJ2ZXJUb0hhY2tGcm9tLFxcbiAgICAgICAgTWF0aC5mbG9vcihwb3NzaWJsZVRocmVhZHMgLyAyKSxcXG4gICAgICAgIHRhcmdldFxcbiAgICAgICk7XFxuICAgICAgYXdhaXQgbnMuc2xlZXAoc2xlZXBUaW1lKTsgLy8gd2FpdCBmb3IgdGhlIHdlYWtlbiBjb21tYW5kIHRvIGZpbmlzaFxcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnRTZXJ2ZXJNb25leSA8IG1vbmV5VGhyZXNoKSB7XFxuICAgICAgc2xlZXBUaW1lID0gbnMuZ2V0V2Vha2VuVGltZSh0YXJnZXQpICsgMTAwMDtcXG4gICAgICBucy5leGVjKFxcbiAgICAgICAgZ3Jvd1NjcmlwdCxcXG4gICAgICAgIHNlcnZlclRvSGFja0Zyb20sXFxuICAgICAgICBNYXRoLmZsb29yKHBvc3NpYmxlVGhyZWFkcyAqIGdyb3dXZWFrZW5SYXRpbyksXFxuICAgICAgICB0YXJnZXRcXG4gICAgICApO1xcbiAgICAgIG5zLmV4ZWMoXFxuICAgICAgICB3ZWFrZW5TY3JpcHQsXFxuICAgICAgICBzZXJ2ZXJUb0hhY2tGcm9tLFxcbiAgICAgICAgTWF0aC5jZWlsKHBvc3NpYmxlVGhyZWFkcyAqICgxIC0gZ3Jvd1dlYWtlblJhdGlvKSksXFxuICAgICAgICB0YXJnZXRcXG4gICAgICApO1xcbiAgICAgIGF3YWl0IG5zLnNsZWVwKHNsZWVwVGltZSk7IC8vIHdhaXQgZm9yIHRoZSB3ZWFrZW4gY29tbWFuZCB0byBmaW5pc2hcXG4gICAgfSBlbHNlIHtcXG4gICAgICAvLyBEZWZpbmUgbWF4IGFtb3VudCB0aGF0IGNhbiBiZSByZXN0b3JlZCB3aXRoIG9uZSBncm93ICh1c2luZyBhbGwgYXZhaWxhYmxlIHRocmVhZHMpIGFuZCB0aGVyZWZvcmUgd2lsbCBiZSB1c2VkIHRvIGRlZmluZSBoYWNrIHRocmVhZHMuXFxuICAgICAgLy8gVGhpcyBsb29wIG5hcnJvd3MgdGhlIGhhY2sgZmFjdG9yIHRvIHRoZSBiZXN0IHBvc3NpYmxlIHZhbHVlIGFuZCBjb25zaWRlcnMgdGhlIG5lY2Vzc2FyeSBncm93dGggdGhyZWFkcyBBRlRFUiB0aGUgaGFjayBoYXMgYmVlbiBwZXJmb3JtZWQsIHNpbmNlXFxuICAgICAgLy8gdGhlIHdvcmsgdGltZSBpcyBkZXRlcm1pbmVkIHdpdGggU0VDVVJJVFkgTEVWRUwgYmVmb3JlIHN0YXJ0LCBidXQgdGhlIGdyb3cgYW1vdW50IGlzIGRldGVybWluZWQgdXNpbmcgdGhlIHVwZGF0ZWQgU0VDVVJJVFkgTEVWRUwgd2hlbiBncm93KCkgZmluaXNoZXMuXFxuICAgICAgLy8gVGhlIGNvZGUvZm9ybXVsYSBmb3IgY2FsY3VsYXRpbmcgdGhlIGdyb3cgdGhyZWFkcyAobGluZSAxMDEgLSAxMDQpIGlzIGZ1bGx5IHRha2VuIGZyb20gdGhlICdudW1DeWNsZUZvckdyb3d0aCcgZnVuY3Rpb24gdGhhdCBpcyB1c2VkIGJ5IGdyb3d0aEFuYWx5emUgYW5kIG90aGVycyBpbiB0aGUgc291cmNlIGNvZGUuIEknbSBub3QgdGhhdCBzbW9ydC4gSSBzaW1wbHkgYWRqdXN0ZWQgaXQgdG8gbXkgbmVlZHMuXFxuICAgICAgLy8gTWF5YmUgdGhleSBjb3VsZCBpbXBsZW1lbnQgdGhlIHBvc3NpYmlsaXR5IHRvIGdpdmUgZ3Jvd3RoQW5hbHl6ZSBhZGRpdGlvbmFsIHNlY3VyaXR5IGxldmVscy8naGFja0RpZmZpY3VsdHknIGFzIGEgcGFyYW1ldGVyLiBUaGF0IHdheSB5b3UgZG9uJ3QgbmVlZCB0byB1c2UgZ2V0SGFja2luZ011bHRpcGxpZXJzKCkgYW5kIHNhdmUgPj4gNCA8PCBHQi5cXG4gICAgICAvLyBBbHNvIEkgZGlkbid0IGJvdGhlciBvcHRpbWl6aW5nIHRoZSAnZ3Jvd1dlYWtlblJhdGlvJywgYXMgOTAlIGlzIGdvb2QgZW5vdWdoIGFscmVhZHkuIEl0IHdpbGwgYmUganVzdCBhIGZldyBtb3JlIGhhY2sgdGhyZWFkcywgaWYgYW55IGF0IGFsbCAtIGV2ZW4gd2l0aCBsYXJnZSBSQU0gc2l6ZXMuXFxuICAgICAgd2hpbGUgKFxcbiAgICAgICAgbWF4SGFja0ZhY3RvciA8IDAuOTk5ICYmXFxuICAgICAgICBNYXRoLmZsb29yKFxcbiAgICAgICAgICAocG9zc2libGVUaHJlYWRzIC8gZ3Jvd1NjcmlwdFJBTSAtXFxuICAgICAgICAgICAgKHVzZVRocmVhZHNIYWNrID0gTWF0aC5mbG9vcihcXG4gICAgICAgICAgICAgIG5zLmhhY2tBbmFseXplVGhyZWFkcyh0YXJnZXQsIGN1cnJlbnRTZXJ2ZXJNb25leSAqIG1heEhhY2tGYWN0b3IpXFxuICAgICAgICAgICAgKSkgL1xcbiAgICAgICAgICAgICAgaGFja1NjcmlwdFJBTSkgKlxcbiAgICAgICAgICAgIGdyb3dTY3JpcHRSQU0gKlxcbiAgICAgICAgICAgIGdyb3dXZWFrZW5SYXRpb1xcbiAgICAgICAgKSA+XFxuICAgICAgICAgIE1hdGguZmxvb3IoXFxuICAgICAgICAgICAgTWF0aC5sb2coc2VydmVyTWF4TW9uZXkgLyAoc2VydmVyTWF4TW9uZXkgKiAoMSAtIG1heEhhY2tGYWN0b3IpKSkgL1xcbiAgICAgICAgICAgICAgKE1hdGgubG9nKFxcbiAgICAgICAgICAgICAgICAoc2VydmVyR3Jvd3RoUmF0ZSA9XFxuICAgICAgICAgICAgICAgICAgMSArXFxuICAgICAgICAgICAgICAgICAgKHNlcnZlckJhc2VHcm93dGhSYXRlIC0gMSkgL1xcbiAgICAgICAgICAgICAgICAgICAgKGN1cnJlbnRTZXJ2ZXJTZWN1cml0eSArXFxuICAgICAgICAgICAgICAgICAgICAgIGhhY2tTZWN1cml0eUluY3JlYXNlICogdXNlVGhyZWFkc0hhY2spKSA+XFxuICAgICAgICAgICAgICAgICAgc2VydmVyTWF4R3Jvd3RoUmF0ZVxcbiAgICAgICAgICAgICAgICAgID8gc2VydmVyTWF4R3Jvd3RoUmF0ZVxcbiAgICAgICAgICAgICAgICAgIDogc2VydmVyR3Jvd3RoUmF0ZVxcbiAgICAgICAgICAgICAgKSAqXFxuICAgICAgICAgICAgICAgIG5zLmdldEhhY2tpbmdNdWx0aXBsaWVycygpLmdyb3d0aCAqXFxuICAgICAgICAgICAgICAgIHNlcnZlckdyb3d0aFBlcmNlbnRhZ2UgKlxcbiAgICAgICAgICAgICAgICBiaXROb2RlTXVsdGlwbGllclNlcnZlckdyb3d0aFJhdGUgKlxcbiAgICAgICAgICAgICAgICBjb3JlTXVsdGlwbGllcilcXG4gICAgICAgICAgKVxcbiAgICAgICkge1xcbiAgICAgICAgbWF4SGFja0ZhY3RvciArPSAwLjAwMTsgLy8gaW5jcmVhc2UgYnkgMC4xJSB3aXRoIGVhY2ggaXRlcmF0aW9uXFxuICAgICAgfVxcbiAgICAgIG1heEhhY2tGYWN0b3IgLT0gMC4wMDE7IC8vIFNpbmNlIGl0J3MgbW9yZSB0aGFuICdwb3NzaWJsZVRocmVhZHMnIGNhbiBoYW5kbGUgbm93LCB3ZSBuZWVkIHRvIGRpYWwgaXQgYmFjayBvbmNlLlxcbiAgICAgIHNsZWVwVGltZSA9IG5zLmdldEhhY2tUaW1lKHRhcmdldCkgKyAxMDAwO1xcbiAgICAgIHVzZVRocmVhZHNIYWNrID0gTWF0aC5taW4odXNlVGhyZWFkc0hhY2ssIHBvc3NpYmxlVGhyZWFkcyk7IC8vIFByZXZlbnRzIGdvaW5nIGFib3ZlIFJBTSBsaW1pdCBvciBoYWNraW5nIHRvbyBtdWNoXFxuICAgICAgbnMudHByaW50KFxcbiAgICAgICAgYHRocmVhZHMgZm9yIGhhY2tpbmcgJHt1c2VUaHJlYWRzSGFja30gPSBtaW4oJHt1c2VUaHJlYWRzSGFja30sJHtwb3NzaWJsZVRocmVhZHN9KWBcXG4gICAgICApO1xcbiAgICAgIGlmICh1c2VUaHJlYWRzSGFjayA+IDApIHtcXG4gICAgICAgIG5zLmV4ZWMoaGFja1NjcmlwdCwgc2VydmVyVG9IYWNrRnJvbSwgdXNlVGhyZWFkc0hhY2ssIHRhcmdldCk7XFxuICAgICAgfVxcbiAgICAgIHBvc3NpYmxlVGhyZWFkcyA9IE1hdGguZmxvb3IoXFxuICAgICAgICAoc2VydmVyTWF4UkFNIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShzZXJ2ZXJUb0hhY2tGcm9tKSkgLyBncm93U2NyaXB0UkFNXFxuICAgICAgKTtcXG4gICAgICBpZiAocG9zc2libGVUaHJlYWRzID49IDIpIHtcXG4gICAgICAgIHNsZWVwVGltZSA9IG5zLmdldFdlYWtlblRpbWUodGFyZ2V0KSArIDEwMDA7XFxuICAgICAgICBjb25zdCBncm93VGhyZWFkcyA9IE1hdGguZmxvb3IocG9zc2libGVUaHJlYWRzICogZ3Jvd1dlYWtlblJhdGlvKTtcXG4gICAgICAgIGlmIChncm93VGhyZWFkcylcXG4gICAgICAgICAgbnMuZXhlYyhncm93U2NyaXB0LCBzZXJ2ZXJUb0hhY2tGcm9tLCBncm93VGhyZWFkcywgdGFyZ2V0KTtcXG4gICAgICAgIG5zLmV4ZWMoXFxuICAgICAgICAgIHdlYWtlblNjcmlwdCxcXG4gICAgICAgICAgc2VydmVyVG9IYWNrRnJvbSxcXG4gICAgICAgICAgTWF0aC5jZWlsKHBvc3NpYmxlVGhyZWFkcyAqICgxIC0gZ3Jvd1dlYWtlblJhdGlvKSksXFxuICAgICAgICAgIHRhcmdldFxcbiAgICAgICAgKTtcXG4gICAgICB9XFxuICAgICAgYXdhaXQgbnMuc2xlZXAoc2xlZXBUaW1lKTsgLy8gd2FpdCBmb3IgdGhlIHdlYWtlbiBjb21tYW5kIHRvIGZpbmlzaFxcbiAgICAgIG1heEhhY2tGYWN0b3IgPSAwLjAwMTtcXG4gICAgfVxcbiAgfVxcbiAgbnMudHByaW50KFxcbiAgICBcXFwiU2NyaXB0IHdhcyB0ZXJtaW5hdGVkLiBOb3QgZW5vdWdoIFJBTSBhdmFpbGFibGUgb24gJ1xcXCIgK1xcbiAgICAgIHNlcnZlclRvSGFja0Zyb20gK1xcbiAgICAgIFxcXCInLlxcXCJcXG4gICk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi93ZWIvbWFzdGVySGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIi93ZWIvbWFzdGVySGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMzNjMDIzN2QtMGNjMy00MDlkLWIzYzMtNWVmODlmMTRjNGZiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjEwNzE5NX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo5LjU1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxNjUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZmlsZUV4aXN0c1wiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjcFwiLFwiY29zdFwiOjAuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImlzUnVubmluZ1wiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclVzZWRSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0V2Vha2VuVGltZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrQW5hbHl6ZVRocmVhZHNcIixcImNvc3RcIjoxfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0SGFja2luZ011bHRpcGxpZXJzXCIsXCJjb3N0XCI6NH0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEhhY2tUaW1lXCIsXCJjb3N0XCI6MC4wNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHNlcnYgPSBucy5hcmdzWzBdO1xcblxcdGlmKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIpKVxcblxcdFxcdG5zLmJydXRlc3NoKHNlcnYpO1xcblxcblxcdGlmKG5zLmZpbGVFeGlzdHMoXFxcIkZUUENyYWNrLmV4ZVxcXCIpKVxcblxcdFxcdG5zLmZ0cGNyYWNrKHNlcnYpO1xcblxcblxcdGlmKG5zLmZpbGVFeGlzdHMoXFxcInJlbGF5U01UUC5leGVcXFwiKSlcXG5cXHRcXHRucy5yZWxheXNtdHAoc2Vydik7XFxuXFxuXFx0aWYobnMuZmlsZUV4aXN0cyhcXFwiSFRUUFdvcm0uZXhlXFxcIikpXFxuXFx0XFx0bnMuaHR0cHdvcm0oc2Vydik7XFxuXFxuXFx0aWYobnMuZmlsZUV4aXN0cyhcXFwiU1FMSW5qZWN0LmV4ZVxcXCIpKVxcblxcdFxcdG5zLnNxbGluamVjdChzZXJ2KTtcXG5cXG5cXHRucy5udWtlKHNlcnYpO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvd2ViL251a2UuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTE2NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImZpbGVFeGlzdHNcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJmdHBjcmFja1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJyZWxheXNtdHBcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaHR0cHdvcm1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic3FsaW5qZWN0XCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIm51a2VcIixcImNvc3RcIjowLjA1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHRjb25zdCB3YW50X3JhbSA9IG5zLmFyZ3NbMF1cXG5cXG5cXHRjb25zdCBwc3J2cyA9IG5zLmdldFB1cmNoYXNlZFNlcnZlcnMoKS5tYXAobmFtZSA9PiAoe1xcblxcdFxcdG5hbWUsIHJhbTpcXG5cXHRcXHRcXHRucy5nZXRTZXJ2ZXJNYXhSYW0obmFtZSlcXG5cXHR9KSlcXG5cXHRmb3IgKGxldCBzcnYgb2YgcHNydnMpIHtcXG5cXHRcXHRucy50cHJpbnQoYCR7c3J2Lm5hbWV9IGhhcyAke3Nydi5yYW19IEdCYClcXG5cXG5cXHRcXHRpZiAoc3J2LnJhbSA8IHdhbnRfcmFtKSB7XFxuXFx0XFx0XFx0bnMudHByaW50KFxcXCJ1cHJhZ2VkaW5nIFxcXCIgKyBzcnYubmFtZSlcXG5cXHRcXHRcXHRucy5raWxsYWxsKHNydi5uYW1lKVxcblxcdFxcdFxcdG5zLmRlbGV0ZVNlcnZlcihzcnYubmFtZSlcXG5cXHRcXHRcXHRucy5wdXJjaGFzZVNlcnZlcihzcnYubmFtZSwgd2FudF9yYW0pXFxuXFx0XFx0fVxcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwidXBncmFkZS1wc2VydnMuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ1cGdyYWRlLXBzZXJ2cy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDJiM2ZjMDYtMWI5NS00YTE1LThhYjItYmM1N2E5OTNhOWY1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM4OTQxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjguOSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMDAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRQdXJjaGFzZWRTZXJ2ZXJzXCIsXCJjb3N0XCI6Mi4yNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJraWxsYWxsXCIsXCJjb3N0XCI6MC41fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZGVsZXRlU2VydmVyXCIsXCJjb3N0XCI6Mi4yNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInB1cmNoYXNlU2VydmVyXCIsXCJjb3N0XCI6Mi4yNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgaWRsZV90aHJlYWRzIH0gZnJvbSBcXFwibmVvL2dldC1pZGxlLWNhcGEuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGdldE5lZWRlZFRocmVhZHMobnMsIHNlcnZlcikge1xcbiAgbGV0IG1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoc2VydmVyKTtcXG4gIGlmIChtb25leSA9PT0gMCkgbW9uZXkgPSAxO1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leShzZXJ2ZXIpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzZXJ2ZXIpO1xcbiAgY29uc3Qgc2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbChzZXJ2ZXIpO1xcblxcbiAgY29uc3QgdGhhY2sgPSBNYXRoLmNlaWwobnMuaGFja0FuYWx5emVUaHJlYWRzKHNlcnZlciwgbW9uZXkpKTtcXG4gIGNvbnN0IHRncm93ID0gTWF0aC5jZWlsKG5zLmdyb3d0aEFuYWx5emUoc2VydmVyLCBtYXhNb25leSAvIG1vbmV5KSk7XFxuICBjb25zdCB0d2Vha2VuID0gTWF0aC5jZWlsKChzZWMgLSBtaW5TZWMpICogMjApO1xcblxcbiAgLyogbnMudHByaW50KFxcbiAgICBKU09OLnN0cmluZ2lmeSh7IG1vbmV5LCBtYXhNb25leSwgbWluU2VjLCBzZWMsIHRoYWNrLCB0Z3JvdywgdHdlYWtlbiB9KVxcbiAgKTsgKi9cXG5cXG4gIHJldHVybiB7IHRoYWNrLCB0Z3JvdywgdHdlYWtlbiB9O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gYWZ0ZXIobWlsbGlzKSB7XFxuICByZXR1cm4gRGF0ZS5ub3coKSArIG1pbGxpcztcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gbGF1bmNoKG5zLCBjYXBhLCB0aHJlYWRzLCBhY3Rpb24sIHRhcmdldCwgd2FpdF9tcykge1xcbiAgbGV0IGhhdmUgPSAwO1xcbiAgZm9yIChjb25zdCBzcnYgb2YgY2FwYS5zb3J0KChhLCBiKSA9PiBhLnRocmVhZHMgLSBiLnRocmVhZHMpKSB7XFxuICAgIGNvbnN0IGxhdW5jaFRocmVhZHMgPSBNYXRoLm1pbihzcnYudGhyZWFkcywgdGhyZWFkcyAtIGhhdmUpO1xcbiAgICBpZiAoIWxhdW5jaFRocmVhZHMgfHwgbGF1bmNoVGhyZWFkcyA8IDApIGNvbnRpbnVlO1xcbiAgICBjb25zdCBwaWQgPSBucy5leGVjKFxcbiAgICAgIGAke2FjdGlvbn0tYWZ0ZXIuanNgLFxcbiAgICAgIHNydi5uYW1lLFxcbiAgICAgIGxhdW5jaFRocmVhZHMsXFxuICAgICAgdGFyZ2V0LFxcbiAgICAgIHdhaXRfbXNcXG4gICAgKTtcXG5cXG4gICAgLypucy50cHJpbnQoXFxuICAgICAgYGxhdW5jaGluZyAke2FjdGlvbn0gb24gJHtcXG4gICAgICAgIHNydi5uYW1lXFxuICAgICAgfSB3aXRoICR7bGF1bmNoVGhyZWFkc30gdGhyZWFkcywgdGFyZ2V0ICR7dGFyZ2V0fSwgd2FpdHRpbWUgJHtucy50Rm9ybWF0KFxcbiAgICAgICAgd2FpdF9tc1xcbiAgICAgICl9YFxcbiAgICApOyAqL1xcbiAgICBpZiAocGlkICE9PSAwKSBoYXZlICs9IGxhdW5jaFRocmVhZHM7XFxuICAgIGVsc2VcXG4gICAgICBucy5wcmludChcXG4gICAgICAgIGBmYWlsZWQgdG8gbGF1bmNoIG9uICR7c3J2Lm5hbWV9OiAke2FjdGlvbn0gLXQgJHtsYXVuY2hUaHJlYWRzfSAke3RhcmdldH0sIGZyZWUgJHtzcnYudGhyZWFkc31gXFxuICAgICAgKTtcXG4gICAgaWYgKGhhdmUgPj0gdGhyZWFkcykge1xcbiAgICAgIHJldHVybiB0cnVlO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gZmFsc2U7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IGZsYWdzID0gbnMuZmxhZ3MoW1xcbiAgICBbXFxcInJlZnJlc2hyYXRlXFxcIiwgMjAwXSxcXG4gICAgW1xcXCJoZWxwXFxcIiwgZmFsc2VdLFxcbiAgXSk7XFxuICBpZiAoZmxhZ3MuXy5sZW5ndGggPT09IDAgfHwgZmxhZ3MuaGVscCkge1xcbiAgICBucy50cHJpbnQoXFxcIlRoaXMgc2NyaXB0IG1vbml0b3JzIGFuZCBzdGFydHMgY2FtcGFpZ25zIGZvciBhIHNlcnZlci5cXFwiKTtcXG4gICAgbnMudHByaW50KGBVU0FHRTogcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBTRVJWRVJfTkFNRWApO1xcbiAgICBucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuICAgIG5zLnRwcmludChgPiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IG4wMGRsZXNgKTtcXG4gICAgcmV0dXJuO1xcbiAgfVxcbiAgbnMudGFpbCgpO1xcbiAgbnMuZGlzYWJsZUxvZyhcXFwiQUxMXFxcIik7XFxuICBsZXQgYWN0aXZlID0gW107IC8vYWN0aXZlIGNhbXBhaWduc1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3Qgc2VydmVyID0gZmxhZ3MuX1swXTtcXG4gICAgY29uc3QgeyB0aGFjaywgdGdyb3csIHR3ZWFrZW4gfSA9IGdldE5lZWRlZFRocmVhZHMobnMsIHNlcnZlcik7XFxuXFxuICAgIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkoc2VydmVyKTtcXG4gICAgbGV0IG1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoc2VydmVyKTtcXG4gICAgaWYgKG1vbmV5ID09PSAwKSBtb25leSA9IDE7XFxuICAgIGNvbnN0IG1vbmV5X3BjdCA9IChtb25leSAvIG1heE1vbmV5KSAqIDEwMDtcXG4gICAgY29uc3QgcHJvdGVjdGlvbiA9XFxuICAgICAgbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbChzZXJ2ZXIpIC0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzZXJ2ZXIpO1xcblxcbiAgICBucy5jbGVhckxvZyhzZXJ2ZXIpO1xcbiAgICBucy5wcmludChgJHtzZXJ2ZXJ9OmApO1xcbiAgICBucy5wcmludChcXG4gICAgICBgICRfX19fX19fOiAke25zLm5Gb3JtYXQobW9uZXksIFxcXCIkMC4wMDBhXFxcIil9IC8gJHtucy5uRm9ybWF0KFxcbiAgICAgICAgbWF4TW9uZXksXFxuICAgICAgICBcXFwiJDAuMDAwYVxcXCJcXG4gICAgICApfSAoJHttb25leV9wY3QudG9GaXhlZCgyKX0lKWBcXG4gICAgKTtcXG5cXG4gICAgY29uc3QgaGFja3RpbWUgPSBucy5nZXRIYWNrVGltZShzZXJ2ZXIpO1xcbiAgICBjb25zdCBncm93dGltZSA9IG5zLmdldEdyb3dUaW1lKHNlcnZlcik7XFxuICAgIGNvbnN0IHdlYWtlbnRpbWUgPSBucy5nZXRXZWFrZW5UaW1lKHNlcnZlcik7XFxuXFxuICAgIG5zLnByaW50KGAgc2VjdXJpdHk6ICske3Byb3RlY3Rpb24udG9GaXhlZCgyKX1gKTtcXG4gICAgbnMucHJpbnQoYCBoYWNrX19fXzogJHtucy50Rm9ybWF0KGhhY2t0aW1lKX0gKHQ9JHt0aGFja30pYCk7XFxuICAgIG5zLnByaW50KGAgZ3Jvd19fX186ICR7bnMudEZvcm1hdChncm93dGltZSl9ICh0PSR7dGdyb3d9KWApO1xcbiAgICBucy5wcmludChgIHdlYWtlbl9fOiAke25zLnRGb3JtYXQod2Vha2VudGltZSl9ICh0PSR7dHdlYWtlbn0pYCk7XFxuXFxuICAgIC8vIGdldCBpZGxlIGNhcGFcXG4gICAgbGV0IHsgY2FwYSwgdG90YWwgfSA9IGlkbGVfdGhyZWFkcyhucywgMS43NSk7XFxuXFxuICAgIGlmIChwcm90ZWN0aW9uID4gNSkge1xcbiAgICAgIGNvbnN0IG90aGVyV2Vha2VuZXJzID0gYWN0aXZlLmZpbHRlcigoZW50cnkpID0+IGVudHJ5LnR5cGUgPT0gXFxcIndlYWtlblxcXCIpO1xcbiAgICAgIGNvbnN0IG90aGVyV2Vha2VuVGhyZWFkcyA9IG90aGVyV2Vha2VuZXJzXFxuICAgICAgICAubWFwKChlbnRyeSkgPT4gZW50cnkudGhyZWFkcylcXG4gICAgICAgIC5yZWR1Y2UoKHN1bSwgdGhyZWFkcykgPT4gc3VtICsgdGhyZWFkcywgMCk7XFxuICAgICAgaWYgKG90aGVyV2Vha2VuZXJzLmxlbmd0aCA9PSAwIHx8IG90aGVyV2Vha2VuVGhyZWFkcyA8IHR3ZWFrZW4pIHtcXG4gICAgICAgIGNvbnN0IGxhdW5jaFRocmVhZHMgPSBNYXRoLm1pbih0b3RhbCwgdHdlYWtlbiAtIG90aGVyV2Vha2VuVGhyZWFkcyk7XFxuICAgICAgICBpZiAoXFxuICAgICAgICAgIGxhdW5jaChucywgY2FwYSwgbGF1bmNoVGhyZWFkcywgXFxcIndlYWtlblxcXCIsIHNlcnZlciwgTWF0aC5yYW5kb20oKSAqIDEwKVxcbiAgICAgICAgKVxcbiAgICAgICAgICBhY3RpdmUucHVzaCh7XFxuICAgICAgICAgICAgdHlwZTogXFxcIndlYWtlblxcXCIsXFxuICAgICAgICAgICAgdGhyZWFkczogbGF1bmNoVGhyZWFkcyxcXG4gICAgICAgICAgICBkdXI6IHdlYWtlbnRpbWUsXFxuICAgICAgICAgICAgc3RhcnQ6IDAsXFxuICAgICAgICAgICAgZXRhOiBhZnRlcih3ZWFrZW50aW1lKSxcXG4gICAgICAgICAgfSk7XFxuICAgICAgICBlbHNlXFxuICAgICAgICAgIG5zLnByaW50KFxcbiAgICAgICAgICAgIGBleHBlZGl0ZSB3ZWFrZW4gd2l0aCAke2xhdW5jaFRocmVhZHN9IG9mICR7dG90YWx9IHRocmVhZHMgZmFpbGVkYFxcbiAgICAgICAgICApO1xcblxcbiAgICAgICAgY29uc3QgdXBkYXRlID0gaWRsZV90aHJlYWRzKG5zLCAxLjc1KTtcXG4gICAgICAgIGNhcGEgPSB1cGRhdGUuY2FwYTtcXG4gICAgICAgIHRvdGFsID0gdXBkYXRlLnRvdGFsO1xcbiAgICAgIH1cXG4gICAgfVxcblxcbiAgICAvLyBwcmVwIHNlcnZlciBtb25leVxcbiAgICBpZiAobW9uZXlfcGN0IDwgOTApIHtcXG4gICAgICBjb25zdCBvdGhlckdyb3dlcnMgPSBhY3RpdmUuZmlsdGVyKChlbnRyeSkgPT4gZW50cnkudHlwZSA9PSBcXFwiZ3Jvd1xcXCIpO1xcbiAgICAgIGNvbnN0IG90aGVyR3Jvd1RocmVhZHMgPSBvdGhlckdyb3dlcnNcXG4gICAgICAgIC5tYXAoKGVudHJ5KSA9PiBlbnRyeS50aHJlYWRzKVxcbiAgICAgICAgLnJlZHVjZSgoc3VtLCB0aHJlYWRzKSA9PiBzdW0gKyB0aHJlYWRzLCAwKTtcXG4gICAgICBpZiAob3RoZXJHcm93ZXJzLmxlbmd0aCA9PSAwIHx8IG90aGVyR3Jvd1RocmVhZHMgPCB0Z3Jvdykge1xcbiAgICAgICAgY29uc3QgbGF1bmNoVGhyZWFkcyA9IE1hdGgubWluKHRvdGFsLCB0Z3JvdyAtIG90aGVyR3Jvd1RocmVhZHMpO1xcbiAgICAgICAgaWYgKGxhdW5jaChucywgY2FwYSwgbGF1bmNoVGhyZWFkcywgXFxcImdyb3dcXFwiLCBzZXJ2ZXIsIE1hdGgucmFuZG9tKCkgKiAxMCkpXFxuICAgICAgICAgIGFjdGl2ZS5wdXNoKHtcXG4gICAgICAgICAgICB0eXBlOiBcXFwiZ3Jvd1xcXCIsXFxuICAgICAgICAgICAgdGhyZWFkczogbGF1bmNoVGhyZWFkcyxcXG4gICAgICAgICAgICBkdXI6IGdyb3d0aW1lLFxcbiAgICAgICAgICAgIHN0YXJ0OiAwLFxcbiAgICAgICAgICAgIGV0YTogYWZ0ZXIoZ3Jvd3RpbWUpLFxcbiAgICAgICAgICB9KTtcXG4gICAgICAgIGVsc2VcXG4gICAgICAgICAgbnMucHJpbnQoXFxuICAgICAgICAgICAgYGV4cGVkaXRlIGdyb3d0aCB3aXRoICR7bGF1bmNoVGhyZWFkc30gb2YgJHt0b3RhbH0gdGhyZWFkcyBmYWlsZWRgXFxuICAgICAgICAgICk7XFxuICAgICAgICBjb25zdCB1cGRhdGUgPSBpZGxlX3RocmVhZHMobnMsIDEuNyk7XFxuICAgICAgICBjYXBhID0gdXBkYXRlLmNhcGE7XFxuICAgICAgICB0b3RhbCA9IHVwZGF0ZS50b3RhbDtcXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgLy8gc2VydmVyIGlzIG9rLCBsYXVuY2ggY2FtcGFpZ25cXG4gICAgaWYgKG1vbmV5X3BjdCA+PSA5MCAmJiBwcm90ZWN0aW9uIDw9IDUpIHtcXG4gICAgICBjb25zdCBidWZmZXIgPSAyMDA7IC8vbXNcXG5cXG4gICAgICAvL3NpbXBsZSBjYXNlXFxuICAgICAgaWYgKHRvdGFsID49IHRoYWNrICsgdHdlYWtlbiArIHRncm93ICsgdHdlYWtlbikge1xcbiAgICAgICAgbGV0IHdhaXRfaDEsIHdhaXRfdzFfMSwgd2FpdF9nMSwgd2FpdF93MV8yO1xcblxcbiAgICAgICAgLy8gY2FsYyB3YWl0IHRpbWVzIGJhc2VkIG9uIGxvbmdlc3QgYWN0aW9uXFxuICAgICAgICB3YWl0X3cxXzEgPSBidWZmZXI7XFxuICAgICAgICB3YWl0X3cxXzIgPSB3ZWFrZW50aW1lICsgMyAqIGJ1ZmZlciAtIHdlYWtlbnRpbWU7XFxuICAgICAgICB3YWl0X2cxID0gd2Vha2VudGltZSArIDIgKiBidWZmZXIgLSBncm93dGltZTtcXG4gICAgICAgIHdhaXRfaDEgPSB3ZWFrZW50aW1lIC0gaGFja3RpbWU7XFxuXFxuICAgICAgICAvLyBsYXVuY2ggaW1tZWRpYXRlbHksIHNjcmlwdCB3aWxsIGFjdGl2ZSB3YWl0IChjb25zaWRlciBsYXVuY2hpbmcgZGVsYXllZClcXG4gICAgICAgIGlmIChsYXVuY2gobnMsIGNhcGEsIHR3ZWFrZW4sIFxcXCJ3ZWFrZW5cXFwiLCBzZXJ2ZXIsIHdhaXRfdzFfMSkpXFxuICAgICAgICAgIGFjdGl2ZS5wdXNoKHtcXG4gICAgICAgICAgICB0eXBlOiBcXFwid2Vha2VuXFxcIixcXG4gICAgICAgICAgICB0aHJlYWRzOiB0d2Vha2VuLFxcbiAgICAgICAgICAgIGR1cjogd2Vha2VudGltZSxcXG4gICAgICAgICAgICBzdGFydDogYWZ0ZXIod2FpdF93MV8xKSxcXG4gICAgICAgICAgICBldGE6IGFmdGVyKHdhaXRfdzFfMSArIHdlYWtlbnRpbWUpLFxcbiAgICAgICAgICB9KTtcXG4gICAgICAgIGVsc2UgbnMucHJpbnQoXFxcIncxIGZhaWxlZFxcXCIpO1xcbiAgICAgICAgbGV0IHVwZGF0ZSA9IGlkbGVfdGhyZWFkcyhucywgMS43KTtcXG4gICAgICAgIGNhcGEgPSB1cGRhdGUuY2FwYTtcXG4gICAgICAgIHRvdGFsID0gdXBkYXRlLnRvdGFsO1xcblxcbiAgICAgICAgaWYgKGxhdW5jaChucywgY2FwYSwgdHdlYWtlbiwgXFxcIndlYWtlblxcXCIsIHNlcnZlciwgd2FpdF93MV8yKSlcXG4gICAgICAgICAgYWN0aXZlLnB1c2goe1xcbiAgICAgICAgICAgIHR5cGU6IFxcXCJ3ZWFrZW5cXFwiLFxcbiAgICAgICAgICAgIHRocmVhZHM6IHR3ZWFrZW4sXFxuICAgICAgICAgICAgZHVyOiB3ZWFrZW50aW1lLFxcbiAgICAgICAgICAgIHN0YXJ0OiBhZnRlcih3YWl0X3cxXzIpLFxcbiAgICAgICAgICAgIGV0YTogYWZ0ZXIod2FpdF93MV8yICsgd2Vha2VudGltZSksXFxuICAgICAgICAgIH0pO1xcbiAgICAgICAgZWxzZSBucy5wcmludChcXFwidzIgZmFpbGVkXFxcIik7XFxuICAgICAgICB1cGRhdGUgPSBpZGxlX3RocmVhZHMobnMsIDEuNyk7XFxuICAgICAgICBjYXBhID0gdXBkYXRlLmNhcGE7XFxuICAgICAgICB0b3RhbCA9IHVwZGF0ZS50b3RhbDtcXG5cXG4gICAgICAgIGlmIChsYXVuY2gobnMsIGNhcGEsIHRncm93LCBcXFwiZ3Jvd1xcXCIsIHNlcnZlciwgd2FpdF9nMSkpXFxuICAgICAgICAgIGFjdGl2ZS5wdXNoKHtcXG4gICAgICAgICAgICB0eXBlOiBcXFwiZ3Jvd1xcXCIsXFxuICAgICAgICAgICAgdGhyZWFkczogdGdyb3csXFxuICAgICAgICAgICAgZHVyOiBncm93dGltZSxcXG4gICAgICAgICAgICBzdGFydDogYWZ0ZXIod2FpdF9nMSksXFxuICAgICAgICAgICAgZXRhOiBhZnRlcih3YWl0X2cxICsgZ3Jvd3RpbWUpLFxcbiAgICAgICAgICB9KTtcXG4gICAgICAgIGVsc2UgbnMucHJpbnQoXFxcImcgZmFpbGVkXFxcIik7XFxuICAgICAgICB1cGRhdGUgPSBpZGxlX3RocmVhZHMobnMsIDEuNyk7XFxuICAgICAgICBjYXBhID0gdXBkYXRlLmNhcGE7XFxuICAgICAgICB0b3RhbCA9IHVwZGF0ZS50b3RhbDtcXG5cXG4gICAgICAgIGlmIChsYXVuY2gobnMsIGNhcGEsIHRoYWNrLCBcXFwiaGFja1xcXCIsIHNlcnZlciwgd2FpdF9oMSkpXFxuICAgICAgICAgIGFjdGl2ZS5wdXNoKHtcXG4gICAgICAgICAgICB0eXBlOiBcXFwiaGFja1xcXCIsXFxuICAgICAgICAgICAgdGhyZWFkczogdGhhY2ssXFxuICAgICAgICAgICAgZHVyOiBoYWNrdGltZSxcXG4gICAgICAgICAgICBzdGFydDogYWZ0ZXIod2FpdF9oMSksXFxuICAgICAgICAgICAgZXRhOiBhZnRlcih3YWl0X2gxICsgaGFja3RpbWUpLFxcbiAgICAgICAgICB9KTtcXG4gICAgICAgIGVsc2UgbnMucHJpbnQoXFxcImggZmFpbGVkXFxcIik7XFxuICAgICAgICB1cGRhdGUgPSBpZGxlX3RocmVhZHMobnMsIDEuNyk7XFxuICAgICAgICBjYXBhID0gdXBkYXRlLmNhcGE7XFxuICAgICAgICB0b3RhbCA9IHVwZGF0ZS50b3RhbDtcXG4gICAgICB9IGVsc2Uge1xcbiAgICAgICAgbnMucHJpbnQoYGZyZWU6ICR7dG90YWx9LCBuZWVkOiAke3RoYWNrICsgdHdlYWtlbiArIHRncm93ICsgdHdlYWtlbn1gKTtcXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcXG4gICAgY29uc3Qgd2FpdGluZyA9IGFjdGl2ZS5maWx0ZXIoKGFjdGl2ZSkgPT4gYWN0aXZlLnN0YXJ0ID4gbm93KTtcXG4gICAgY29uc3QgcnVubmluZyA9IGFjdGl2ZS5maWx0ZXIoXFxuICAgICAgKGFjdGl2ZSkgPT4gYWN0aXZlLnN0YXJ0IDw9IG5vdyAmJiBhY3RpdmUuZXRhID49IG5vd1xcbiAgICApO1xcbiAgICBjb25zdCBkb25lID0gYWN0aXZlLmZpbHRlcigoYWN0aXZlKSA9PiBhY3RpdmUuZXRhIDwgbm93KTtcXG4gICAgYWN0aXZlID0gYWN0aXZlLmZpbHRlcigoYWN0aXZlKSA9PiBhY3RpdmUuZXRhID49IG5vdyk7XFxuXFxuICAgIG5zLnByaW50KFxcbiAgICAgIGB3YWl0aW5nOiAke3dhaXRpbmcubGVuZ3RofSwgcnVubmluZzogJHtydW5uaW5nLmxlbmd0aH0sIGRvbmU6ICR7XFxuICAgICAgICBkb25lLmxlbmd0aFxcbiAgICAgIH0sZnJlZTogJHt0b3RhbH0sIG5lZWQ6ICR7dGhhY2sgKyB0d2Vha2VuICsgdGdyb3cgKyB0d2Vha2VufWBcXG4gICAgKTtcXG4gICAgYXdhaXQgbnMuc2xlZXAoMjApO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gYXV0b2NvbXBsZXRlKGRhdGEsIGFyZ3MpIHtcXG4gIHJldHVybiBkYXRhLnNlcnZlcnM7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9uZW8vY29vcmRpbmF0ZS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85NzAyNzk1MS02MGI5LTQ2YjQtYjMxZC1mMDg5OThjMzc2MTJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIwOX0se1wiZmlsZW5hbWVcIjpcIi9uZW8vZ2V0LWlkbGUtY2FwYS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vN2RkNGI1YmEtMzcyMS00NDVjLThkYjUtYTM2NDIwMjBmM2NkXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE5ODgzfSx7XCJmaWxlbmFtZVwiOlwiL25lby9jb29yZGluYXRlLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy80NTg3Y2I5Yy01YzUzLTQxNmUtOGNmMy0wZjg4OTVmZDY1MGJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MTR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6NS44LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDE0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja0FuYWx5emVUaHJlYWRzXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3d0aEFuYWx5emVcIixcImNvc3RcIjoxfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEhhY2tUaW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEdyb3dUaW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFdlYWtlblRpbWVcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclVzZWRSYW1cIixcImNvc3RcIjowLjA1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzY2FuIH0gZnJvbSBcXFwiaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gaWRsZV90aHJlYWRzKG5zLCBzaXplKSB7XFxuICBjb25zdCBzcnZzID0gc2NhbihucykuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSk7XFxuICBjb25zdCBjYXBhID0gc3J2cy5tYXAoKHNydikgPT4ge1xcbiAgICBjb25zdCBmcmVlUmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydikgLSBucy5nZXRTZXJ2ZXJVc2VkUmFtKHNydik7XFxuICAgIGNvbnN0IGlkbGVUaHJlYWRzID0gTWF0aC5mbG9vcihmcmVlUmFtIC8gc2l6ZSk7XFxuICAgIHJldHVybiB7IG5hbWU6IHNydiwgdGhyZWFkczogaWRsZVRocmVhZHMsIGZyZWU6IGZyZWVSYW0gfTtcXG4gIH0pO1xcbiAgY29uc3QgdG90YWwgPSBjYXBhLnJlZHVjZSgoc3VtLCBlbGVtKSA9PiBzdW0gKyBlbGVtLnRocmVhZHMsIDApO1xcbiAgcmV0dXJuIHsgY2FwYSwgdG90YWwgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgeyBjYXBhLCB0b3RhbCB9ID0gaWRsZV90aHJlYWRzKG5zLCAxLjcpO1xcbiAgZm9yIChjb25zdCBlbGVtIG9mIGNhcGEpIHtcXG4gICAgaWYgKGVsZW0udGhyZWFkcyA+IDApIHtcXG4gICAgICBucy50cHJpbnQoYCR7ZWxlbS5uYW1lfTogJHtlbGVtLnRocmVhZHN9ICgke2VsZW0uZnJlZX0gR0IpYCk7XFxuICAgIH1cXG4gIH1cXG4gIG5zLnRwcmludCh0b3RhbCArIFxcXCIgdGhyZWFkcyBjYW4gYmUgYWRkZWRcXFwiKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiL25lby9nZXQtaWRsZS1jYXBhLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2Q5OWE1N2ViLTM0M2QtNDE1My05ZDRlLTgyMzQ5YzRmNDE1N1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjA5fSx7XCJmaWxlbmFtZVwiOlwiL25lby9nZXQtaWRsZS1jYXBhLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zYTU5Y2U5Ny04Y2YwLTQyNGUtYWYzMC01ZGZhZDE1OTIzYTJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTk4ODN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS45NSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxOTg4MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJVc2VkUmFtXCIsXCJjb3N0XCI6MC4wNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvbmVvL2dyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzAzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiL25lby9oYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL25lby9oYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82ZjJkZDkxMy0wOWFjLTRmNmItOTIwMS0zNWUwMTIyZjExYzdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Nzg2NjZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMwNCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvbmVvL3dlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMDUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mZmY3NTFmYy1hMzFlLTQ1YjctYTBmZi00ZmM5ZWFmNmYxZjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDY4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI1NSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzBiYWZjZjM3LWJlNjktNDM4Ni05ZWJiLTk2YTlmNWQzMDk4ZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMjk5fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTk5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzYyMWZjYmUyLTA2MzMtNDRlMi1hZjI5LThhMjRlM2RiNGVjMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ1OX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDU5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IGlkbGVfdGhyZWFkcyB9IGZyb20gXFxcIm5lby9nZXQtaWRsZS1jYXBhLmpzXFxcIjtcXG5pbXBvcnQgeyBsYXVuY2ggfSBmcm9tIFxcXCJuZW8vY29vcmRpbmF0ZS5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgeyBjYXBhLCB0b3RhbCB9ID0gaWRsZV90aHJlYWRzKG5zLCAxLjcpO1xcbiAgY29uc3QgdGhyZWFkcyA9IDEwO1xcbiAgY29uc3QgYWN0aW9uID0gXFxcIndlYWtlblxcXCI7XFxuICBjb25zdCB0YXJnZXQgPSBcXFwiY29tcHRla1xcXCI7XFxuICBjb25zdCB3YWl0X21zID0gMDtcXG5cXG4gIGlmIChsYXVuY2gobnMsIGNhcGEsIHRocmVhZHMsIGFjdGlvbiwgdGFyZ2V0LCB3YWl0X21zKSkge1xcbiAgICBucy50cHJpbnRmKFxcXCJzdWNjZXNzXFxcIik7XFxuICB9IGVsc2UgbnMudHByaW50ZihcXFwiZmFpbGVkXFxcIik7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9uZW8vc2luZ2xlLWxhdW5jaC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2JhMGZiOWI3LTEyYTEtNDQ5My1iMjFkLWZjODRkZjNmZjlhMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxMjUxMDJ9LHtcImZpbGVuYW1lXCI6XCIvbmVvL2dldC1pZGxlLWNhcGEuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzEwNzI2ODRlLThiYzUtNGUyMC04Nzc5LTI2ZjdmNGI0NjA3NFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxMjUwOTZ9LHtcImZpbGVuYW1lXCI6XCIvbmVvL2Nvb3JkaW5hdGUuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzQzZjA1MzA3LTU1MGQtNDMxMi04OTM0LTM3YTg5Yjg1MTU0YVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxMjUwOTl9LHtcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8wMzM1NjE4Mi04OWU3LTRmOTMtOGM1OC01ZDJlMjFkODFhOTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTI1MTAyfSx7XCJmaWxlbmFtZVwiOlwiL25lby9nZXQtaWRsZS1jYXBhLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85ZGNjYWY0ZS0xMmQ1LTRkMDYtYWVmYS1lYTAwMDgxZWFhODhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTI1MDk2fSx7XCJmaWxlbmFtZVwiOlwiL25lby9zaW5nbGUtbGF1bmNoLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84MmRjYTUzNC05ZDgxLTQwNDYtOGViMC03ZjUwOTQ4ODg3ODlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTI1MTUzfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuMjUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTE0NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJVc2VkUmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IHNjYW4sIHNvcnRlZF90YXJnZXRzIH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4uL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCBuZXQgPSBzY2FuKG5zKTtcXG5cXG4gIC8vIGRldGVybWluZSBwb3J0cyB3ZSBjYW4gb3BlblxcbiAgbGV0IGNhbl9wb3J0cyA9IDA7XFxuICBpZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkgY2FuX3BvcnRzKys7XFxuICBpZiAobnMuZmlsZUV4aXN0cyhcXFwiRlRQQ3JhY2suZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkgY2FuX3BvcnRzKys7XFxuICBpZiAobnMuZmlsZUV4aXN0cyhcXFwicmVsYXlTTVRQLmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIGNhbl9wb3J0cysrO1xcbiAgaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkhUVFBXb3JtLmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIGNhbl9wb3J0cysrO1xcbiAgaWYgKG5zLmZpbGVFeGlzdHMoXFxcIlNRTEluamVjdC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSBjYW5fcG9ydHMrKztcXG5cXG4gIC8vIGNoZWNrIG1hIDEzMzcgc2tpbGx6XFxuICBjb25zdCBza2lsbHogPSBucy5nZXRIYWNraW5nTGV2ZWwoKTtcXG5cXG4gIGNvbnN0IHB3bmQgPSBuZXQuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSk7XFxuICBjb25zdCB1bnB3bmQgPSBuZXQuZmlsdGVyKChzcnYpID0+ICFwd25kLmluY2x1ZGVzKHNydikpO1xcbiAgY29uc3QgdGd0cyA9IHVucHduZC5maWx0ZXIoKHNydikgPT4ge1xcbiAgICBjb25zdCBuZWVkUG9ydHMgPSBucy5nZXRTZXJ2ZXJOdW1Qb3J0c1JlcXVpcmVkKHNydik7XFxuICAgIGNvbnN0IG5lZWRTa2lsbHogPSBucy5nZXRTZXJ2ZXJSZXF1aXJlZEhhY2tpbmdMZXZlbChzcnYpO1xcbiAgICByZXR1cm4gbmVlZFBvcnRzIDw9IGNhbl9wb3J0cyAmJiBuZWVkU2tpbGx6IDw9IHNraWxsejtcXG4gIH0pO1xcblxcbiAgbnMudHByaW50ZihcXG4gICAgYGdvdCAke3B3bmQubGVuZ3RofSBwMHduZCBzZXJ2ZXJzLCBvdXQgb2YgJHtuZXQubGVuZ3RofSwgZm91bmQgJHt0Z3RzLmxlbmd0aH0gdGFyZ2V0c2BcXG4gICk7XFxuXFxuICB0Z3RzLmZvckVhY2goKHNydikgPT4ge1xcbiAgICBjb25zdCBuZWVkUG9ydHMgPSBucy5nZXRTZXJ2ZXJOdW1Qb3J0c1JlcXVpcmVkKHNydik7XFxuICAgIGNvbnN0IG5lZWRTa2lsbHogPSBucy5nZXRTZXJ2ZXJSZXF1aXJlZEhhY2tpbmdMZXZlbChzcnYpO1xcbiAgICBpZiAobmVlZFBvcnRzIDw9IGNhbl9wb3J0cyAmJiBuZWVkU2tpbGx6IDw9IHNraWxseikge1xcbiAgICAgIG5zLnRwcmludGYoYHRndCAke3Nydn1gKTtcXG4gICAgICBpZiAobmVlZFBvcnRzID49IDEpIG5zLmJydXRlc3NoKHNydik7XFxuICAgICAgaWYgKG5lZWRQb3J0cyA+PSAyKSBucy5mdHBjcmFjayhzcnYpO1xcbiAgICAgIGlmIChuZWVkUG9ydHMgPj0gMykgbnMucmVsYXlzbXRwKHNydik7XFxuICAgICAgaWYgKG5lZWRQb3J0cyA+PSA0KSBucy5odHRwd29ybShzcnYpO1xcbiAgICAgIGlmIChuZWVkUG9ydHMgPj0gNSkgbnMuc3FsaW5qZWN0KHNydik7XFxuICAgICAgbnMubnVrZShzcnYpO1xcbiAgICAgIG5zLnRwcmludGYoYHAwd25kICR7c3J2fWApO1xcbiAgICB9XFxuICB9KTtcXG5cXG4gIGlmIChucy5maWxlRXhpc3RzKFxcXCIvbmVvL2Nvb3JkaW5hdGUuanNcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuICAgIGNvbnN0IGFsbF90Z3QgPSBzb3J0ZWRfdGFyZ2V0cyhucykubWFwKChlbGVtKSA9PiBlbGVtLm5hbWUpO1xcbiAgICBjb25zdCBvdXRwdXQgPSBhbGxfdGd0LnNwbGljZSgwLCA1KTtcXG5cXG4gICAgbnMudHByaW50KFxcXCJjb29yZGluYXRlcmQgYXR0YWNrIG9uOiBcXFwiICsgb3V0cHV0LmpvaW4oXFxcIiBcXFwiKSk7XFxuXFxuICAgIG91dHB1dC5mb3JFYWNoKCh0YXJnZXQpID0+IHtcXG4gICAgICBucy5ydW4oXFxcIi9uZW8vY29vcmRpbmF0ZS5qc1xcXCIsIDEsIHRhcmdldCk7XFxuICAgIH0pO1xcbiAgfSBlbHNlIHtcXG4gICAgbnMudHByaW50KFxcXCJubyBuZW8vY29vcmRpbmF0ZS5qc1xcXCIpO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCIvbmVvL3J1bmMuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iMDQ0YzAzNy1mYjZiLTQ3MmYtYTM0Yy1jN2I2MTFkYTlkMjhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMyfSx7XCJmaWxlbmFtZVwiOlwiL25lby9ydW5jLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy80NDUwNjU2YS1hYThjLTQ3YWQtYWUzZS1kNTNiMTEzMzk3NzhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDQ1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTQ1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImZpbGVFeGlzdHNcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRIYWNraW5nTGV2ZWxcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJOdW1Qb3J0c1JlcXVpcmVkXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyUmVxdWlyZWRIYWNraW5nTGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJmdHBjcmFja1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJyZWxheXNtdHBcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaHR0cHdvcm1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic3FsaW5qZWN0XCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIm51a2VcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwicnVuXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gLTU0MDAwO1xcbiAgbnMuZGlzYWJsZUxvZyhcXFwiQUxMXFxcIik7XFxuICBucy50YWlsKCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5jbGVhckxvZygpO1xcblxcbiAgICBjb25zdCBrYXJtYSA9IG5zLmhlYXJ0LmJyZWFrKCk7XFxuICAgIGlmIChrYXJtYSA+IHRhcmdldClcXG4gICAgICBucy5wcmludChgQ3VycmVudCBLYXJtYSA6ICR7a2FybWF9LCAkeyhrYXJtYSAvIHRhcmdldCkudG9GaXhlZCgyKX0lYCk7XFxuXFxuICAgIGNvbnN0IGNyaW1lID0gXFxcIkhvbWljaWRlXFxcIjtcXG5cXG4gICAgY29uc3QgeyBrYXJtYTogZGthcm1hLCBtb25leSwgdGltZSwgLi4uc3RhdHMgfSA9IG5zLmdldENyaW1lU3RhdHMoY3JpbWUpO1xcbiAgICBucy5wcmludChgJHtjcmltZX0sIGNoYW5jZTogJHsobnMuZ2V0Q3JpbWVDaGFuY2UoY3JpbWUpICogMTAwLjApLnRvRml4ZWQoXFxuICAgICAgMlxcbiAgICApfSUsXFxuS2FybWE6IC0ke2RrYXJtYX0sIGR1cjogJHtucy50Rm9ybWF0KHRpbWUpfSwgZ2FpbjogJHtucy5uRm9ybWF0KFxcbiAgICAgIG1vbmV5LFxcbiAgICAgIFxcXCIkMC4wMDBhXFxcIlxcbiAgICApfVxcbiAgICR7SlNPTi5zdHJpbmdpZnkoc3RhdHMsIG51bGwsIDIpfWApO1xcbiAgICBjb25zdCBkdXIgPSBucy5jb21taXRDcmltZShjcmltZSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChkdXIpO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCIvc2luZy9raWxsa2lsbC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIi9zaW5nL2tpbGxraWxsLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iNDQxMDljYS05NTc4LTRiOGYtYTRkOS1mMDFjMGEwZGZlNzlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDI5fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjE2LjYsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTE1MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldENyaW1lU3RhdHNcIixcImNvc3RcIjo1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0Q3JpbWVDaGFuY2VcIixcImNvc3RcIjo1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiY29tbWl0Q3JpbWVcIixcImNvc3RcIjo1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4uL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSAtNTQwMDA7XFxuICBucy5kaXNhYmxlTG9nKFxcXCJBTExcXFwiKTtcXG4gIG5zLnRhaWwoKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLmNsZWFyTG9nKCk7XFxuXFxuICAgIGNvbnN0IGthcm1hID0gbnMuaGVhcnQuYnJlYWsoKTtcXG4gICAgaWYgKGthcm1hID4gdGFyZ2V0KVxcbiAgICAgIG5zLnByaW50KGBDdXJyZW50IEthcm1hIDogJHtrYXJtYX0sICR7KGthcm1hIC8gdGFyZ2V0KS50b0ZpeGVkKDIpfSVgKTtcXG5cXG4gICAgY29uc3QgY3JpbWUgPSBcXFwiTXVnIHNvbWVvbmVcXFwiO1xcblxcbiAgICBjb25zdCB7IGthcm1hOiBka2FybWEsIG1vbmV5LCB0aW1lLCAuLi5zdGF0cyB9ID0gbnMuZ2V0Q3JpbWVTdGF0cyhjcmltZSk7XFxuICAgIG5zLnByaW50KGAke2NyaW1lfSwgY2hhbmNlOiAkeyhucy5nZXRDcmltZUNoYW5jZShjcmltZSkgKiAxMDAuMCkudG9GaXhlZChcXG4gICAgICAyXFxuICAgICl9JSwgXFxuS2FybWE6IC0ke2RrYXJtYX0sIGR1cjogJHtucy50Rm9ybWF0KHRpbWUpfSwgZ2FpbjogJHtucy5uRm9ybWF0KFxcbiAgICAgIG1vbmV5LFxcbiAgICAgIFxcXCIkMC4wMDBhXFxcIlxcbiAgICApfVxcbiR7SlNPTi5zdHJpbmdpZnkoc3RhdHMsIG51bGwsIDIpfWApO1xcblxcbiAgICBucy5wcmludChcXG4gICAgICBgSG9taWNpZGUgY2hhbmNlOiAkeyhucy5nZXRDcmltZUNoYW5jZShcXFwiSG9taWNpZGVcXFwiKSAqIDEwMC4wKS50b0ZpeGVkKDIpfSVgXFxuICAgICk7XFxuXFxuICAgIG5zLmNvbW1pdENyaW1lKGNyaW1lKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKDUwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCIvc2luZy9tdWdzaG90LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL3NpbmcvbXVnc2hvdC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMzcyZTIyMGYtYmYwOS00MmU4LWIzYmMtOTAyNGMwZjQzNjdjXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjExNjM1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjE2LjYsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTE1NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldENyaW1lU3RhdHNcIixcImNvc3RcIjo1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0Q3JpbWVDaGFuY2VcIixcImNvc3RcIjo1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiY29tbWl0Q3JpbWVcIixcImNvc3RcIjo1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJjb25zdCBjcmltZXMgPSBbXFxuICBcXFwiU2hvcGxpZnRcXFwiLFxcbiAgXFxcIlJvYiBTdG9yZVxcXCIsXFxuICBcXFwiTXVnXFxcIixcXG4gIFxcXCJMYXJjZW55XFxcIixcXG4gIFxcXCJEZWFsIERydWdzXFxcIixcXG4gIFxcXCJCb25kIEZvcmdlcnlcXFwiLFxcbiAgXFxcIlRyYWZmaWNrIEFybXNcXFwiLFxcbiAgXFxcIkhvbWljaWRlXFxcIixcXG4gIFxcXCJHcmFuZCBUaGVmdCBBdXRvXFxcIixcXG4gIFxcXCJLaWRuYXBcXFwiLFxcbiAgXFxcIkFzc2Fzc2luYXRpb25cXFwiLFxcbiAgXFxcIkhlaXN0XFxcIixcXG5dO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNyaW1lcy5mb3JFYWNoKChjcmltZSkgPT4ge1xcbiAgICBjb25zdCB7IGthcm1hLCBtb25leSwgdGltZSwgLi4uc3RhdHMgfSA9IG5zLmdldENyaW1lU3RhdHMoY3JpbWUpO1xcbiAgICBucy50cHJpbnQoYCR7Y3JpbWV9LCBjaGFuY2U6ICR7KG5zLmdldENyaW1lQ2hhbmNlKGNyaW1lKSAqIDEwMC4wKS50b0ZpeGVkKFxcbiAgICAgIDJcXG4gICAgKX0lLCBLYXJtYTogJHtrYXJtYX0sIGR1cjogJHtucy50Rm9ybWF0KHRpbWUpfSwgZ2FpbjogJHtucy5uRm9ybWF0KFxcbiAgICAgIG1vbmV5LFxcbiAgICAgIFxcXCIkMC4wMDBhXFxcIlxcbiAgICApfVxcbiAgICR7SlNPTi5zdHJpbmdpZnkoc3RhdHMsIG51bGwsIDIpfWApO1xcbiAgfSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9zaW5nL21lbnUuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL3NpbmcvbWVudS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOGU4NjJmMzktODVmZC00MzA4LTg1ZWMtOTIwZDFjMDg1ODI2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI3OTkwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjExLjYsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjc5OTAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRDcmltZVN0YXRzXCIsXCJjb3N0XCI6NX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldENyaW1lQ2hhbmNlXCIsXCJjb3N0XCI6NX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgdGltZSA9IG5zLmNvbW1pdENyaW1lKFxcXCJIZWlzdFxcXCIpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAodGltZSk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9zaW5nL21vbmV5am9iLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL3NpbmcvbW9uZXlqb2IuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzFiMGM4MTFmLTU1ZDEtNDA3OS04OGFjLTAyYTdmNDZhMDViOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MzY1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjYuNixcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTU1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiY29tbWl0Q3JpbWVcIixcImNvc3RcIjo1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IG1lbWJlcnMgPSBucy5nYW5nLmdldE1lbWJlck5hbWVzKCk7XFxuICAgIGNvbnN0IHRhc2tzID0gbnMuZ2FuZ1xcbiAgICAgIC5nZXRUYXNrTmFtZXMoKVxcbiAgICAgIC5tYXAoKG5hbWUpID0+IG5zLmdhbmcuZ2V0VGFza1N0YXRzKG5hbWUpKTtcXG5cXG4gICAgY29uc3QgdHJhaW5UYXNrID0gdGFza3MuZmluZCgodGFzaykgPT4ge1xcbiAgICAgIHJldHVybiB0YXNrLm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhcXFwidHJhaW5cXFwiKSAmJiB0YXNrLnN0cldlaWdodCA+IDA7XFxuICAgIH0pO1xcblxcbiAgICBpZiAobnMuZ2FuZy5jYW5SZWNydWl0TWVtYmVyKCkpIHtcXG4gICAgICBjb25zdCBuZXdHdXkgPSBgcjAwa2llLSR7bWVtYmVycy5sZW5ndGh9YDtcXG4gICAgICBpZiAobnMuZ2FuZy5yZWNydWl0TWVtYmVyKG5ld0d1eSkpIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwibmV3IGdhbmcgbWVtYmVyIDogXFxcIiArIG5ld0d1eSk7XFxuICAgICAgICBtZW1iZXJzLnB1c2gobmV3R3V5KTtcXG4gICAgICAgIG5zLmdhbmcuc2V0TWVtYmVyVGFzayhuZXdHdXksIHRyYWluVGFzay5uYW1lKTtcXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgY29uc3QgZXF1aXBtZW50ID0gbnMuZ2FuZ1xcbiAgICAgIC5nZXRFcXVpcG1lbnROYW1lcygpXFxuICAgICAgLm1hcCgobmFtZSkgPT4gKHsgbmFtZSwgLi4ubnMuZ2FuZy5nZXRFcXVpcG1lbnRTdGF0cyhuYW1lKSB9KSlcXG4gICAgICAubWFwKChzdGF0cykgPT4gKHtcXG4gICAgICAgIC4uLnN0YXRzLFxcbiAgICAgICAgcHJpY2U6IG5zLmdhbmcuZ2V0RXF1aXBtZW50Q29zdChzdGF0cy5uYW1lKSxcXG4gICAgICAgIHR5cGU6IG5zLmdhbmcuZ2V0RXF1aXBtZW50VHlwZShzdGF0cy5uYW1lKSxcXG4gICAgICB9KSlcXG4gICAgICAuZmlsdGVyKChzdGF0cykgPT4gc3RhdHMuc3RyID4gMCB8fCBzdGF0cy5kZWYgPiAwKTtcXG5cXG4gICAgZm9yIChsZXQgZ2FuZ2VyIG9mIG1lbWJlcnMubWFwKChuYW1lKSA9PiAoe1xcbiAgICAgIG5hbWUsXFxuICAgICAgLi4ubnMuZ2FuZy5nZXRNZW1iZXJJbmZvcm1hdGlvbihuYW1lKSxcXG4gICAgfSkpKSB7XFxuICAgICAgY29uc3QgaGFzRXF1aXAgPSBbLi4uZ2FuZ2VyLmF1Z21lbnRhdGlvbnMsIC4uLmdhbmdlci51cGdyYWRlc107XFxuICAgICAgY29uc3QgbmVlZHMgPSBlcXVpcG1lbnQuZmlsdGVyKChlcXVpcCkgPT4gIWhhc0VxdWlwLmluY2x1ZGVzKGVxdWlwLm5hbWUpKTtcXG5cXG4gICAgICBucy5wcmludChcXG4gICAgICAgIGBnYW5nIG1lbWJlciAke2dhbmdlci5uYW1lfSBoYXM6ICR7aGFzRXF1aXAuam9pbihcXFwiLCBcXFwiKX0sIG5lZWRzOiAke25lZWRzXFxuICAgICAgICAgIC5tYXAoKGVxcCkgPT4gZXFwLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcblxcbiAgICAgIGZvciAobGV0IGVxcCBvZiBuZWVkcykge1xcbiAgICAgICAgaWYgKGVxcC5wcmljZSA8IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKFxcXCJob21lXFxcIikpIHtcXG4gICAgICAgICAgbnMudHByaW50KGBwdXJjaGFzZWQgJHtlcXAubmFtZX0gZm9yICR7Z2FuZ2VyLm5hbWV9YCk7XFxuICAgICAgICAgIG5zLmdhbmcucHVyY2hhc2VFcXVpcG1lbnQoZ2FuZ2VyLm5hbWUsIGVxcC5uYW1lKTtcXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgYXdhaXQgbnMuc2xlZXAoMjApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJnYW5nLW1nbXQtY29tYmF0LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZ2FuZy1tZ210LWNvbWJhdC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMWY0ZjJmZjYtNzYxNC00NzdlLWExOTYtZWFmN2MwODlmNjA3XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3NDF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MjIuNyxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTg5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5nZXRNZW1iZXJOYW1lc1wiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldFRhc2tOYW1lc1wiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldFRhc2tTdGF0c1wiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmNhblJlY3J1aXRNZW1iZXJcIixcImNvc3RcIjoxfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5yZWNydWl0TWVtYmVyXCIsXCJjb3N0XCI6Mn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuc2V0TWVtYmVyVGFza1wiLFwiY29zdFwiOjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldEVxdWlwbWVudE5hbWVzXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuZ2V0RXF1aXBtZW50U3RhdHNcIixcImNvc3RcIjoyfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5nZXRFcXVpcG1lbnRDb3N0XCIsXCJjb3N0XCI6Mn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuZ2V0RXF1aXBtZW50VHlwZVwiLFwiY29zdFwiOjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldE1lbWJlckluZm9ybWF0aW9uXCIsXCJjb3N0XCI6Mn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5wdXJjaGFzZUVxdWlwbWVudFwiLFwiY29zdFwiOjR9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgbWVtYmVycyA9IG5zLmdhbmcuZ2V0TWVtYmVyTmFtZXMoKTtcXG4gICAgY29uc3QgdGFza3MgPSBucy5nYW5nXFxuICAgICAgLmdldFRhc2tOYW1lcygpXFxuICAgICAgLm1hcCgobmFtZSkgPT4gbnMuZ2FuZy5nZXRUYXNrU3RhdHMobmFtZSkpO1xcblxcbiAgICBjb25zdCB0cmFpblRhc2sgPSB0YXNrcy5maW5kKCh0YXNrKSA9PiB7XFxuICAgICAgcmV0dXJuIHRhc2submFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKFxcXCJ0cmFpblxcXCIpICYmIHRhc2suaGFja1dlaWdodCA+IDA7XFxuICAgIH0pO1xcblxcbiAgICBpZiAobnMuZ2FuZy5jYW5SZWNydWl0TWVtYmVyKCkpIHtcXG4gICAgICBjb25zdCBuZXdHdXkgPSBgcjAwa2llLSR7bWVtYmVycy5sZW5ndGh9YDtcXG4gICAgICBpZiAobnMuZ2FuZy5yZWNydWl0TWVtYmVyKG5ld0d1eSkpIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwibmV3IGdhbmcgbWVtYmVyIDogXFxcIiArIG5ld0d1eSk7XFxuICAgICAgICBtZW1iZXJzLnB1c2gobmV3R3V5KTtcXG4gICAgICAgIG5zLmdhbmcuc2V0TWVtYmVyVGFzayhuZXdHdXksIHRyYWluVGFzay5uYW1lKTtcXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgY29uc3QgZXF1aXBtZW50ID0gbnMuZ2FuZ1xcbiAgICAgIC5nZXRFcXVpcG1lbnROYW1lcygpXFxuICAgICAgLm1hcCgobmFtZSkgPT4gKHsgbmFtZSwgLi4ubnMuZ2FuZy5nZXRFcXVpcG1lbnRTdGF0cyhuYW1lKSB9KSlcXG4gICAgICAubWFwKChzdGF0cykgPT4gKHtcXG4gICAgICAgIC4uLnN0YXRzLFxcbiAgICAgICAgcHJpY2U6IG5zLmdhbmcuZ2V0RXF1aXBtZW50Q29zdChzdGF0cy5uYW1lKSxcXG4gICAgICAgIHR5cGU6IG5zLmdhbmcuZ2V0RXF1aXBtZW50VHlwZShzdGF0cy5uYW1lKSxcXG4gICAgICB9KSlcXG4gICAgICAuZmlsdGVyKChzdGF0cykgPT4gc3RhdHMuaGFjayA+IDApO1xcblxcbiAgICBmb3IgKGxldCBnYW5nZXIgb2YgbWVtYmVycy5tYXAoKG5hbWUpID0+ICh7XFxuICAgICAgbmFtZSxcXG4gICAgICAuLi5ucy5nYW5nLmdldE1lbWJlckluZm9ybWF0aW9uKG5hbWUpLFxcbiAgICB9KSkpIHtcXG4gICAgICBjb25zdCBoYXNFcXVpcCA9IFsuLi5nYW5nZXIuYXVnbWVudGF0aW9ucywgLi4uZ2FuZ2VyLnVwZ3JhZGVzXTtcXG4gICAgICBjb25zdCBuZWVkcyA9IGVxdWlwbWVudC5maWx0ZXIoKGVxdWlwKSA9PiAhaGFzRXF1aXAuaW5jbHVkZXMoZXF1aXAubmFtZSkpO1xcblxcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYGdhbmcgbWVtYmVyICR7Z2FuZ2VyLm5hbWV9IGhhczogJHtoYXNFcXVpcC5qb2luKFxcXCIsIFxcXCIpfSwgbmVlZHM6ICR7bmVlZHNcXG4gICAgICAgICAgLm1hcCgoZXFwKSA9PiBlcXAubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuXFxuICAgICAgZm9yIChsZXQgZXFwIG9mIG5lZWRzKSB7XFxuICAgICAgICBpZiAoZXFwLnByaWNlIDwgbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoXFxcImhvbWVcXFwiKSkge1xcbiAgICAgICAgICBucy50cHJpbnQoYHB1cmNoYXNlZCAke2VxcC5uYW1lfSBmb3IgJHtnYW5nZXIubmFtZX1gKTtcXG4gICAgICAgICAgbnMuZ2FuZy5wdXJjaGFzZUVxdWlwbWVudChnYW5nZXIubmFtZSwgZXFwLm5hbWUpO1xcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgfVxcblxcbiAgICBhd2FpdCBucy5zbGVlcCgyMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImdhbmctbWdtdC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyMi44LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxOTEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldE1lbWJlck5hbWVzXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuZ2V0VGFza05hbWVzXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuZ2V0VGFza1N0YXRzXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuY2FuUmVjcnVpdE1lbWJlclwiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLnJlY3J1aXRNZW1iZXJcIixcImNvc3RcIjoyfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5zZXRNZW1iZXJUYXNrXCIsXCJjb3N0XCI6Mn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuZ2V0RXF1aXBtZW50TmFtZXNcIixcImNvc3RcIjoxfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5nZXRFcXVpcG1lbnRTdGF0c1wiLFwiY29zdFwiOjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldEVxdWlwbWVudENvc3RcIixcImNvc3RcIjoyfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5nZXRFcXVpcG1lbnRUeXBlXCIsXCJjb3N0XCI6Mn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldE1lbWJlckluZm9ybWF0aW9uXCIsXCJjb3N0XCI6Mn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5wdXJjaGFzZUVxdWlwbWVudFwiLFwiY29zdFwiOjR9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImNvbnN0IGNyaW1lcyA9IFtcXG4gIFxcXCJTaG9wbGlmdFxcXCIsXFxuICBcXFwiUm9iIFN0b3JlXFxcIixcXG4gIFxcXCJNdWdcXFwiLFxcbiAgXFxcIkxhcmNlbnlcXFwiLFxcbiAgXFxcIkRlYWwgRHJ1Z3NcXFwiLFxcbiAgXFxcIkJvbmQgRm9yZ2VyeVxcXCIsXFxuICBcXFwiVHJhZmZpY2sgQXJtc1xcXCIsXFxuICBcXFwiSG9taWNpZGVcXFwiLFxcbiAgXFxcIkdyYW5kIFRoZWZ0IEF1dG9cXFwiLFxcbiAgXFxcIktpZG5hcFxcXCIsXFxuICBcXFwiQXNzYXNzaW5hdGlvblxcXCIsXFxuICBcXFwiSGVpc3RcXFwiLFxcbl07XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgY3JpbWUgPSBucy5hcmdzLmpvaW4oXFxcIiBcXFwiKTtcXG4gIGNvbnN0IHRhcmdldCA9IC01NDAwMDtcXG4gIG5zLmRpc2FibGVMb2coXFxcIkFMTFxcXCIpO1xcbiAgbnMudGFpbCgpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMuY2xlYXJMb2coKTtcXG5cXG4gICAgY29uc3Qga2FybWEgPSBucy5oZWFydC5icmVhaygpO1xcbiAgICBpZiAoa2FybWEgPiB0YXJnZXQpXFxuICAgICAgbnMucHJpbnQoYEN1cnJlbnQgS2FybWEgOiAke2thcm1hfSwgJHsoa2FybWEgLyB0YXJnZXQpLnRvRml4ZWQoMil9JWApO1xcblxcbiAgICBjb25zdCB7IGthcm1hOiBka2FybWEsIG1vbmV5LCB0aW1lLCAuLi5zdGF0cyB9ID0gbnMuZ2V0Q3JpbWVTdGF0cyhjcmltZSk7XFxuICAgIG5zLnByaW50KGAke2NyaW1lfSwgY2hhbmNlOiAkeyhucy5nZXRDcmltZUNoYW5jZShjcmltZSkgKiAxMDAuMCkudG9GaXhlZChcXG4gICAgICAyXFxuICAgICl9JSxcXG5LYXJtYTogLSR7ZGthcm1hfSwgZHVyOiAke25zLnRGb3JtYXQodGltZSl9LCBnYWluOiAke25zLm5Gb3JtYXQoXFxuICAgICAgbW9uZXksXFxuICAgICAgXFxcIiQwLjAwMGFcXFwiXFxuICAgICl9XFxuICAgJHtKU09OLnN0cmluZ2lmeShzdGF0cywgbnVsbCwgMil9YCk7XFxuICAgIGNvbnN0IGR1ciA9IG5zLmNvbW1pdENyaW1lKGNyaW1lKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKGR1cik7XFxuICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGUoZGF0YSwgYXJncykge1xcbiAgcmV0dXJuIFsuLi5jcmltZXNdO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvc2luZy9jcmltZWxvb3AuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL3NpbmcvY3JpbWVsb29wLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84ZmZmOGFjMC1jNzNiLTQ4ODAtODcyNi0zY2UxZWU3NGQ0MjVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI2MH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxNi42LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkyNjAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRDcmltZVN0YXRzXCIsXCJjb3N0XCI6NX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldENyaW1lQ2hhbmNlXCIsXCJjb3N0XCI6NX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImNvbW1pdENyaW1lXCIsXCJjb3N0XCI6NX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcIm4wMGRsZXNcIixcImZvb2Ruc3R1ZmZcIixcInNpZ21hLWNvc21ldGljc1wiLFwiam9lc2d1bnNcIixcImhvbmctZmFuZy10ZWFcIixcImhhcmFraXJpLXN1c2hpXCIsXCJpcm9uLWd5bVwiLFwiZGFya3dlYlwiLFwicHNydi0wXCIsXCJwc3J2LTFcIixcInBzcnYtMlwiLFwicHNydi0zXCIsXCJwc3J2LTRcIixcInBzcnYtNVwiLFwicHNydi02XCIsXCJwc3J2LTdcIixcInBzcnYtOFwiLFwicHNydi05XCIsXCJwc3J2LTEwXCIsXCJwc3J2LTExXCIsXCJwc3J2LTEyXCIsXCJwc3J2LTEzXCIsXCJwc3J2LTE0XCIsXCJwc3J2LTE1XCIsXCJwc3J2LTE2XCIsXCJwc3J2LTE3XCIsXCJwc3J2LTE4XCIsXCJwc3J2LTE5XCIsXCJwc3J2LTIwXCIsXCJwc3J2LTIxXCIsXCJwc3J2LTIyXCIsXCJwc3J2LTIzXCIsXCJwc3J2LTI0XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6Mi4yODYsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwiZWNvcnBcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImVjb3JwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI3OC4zLjQuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJFQ29ycFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJjbGFya2luY1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5OSxcImhhY2tEaWZmaWN1bHR5XCI6OTksXCJtaW5EaWZmaWN1bHR5XCI6MzMsXCJtb25leUF2YWlsYWJsZVwiOjUwMDU1MzYxMjI1LjUsXCJtb25leU1heFwiOjE4NzcwNzYwNDU5NS42MjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTA3NixcInNlcnZlckdyb3d0aFwiOjk5fX0sXCJtZWdhY29ycFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC00NTU3MDMtU2VjdG9yLTEyLmNjdFwiLFwidHlwZVwiOlwiVG90YWwgV2F5cyB0byBTdW1cIixcImRhdGFcIjoxOSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlNlY3Rvci0xMlwiLFwidHlwZVwiOjB9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwibWVnYWNvcnBcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ2LjEuNy41XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk1lZ2FDb3JwXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImNsYXJraW5jXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjk5LFwiaGFja0RpZmZpY3VsdHlcIjo5OSxcIm1pbkRpZmZpY3VsdHlcIjozMyxcIm1vbmV5QXZhaWxhYmxlXCI6MzIwMTUyNDI3NDguMjUsXCJtb25leU1heFwiOjEyMDA1NzE2MDMwNS45Mzc1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEzNDQsXCJzZXJ2ZXJHcm93dGhcIjo5OX19LFwiYi1hbmQtYVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC0xMDY2NDMtU2VjdG9yLTEyLmNjdFwiLFwidHlwZVwiOlwiVG90YWwgV2F5cyB0byBTdW1cIixcImRhdGFcIjo0MCxcInJld2FyZFwiOntcIm5hbWVcIjpcIlNlY3Rvci0xMlwiLFwidHlwZVwiOjB9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiYi1hbmQtYVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjQuMS41LjdcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQmFjaG1hbiAmIEFzc29jaWF0ZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiNHNpZ21hXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjczLFwiaGFja0RpZmZpY3VsdHlcIjo3MyxcIm1pbkRpZmZpY3VsdHlcIjoyNCxcIm1vbmV5QXZhaWxhYmxlXCI6MjE0OTk3NDQyMDguMjUsXCJtb25leU1heFwiOjgwNjI0MDQwNzgwLjkzNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTA3MixcInNlcnZlckdyb3d0aFwiOjYxfX0sXCJibGFkZVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiYmxhZGVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjEwLjEuMS41XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltcImJleW9uZC1tYW4ubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQmxhZGUgSW5kdXN0cmllc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCI0c2lnbWFcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6OTEsXCJoYWNrRGlmZmljdWx0eVwiOjkxLFwibWluRGlmZmljdWx0eVwiOjMwLFwibW9uZXlBdmFpbGFibGVcIjoxMTk5MTYzNTI2OC43NSxcIm1vbmV5TWF4XCI6NDQ5Njg2MzIyNTcuODEyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMTUwLFwic2VydmVyR3Jvd3RoXCI6ODB9fSxcIm53b1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwibndvXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5Ny45LjEuNlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W1widGhlLWhpZGRlbi13b3JsZC5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJOV09cIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiNHNpZ21hXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjk5LFwiaGFja0RpZmZpY3VsdHlcIjo5OSxcIm1pbkRpZmZpY3VsdHlcIjozMyxcIm1vbmV5QXZhaWxhYmxlXCI6MjEyMTkwNTM3MTgsXCJtb25leU1heFwiOjc5NTcxNDUxNDQyLjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTI5NCxcInNlcnZlckdyb3d0aFwiOjc0fX0sXCJjbGFya2luY1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC02Njk5NTEuY2N0XCIsXCJ0eXBlXCI6XCJTYW5pdGl6ZSBQYXJlbnRoZXNlcyBpbiBFeHByZXNzaW9uXCIsXCJkYXRhXCI6XCIoKClhKGEpYSkpYSlhKGEoKSgpYVwiLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6MX19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJjbGFya2luY1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiODguNS40LjhcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltcImJleW9uZC1tYW4ubGl0XCIsXCJjb3N0LW9mLWltbW9ydGFsaXR5LmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkNsYXJrZSBJbmNvcnBvcmF0ZWRcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wia3VhaS1nb25nXCIsXCJlY29ycFwiLFwibWVnYWNvcnBcIixcIlRoZS1DYXZlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjQ1LFwiaGFja0RpZmZpY3VsdHlcIjo0NSxcIm1pbkRpZmZpY3VsdHlcIjoxNSxcIm1vbmV5QXZhaWxhYmxlXCI6MTgzNDU2NDEwNjQsXCJtb25leU1heFwiOjY4Nzk2MTUzOTkwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEwOTUsXCJzZXJ2ZXJHcm93dGhcIjo3NH19LFwib21uaXRla1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwib21uaXRla1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNjMuNS4wLjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W1wiY29kZWQtaW50ZWxsaWdlbmNlLmxpdFwiLFwiaGlzdG9yeS1vZi1zeW50aG9pZHMubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiT21uaVRlayBJbmNvcnBvcmF0ZWRcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1widml0YWxpZmVcIixcInBvd2VyaG91c2UtZml0bmVzc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5MSxcImhhY2tEaWZmaWN1bHR5XCI6OTEsXCJtaW5EaWZmaWN1bHR5XCI6MzAsXCJtb25leUF2YWlsYWJsZVwiOjEwMTM5NTU2MjUzLjUsXCJtb25leU1heFwiOjM4MDIzMzM1OTUwLjYyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMDU2LFwic2VydmVyR3Jvd3RoXCI6OTZ9fSxcIjRzaWdtYVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC04NDI0NDMuY2N0XCIsXCJ0eXBlXCI6XCJNaW5pbXVtIFBhdGggU3VtIGluIGEgVHJpYW5nbGVcIixcImRhdGFcIjpbWzZdLFsxLDZdLFszLDMsNl0sWzIsNSw3LDldLFsyLDQsOSw2LDhdLFszLDUsNSw1LDksN10sWzEsMiw1LDYsOSw3LDddLFs3LDMsNCw0LDUsNCw1LDNdLFszLDQsNCw4LDcsMSwxLDcsMV1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCI0c2lnbWFcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ2LjguMy4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkZvdXIgU2lnbWFcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaGVsaW9zXCIsXCJiLWFuZC1hXCIsXCJibGFkZVwiLFwibndvXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjYwLFwiaGFja0RpZmZpY3VsdHlcIjo2MCxcIm1pbkRpZmZpY3VsdHlcIjoyMCxcIm1vbmV5QXZhaWxhYmxlXCI6MTU2MzY4MTI1MjUuMjUsXCJtb25leU1heFwiOjU4NjM4MDQ2OTY5LjY4NzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTA4NyxcInNlcnZlckdyb3d0aFwiOjg1fX0sXCJrdWFpLWdvbmdcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtODkwMzQwLmNjdFwiLFwidHlwZVwiOlwiQWxnb3JpdGhtaWMgU3RvY2sgVHJhZGVyIElcIixcImRhdGFcIjpbNjAsNjEsODAsMTIwLDE4MywxMzgsMTI5LDIzLDE2MiwzNiwxNDAsODQsMTE5LDE1NSw1Nyw5OSwzMSwxNDIsMTIzLDY2LDEyNSwxMCwxMzksMTA1LDE4OSwxNjIsOTYsNTUsMTY4LDQ2LDI2LDEyOCwxOTQsOTcsODUsMTY5LDUwLDkyLDk5LDQ4LDEwMSw2NCwxMTYsMTIsMTIyLDE1NSwxMDFdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJrdWFpLWdvbmdcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg5LjYuMC43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkt1YWlHb25nIEludGVybmF0aW9uYWxcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wic3Rvcm10ZWNoXCIsXCJjbGFya2luY1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5OSxcImhhY2tEaWZmaWN1bHR5XCI6OTksXCJtaW5EaWZmaWN1bHR5XCI6MzMsXCJtb25leUF2YWlsYWJsZVwiOjE2MjM1OTk0MTI3LjUsXCJtb25leU1heFwiOjYwODg0OTc3OTc4LjEyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMDEyLFwic2VydmVyR3Jvd3RoXCI6OTh9fSxcImZ1bGNydW10ZWNoXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTk5ODg4Ny1TZWN0b3ItMTIuY2N0XCIsXCJ0eXBlXCI6XCJBbGdvcml0aG1pYyBTdG9jayBUcmFkZXIgSUlcIixcImRhdGFcIjpbNjIsNyw4Nyw1LDE0LDE1Niw3MCwzMCw3NywxNDUsMTk1LDg1LDE2NiwxNDYsMTQxLDQyLDkwLDk4LDE1OCw2OCwxNTksNzIsMTUyLDE1OCwxMSwxOF0sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJTZWN0b3ItMTJcIixcInR5cGVcIjowfX19LHtcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTk1NDc2NS5jY3RcIixcInR5cGVcIjpcIkFsZ29yaXRobWljIFN0b2NrIFRyYWRlciBJXCIsXCJkYXRhXCI6WzE4LDEzNyw5MSwxMjcsOTksMTE2LDEwNyw5NywxNzMsMTI0LDQ5LDU3LDk4LDEwMiwxNTQsMTIsMTNdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJmdWxjcnVtdGVjaFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNTQuNi4xLjRcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjUxMixcIm1lc3NhZ2VzXCI6W1wic2ltdWxhdGVkLXJlYWxpdHkubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiRnVsY3J1bSBUZWNobm9sb2dpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicnVuNHRoZWgxMTF6XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjkyLFwiaGFja0RpZmZpY3VsdHlcIjo5MixcIm1pbkRpZmZpY3VsdHlcIjozMSxcIm1vbmV5QXZhaWxhYmxlXCI6MTMxMTc5NjAxMS43NSxcIm1vbmV5TWF4XCI6NDkxOTIzNTA0NC4wNjI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEwNTYsXCJzZXJ2ZXJHcm93dGhcIjo4OH19LFwiZnVsY3J1bWFzc2V0c1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiZnVsY3J1bWFzc2V0c1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjUuMS40LjJcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiRnVsY3J1bSBUZWNobm9sb2dpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicG93ZXJob3VzZS1maXRuZXNzXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjk5LFwiaGFja0RpZmZpY3VsdHlcIjo5OSxcIm1pbkRpZmZpY3VsdHlcIjozMyxcIm1vbmV5QXZhaWxhYmxlXCI6NzUwMDAwLFwibW9uZXlNYXhcIjoyODEyNTAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEzMjgsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJzdG9ybXRlY2hcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInN0b3JtdGVjaFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMi4wLjguN1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTdG9ybSBUZWNobm9sb2dpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiYXBwbGllZC1lbmVyZ2V0aWNzXCIsXCJrdWFpLWdvbmdcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NzgsXCJoYWNrRGlmZmljdWx0eVwiOjc4LFwibWluRGlmZmljdWx0eVwiOjI2LFwibW9uZXlBdmFpbGFibGVcIjo3NzcyMTA2NjguMjUsXCJtb25leU1heFwiOjI5MTQ1NDAwMDUuOTM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5NDgsXCJzZXJ2ZXJHcm93dGhcIjo4Mn19LFwiZGVmY29tbVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC01NzAxNjYuY2N0XCIsXCJ0eXBlXCI6XCJUb3RhbCBXYXlzIHRvIFN1bVwiLFwiZGF0YVwiOjM2LFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6MX19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJkZWZjb21tXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5Ni44LjguMFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJEZWZDb21tXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcIm9tbmlhXCIsXCJpbmZvY29tbVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5MSxcImhhY2tEaWZmaWN1bHR5XCI6OTEsXCJtaW5EaWZmaWN1bHR5XCI6MzAsXCJtb25leUF2YWlsYWJsZVwiOjYyMzU2NjcxNixcIm1vbmV5TWF4XCI6MjMzODM3NTE4NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMDAxLFwic2VydmVyR3Jvd3RoXCI6NjV9fSxcImluZm9jb21tXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTc1MDU1Ny5jY3RcIixcInR5cGVcIjpcIkdlbmVyYXRlIElQIEFkZHJlc3Nlc1wiLFwiZGF0YVwiOlwiMjUzMjExNjQxNjlcIixcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiaW5mb2NvbW1cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjExLjYuOS43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkluZm9Db21tXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImRlZmNvbW1cIixcInJ1bjR0aGVoMTExelwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo4NSxcImhhY2tEaWZmaWN1bHR5XCI6ODUsXCJtaW5EaWZmaWN1bHR5XCI6MjgsXCJtb25leUF2YWlsYWJsZVwiOjU1MjA5MzI5OC41LFwibW9uZXlNYXhcIjoyMDcwMzQ5ODY5LjM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NzUsXCJzZXJ2ZXJHcm93dGhcIjo3NX19LFwiaGVsaW9zXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTMyNDA2Ni5jY3RcIixcInR5cGVcIjpcIkFsZ29yaXRobWljIFN0b2NrIFRyYWRlciBJXCIsXCJkYXRhXCI6WzE2MCwxNjEsNDUsNTQsOTksNTUsNDEsMTA0LDExMCwxNDQsNDYsMTg0LDM1LDkwLDU0LDEwLDYsNzcsMTQ1LDEzMyw2OSwxODIsMzUsMjUsMjksMTI5LDE3LDEzMCw0OSwxNzMsMTEwLDQ2LDEyNSwxMTcsMTU4LDQ2LDE5Nyw4MCwxMjAsNTYsNywyOCw2Nyw3OSwxMTAsMTJdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJoZWxpb3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI4LjguOS45XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltcImJleW9uZC1tYW4ubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSGVsaW9zIExhYnNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wibWljcm9keW5lXCIsXCI0c2lnbWFcIixcIi5cIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODksXCJoYWNrRGlmZmljdWx0eVwiOjg5LFwibWluRGlmZmljdWx0eVwiOjMwLFwibW9uZXlBdmFpbGFibGVcIjo1Mzk2Njc2MjUuNSxcIm1vbmV5TWF4XCI6MjAyMzc1MzU5NS42MjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODkwLFwic2VydmVyR3Jvd3RoXCI6NzV9fSxcInZpdGFsaWZlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ2aXRhbGlmZVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjAuOS43LjJcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXCJBLUdyZWVuLVRvbW9ycm93LmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlZpdGFMaWZlXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInRpdGFuLWxhYnNcIixcIm9tbml0ZWtcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODgsXCJoYWNrRGlmZmljdWx0eVwiOjg4LFwibWluRGlmZmljdWx0eVwiOjI5LFwibW9uZXlBdmFpbGFibGVcIjo1OTQxNjEyMjguMjUsXCJtb25leU1heFwiOjIyMjgxMDQ2MDUuOTM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MzksXCJzZXJ2ZXJHcm93dGhcIjo2NH19LFwiaWNhcnVzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTY1Mzk3MS5jY3RcIixcInR5cGVcIjpcIkZpbmQgTGFyZ2VzdCBQcmltZSBGYWN0b3JcIixcImRhdGFcIjo1MTE5MzYxMjEsXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjozfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImljYXJ1c1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTcuOC40LjdcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSWNhcnVzIE1pY3Jvc3lzdGVtc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJkZWx0YW9uZVwiLFwidGFpeWFuZy1kaWdpdGFsXCIsXCJ6Yi1kZWZcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODcsXCJoYWNrRGlmZmljdWx0eVwiOjg3LFwibWluRGlmZmljdWx0eVwiOjI5LFwibW9uZXlBdmFpbGFibGVcIjo3MDE5OTcxNDcsXCJtb25leU1heFwiOjI2MzI0ODkzMDEuMjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODc3LFwic2VydmVyR3Jvd3RoXCI6OTF9fSxcInVuaXYtZW5lcmd5XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ1bml2LWVuZXJneVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMTAuMy42LjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjY0LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlVuaXZlcnNhbCBFbmVyZ3lcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiZGVsdGFvbmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODUsXCJoYWNrRGlmZmljdWx0eVwiOjg1LFwibWluRGlmZmljdWx0eVwiOjI4LFwibW9uZXlBdmFpbGFibGVcIjo4NDk2Nzg4OTQsXCJtb25leU1heFwiOjMxODYyOTU4NTIuNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MDksXCJzZXJ2ZXJHcm93dGhcIjo4MH19LFwidGl0YW4tbGFic1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC04MjEzNy5jY3RcIixcInR5cGVcIjpcIkZpbmQgTGFyZ2VzdCBQcmltZSBGYWN0b3JcIixcImRhdGFcIjoyMjkwNDIzNjgsXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjozfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInRpdGFuLWxhYnNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ2LjIuMC4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltcImNvZGVkLWludGVsbGlnZW5jZS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJUaXRhbiBMYWJvcmF0b3JpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1widGFpeWFuZy1kaWdpdGFsXCIsXCJ2aXRhbGlmZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3MCxcImhhY2tEaWZmaWN1bHR5XCI6NzAsXCJtaW5EaWZmaWN1bHR5XCI6MjMsXCJtb25leUF2YWlsYWJsZVwiOjY1NTI1NjA5OC41LFwibW9uZXlNYXhcIjoyNDU3MjEwMzY5LjM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MjMsXCJzZXJ2ZXJHcm93dGhcIjo3NX19LFwibWljcm9keW5lXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTQzOTMxOC5jY3RcIixcInR5cGVcIjpcIkFsZ29yaXRobWljIFN0b2NrIFRyYWRlciBJXCIsXCJkYXRhXCI6WzczLDc1LDIwMCw3Niw4NywxOTAsNjMsNzEsMzYsNDgsNzAsOTQsMTM4LDE0LDExOSw2LDY5LDY5LDk4LDE3OSw5Myw2LDE1Miw0NiwxODVdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fSx7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC00NDgxODAuY2N0XCIsXCJ0eXBlXCI6XCJNZXJnZSBPdmVybGFwcGluZyBJbnRlcnZhbHNcIixcImRhdGFcIjpbWzgsMTVdLFsyMSwyM10sWzE0LDE4XSxbMTEsMTZdLFsyMCwyNl0sWzE2LDI2XSxbOCwxN10sWzMsN10sWzIsNF0sWzIsM10sWzE5LDI2XSxbNiwxMV0sWzksMTVdLFsxNCwyM10sWzMsNF1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJtaWNyb2R5bmVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjUyLjQuOS44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wic3ludGhldGljLW11c2NsZXMubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTWljcm9keW5lIFRlY2hub2xvZ2llc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJub3ZhLW1lZFwiLFwiaGVsaW9zXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjY2LFwiaGFja0RpZmZpY3VsdHlcIjo2NixcIm1pbkRpZmZpY3VsdHlcIjoyMixcIm1vbmV5QXZhaWxhYmxlXCI6NDkwNjgzNTIwLjUsXCJtb25leU1heFwiOjE4NDAwNjMyMDEuODc1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjg1NSxcInNlcnZlckdyb3d0aFwiOjg0fX0sXCJ0YWl5YW5nLWRpZ2l0YWxcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInRhaXlhbmctZGlnaXRhbFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMzYuNC4wLjFcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltcIkEtR3JlZW4tVG9tb3Jyb3cubGl0XCIsXCJicmlnaHRlci10aGFuLXRoZS1zdW4ubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiVGFpeWFuZyBEaWdpdGFsXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImljYXJ1c1wiLFwidGl0YW4tbGFic1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3NCxcImhhY2tEaWZmaWN1bHR5XCI6NzQsXCJtaW5EaWZmaWN1bHR5XCI6MjUsXCJtb25leUF2YWlsYWJsZVwiOjYxNzIyMzA4NC43NSxcIm1vbmV5TWF4XCI6MjMxNDU4NjU2Ny44MTI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjg3NixcInNlcnZlckdyb3d0aFwiOjc3fX0sXCJnYWxhY3RpYy1jeWJlclwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiZ2FsYWN0aWMtY3liZXJcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg3LjMuNS42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkdhbGFjdGljIEN5YmVyc3lzdGVtc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJhZXZ1bS1wb2xpY2VcIixcIm9tbmlhXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjY0LFwiaGFja0RpZmZpY3VsdHlcIjo2NCxcIm1pbkRpZmZpY3VsdHlcIjoyMSxcIm1vbmV5QXZhaWxhYmxlXCI6NTk2ODc4MjM5Ljc1LFwibW9uZXlNYXhcIjoyMjM4MjkzMzk5LjA2MjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODY5LFwic2VydmVyR3Jvd3RoXCI6ODR9fSxcImFlcm9jb3JwXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhZXJvY29ycFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjIuMC4wLjFcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltcIm1hbi1hbmQtbWFjaGluZS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJBZXJvQ29ycFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJyaG8tY29uc3RydWN0aW9uXCIsXCJ1bml0YWxpZmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODksXCJoYWNrRGlmZmljdWx0eVwiOjg5LFwibWluRGlmZmljdWx0eVwiOjMwLFwibW9uZXlBdmFpbGFibGVcIjo4NDU2NDQwNDAuMjUsXCJtb25leU1heFwiOjMxNzExNjUxNTAuOTM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NTEsXCJzZXJ2ZXJHcm93dGhcIjo2NH19LFwib21uaWFcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm9tbmlhXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4LjguOC40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo2NCxcIm1lc3NhZ2VzXCI6W1wiaGlzdG9yeS1vZi1zeW50aG9pZHMubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiT21uaWEgQ3liZXJzeXN0ZW1zXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImdhbGFjdGljLWN5YmVyXCIsXCJkZWZjb21tXCIsXCJ6ZXVzLW1lZFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo4NixcImhhY2tEaWZmaWN1bHR5XCI6ODYsXCJtaW5EaWZmaWN1bHR5XCI6MjksXCJtb25leUF2YWlsYWJsZVwiOjcyNDExMzMxNSxcIm1vbmV5TWF4XCI6MjcxNTQyNDkzMS4yNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MDIsXCJzZXJ2ZXJHcm93dGhcIjo2MH19LFwiemItZGVmXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ6Yi1kZWZcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjEzLjAuOC42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXCJzeW50aGV0aWMtbXVzY2xlcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJaQiBEZWZlbnNlIEluZHVzdHJpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaWNhcnVzXCIsXCJhcHBsaWVkLWVuZXJnZXRpY3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NTgsXCJoYWNrRGlmZmljdWx0eVwiOjU4LFwibWluRGlmZmljdWx0eVwiOjE5LFwibW9uZXlBdmFpbGFibGVcIjo3MjIxNTcyNjkuMjUsXCJtb25leU1heFwiOjI3MDgwODk3NTkuNjg3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MjQsXCJzZXJ2ZXJHcm93dGhcIjo3Mn19LFwiYXBwbGllZC1lbmVyZ2V0aWNzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhcHBsaWVkLWVuZXJnZXRpY3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjAuNy4wLjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQXBwbGllZCBFbmVyZ2V0aWNzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInpiLWRlZlwiLFwic3Rvcm10ZWNoXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjc1LFwiaGFja0RpZmZpY3VsdHlcIjo3NSxcIm1pbkRpZmZpY3VsdHlcIjoyNSxcIm1vbmV5QXZhaWxhYmxlXCI6NjI0MDEyNjQxLjI1LFwibW9uZXlNYXhcIjoyMzQwMDQ3NDA0LjY4NzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODQxLFwic2VydmVyR3Jvd3RoXCI6NzN9fSxcInNvbGFyaXNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInNvbGFyaXNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjkzLjMuMy4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W1wiQS1HcmVlbi1Ub21vcnJvdy5saXRcIixcInRoZS1mYWlsZWQtZnJvbnRpZXIubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiU29sYXJpcyBTcGFjZSBTeXN0ZW1zXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInVuaXRhbGlmZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3OCxcImhhY2tEaWZmaWN1bHR5XCI6NzgsXCJtaW5EaWZmaWN1bHR5XCI6MjYsXCJtb25leUF2YWlsYWJsZVwiOjU3NzA2MzEwMi41LFwibW9uZXlNYXhcIjoyMTYzOTg2NjM0LjM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo3OTksXCJzZXJ2ZXJHcm93dGhcIjo3NX19LFwiZGVsdGFvbmVcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtMjA3Nzk4LmNjdFwiLFwidHlwZVwiOlwiQWxnb3JpdGhtaWMgU3RvY2sgVHJhZGVyIElWXCIsXCJkYXRhXCI6WzMsWzEwNiwzNSwxMjksMTQyLDExLDE1MywxNSwxNzUsMjIsOTYsMTcyLDE2Nl1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6MX19fSx7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC02MDI3MjQuY2N0XCIsXCJ0eXBlXCI6XCJNZXJnZSBPdmVybGFwcGluZyBJbnRlcnZhbHNcIixcImRhdGFcIjpbWzE1LDI1XSxbMTMsMTddLFsxMywxOV0sWzMsOF0sWzEyLDIxXSxbNSwxMl0sWzE0LDE4XSxbMjIsMjddLFs0LDE0XSxbMjEsMjVdXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX0se1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNjQwMjQuY2N0XCIsXCJ0eXBlXCI6XCJBbGdvcml0aG1pYyBTdG9jayBUcmFkZXIgSVwiLFwiZGF0YVwiOlszNCw5OCw2MSwzMCwxMjEsNjIsMTMyLDE0NiwxMDQsMTU0LDE0MywxODAsNTAsMTIxLDQsOTUsMTY1LDE4MCw5NiwxNDIsNDUsMTE3LDE2MCwxMjMsNDUsMTY0LDEyMiwxNjUsMTc5LDE1MCwxMTYsMTc1LDEzNiwxODMsMjgsMTcwLDE2M10sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjozfX19LHtcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTk5NDA4NS5jY3RcIixcInR5cGVcIjpcIkZpbmQgTGFyZ2VzdCBQcmltZSBGYWN0b3JcIixcImRhdGFcIjo3ODQzMTk5MDUsXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjoxfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImRlbHRhb25lXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1LjguOS4zXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkRlbHRhT25lXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImdsb2JhbC1waGFybVwiLFwiaWNhcnVzXCIsXCJ1bml2LWVuZXJneVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3OSxcImhhY2tEaWZmaWN1bHR5XCI6NzksXCJtaW5EaWZmaWN1bHR5XCI6MjYsXCJtb25leUF2YWlsYWJsZVwiOjExMjA0OTE5MzguMjUsXCJtb25leU1heFwiOjQyMDE4NDQ3NjguNDM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NzksXCJzZXJ2ZXJHcm93dGhcIjo1MH19LFwiZ2xvYmFsLXBoYXJtXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJnbG9iYWwtcGhhcm1cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjYuOS43LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXCJBLUdyZWVuLVRvbW9ycm93LmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkdsb2JhbCBQaGFybWFjZXV0aWNhbHNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicmhvLWNvbnN0cnVjdGlvblwiLFwiZGVsdGFvbmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NzcsXCJoYWNrRGlmZmljdWx0eVwiOjc3LFwibWluRGlmZmljdWx0eVwiOjI2LFwibW9uZXlBdmFpbGFibGVcIjoxMjAyOTE1NTUzLjc1LFwibW9uZXlNYXhcIjo0NTEwOTMzMzI2LjU2MjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODE3LFwic2VydmVyR3Jvd3RoXCI6ODR9fSxcIm5vdmEtbWVkXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJub3ZhLW1lZFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjAuMy4xLjZcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTm92YSBNZWRpY2FsXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInpldXMtbWVkXCIsXCJtaWNyb2R5bmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjYsXCJoYWNrRGlmZmljdWx0eVwiOjY2LFwibWluRGlmZmljdWx0eVwiOjIyLFwibW9uZXlBdmFpbGFibGVcIjo5MDUzNTA3NTIuNzUsXCJtb25leU1heFwiOjMzOTUwNjUzMjIuODEyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MjYsXCJzZXJ2ZXJHcm93dGhcIjo2Nn19LFwiemV1cy1tZWRcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNTQ1MDI4LVNlY3Rvci0xMi5jY3RcIixcInR5cGVcIjpcIlRvdGFsIFdheXMgdG8gU3VtXCIsXCJkYXRhXCI6ODgsXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJTZWN0b3ItMTJcIixcInR5cGVcIjowfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInpldXMtbWVkXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIyMS44LjYuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJaZXVzIE1lZGljYWxcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wib21uaWFcIixcIm5vdmEtbWVkXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjc0LFwiaGFja0RpZmZpY3VsdHlcIjo3NCxcIm1pbkRpZmZpY3VsdHlcIjoyNSxcIm1vbmV5QXZhaWxhYmxlXCI6OTc3NTQxNTE4LjI1LFwibW9uZXlNYXhcIjozNjY1NzgwNjkzLjQzNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODM5LFwic2VydmVyR3Jvd3RoXCI6ODB9fSxcInVuaXRhbGlmZVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC01NTQ1NzEuY2N0XCIsXCJ0eXBlXCI6XCJGaW5kIEFsbCBWYWxpZCBNYXRoIEV4cHJlc3Npb25zXCIsXCJkYXRhXCI6W1wiODM3MjY4N1wiLC04M10sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjoxfX19LHtcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTIwMTMyMC5jY3RcIixcInR5cGVcIjpcIlVuaXF1ZSBQYXRocyBpbiBhIEdyaWQgSUlcIixcImRhdGFcIjpbWzAsMCwwLDEsMCwwLDAsMCwwLDAsMV0sWzAsMCwwLDAsMCwwLDAsMSwwLDAsMV0sWzAsMCwwLDAsMCwwLDEsMCwwLDAsMF0sWzEsMCwwLDAsMCwwLDEsMCwwLDAsMF0sWzAsMCwwLDAsMCwwLDAsMCwwLDAsMF0sWzEsMCwwLDAsMCwwLDAsMCwwLDAsMF1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6MX19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ1bml0YWxpZmVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjcyLjQuMy45XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo2NCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJVbml0YUxpZmUgR3JvdXBcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiYWVyb2NvcnBcIixcInNvbGFyaXNcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODAsXCJoYWNrRGlmZmljdWx0eVwiOjgwLFwibWluRGlmZmljdWx0eVwiOjI3LFwibW9uZXlBdmFpbGFibGVcIjo3NjI2MTAzMjYuNzUsXCJtb25leU1heFwiOjI4NTk3ODg3MjUuMzEyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MjQsXCJzZXJ2ZXJHcm93dGhcIjo3NX19LFwibGV4by1jb3JwXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTYzNjI0MS5jY3RcIixcInR5cGVcIjpcIkFsZ29yaXRobWljIFN0b2NrIFRyYWRlciBJXCIsXCJkYXRhXCI6WzY2LDE0MywxNiwxOTIsMTkxLDE0NywxMiw4OCwxNjYsMTUxLDEzLDU2LDcxLDIsNDMsMTcwLDE3MCwxNiw1MSwxMzMsMTg3LDEyOSwxODZdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJsZXhvLWNvcnBcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjEyLjIuMy44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTGV4b0NvcnBcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wic3VtbWl0LXVuaVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo2MCxcImhhY2tEaWZmaWN1bHR5XCI6NjAsXCJtaW5EaWZmaWN1bHR5XCI6MjAsXCJtb25leUF2YWlsYWJsZVwiOjU1MDQxMDkxNC4yNSxcIm1vbmV5TWF4XCI6MjA2NDA0MDkyOC40Mzc1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo0LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjY5NCxcInNlcnZlckdyb3d0aFwiOjU5fX0sXCJyaG8tY29uc3RydWN0aW9uXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJyaG8tY29uc3RydWN0aW9uXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI3Ny4yLjEuN1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MzIsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiUmhvIENvbnN0cnVjdGlvblwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJzdW1taXQtdW5pXCIsXCJhZXJvY29ycFwiLFwiZ2xvYmFsLXBoYXJtXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjQ3LFwiaGFja0RpZmZpY3VsdHlcIjo0NyxcIm1pbkRpZmZpY3VsdHlcIjoxNixcIm1vbmV5QXZhaWxhYmxlXCI6NDk2MjkzNzY0LjI1LFwibW9uZXlNYXhcIjoxODYxMTAxNjE1LjkzNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjMsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NDg5LFwic2VydmVyR3Jvd3RoXCI6NDZ9fSxcImFscGhhLWVudFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC02MTY3Ny5jY3RcIixcInR5cGVcIjpcIlVuaXF1ZSBQYXRocyBpbiBhIEdyaWQgSUlcIixcImRhdGFcIjpbWzAsMCwwLDAsMF0sWzAsMCwwLDAsMF0sWzAsMCwwLDAsMF0sWzAsMCwwLDEsMF0sWzAsMSwwLDAsMF0sWzAsMCwwLDAsMF1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6MX19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhbHBoYS1lbnRcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjU5LjIuNS41XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wic2VjdG9yLTEyLWNyaW1lLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkFscGhhIEVudGVycHJpc2VzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInJvdGhtYW4tdW5pXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjYzLFwiaGFja0RpZmZpY3VsdHlcIjo2MyxcIm1pbkRpZmZpY3VsdHlcIjoyMSxcIm1vbmV5QXZhaWxhYmxlXCI6NTIxNjA4Njk1LFwibW9uZXlNYXhcIjoxOTU2MDMyNjA2LjI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo0LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjU1NSxcInNlcnZlckdyb3d0aFwiOjU3fX0sXCJhZXZ1bS1wb2xpY2VcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNTQ0ODMzLmNjdFwiLFwidHlwZVwiOlwiRmluZCBMYXJnZXN0IFByaW1lIEZhY3RvclwiLFwiZGF0YVwiOjQ0MzU0MzIxLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fSx7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC04ODU1NDQuY2N0XCIsXCJ0eXBlXCI6XCJVbmlxdWUgUGF0aHMgaW4gYSBHcmlkIElJXCIsXCJkYXRhXCI6W1swLDAsMSwxLDAsMCwwLDAsMF0sWzAsMCwwLDAsMCwwLDAsMCwwXSxbMCwwLDAsMCwwLDAsMCwwLDBdLFswLDEsMCwxLDAsMCwwLDEsMF0sWzAsMCwwLDAsMCwwLDAsMSwwXV0sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjozfX19LHtcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTgxODkxLmNjdFwiLFwidHlwZVwiOlwiQWxnb3JpdGhtaWMgU3RvY2sgVHJhZGVyIElJXCIsXCJkYXRhXCI6WzExOSw1Miw5MCw2LDEzMCwxNSw0OCw1Niw0MSwyLDg2LDM3LDE2LDEyLDE2OSwyMDAsNzgsMzIsNDFdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6MX19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhZXZ1bS1wb2xpY2VcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI2LjIuMS40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJBZXZ1bSBQb2xpY2UgSGVhZHF1YXJ0ZXJzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImNhdGFseXN0XCIsXCJnYWxhY3RpYy1jeWJlclwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3NyxcImhhY2tEaWZmaWN1bHR5XCI6NzcsXCJtaW5EaWZmaWN1bHR5XCI6MjYsXCJtb25leUF2YWlsYWJsZVwiOjE2NTE1NDE4MS4yNSxcIm1vbmV5TWF4XCI6NjE5MzI4MTc5LjY4NzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NDMxLFwic2VydmVyR3Jvd3RoXCI6NDl9fSxcInJvdGhtYW4tdW5pXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTM3MDA0LmNjdFwiLFwidHlwZVwiOlwiU3BpcmFsaXplIE1hdHJpeFwiLFwiZGF0YVwiOltbMTNdLFszMV0sWzIwXSxbMjFdLFsyOF0sWzQzXSxbMjRdLFszNF0sWzUwXSxbMjRdLFs0Ml1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fSx7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC00NDgxODcuY2N0XCIsXCJ0eXBlXCI6XCJBbGdvcml0aG1pYyBTdG9jayBUcmFkZXIgSVZcIixcImRhdGFcIjpbMixbMTIzLDEsODksNiw5NSwzNSwxMjEsNTAsODksMzQsMTE5LDE3MSw3Niw5NCwxMzksMTA3LDE5OCw1OSwxNzksMTk5LDQ2LDE1NCwxNTUsMTAsMiwxMjQsMTEwLDE0MCwzLDE0OV1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJyb3RobWFuLXVuaVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMzUuMC4yLjlcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjE2LFwibWVzc2FnZXNcIjpbXCJzZWNyZXQtc29jaWV0aWVzLmxpdFwiLFwidGhlLWZhaWxlZC1mcm9udGllci5saXRcIixcInRlbnNpb25zLWluLXRlY2gtcmFjZS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJSb3RobWFuIFVuaXZlcnNpdHlcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiam9obnNvbi1vcnRob1wiLFwiYWxwaGEtZW50XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjQ3LFwiaGFja0RpZmZpY3VsdHlcIjo0NyxcIm1pbkRpZmZpY3VsdHlcIjoxNixcIm1vbmV5QXZhaWxhYmxlXCI6MTU2MjcwNjUzLjI1LFwibW9uZXlNYXhcIjo1ODYwMTQ5NDkuNjg3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MyxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjozOTksXCJzZXJ2ZXJHcm93dGhcIjozOH19LFwiemItaW5zdGl0dXRlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTY0NjA1My5jY3RcIixcInR5cGVcIjpcIkdlbmVyYXRlIElQIEFkZHJlc3Nlc1wiLFwiZGF0YVwiOlwiMTUyMDYxNDAxODRcIixcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiemItaW5zdGl0dXRlXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5NC4yLjUuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiWkIgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3lcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1widGhlLWh1YlwiLFwibWlsbGVuaXVtLWZpdG5lc3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NzIsXCJoYWNrRGlmZmljdWx0eVwiOjcyLFwibWluRGlmZmljdWx0eVwiOjI0LFwibW9uZXlBdmFpbGFibGVcIjo4MDE3ODQzOTUsXCJtb25leU1heFwiOjMwMDY2OTE0ODEuMjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NzMzLFwic2VydmVyR3Jvd3RoXCI6NzV9fSxcInN1bW1pdC11bmlcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInN1bW1pdC11bmlcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjU4LjIuMC44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wic2VjcmV0LXNvY2lldGllcy5saXRcIixcInRoZS1mYWlsZWQtZnJvbnRpZXIubGl0XCIsXCJzeW50aGV0aWMtbXVzY2xlcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTdW1taXQgVW5pdmVyc2l0eVwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJjb21wdGVrXCIsXCJsZXhvLWNvcnBcIixcInJoby1jb25zdHJ1Y3Rpb25cIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NTksXCJoYWNrRGlmZmljdWx0eVwiOjU5LFwibWluRGlmZmljdWx0eVwiOjIwLFwibW9uZXlBdmFpbGFibGVcIjoxOTYyOTk2MjYuMjUsXCJtb25leU1heFwiOjczNjEyMzU5OC40Mzc1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjozLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjQ1MyxcInNlcnZlckdyb3d0aFwiOjQ4fX0sXCJzeXNjb3JlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJzeXNjb3JlXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5OC4zLjcuMFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTeXNDb3JlIFNlY3VyaXRpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiYXZtbml0ZS0wMmhcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjgsXCJoYWNrRGlmZmljdWx0eVwiOjY4LFwibWluRGlmZmljdWx0eVwiOjIzLFwibW9uZXlBdmFpbGFibGVcIjo0MDI4NTE4NzYuMjUsXCJtb25leU1heFwiOjE1MTA2OTQ1MzUuOTM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo1NjgsXCJzZXJ2ZXJHcm93dGhcIjo2Mn19LFwiY2F0YWx5c3RcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNTc2Mzg1LmNjdFwiLFwidHlwZVwiOlwiRmluZCBMYXJnZXN0IFByaW1lIEZhY3RvclwiLFwiZGF0YVwiOjI5ODQ2MzczMSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjF9fX0se1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtMzI0NzMtU2VjdG9yLTEyLmNjdFwiLFwidHlwZVwiOlwiU3BpcmFsaXplIE1hdHJpeFwiLFwiZGF0YVwiOltbNTAsMzBdLFs0MywyXSxbNDcsMzNdLFszNSw0M10sWzMxLDddLFsyMSw1MF0sWzQ1LDQwXSxbNCwzNV0sWzI4LDddLFs0MywxNF0sWzMsMTZdLFsyMCwxNV0sWzE2LDQyXSxbNCwxMV0sWzMsMzldXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlNlY3Rvci0xMlwiLFwidHlwZVwiOjB9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiY2F0YWx5c3RcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI0LjIuMS4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo2NCxcIm1lc3NhZ2VzXCI6W1widGVuc2lvbnMtaW4tdGVjaC1yYWNlLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkNhdGFseXN0IFZlbnR1cmVzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImpvaG5zb24tb3J0aG9cIixcImFldnVtLXBvbGljZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo2MSxcImhhY2tEaWZmaWN1bHR5XCI6NjEsXCJtaW5EaWZmaWN1bHR5XCI6MjAsXCJtb25leUF2YWlsYWJsZVwiOjM2MjY4MDE4MixcIm1vbmV5TWF4XCI6MTM2MDA1MDY4Mi41LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjozLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjQwOCxcInNlcnZlckdyb3d0aFwiOjU0fX0sXCJ0aGUtaHViXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTQyNTk2OS5jY3RcIixcInR5cGVcIjpcIk1lcmdlIE92ZXJsYXBwaW5nIEludGVydmFsc1wiLFwiZGF0YVwiOltbMjUsMzBdLFsxLDExXSxbMjIsMjldLFsyMCwzMF0sWzE0LDIxXSxbMTYsMTddLFs2LDEwXSxbNywxM10sWzI1LDMzXSxbMTUsMjBdLFszLDVdLFsyMSwyM10sWzE0LDE3XSxbMTcsMjNdLFs3LDE2XSxbMjUsMjldLFsyMSwyOF0sWzcsMTJdLFs0LDZdXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX0se1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtODY4NTk2LmNjdFwiLFwidHlwZVwiOlwiQWxnb3JpdGhtaWMgU3RvY2sgVHJhZGVyIElWXCIsXCJkYXRhXCI6WzIsWzE3MiwxOTIsMzQsMTg2LDk1LDEwM11dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOnRydWUsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwidGhlLWh1YlwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiODQuMS43LjZcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiVGhlIEh1YlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDU3LDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjUwMS4zODM1ODMxMjk1OTk5NyxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNjA5OTk5OTk2MzkyLFwicGlkXCI6NTEsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInRoZS1odWJcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNkOWMxNDhiLWRiOGEtNDM2OC04YjdhLTk0ZGM3YjMwMTFkN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxMzMyfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjE4OCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwidGhlLWh1YlwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwidGhlLWh1YlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMTcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInRoZS1odWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzE4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85OGZiMmFkNC05NzVmLTQ2ZDgtYWUzNy1lMjMwZGNkZWQxZGVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczMH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJ0aGUtaHViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MzAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInRoZS1odWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzIwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzc1MGMwY2EzLWJlYjktNDQ4ZS05NDU5LTI4MDlhMDgyNmI2OFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQxOX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJ0aGUtaHViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDE5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJ0aGUtaHViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMyMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwidGhlLWh1YlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMjMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wib21lZ2EtbmV0XCIsXCJ6Yi1pbnN0aXR1dGVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo0MyxcImhhY2tEaWZmaWN1bHR5XCI6NDMsXCJtaW5EaWZmaWN1bHR5XCI6MTQsXCJtb25leUF2YWlsYWJsZVwiOjEzNDc5Mjc5OC4yNSxcIm1vbmV5TWF4XCI6NTA1NDcyOTkzLjQzNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjIsXCJvcGVuUG9ydENvdW50XCI6MixcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MzE4LFwic2VydmVyR3Jvd3RoXCI6NTV9fSxcImNvbXB0ZWtcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtMjYwNTY2LVNlY3Rvci0xMi5jY3RcIixcInR5cGVcIjpcIlNhbml0aXplIFBhcmVudGhlc2VzIGluIEV4cHJlc3Npb25cIixcImRhdGFcIjpcIigoKCgpKCgoKCkpKChhKShcIixcInJld2FyZFwiOntcIm5hbWVcIjpcIlNlY3Rvci0xMlwiLFwidHlwZVwiOjB9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjp0cnVlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImNvbXB0ZWtcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjgwLjAuMi44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXCJtYW4tYW5kLW1hY2hpbmUubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQ29tcHVUZWtcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImNvbXB0ZWtcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzI0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJjb21wdGVrXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMyNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJjb21wdGVrXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMyNixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiY29tcHRla1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMjcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJjb21wdGVrXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMyOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiY29tcHRla1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMjksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImNvbXB0ZWtcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzMwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcInNpbHZlci1oZWxpeFwiLFwic3VtbWl0LXVuaVwiXSxcInNtdHBQb3J0T3BlblwiOnRydWUsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjp0cnVlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjUsXCJoYWNrRGlmZmljdWx0eVwiOjY1LFwibWluRGlmZmljdWx0eVwiOjIyLFwibW9uZXlBdmFpbGFibGVcIjoxODU3Njk3OTguNzUsXCJtb25leU1heFwiOjY5NjYzNjc0NS4zMTI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjozLFwib3BlblBvcnRDb3VudFwiOjMsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjM1MSxcInNlcnZlckdyb3d0aFwiOjQ5fX0sXCJuZXRsaW5rXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJuZXRsaW5rXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI3Ny4zLjYuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTI4LFwibWVzc2FnZXNcIjpbXCJzaW11bGF0ZWQtcmVhbGl0eS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJOZXRMaW5rIFRlY2hub2xvZ2llc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJzaWx2ZXItaGVsaXhcIixcIkkuSS5JLklcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjAsXCJoYWNrRGlmZmljdWx0eVwiOjYwLFwibWluRGlmZmljdWx0eVwiOjIwLFwibW9uZXlBdmFpbGFibGVcIjoyMDYyNTAwMDAsXCJtb25leU1heFwiOjc3MzQzNzUwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MyxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjozODgsXCJzZXJ2ZXJHcm93dGhcIjo0Nn19LFwiam9obnNvbi1vcnRob1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjp0cnVlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImpvaG5zb24tb3J0aG9cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjE2LjkuMy44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkpvaG5zb24gT3J0aG9wZWRpY3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImpvaG5zb24tb3J0aG9cIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzMxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJqb2huc29uLW9ydGhvXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMzMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJqb2huc29uLW9ydGhvXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMzMyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiam9obnNvbi1vcnRob1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMzQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJqb2huc29uLW9ydGhvXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMzNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiam9obnNvbi1vcnRob1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMzYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImpvaG5zb24tb3J0aG9cIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzM3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcInNpbHZlci1oZWxpeFwiLFwicm90aG1hbi11bmlcIixcImNhdGFseXN0XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjp0cnVlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NDgsXCJoYWNrRGlmZmljdWx0eVwiOjE2LjI4OTk5OTk5OTk5OTk4NSxcIm1pbkRpZmZpY3VsdHlcIjoxNixcIm1vbmV5QXZhaWxhYmxlXCI6MTk5MTk0MzU4LjU2MjUsXCJtb25leU1heFwiOjIwODI4MDE1MS41NjI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjoyLFwib3BlblBvcnRDb3VudFwiOjIsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjI2NyxcInNlcnZlckdyb3d0aFwiOjU2fX0sXCJuMDBkbGVzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcIm4wMGRsZXNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjM2LjcuOS4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo0LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk5vb2RsZSBCYXJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6My41LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDE5LDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjE2Ny4xMjc4NjEwNDMyLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS44MDk5OTk5OTYzOTE1LFwicGlkXCI6OSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibjAwZGxlc1wiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNzhjNjIxNjYtMWMwYy00ZmVmLWFiYzEtODRjYzZiNTlkMWE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwOTR9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTg0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJuMDBkbGVzXCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJuMDBkbGVzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMzOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzb3J0ZWRfdGFyZ2V0cywgc3J2X3NlYyB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAvL3JhbmRvbSBiYWNrb2ZmXFxuICBhd2FpdCBucy5zbGVlcChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwMCkpO1xcblxcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgLy9yYW5kb20gYmFja29mZlxcbiAgICBhd2FpdCBucy5zbGVlcChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1MDAwKSk7XFxuXFxuICAgIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKVxcbiAgICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICAgIC4uLnNydixcXG4gICAgICAgIC4uLnNydl9zZWMobnMsIHNydi5uYW1lKSxcXG4gICAgICB9KSlcXG4gICAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLnNlY19jdXJyID4gaW5mby5zZWNfbWluICsgMSk7XFxuICAgIC8vLmZpbHRlcigoaW5mbykgPT4gaW5mby5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgICBucy5wcmludChcXG4gICAgICBgdG9wIHRhcmdldHM6ICR7b3V0cHV0XFxuICAgICAgICAubWFwKChpbmZvKSA9PiBgJHtpbmZvLm5hbWV9ICR7aW5mby5zZWNfY3Vycn0vJHtpbmZvLnNlY19taW59YClcXG4gICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG5cXG4gICAgaWYgKG91dHB1dC5sZW5ndGggPiAwKSB7XFxuICAgICAgY29uc3QgaW5mbyA9IG91dHB1dFswXTtcXG4gICAgICBucy5wcmludChcXG4gICAgICAgIGBUYXJnZXQgJHtpbmZvLm5hbWV9LCBiZWZvcmU6ICR7aW5mby5zZWNfY3Vycn0vJHtpbmZvLnNlY19taW59ICR7aW5mby5zZWNfcGN0fSVgXFxuICAgICAgKTtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4oaW5mby5uYW1lKTtcXG4gICAgICBjb25zdCBwb3N0ID0gc3J2X3NlYyhucywgaW5mby5uYW1lKTtcXG4gICAgICBucy5wcmludChcXG4gICAgICAgIGAgIGFmdGVyIHNlYzogJHtwb3N0LnNlY19jdXJyfS8ke3Bvc3Quc2VjX21pbn0gJHtwb3N0LnNlY19wY3R9JWBcXG4gICAgICApO1xcbiAgICAgIG5zLnRwcmludChcXG4gICAgICAgIGB3ZWFrZW5lZCAke2luZm8ubmFtZX06ICR7K3Bvc3Quc2VjX2N1cnIudG9GaXhlZCgyKX0vJHtcXG4gICAgICAgICAgcG9zdC5zZWNfbWluXFxuICAgICAgICB9LCBub3cgYXQgJHtwb3N0LnNlY19wY3R9JWBcXG4gICAgICApO1xcbiAgICB9XFxuICAgIGF3YWl0IG5zLnNsZWVwKDEwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi10b3AuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNCxcInNlcnZlclwiOlwibjAwZGxlc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMzksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc29ydGVkX3RhcmdldHMsIHNydl9tb25leSwgcGVyY2VudGFnZSwgZm10IH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIC8vcmFuZG9tIGJhY2tvZmZcXG4gIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAwKSk7XFxuXFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICAvL3JhbmRvbSBiYWNrb2ZmXFxuICAgIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwMDApKTtcXG5cXG4gICAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpXFxuICAgICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgICAgLi4uc3J2LFxcbiAgICAgICAgLi4uc3J2X21vbmV5KG5zLCBzcnYubmFtZSksXFxuICAgICAgfSkpXFxuICAgICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9jdXJyIDwgaW5mby5tb25leV9tYXgpXFxuICAgICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgICBucy5wcmludChcXG4gICAgICBgdG9wIHRhcmdldHM6ICR7b3V0cHV0XFxuICAgICAgICAubWFwKFxcbiAgICAgICAgICAoaW5mbykgPT4gYCR7aW5mby5uYW1lfSAke2ZtdChpbmZvLm1vbmV5X21heCl9JCAke2luZm8ubW9uZXlfcGN0fSVgXFxuICAgICAgICApXFxuICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuXFxuICAgIGlmIChvdXRwdXQubGVuZ3RoID4gMCkge1xcbiAgICAgIGNvbnN0IGluZm8gPSBvdXRwdXRbMF07XFxuICAgICAgbnMucHJpbnQoYFRhcmdldCAke2luZm8ubmFtZX06YCk7XFxuICAgICAgbnMucHJpbnQoXFxuICAgICAgICBgICBiZWZvcmUgbW9uZXk6ICR7Zm10KGluZm8ubW9uZXlfY3Vycil9LyR7Zm10KGluZm8ubW9uZXlfbWF4KX0gJHtcXG4gICAgICAgICAgaW5mby5tb25leV9wY3RcXG4gICAgICAgIH0lYFxcbiAgICAgICk7XFxuICAgICAgY29uc3QgYW1vdW50ID0gYXdhaXQgbnMuZ3JvdyhpbmZvLm5hbWUpO1xcbiAgICAgIGNvbnN0IGFmdGVyID0gc3J2X21vbmV5KG5zLCBpbmZvLm5hbWUpO1xcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYCAgYWZ0ZXIgbW9uZXk6ICR7Zm10KGFmdGVyLm1vbmV5X2N1cnIpfS8ke2ZtdChhZnRlci5tb25leV9tYXgpfSAke1xcbiAgICAgICAgICBhZnRlci5tb25leV9wY3RcXG4gICAgICAgIH0lIChyYWlzZWQgJHtwZXJjZW50YWdlKGluZm8ubW9uZXlfY3VyciwgYWZ0ZXIubW9uZXlfY3Vycil9JSlgXFxuICAgICAgKTtcXG4gICAgICBucy50cHJpbnQoXFxuICAgICAgICBgZ3Jvd24gJHtpbmZvLm5hbWV9IHRvICR7Zm10KGFmdGVyLm1vbmV5X2N1cnIpfSQgLyAke2ZtdChcXG4gICAgICAgICAgaW5mby5tb25leV9tYXhcXG4gICAgICAgICl9JCAgJHthZnRlci5tb25leV9wY3R9JSAoKyAke3BlcmNlbnRhZ2UoYW1vdW50LCBpbmZvLm1vbmV5X2N1cnIpfSUpYFxcbiAgICAgICk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbnMucHJpbnQoXFxcIm5vIG1vcmUgdGFnZXRzIGF2YWlsYWJsZVxcXCIpO1xcbiAgICB9XFxuICAgIGF3YWl0IG5zLnNsZWVwKDEwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctdG9wLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNWQ0ZTljOTEtMjI4Ni00NTBkLWE5NTEtMzc2MWZiOWFjNGI5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE0OTk5fSx7XCJmaWxlbmFtZVwiOlwiZ3Jvdy10b3AuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzMzMmZhNzRhLTVlMTAtNDA3ZS04MTZmLTc5YjlkMzBiMGNmNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNTA1MX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcIm4wMGRsZXNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzQwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHtcXG4gIHNvcnRlZF90YXJnZXRzLFxcbiAgc3J2X3NlYyxcXG4gIHBlcmNlbnRhZ2UsXFxuICBmbXQsXFxuICBzcnZfbW9uZXksXFxufSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgLy9yYW5kb20gYmFja29mZlxcbiAgYXdhaXQgbnMuc2xlZXAoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDApKTtcXG5cXG4gIGxldCBoYXZlVGFyZ2V0ID0gZmFsc2U7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICAvL3JhbmRvbSBiYWNrb2ZmXFxuICAgIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwMDApKTtcXG5cXG4gICAgY29uc3QgaW5mb3MgPSBzb3J0ZWRfdGFyZ2V0cyhucykubWFwKChzcnYpID0+ICh7XFxuICAgICAgLi4uc3J2LFxcbiAgICAgIC4uLnNydl9zZWMobnMsIHNydi5uYW1lKSxcXG4gICAgICAuLi5zcnZfbW9uZXkobnMsIHNydi5uYW1lKSxcXG4gICAgfSkpO1xcbiAgICAvLyAgICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gICAgLy9ucy50cHJpbnQoYGluZm86ICR7aW5mb3MubWFwKChpbmZvKSA9PiBpbmZvLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YCk7XFxuXFxuICAgIGNvbnN0IG91dHB1dF9zID0gaW5mb3NcXG4gICAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X2N1cnIgIT0gMClcXG4gICAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X2N1cnIgPj0gMC4yNSAqIGluZm8ubW9uZXlfbWF4KVxcbiAgICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8uc2VjX2N1cnIgPD0gaW5mby5zZWNfbWluICsgMik7IC8vIG9ubHkgd2l0aCByZWFzb25hYmx5IHdlYWsgc2VjdXJpdHlcXG5cXG4gICAgbnMucHJpbnQoXFxuICAgICAgYGxvdy1zZWMgdGFyZ2V0czogJHtvdXRwdXRfc1xcbiAgICAgICAgLm1hcChcXG4gICAgICAgICAgKGluZm8pID0+XFxuICAgICAgICAgICAgYCR7aW5mby5uYW1lfSAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufSwgJHtmbXQoXFxuICAgICAgICAgICAgICBpbmZvLm1vbmV5X2N1cnJcXG4gICAgICAgICAgICApfSQvJHtmbXQoaW5mby5tb25leV9tYXgpfSRgXFxuICAgICAgICApXFxuICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuXFxuICAgIGNvbnN0IG91dHB1dCA9IG91dHB1dF9zLmZpbHRlcihcXG4gICAgICAoaW5mbykgPT4gaW5mby5tb25leV9jdXJyID49IGluZm8ubW9uZXlfbWF4ICogMC41XFxuICAgICk7IC8vIG9ubHkgd2l0aCBkZWNlbnQgbW9uZXlcXG5cXG4gICAgbnMucHJpbnQoXFxuICAgICAgYHRvcCB0YXJnZXRzOiAke291dHB1dFxcbiAgICAgICAgLm1hcCgoaW5mbykgPT4gYCR7aW5mby5uYW1lfSAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufWApXFxuICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuXFxuICAgIGlmIChvdXRwdXQubGVuZ3RoID4gMCkge1xcbiAgICAgIGhhdmVUYXJnZXQgPSB0cnVlO1xcbiAgICAgIGNvbnN0IGluZm8gPSBvdXRwdXRbMF07XFxuICAgICAgbnMucHJpbnQoYFRhcmdldCAke2luZm8ubmFtZX06YCk7XFxuICAgICAgY29uc3QgcHJlTW9uZXkgPSBpbmZvLm1vbmV5X2N1cnI7XFxuICAgICAgbnMucHJpbnQoXFxuICAgICAgICBgICBiZWZvcmUgaGFjayBzZWM6ICR7aW5mby5zZWNfY3Vycn0vJHtpbmZvLnNlY19taW59ICR7XFxuICAgICAgICAgIGluZm8uc2VjX3BjdFxcbiAgICAgICAgfSUsIG1vbmV5OiAke2ZtdChwcmVNb25leSl9YFxcbiAgICAgICk7XFxuICAgICAgY29uc3QgbG9vdCA9IGF3YWl0IG5zLmhhY2soaW5mby5uYW1lKTtcXG4gICAgICBjb25zdCBwb3N0TW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShpbmZvLm5hbWUpO1xcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYCAgYWZ0ZXIgaGFjayBzZWM6ICAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufSAke1xcbiAgICAgICAgICBpbmZvLnNlY19wY3RcXG4gICAgICAgIH0lLCBtb25leTogJHtmbXQocG9zdE1vbmV5KX0sIGdvdCAke3BlcmNlbnRhZ2UobG9vdCwgcHJlTW9uZXkpfSVgXFxuICAgICAgKTtcXG4gICAgICBucy5wcmludChcXG4gICAgICAgIGBIYWNrZWQgJHtpbmZvLm5hbWV9OiBnb3QgJHtmbXQobG9vdCl9ICgke3BlcmNlbnRhZ2UoXFxuICAgICAgICAgIGxvb3QsXFxuICAgICAgICAgIHByZU1vbmV5XFxuICAgICAgICApfSUpLCBub3cgYXQgc2VjICR7aW5mby5zZWNfY3Vyci50b0ZpeGVkKDIpfS8ke2luZm8uc2VjX21pbn0gKCR7XFxuICAgICAgICAgIGluZm8uc2VjX3BjdFxcbiAgICAgICAgfSUpYFxcbiAgICAgICk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgaWYgKGhhdmVUYXJnZXQpIHtcXG4gICAgICAgIG5zLnByaW50KFxcXCJubyBtb3JlIHRhZ2V0cyBhdmFpbGFibGVcXFwiKTtcXG4gICAgICAgIGhhdmVUYXJnZXQgPSBmYWxzZTtcXG4gICAgICB9XFxuICAgIH1cXG4gICAgYXdhaXQgbnMuc2xlZXAoMSk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stdG9wLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJuMDBkbGVzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM0MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82ZmY4OGE2NC1kYTY3LTQ5YzQtYmNjNi0xNThiZGFkODlmM2ZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MTV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibjAwZGxlc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQxNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibjAwZGxlc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNDMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIm4wMGRsZXNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzQ0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm4wMGRsZXNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzQ1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zOWM4OWE3MS1hM2JjLTRkMjgtODY1Ni05MjQzMTA5ZDE1M2VcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcwMn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJuMDBkbGVzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MDIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIm4wMGRsZXNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzQ3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYWNkNDAxMDAtZmM3My00Mjg1LWE4MGItNzRjOTMyMGQwYzVhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1M31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcIm4wMGRsZXNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzQ4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIixcIm5lY3Rhci1uZXRcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjo1MjUwMCxcIm1vbmV5TWF4XCI6MTk2ODc1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjowLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjozMDAwfX0sXCJmb29kbnN0dWZmXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTgwOTc3OS1TZWN0b3ItMTIuY2N0XCIsXCJ0eXBlXCI6XCJBbGdvcml0aG1pYyBTdG9jayBUcmFkZXIgSVwiLFwiZGF0YVwiOlsxNDYsNiw4NSwxMTYsNjIsMTI3LDcyLDUxLDE2NCw1MywzLDEyMSw3LDEwMCwxNDIsMTE4LDE1NywxNzVdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiU2VjdG9yLTEyXCIsXCJ0eXBlXCI6MH19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImZvb2Ruc3R1ZmZcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg3LjUuNS41XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W1wic2VjdG9yLTEyLWNyaW1lLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkZvb2ROU3R1ZmZcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MTUuNzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMTMzLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjExNjkuODk1MDI3MzAyNDAwMixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuODA5OTk5OTk2MzkxNSxcInBpZFwiOjIwLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJmb29kbnN0dWZmXCIsXCJ0aHJlYWRzXCI6NyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xN2E0YjZhNC1jMTA1LTQ1ZTctYWFjOC1mZjljYTA2YzJjZTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDA5OX1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMTMsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImZvb2Ruc3R1ZmZcIixcInRocmVhZHNcIjoyLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImZvb2Ruc3R1ZmZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzQ5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJmb29kbnN0dWZmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDcyZDdjYzktZmRlZC00NWM1LTk3NTktZGRiNGZjMTMzMWM3XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiZm9vZG5zdHVmZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzEwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJmb29kbnN0dWZmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zZjc4NTFlYS0wZWEyLTQ5ZTEtODM3OS01MDE3ZDRkMTQ3NGJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiZm9vZG5zdHVmZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiZm9vZG5zdHVmZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNTQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImZvb2Ruc3R1ZmZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzU1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZGQxNmNjZDUtMmYyMC00ZWE4LTlkOWMtZjRjZTBiOTdmZWMyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1NX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImZvb2Ruc3R1ZmZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzU2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MTAsXCJoYWNrRGlmZmljdWx0eVwiOjEwLFwibWluRGlmZmljdWx0eVwiOjMsXCJtb25leUF2YWlsYWJsZVwiOjE1MDAwMDAsXCJtb25leU1heFwiOjU2MjUwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjAsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjV9fSxcInNpZ21hLWNvc21ldGljc1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ0LjguOS40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTaWdtYSBDb3NtZXRpY3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MTUuNzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMTMzLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjExNjkuODk1MDI3MzAyNDAwMixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuODA5OTk5OTk2MzkxNSxcInBpZFwiOjIyLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcInRocmVhZHNcIjo3LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzk5NmNjZDc5LTRmNTAtNGY2Mi1hMDFiLWZjZGNkYWRlODEzNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTAwfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIxNCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwic2lnbWEtY29zbWV0aWNzXCIsXCJ0aHJlYWRzXCI6MixcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzU3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzU4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84M2E0MGMyNi01NWU2LTQzYTAtYTE0Ni1lZDhkMGFkZTVjMGZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxMX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwic2lnbWEtY29zbWV0aWNzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM2MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8yYzc4ZTVkYi04MDQ3LTRlNmYtOTg4ZC1iZjZmZjVkYTlkY2VcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwic2lnbWEtY29zbWV0aWNzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDQ1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzYyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzYzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMGIyYjM3MjUtY2M0Mi00OTY3LWExNjQtNjlmYTE0ODVjMTZlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1Nn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcInNpZ21hLWNvc21ldGljc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNjQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiLFwibWF4LWhhcmR3YXJlXCIsXCJDU0VDXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEwLFwiaGFja0RpZmZpY3VsdHlcIjoxMCxcIm1pbkRpZmZpY3VsdHlcIjozLFwibW9uZXlBdmFpbGFibGVcIjoxNzI1MDAwLFwibW9uZXlNYXhcIjo2NDY4NzUwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjowLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjUsXCJzZXJ2ZXJHcm93dGhcIjoxMH19LFwiam9lc2d1bnNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtODI2MDYzLmNjdFwiLFwidHlwZVwiOlwiQXJyYXkgSnVtcGluZyBHYW1lXCIsXCJkYXRhXCI6WzAsOSwzLDAsNCwwLDAsMSw4LDMsMCw3LDAsMTAsMCw5LDAsNiwwXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjF9fX0se1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtMjA3NTY1LmNjdFwiLFwidHlwZVwiOlwiVW5pcXVlIFBhdGhzIGluIGEgR3JpZCBJSVwiLFwiZGF0YVwiOltbMCwwLDEsMSwwLDAsMCwxLDBdLFswLDAsMCwwLDAsMCwxLDAsMV0sWzAsMCwxLDAsMSwwLDAsMSwwXSxbMCwwLDAsMCwwLDAsMCwwLDBdLFswLDAsMCwwLDAsMCwwLDAsMF0sWzAsMCwwLDAsMCwwLDEsMCwwXSxbMCwwLDAsMCwwLDAsMCwwLDBdLFswLDAsMCwxLDAsMSwwLDAsMF0sWzAsMCwwLDAsMCwwLDAsMCwwXSxbMCwwLDAsMCwwLDEsMCwwLDBdLFswLDAsMCwwLDAsMCwwLDAsMF0sWzAsMCwwLDAsMCwwLDAsMCwwXV0sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjozfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwiam9lc2d1bnNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI4LjUuNC4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJKb2UncyBHdW5zXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjE1Ljc1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDEzMywwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMTY5Ljg5NTAyNzMwMjQwMDIsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjQwOTk5OTk5NjM5MixcInBpZFwiOjU1LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJqb2VzZ3Vuc1wiLFwidGhyZWFkc1wiOjcsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMmM2ZTk0YWItZjE3ZC00YWFkLThmOTYtMWQzY2JjNTAwZTNiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMTd9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjE4LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJqb2VzZ3Vuc1wiLFwidGhyZWFkc1wiOjIsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwiam9lc2d1bnNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzY1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJqb2VzZ3Vuc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNjYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzc0ZWY1ODZjLTY0MWQtNDJmOC1iNGI3LWE1MjhiNDZlOTA5ZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzMyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImpvZXNndW5zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MzIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImpvZXNndW5zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM2OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mYTI1MzdhNS0wYzcyLTRlNmUtYTM4NS1iMjZhM2VmY2ZjZTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiam9lc2d1bnNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImpvZXNndW5zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM3MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiam9lc2d1bnNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzcxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNTA3MzM0NzItNzZhMi00NTllLWEwYjYtZjAzOGVjYTAxZjI4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM2MH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImpvZXNndW5zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM3MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjE1LFwiaGFja0RpZmZpY3VsdHlcIjoxNy4xOTM5OTk5OTk5OTk5NjcsXCJtaW5EaWZmaWN1bHR5XCI6NSxcIm1vbmV5QXZhaWxhYmxlXCI6NzAzMTI1MCxcIm1vbmV5TWF4XCI6NzAzMTI1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMCxcInNlcnZlckdyb3d0aFwiOjIwfX0sXCJ6ZXIwXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInplcjBcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI0LjIuMS4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJaRVIwIE5pZ2h0Y2x1YlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjozMS40NSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDE1XX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjEzMS45NDMwNDgxOTE5OTk5NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNDA5OTk5OTk2MzkyLFwicGlkXCI6NjUsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInplcjBcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMmQzY2E0MjgtYjFlYy00ZjI1LWJhMjAtYjE1ZWEwNTNjZTZiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMjN9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyNjYsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MjMzOS43OTAwNTQ2MDQ4MDA0LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS40MDk5OTk5OTYzOTIsXCJwaWRcIjo2NixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiemVyMFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzM1MjRjYzdmLWI1OGYtNDVjZS1iZWJkLTMyMWE3N2QwNTUzY1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTI0fV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlsyMjU1MzUzLDQxLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6NDAwLjIyNzI0NjE4MjM5OTgsXCJvbmxpbmVNb25leU1hZGVcIjoyMjU1MzUzLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjQwOTk5OTk5NjM5MixcInBpZFwiOjY3LFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInplcjBcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzljNThjNDkxLWY4MDktNDA4Yi1iZDNmLTdmNTFkNjc3YjU2MFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTI1fV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIyMixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiemVyMFwiLFwidGhyZWFkc1wiOjIsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwiemVyMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNzMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzEwM2QxYjgwLTU2MmItNDRkZi1iMWZiLTdhYWY4YjBmNmY3N1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzM4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInplcjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzcwMTNjMjYtNGUwMS00N2I1LTljZjktNmIyMmI1MjU3ZGI2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3Mzl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiemVyMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzM5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzE4YTliYmU5LTI0M2MtNGM2ZS05YjJjLWY4MjU1MjI5NDY4NFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzQwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiemVyMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzQwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2ZlZWFlNjJkLTE1ZDUtNGIwZC1iMzk2LTRkNjYzZDA1NDEwZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ1M31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJ6ZXIwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDUzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJ6ZXIwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM3OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiemVyMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNzksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGxldCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgbnMudHByaW50KFxcXCJmYXJtaW5nIGFuZCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIGNvbnN0IG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuOTtcXG4gIGNvbnN0IHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgMjtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGlmIChucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCkge1xcbiAgICAgIGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICB9IGVsc2UgaWYgKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCkge1xcbiAgICAgIGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIH1cXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xYWMwNzQyZS04OGRjLTRiMjUtODE5ZS0zMGRiZTdjZDU2NzlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzY0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNCxcInNlcnZlclwiOlwiemVyMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozODAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaXJvbi1neW1cIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoyNSxcImhhY2tEaWZmaWN1bHR5XCI6OC4wMDIsXCJtaW5EaWZmaWN1bHR5XCI6OCxcIm1vbmV5QXZhaWxhYmxlXCI6MjA0NjYwMDYuNjYwMDI4ODY3LFwibW9uZXlNYXhcIjoyMTA5Mzc1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MSxcIm9wZW5Qb3J0Q291bnRcIjoxLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo3NSxcInNlcnZlckdyb3d0aFwiOjQwfX0sXCJuZWN0YXItbmV0XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcIm5lY3Rhci1uZXRcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjgzLjMuNi44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJOZWN0YXIgTmlnaHRjbHViIE5ldHdvcmtcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MTUuNzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMTMzLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjExNjkuODk1MDI3MzAyNDAwMixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuODA5OTk5OTk2MzkxNSxcInBpZFwiOjE0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJuZWN0YXItbmV0XCIsXCJ0aHJlYWRzXCI6NyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85YTY5ODgzZi05NTdkLTQ4MTEtOWY5NS0xNGRjYjQ4MGRmNDlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDA5NX1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMTEsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm5lY3Rhci1uZXRcIixcInRocmVhZHNcIjoyLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcIm5lY3Rhci1uZXRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzgxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJuZWN0YXItbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM4MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOGM4ZDhjNGEtMGMxMS00ZGY5LWIxMDUtNjdjYzZjZDY0YjAzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MDZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibmVjdGFyLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzA2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJuZWN0YXItbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM4NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xNmU3NDZkMC1lMTAzLTQyYjEtODcxNS05YmU5ZmZiYTE2ZThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibmVjdGFyLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibmVjdGFyLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozODYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIm5lY3Rhci1uZXRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mzg3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZDc1NzdkMGMtMGVhOC00YmM0LTlhMjAtZGJmYzJjYWExODM1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1NH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcIm5lY3Rhci1uZXRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mzg4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcIm4wMGRsZXNcIixcInBoYW50YXN5XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjIwLFwiaGFja0RpZmZpY3VsdHlcIjoyMC4xOTIsXCJtaW5EaWZmaWN1bHR5XCI6NyxcIm1vbmV5QXZhaWxhYmxlXCI6MjExMTg1Ny42NzUxMjgwOTgsXCJtb25leU1heFwiOjc3MzQzNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjAsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MjAsXCJzZXJ2ZXJHcm93dGhcIjoyNX19LFwibmVvLW5ldFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJuZW8tbmV0XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4My40LjcuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MzIsXCJtZXNzYWdlc1wiOltcInRoZS1oaWRkZW4td29ybGQubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTmVvIE5pZ2h0Y2x1YiBOZXR3b3JrXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjMxLjQ1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsMTVdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTMxLjk0MzA0ODE5MTk5OTk2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS44MDk5OTk5OTYzOTE1LFwicGlkXCI6MjgsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm5lby1uZXRcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOTNiNjQ3MzItMjA0Mi00NmU1LTg5MTItNzYxMzQyMDdhMGU0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMDR9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyNjYsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MjMzOS43OTAwNTQ2MDQ4MDA0LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS44MDk5OTk5OTYzOTE1LFwicGlkXCI6MjksXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm5lby1uZXRcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82ZjcwNzYxZi0zNWViLTQzMmEtYmM3Yy1hMjcwYmNhNzliMzlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDEwNX1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMTk4MDgzNSwzNiwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2Ny4yNDE0ODQxMzQzOTk5NyxcIm9ubGluZU1vbmV5TWFkZVwiOjE5ODA4MzUsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuODA5OTk5OTk2MzkxNSxcInBpZFwiOjMwLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIm5lby1uZXRcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNmODk3YTkxLTI3MGQtNDE3OS04ZDVjLTE0ZGI3MDFkMzNiZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTA2fV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIxNixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibmVvLW5ldFwiLFwidGhyZWFkc1wiOjIsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwibmVvLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozODksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzI2NmUwMWE0LTMxMWUtNDVjZS04YmFhLWM5MTAyMWU2YWZhZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzE1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm5lby1uZXRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMGI5NjBiMjgtZmU0ZC00MDk2LTg2YWUtM2EzYWVkN2I1ZWJkXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibmVvLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzE2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzliNzQ2NDMyLTdmZTMtNDA3Zi1hMTMzLWJmYzFlYTk1ZWJiNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzE3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwibmVvLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzE3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzYyY2I2YTFiLTJiMzQtNGM1My04ZWQzLTM3MjRhZWI3NjhiZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0N31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJuZW8tbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDQ3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJuZW8tbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM5NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwibmVvLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozOTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGxldCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgbnMudHByaW50KFxcXCJmYXJtaW5nIGFuZCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIGNvbnN0IG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuOTtcXG4gIGNvbnN0IHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgMjtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGlmIChucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCkge1xcbiAgICAgIGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICB9IGVsc2UgaWYgKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCkge1xcbiAgICAgIGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIH1cXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83ZjAwOGYxMS03YzUyLTQyZjUtYjQzNS0zMTY3Yjg3YTZkZWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzU4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNCxcInNlcnZlclwiOlwibmVvLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozOTYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wibWF4LWhhcmR3YXJlXCIsXCJjcnVzaC1maXRuZXNzXCIsXCJhdm1uaXRlLTAyaFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjI1LFwiaGFja0RpZmZpY3VsdHlcIjoyNSxcIm1pbkRpZmZpY3VsdHlcIjo4LFwibW9uZXlBdmFpbGFibGVcIjozNzUwMDAwLFwibW9uZXlNYXhcIjoxNDA2MjUwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MSxcIm9wZW5Qb3J0Q291bnRcIjoxLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo1MCxcInNlcnZlckdyb3d0aFwiOjI1fX0sXCJzaWx2ZXItaGVsaXhcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6dHJ1ZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJzaWx2ZXItaGVsaXhcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg5LjIuNi4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo2NCxcIm1lc3NhZ2VzXCI6W1wibmV3LXRyaWFkcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTaWx2ZXIgSGVsaXhcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6NjIuODUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0NV19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozOTUuODI5MTQ0NTc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS42MDk5OTk5OTYzOTIsXCJwaWRcIjozNyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzg4MzJjMGJiLTIyN2EtNGVmZi1hZmZiLThhMWU0MTgwZDVhMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTEwfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsNTUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjQ4NDYuNzA3OTcwMjUyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNjA5OTk5OTk2MzkyLFwicGlkXCI6MzgsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInNpbHZlci1oZWxpeFwiLFwidGhyZWFkc1wiOjI5LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzIwZDM5NmRmLTI3YjUtNDcyZi1iZDg1LTY1NmI2NTMxNGZhY1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTExfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls3NjQ2NjMxLDEzOCwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjEyOTkuNjM5MDI0NjkxMTk5NyxcIm9ubGluZU1vbmV5TWFkZVwiOjc2NDY2MzEsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNjA5OTk5OTk2MzkyLFwicGlkXCI6MzksXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85NmIwNTQ2NS1iZDk4LTRiYzktODUyZC05YTZmMzA1MmQzNGVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDExMn1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoxODYsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInNpbHZlci1oZWxpeFwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM5NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDc0MThhNDEtYjczMC00MTUzLWE2M2QtZmMzYmQ5MGM5YmQzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzJiNzAzZWFjLTA3MzQtNDVkYi05ZThhLWM3NjhkNzFkMzVmZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzIyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInNpbHZlci1oZWxpeFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzIyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzZiZjhkZmIyLWU4MTUtNDAwZC1hMjM0LTFjNjJhNjA4NDIwZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzIzfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMzQ3YzJiZmYtMmMzNi00ZDkxLWI0NTYtOTUwMWU5ZGViZGE1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDE3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInNpbHZlci1oZWxpeFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQxNyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwMyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJtYXgtaGFyZHdhcmVcIixcImNvbXB0ZWtcIixcIm5ldGxpbmtcIixcImpvaG5zb24tb3J0aG9cIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjozMCxcImhhY2tEaWZmaWN1bHR5XCI6MzAsXCJtaW5EaWZmaWN1bHR5XCI6MTAsXCJtb25leUF2YWlsYWJsZVwiOjMzNzUwMDAwLFwibW9uZXlNYXhcIjoxMjY1NjI1MDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjIsXCJvcGVuUG9ydENvdW50XCI6MixcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTUwLFwic2VydmVyR3Jvd3RoXCI6MzB9fSxcImhvbmctZmFuZy10ZWFcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwiaG9uZy1mYW5nLXRlYVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMy44LjcuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltcImJyaWdodGVyLXRoYW4tdGhlLXN1bi5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJIb25nRmFuZyBUZWFob3VzZVwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoxNS43NSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwxMzMsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTE2OS44OTUwMjczMDI0MDAyLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS40MDk5OTk5OTYzOTIsXCJwaWRcIjo1NyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9uZy1mYW5nLXRlYVwiLFwidGhyZWFkc1wiOjcsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYmQ3Yjc2ZTQtNjIzOC00NWUzLWI0YzMtMGExNGJiYzdhZjYzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMTh9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjE5LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJob25nLWZhbmctdGVhXCIsXCJ0aHJlYWRzXCI6MixcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJob25nLWZhbmctdGVhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwNCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9uZy1mYW5nLXRlYVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MDUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzIxZTY2NzYyLWU4YjQtNDQ1ZC1iODIzLTNmMmIzNGFjMDcwOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzMzfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhvbmctZmFuZy10ZWFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczMyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiaG9uZy1mYW5nLXRlYVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MDcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMmRkODYzZjgtYzdlMS00MWI4LWEyMDItZDgzYTNhOGNjZGVhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDUwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhvbmctZmFuZy10ZWFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhvbmctZmFuZy10ZWFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDA5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJob25nLWZhbmctdGVhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgbGV0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBucy50cHJpbnQoXFxcImZhcm1pbmcgYW5kIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgY29uc3QgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC45O1xcbiAgY29uc3Qgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyAyO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgaWYgKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKSB7XFxuICAgICAgYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIH0gZWxzZSBpZiAobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKSB7XFxuICAgICAgYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgfVxcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzcxZGRhNGM2LWI2NDUtNGIzZi1iYmM3LTEwYmM1MTkzMzZmZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNjF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJob25nLWZhbmctdGVhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjE1LFwiaGFja0RpZmZpY3VsdHlcIjoxNSxcIm1pbkRpZmZpY3VsdHlcIjo1LFwibW9uZXlBdmFpbGFibGVcIjoyMjUwMDAwLFwibW9uZXlNYXhcIjo4NDM3NTAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjowLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjMwLFwic2VydmVyR3Jvd3RoXCI6MjB9fSxcImhhcmFraXJpLXN1c2hpXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTE1NDc2My5jY3RcIixcInR5cGVcIjpcIkFsZ29yaXRobWljIFN0b2NrIFRyYWRlciBJXCIsXCJkYXRhXCI6WzQyLDEzNiwxMiwxMDEsMTY4LDE0Ml0sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjozfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwiaGFyYWtpcmktc3VzaGlcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI3LjAuOS45XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJIYXJhS2lyaSBTdXNoaSBCYXIgTmV0d29ya1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoxNS43NSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwxMzMsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTE2OS44OTUwMjczMDI0MDAyLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS40MDk5OTk5OTYzOTIsXCJwaWRcIjo1OSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaGFyYWtpcmktc3VzaGlcIixcInRocmVhZHNcIjo3LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2I3ZDVkNTdkLWJjODItNDhhYS1iN2UyLWY0N2Y2MWQ3NGVjMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTE5fV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIyMCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaGFyYWtpcmktc3VzaGlcIixcInRocmVhZHNcIjoyLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImhhcmFraXJpLXN1c2hpXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaGFyYWtpcmktc3VzaGlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDEzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83ZDU3MzI4My1jMjg5LTQ2NGEtOTI1Ni1lMTBlY2I0NmRkNWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczNH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJoYXJha2lyaS1zdXNoaVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzM0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJoYXJha2lyaS1zdXNoaVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vN2IwMzg2YTMtOTk0ZC00MzcxLWFlNDMtMmViMWIwYmM4NzdiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDUxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhhcmFraXJpLXN1c2hpXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDUxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJoYXJha2lyaS1zdXNoaVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImhhcmFraXJpLXN1c2hpXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgbGV0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBucy50cHJpbnQoXFxcImZhcm1pbmcgYW5kIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgY29uc3QgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC45O1xcbiAgY29uc3Qgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyAyO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgaWYgKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKSB7XFxuICAgICAgYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIH0gZWxzZSBpZiAobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKSB7XFxuICAgICAgYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgfVxcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzZiZjdmZjM1LWU4OTItNDlkOS1iYWRiLWM2NmIzMjJlYjQwOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNjJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJoYXJha2lyaS1zdXNoaVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxNSxcImhhY2tEaWZmaWN1bHR5XCI6MTUsXCJtaW5EaWZmaWN1bHR5XCI6NSxcIm1vbmV5QXZhaWxhYmxlXCI6MzAwMDAwMCxcIm1vbmV5TWF4XCI6MTEyNTAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjAsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NDAsXCJzZXJ2ZXJHcm93dGhcIjo0MH19LFwicGhhbnRhc3lcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6dHJ1ZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwaGFudGFzeVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDguOS42LjZcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlBoYW50YXN5IENsdWJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MzEuNDUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCwxNV19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMzEuOTQzMDQ4MTkxOTk5OTYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjgwOTk5OTk5NjM5MTUsXCJwaWRcIjoxNixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicGhhbnRhc3lcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTNiOTA5MWItNmIwNi00MDYwLWFhMTQtNDMyMjRiNjhlM2ZiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwOTZ9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyNjYsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MjMzOS43OTAwNTQ2MDQ4MDA0LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS44MDk5OTk5OTYzOTE1LFwicGlkXCI6MTcsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBoYW50YXN5XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTgyYjg2ODktMDJlMS00NDA1LWI3YzAtYTA4NWFkYjkwOWUzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwOTd9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzIzMDk4MjcsNDIsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo0MDYuODI0Mzk4NTkxOTk5OSxcIm9ubGluZU1vbmV5TWFkZVwiOjIzMDk4MjcsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuODA5OTk5OTk2MzkxNSxcInBpZFwiOjE4LFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBoYW50YXN5XCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mMzM3OWI4OC1kZGUxLTQ2ZTgtYjEwYS1mN2Y0NGY5YmFlOWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDA5OH1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMTIsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBoYW50YXN5XCIsXCJ0aHJlYWRzXCI6MixcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJwaGFudGFzeVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MjAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzRlMDkzNzNkLTkzOWItNGY5YS1hMjI1LTJjOGZlNWFhNGM0NlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzA3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBoYW50YXN5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MDcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzk3MTRlYmUwLWQ4MjktNDBkNC1hNzlmLTIxOGIwYTRkNjg1MVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzA4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBoYW50YXN5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MDgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vN2VkZGZjYzctYjZlYi00ODhmLTliNzEtYmUxZjhkMGZiZjRhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MDl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwaGFudGFzeVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzA5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2Q0N2QyMWRjLWEyMzItNDY1YS05YzkwLTZkOTE3Mzc0M2ViYlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0M31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwaGFudGFzeVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicGhhbnRhc3lcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDI1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwaGFudGFzeVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MjYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wibmVjdGFyLW5ldFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjIwLFwiaGFja0RpZmZpY3VsdHlcIjoyMCxcIm1pbkRpZmZpY3VsdHlcIjo3LFwibW9uZXlBdmFpbGFibGVcIjoxODAwMDAwMCxcIm1vbmV5TWF4XCI6Njc1MDAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjIsXCJvcGVuUG9ydENvdW50XCI6MixcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTAwLFwic2VydmVyR3Jvd3RoXCI6MzV9fSxcIm1heC1oYXJkd2FyZVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC04NzU0MzIuY2N0XCIsXCJ0eXBlXCI6XCJBcnJheSBKdW1waW5nIEdhbWVcIixcImRhdGFcIjpbNyw4LDMsNCwwLDldLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcIm1heC1oYXJkd2FyZVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNTAuOS4yLjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk1heCBIYXJkd2FyZSBTdG9yZVwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjozMS40NSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDE1XX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjEzMS45NDMwNDgxOTE5OTk5NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuODA5OTk5OTk2MzkxNSxcInBpZFwiOjI0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMDFmMzM3Y2ItNTM1OC00ZmJiLWExY2UtNzkzOWM3YTIxMDE4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMDF9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyNjYsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MjMzOS43OTAwNTQ2MDQ4MDA0LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS44MDk5OTk5OTYzOTE1LFwicGlkXCI6MjUsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm1heC1oYXJkd2FyZVwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzFhZGQ4NWZiLWJkNmItNDE2Mi05MWUyLWY2OTRjOTY5YzFiNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTAyfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlsyMjU2NDI1LDQxLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6NDAwLjIyNzI0NjE4MjM5OTksXCJvbmxpbmVNb25leU1hZGVcIjoyMjU2NDI1LFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjgwOTk5OTk5NjM5MTUsXCJwaWRcIjoyNixcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2IwZTMyODhkLWY0OGUtNDNmMi05NjNiLWFlODcyNDAxZjc5ZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTAzfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIxNSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibWF4LWhhcmR3YXJlXCIsXCJ0aHJlYWRzXCI6MixcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDI3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82M2EyOTdiNS04MDg1LTQ1MDgtOGQ4Zi1jMDI4YjVkZjYwMDJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxMn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzJmNjdjYzgtMDYxMC00YjM3LTg5YzctMmYwMDE4ZGJmODZiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibWF4LWhhcmR3YXJlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNjFkNzc5NDQtMDExNy00NjY0LThlZjktMGIzZTBkNDM3ZGMzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxNCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lMzM5MTFkYi04NGU5LTRhOWMtYmJhYS0xM2VjYmQwNzYyY2NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibWF4LWhhcmR3YXJlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDQ2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDMyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDMzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOGZhMWY1YzUtYTNhMC00Nzc1LTlhNjEtMjExZjY2NWQ4NDg4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1N31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcIm1heC1oYXJkd2FyZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MzQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wic2lnbWEtY29zbWV0aWNzXCIsXCJuZW8tbmV0XCIsXCJzaWx2ZXItaGVsaXhcIixcIm9tZWdhLW5ldFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjE1LFwiaGFja0RpZmZpY3VsdHlcIjoxNSxcIm1pbkRpZmZpY3VsdHlcIjo1LFwibW9uZXlBdmFpbGFibGVcIjo3NTAwMDAwLFwibW9uZXlNYXhcIjoyODEyNTAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MSxcIm9wZW5Qb3J0Q291bnRcIjoxLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MCxcInNlcnZlckdyb3d0aFwiOjMwfX0sXCJvbWVnYS1uZXRcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6dHJ1ZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJvbWVnYS1uZXRcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjEyLjguNS4zXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1widGhlLW5ldy1nb2QubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiT21lZ2EgU29mdHdhcmVcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MzEuNDUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCwxNV19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMzEuOTQzMDQ4MTkxOTk5OTYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjYwOTk5OTk5NjM5MixcInBpZFwiOjQ3LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJvbWVnYS1uZXRcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNmY2YjNkZjMtZmQyNy00N2IxLTg2YzctNGUwYTZjODQ2NmMwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMTN9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyNjYsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MjMzOS43OTAwNTQ2MDQ4MDA0LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS42MDk5OTk5OTYzOTIsXCJwaWRcIjo0OCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZWE4N2I0NWEtMDkwNy00ZWUxLWFlMDYtNWU2M2E0YTI3NzQ0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMTR9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzIyNjA5MzMsNDEsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo0MDAuMjI3MjQ2MTgyMzk5OCxcIm9ubGluZU1vbmV5TWFkZVwiOjIyNjA5MzMsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNjA5OTk5OTk2MzkyLFwicGlkXCI6NDksXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xZmQyMjc2My1lODdiLTQyNGMtYWRkNC0zOTkxNDdmODllMDhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDExNX1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMTcsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm9tZWdhLW5ldFwiLFwidGhyZWFkc1wiOjIsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQzNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDllZTQ2MzctYzQ0MC00NmNlLTk4ODEtZThkYzllYjYyNzE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3Mjd9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzZmMGQ4YzQ3LTA5ZDktNGM2MC05YjVkLTk2OTNmMWQwMDdjZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzI4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm9tZWdhLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzI4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNmYzkyNzBkLTI3NGUtNGMxMy1iNmY0LWM3NDY1YTQzNTYzNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzI5fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMjM2M2UyNWItMmMwYi00YTAyLWIwZTYtZjJiYzAwNmQ0Y2NhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDQ4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm9tZWdhLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ0MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ0MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJtYXgtaGFyZHdhcmVcIixcInRoZS1odWJcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjozMSxcImhhY2tEaWZmaWN1bHR5XCI6MzEsXCJtaW5EaWZmaWN1bHR5XCI6MTAsXCJtb25leUF2YWlsYWJsZVwiOjQ3MTYxNDQ2LFwibW9uZXlNYXhcIjoxNzY4NTU0MjIuNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MixcIm9wZW5Qb3J0Q291bnRcIjoyLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxODAsXCJzZXJ2ZXJHcm93dGhcIjozNX19LFwiY3J1c2gtZml0bmVzc1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjp0cnVlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImNydXNoLWZpdG5lc3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjc0LjQuOS40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkNydXNoIEZpdG5lc3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImNydXNoLWZpdG5lc3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDQyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJjcnVzaC1maXRuZXNzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ0MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJjcnVzaC1maXRuZXNzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ0NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiY3J1c2gtZml0bmVzc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NDUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJjcnVzaC1maXRuZXNzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ0NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiY3J1c2gtZml0bmVzc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NDcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImNydXNoLWZpdG5lc3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDQ4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcIm5lby1uZXRcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjozNyxcImhhY2tEaWZmaWN1bHR5XCI6MzcsXCJtaW5EaWZmaWN1bHR5XCI6MTIsXCJtb25leUF2YWlsYWJsZVwiOjQzMzkzMDc0LFwibW9uZXlNYXhcIjoxNjI3MjQwMjcuNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MixcIm9wZW5Qb3J0Q291bnRcIjoyLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoyNDgsXCJzZXJ2ZXJHcm93dGhcIjoyOH19LFwiaXJvbi1neW1cIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwiaXJvbi1neW1cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjY3LjAuNy4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJJcm9uIEd5bSBOZXR3b3JrXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjMxLjQ1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsMTVdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTMxLjk0MzA0ODE5MTk5OTk2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS40MDk5OTk5OTYzOTIsXCJwaWRcIjo2MSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaXJvbi1neW1cIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZTYxMzdlNmEtZTUzZS00OTNmLTgzYjAtODI4ZWJiYWI1MDM0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMjB9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyNjYsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MjMzOS43OTAwNTQ2MDQ4MDA0LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS40MDk5OTk5OTYzOTIsXCJwaWRcIjo2MixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaXJvbi1neW1cIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85MjM3MzYyOC00MGRjLTRlNmUtYTIyYi03ZGI0MDZjNGExMWFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDEyMX1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMjI1NjY1Miw0MSwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjQwMi40MjYyOTY5ODU1OTk5LFwib25saW5lTW9uZXlNYWRlXCI6MjI1NjY1MixcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS40MDk5OTk5OTYzOTIsXCJwaWRcIjo2MyxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJpcm9uLWd5bVwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNjNmNjc3YTAtMmRiOC00MGI1LTgwNjktNDZiOTA4MWM1MWUxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMjJ9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjIxLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJpcm9uLWd5bVwiLFwidGhyZWFkc1wiOjIsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwiaXJvbi1neW1cIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDQ5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85M2U4MTI1MS1mYzFmLTRmNWYtODk4Yi1iYjk4MmVmMDRmNGVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczNX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJpcm9uLWd5bVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzM1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83YjlhMzlhYS1jMjc5LTQ1NjUtYjJkOC1hNmM2OGNjMDdmZjhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczNn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJpcm9uLWd5bVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzM2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzIxMjYyNjhlLWIwOTctNDQ3ZC1iYjY5LTExZDY5YzAyNzlhZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzM3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiaXJvbi1neW1cIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczNyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82NDhhYzE2NC1kMDgxLTRjMzUtYTliNi1hNGJkY2RiYWFjNTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaXJvbi1neW1cIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImlyb24tZ3ltXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ1NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiaXJvbi1neW1cIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDU1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzNmMTcyOTktYWMyNi00MmYzLWFhNzYtMjY3YjBjODNlZmFlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM2M31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImlyb24tZ3ltXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ1NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCIsXCJ6ZXIwXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjp0cnVlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MzAsXCJoYWNrRGlmZmljdWx0eVwiOjMwLFwibWluRGlmZmljdWx0eVwiOjEwLFwibW9uZXlBdmFpbGFibGVcIjoxNTAwMDAwMCxcIm1vbmV5TWF4XCI6NTYyNTAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjEsXCJvcGVuUG9ydENvdW50XCI6MSxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTAwLFwic2VydmVyR3Jvd3RoXCI6MjB9fSxcIm1pbGxlbml1bS1maXRuZXNzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJtaWxsZW5pdW0tZml0bmVzc1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOS4yLjYuMVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTWlsbGVuaXVtIEZpdG5lc3MgTmV0d29ya1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJ6Yi1pbnN0aXR1dGVcIixcInNuYXAtZml0bmVzc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo1NSxcImhhY2tEaWZmaWN1bHR5XCI6NTUsXCJtaW5EaWZmaWN1bHR5XCI6MTgsXCJtb25leUF2YWlsYWJsZVwiOjE4NzUwMDAwMCxcIm1vbmV5TWF4XCI6NzAzMTI1MDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjozLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjQ5MCxcInNlcnZlckdyb3d0aFwiOjQyfX0sXCJwb3dlcmhvdXNlLWZpdG5lc3NcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInBvd2VyaG91c2UtZml0bmVzc1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDUuNi44LjRcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjE2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlBvd2VyaG91c2UgRml0bmVzc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJvbW5pdGVrXCIsXCJmdWxjcnVtYXNzZXRzXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjY0LFwiaGFja0RpZmZpY3VsdHlcIjo2NCxcIm1pbkRpZmZpY3VsdHlcIjoyMSxcIm1vbmV5QXZhaWxhYmxlXCI6Njc1MDAwMDAwLFwibW9uZXlNYXhcIjoyNTMxMjUwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjk5NSxcInNlcnZlckdyb3d0aFwiOjUxfX0sXCJzbmFwLWZpdG5lc3NcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNjgzNzA2LmNjdFwiLFwidHlwZVwiOlwiRmluZCBMYXJnZXN0IFByaW1lIEZhY3RvclwiLFwiZGF0YVwiOjY3MjM0OTQ4NCxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX0se1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtODY4MDgwLmNjdFwiLFwidHlwZVwiOlwiQWxnb3JpdGhtaWMgU3RvY2sgVHJhZGVyIElcIixcImRhdGFcIjpbMTUsODYsMTUwLDgzXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjF9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwic25hcC1maXRuZXNzXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1NC4xLjYuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTbmFwIEZpdG5lc3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wibWlsbGVuaXVtLWZpdG5lc3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NTcsXCJoYWNrRGlmZmljdWx0eVwiOjU3LFwibWluRGlmZmljdWx0eVwiOjE5LFwibW9uZXlBdmFpbGFibGVcIjozMzc1MDAwMDAsXCJtb25leU1heFwiOjEyNjU2MjUwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6Nzc2LFwic2VydmVyR3Jvd3RoXCI6NDJ9fSxcInJ1bjR0aGVoMTExelwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC05MjU5NjYtU2VjdG9yLTEyLmNjdFwiLFwidHlwZVwiOlwiVG90YWwgV2F5cyB0byBTdW1cIixcImRhdGFcIjoxMyxcInJld2FyZFwiOntcIm5hbWVcIjpcIlNlY3Rvci0xMlwiLFwidHlwZVwiOjB9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwicnVuNHRoZWgxMTF6XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5Ny4xLjUuM1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXCJzaW11bGF0ZWQtcmVhbGl0eS5saXRcIixcInRoZS1uZXctZ29kLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlRoZSBSdW5uZXJzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImluZm9jb21tXCIsXCJmdWxjcnVtdGVjaFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjowLFwiaGFja0RpZmZpY3VsdHlcIjowLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NTM2LFwic2VydmVyR3Jvd3RoXCI6MH19LFwiSS5JLkkuSVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjp0cnVlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcIkkuSS5JLklcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjkwLjcuMy44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyNTYsXCJtZXNzYWdlc1wiOltcImRlbW9jcmFjeS1pcy1kZWFkLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkkuSS5JLklcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCwyMTBdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTg0Ny4yMDI2NzQ2ODgwMDAzLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS42MDk5OTk5OTYzOTIsXCJwaWRcIjo0MixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiSS5JLkkuSVwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYjY2Zjg3MDItZWM1OS00MTdiLTkwMzUtODc4YjYyZDRmNjkzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjEzMjl9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyMjIzLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjE5NTUzLjk1OTc0MjA1NDQsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjYwOTk5OTk5NjM5MixcInBpZFwiOjQzLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJJLkkuSS5JXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzdhOGIyOWRmLWRkYjktNDQ0MC1hNWVjLTliZTI0OGRiMzU1ZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxMzMwfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlszMTY5MDc3OCw1NzQsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo1NjMzLjk2ODE1Nzc5ODQwMixcIm9ubGluZU1vbmV5TWFkZVwiOjMxNjkwNzc4LFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjYwOTk5OTk5NjM5MixcInBpZFwiOjQ0LFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIkkuSS5JLklcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mMDQ5ODE2Mi0xYTBmLTQyZmQtODJjYi00NWYyMzNmNmM3NzBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTMzMX1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoxODcsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIkkuSS5JLklcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcIkkuSS5JLklcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDU3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mMjYwZmE0Yy1lZmE4LTQ0NTktODVmZS0zMDVkOTQ0YjBiZTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcyNH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJJLkkuSS5JXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzk4YTQzMDYwLTU5ODYtNDM0MC05ZDE4LTA3OGM1NTY4MDljZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzI1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIkkuSS5JLklcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcyNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy80ZDA1NmVlZC03MGExLTQ1MTMtYWM3My1jYTdmNGI2N2Q4NDdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcyNn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIkkuSS5JLklcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcyNixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83MjVkMTFhZC03YjBjLTRiNzYtYmIzNi0yNzk1Y2FjNDVmYzFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MTh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiSS5JLkkuSVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQxOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiSS5JLkkuSVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NjIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIkkuSS5JLklcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDYzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcIm5ldGxpbmtcIl0sXCJzbXRwUG9ydE9wZW5cIjp0cnVlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MyxcIm9wZW5Qb3J0Q291bnRcIjozLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjozNTksXCJzZXJ2ZXJHcm93dGhcIjowfX0sXCJhdm1uaXRlLTAyaFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjp0cnVlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImF2bW5pdGUtMDJoXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI0Ni4xLjYuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTI4LFwibWVzc2FnZXNcIjpbXCJkZW1vY3JhY3ktaXMtZGVhZC5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJOaXRlU2VjXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjEyNy40LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsMTA1XX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjkyMy42MDEzMzczNDQwMDAyLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS42MDk5OTk5OTYzOTIsXCJwaWRcIjozMyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiYXZtbml0ZS0wMmhcIixcInRocmVhZHNcIjo3LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZmVhOGE1ZjktMDg1OC00OGRmLTkyMWItZDQ3NTg5YjhiN2Y4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMDd9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwxMTAyLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjk2OTMuNDE1OTQwNTA1NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNjA5OTk5OTk2MzkyLFwicGlkXCI6MzQsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImF2bW5pdGUtMDJoXCIsXCJ0aHJlYWRzXCI6NTgsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vY2FlN2Y2NjgtMDgwOS00Mjk5LWI1ZDktNTJjMTI0MDAyOTA2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMDh9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzE0MzMzOTcwLDI1OSwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjI2MTYuODcwNDU1ODA4LFwib25saW5lTW9uZXlNYWRlXCI6MTQzMzM5NzAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNjA5OTk5OTk2MzkyLFwicGlkXCI6MzUsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiYXZtbml0ZS0wMmhcIixcInRocmVhZHNcIjo3LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2QxNWU3YjFiLTdjZDctNGYzOC1hMGYwLTkyNGIwYWI2ZGU5MVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTA5fV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjE4NSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiYXZtbml0ZS0wMmhcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImF2bW5pdGUtMDJoXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ2NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vY2M2MjJlYjItMjI3YS00NTk2LTlkYmEtYzc1NmZkYzZhNmU0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiYXZtbml0ZS0wMmhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOWYxZTNiODEtMGE1YS00MTVmLTliZGUtN2QyOWEyY2UzZWZlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiYXZtbml0ZS0wMmhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxOSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kOTkyZjQ0Mi05Y2Y3LTRiYTYtYTY0Yy1lYTU3NTczYjRjZDJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcyMH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImF2bW5pdGUtMDJoXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDNiN2Q5ZjktZTY1Yy00OWIyLWJmMDktMDgxNmFiNWQ2ZGY0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDE2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImF2bW5pdGUtMDJoXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDE2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJhdm1uaXRlLTAyaFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NjksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImF2bW5pdGUtMDJoXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ3MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJuZW8tbmV0XCIsXCJzeXNjb3JlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjp0cnVlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MCxcImhhY2tEaWZmaWN1bHR5XCI6MCxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjoyLFwib3BlblBvcnRDb3VudFwiOjIsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjIwNCxcInNlcnZlckdyb3d0aFwiOjB9fSxcIi5cIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIi5cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjU3LjQuOS44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCIuXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImhlbGlvc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjowLFwiaGFja0RpZmZpY3VsdHlcIjowLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NTE0LFwic2VydmVyR3Jvd3RoXCI6MH19LFwiQ1NFQ1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJDU0VDXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzOS44LjIuNlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W1wiZGVtb2NyYWN5LWlzLWRlYWQubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQ3liZXJTZWNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6NyxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCw1NywwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo1MDEuMzgzNTgzMTI5NTk5OTcsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjYwOTk5OTk5NjM5MixcInBpZFwiOjUzLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJDU0VDXCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iOGRkN2EyYi04YWQyLTQwMTItOTM5OC0wZmU4YjIyNTM2NzNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDExNn1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoxODksXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIkNTRUNcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcIkNTRUNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDcxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJDU0VDXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ3MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTY2N2EzNGQtNjY0ZC00MmJmLThhYjctYzBmZTM2NWIzYTQyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MzF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiQ1NFQ1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzMxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJDU0VDXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ3NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84ODM5MWQ5MS01Zjk5LTQwMTQtYjRiZi00ZTVjNGRiZjk0ZTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MjB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiQ1NFQ1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyMCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiQ1NFQ1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NzYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIkNTRUNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDc3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTgxZjBlYTUtNDkwYS00M2U1LWIzOTYtZjMxZDUxMDVkNjViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1OX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcIkNTRUNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDc4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcInNpZ21hLWNvc21ldGljc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MSxcIm9wZW5Qb3J0Q291bnRcIjoxLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo1MSxcInNlcnZlckdyb3d0aFwiOjB9fSxcIlRoZS1DYXZlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJUaGUtQ2F2ZVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMS41LjEuM1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W1wiYWxwaGEtb21lZ2EubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSGVsaW9zXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImNsYXJraW5jXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MjUsXCJzZXJ2ZXJHcm93dGhcIjowfX0sXCJ3MHIxZF9kNDNtMG5cIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIncwcjFkX2Q0M20wblwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTUuOS43LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwidzByMWRfZDQzbTBuXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MDAwLFwic2VydmVyR3Jvd3RoXCI6MH19LFwiZGFya3dlYlwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjp0cnVlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImRhcmt3ZWJcIixcImh0dHBQb3J0T3BlblwiOnRydWUsXCJpcFwiOlwiMi44LjIuMVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MSxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImRhcmt3ZWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTQzOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiZGFya3dlYlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNDQwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImRhcmt3ZWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTQ0MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiZGFya3dlYlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNDQ0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiZGFya3dlYlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNDQ2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJkYXJrd2ViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE0NDgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImRhcmt3ZWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTQ1MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6dHJ1ZSxcInNxbFBvcnRPcGVuXCI6dHJ1ZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjo1LFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0wXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtMFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNC4xLjEuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTUuNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjIzLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTBcIixcInRocmVhZHNcIjoxNDYsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0wXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzQ1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9jNDdhZWI0Zi0xODdhLTQ5OTAtYWM2NS1mNzc4NmNkY2QyOTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNTh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0wXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzU4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xMWVkYzNkYS0yZWQxLTRmNWYtODRmNi04YzIyNWQ1MDY4ZThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNTl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0wXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzU5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2MyMjNkYWFmLWFlYWUtNGY1NS05ZTI1LWQ1ODdmZTRjNDA3Y1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM2MH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM2MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82N2QwNGQ3OC0xMjEwLTQ4YjMtYTVjZi03Mzg0NjAyMmU0YjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0wXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDU0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM1NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTFcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0xXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIxNS40LjguNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTUuNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjI0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTFcIixcInRocmVhZHNcIjoxNDYsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0xXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzYyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iZjViYTVmYS1jNTUxLTRkZjctODlkNC02MTRhZjAyZTQ5ZTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNzV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzc1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iYWQwNmFlNS0zZDNhLTQ5NjMtYmU1ZS1kZWU4M2JkZmVkZDhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNzZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzc2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNlNWYxMmEwLTBmYmEtNDVjNS1iMTI4LTNiNWU2ZmRhOTE0MFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM3N31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM3NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy81MjQ4MGI2Yi1iZDMxLTRmOTEtYjk2ZS04MGVmNTMxNDdhNWZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDU1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNzIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM3NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTJcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0yXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzNS4yLjkuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTUuNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjI1LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTJcIixcInRocmVhZHNcIjoxNDYsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0yXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzc5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kMTE1MDVlMy1lMzlmLTQ5MGQtYTViMy0yNjk1MGJmZTYzYzhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzOTJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzkyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9jYzhmYmQ2ZS03MWYxLTQ4MTctODI5ZS00ZDQ5NWY2Y2UzNmZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzOTN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzkzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzc1NzgwZGEzLWM0ZjgtNDI5MS1hZmQwLTFkN2JjYjI0ZTBkYVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM5NH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM5NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hZDA3NTU5Yy02NDlhLTQ2N2QtYTEwOS1iNjk5YWMwMWU1OWFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDU2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzODksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM5MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0zXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI0MS43LjcuNVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTUuNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjI2LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTNcIixcInRocmVhZHNcIjo5MSxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsOC43MDE2MjA0NzkzMjQ0ODZdLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIyNyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0zXCIsXCJ0aHJlYWRzXCI6NTUsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzk2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy81ZjM4MGQxMC0xOTJiLTRiZjEtYjRlNS1lMGM0YTIwM2YxYThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0MDl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDA5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85YTVhNjlmMy1hYjQwLTRmMmEtYmY0MS05OGU5NzkwZTg1NjlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0MTB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDEwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzgwYzc3NWJhLTRlMTUtNGZhZC04NTliLTU3NzhlOWY0OGVhOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQxMX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQxMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8yNTBhNDY2YS1kOWUwLTQ1ZjAtYmNkMS01YmEwOWVhNjEyMmNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTd9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDU3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2QzZjZlYWQ1LTMxMTAtNDY5OC05MzNmLWY0NTljZjcwZDIwNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ1OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQwOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTRcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi00XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4MS44LjAuMVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4yMTAwMDAwMDAxNTMzLFwicGlkXCI6OTYsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMzUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMwODcuNDY3MzI3NjkyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMjEwMDAwMDAwMTUzMyxcInBpZFwiOjk3LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTRcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6Wzc2OTY5NjIsMTQwLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTI2Mi4yNTUxNjEwMzY3OTk4LFwib25saW5lTW9uZXlNYWRlXCI6NzY5Njk2MixcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4yMTAwMDAwMDAxNTMzLFwicGlkXCI6OTgsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi00XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTkwLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTRcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQxMyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMDNkMTE0NTItNWVkOS00ODJkLTkzNzMtZGZlMTllYzZjM2RkXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDI2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQyNixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYWRhYTQwZDAtYTUyOC00YzdhLWJlMmUtMTQ2YTc5MGIyMWI2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDI3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQyNyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lZTA3MjA0MC04NDkyLTQwYzUtYmViNi1hNzlkZTBmZThiM2ZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0Mjh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0MjgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTk3MmQ0ZGUtMjYyZi00NmQ1LTljNmYtYTFmNzcyMDc2NTI3XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDIxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi00XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDIzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0MjUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi01XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtNVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiODUuNi4xLjFcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMjEwMDAwMDAwMTUzMyxcInBpZFwiOjEwMCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi01XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4yMTAwMDAwMDAxNTMzLFwicGlkXCI6MTAxLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTVcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzMwNzQwMzYsNTYsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo3MDguMDk0MzU4NjMwMzk5OSxcIm9ubGluZU1vbmV5TWFkZVwiOjMwNzQwMzYsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMjEwMDAwMDAwMTUzMyxcInBpZFwiOjEwMixcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTVcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoxOTEsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNVwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi01XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDMwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lZGU1NGI2MS0yMmVhLTRkYmUtYjAyYi01MWU0Mjg3NTFhMjNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NDN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi01XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDQzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82Y2Q2NmI2NS0wZTdjLTQyNDUtYTk2My01MjA4ZWU5ZWY1N2VcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NDR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi01XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDQ0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzk5NDgzYzBjLTQ0NTgtNGU2Ny1iYmZlLWRmN2FhNzAxZWU4NVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ0NX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ0NSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8yZDY4ZmYwYi01NmY1LTQxYzgtOWU0Yy0wOTQ5YzBhMzNkNjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MjJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi01XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDIyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NDAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ0MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTZcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi02XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIxLjQuNi40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyNTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjI1NC44LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsNDJdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzY5LjQ0MDUzNDkzNzYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjIxMDAwMDAwMDE1MzMsXCJwaWRcIjoxMDQsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNlwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMzUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMwODcuNDY3MzI3NjkyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMjEwMDAwMDAwMTUzMyxcInBpZFwiOjEwNSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi02XCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls1MzY3OTA4LDk4LDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6OTg1LjE3NDc1OTgzMzU5OTksXCJvbmxpbmVNb25leU1hZGVcIjo1MzY3OTA4LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjIxMDAwMDAwMDE1MzMsXCJwaWRcIjoxMDYsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi02XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTkyLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTZcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ0NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMWQ5NTgwZjQtNzA4ZC00ZjlmLTk1MTktOGM2ZDZiYWEwOTVjXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDYwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ2MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMTg5NjcyNjEtYTMwMi00MjFiLWJjNTMtM2FiM2ZhYjhjNzQ1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDYxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ2MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hZTAzMmQ5Ni1hNDcyLTRiZjMtYjFhMi0zZDM5OTg3NTM1MThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NjJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NjIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzQ2NTk5MzUtYWQ1MS00YWRhLWFhN2YtYjAyNTg3NTU5Y2UyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDIzfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyMyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi02XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDU3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NTksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi03XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtN1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjMuOC40LjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjEwOCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi03XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTA5LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTdcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzU0MDQ5MjQsOTgsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo5ODUuMTc0NzU5ODMzNTk5OSxcIm9ubGluZU1vbmV5TWFkZVwiOjU0MDQ5MjQsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjExMCxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTdcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoxOTMsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtN1wiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi03XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDY0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84OTk5ZWIzMC1mM2FlLTQ1NDMtOWQ1ZS05MTJkMjY4YTU4YzVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0Nzd9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi03XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDc3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy81Y2I5ZDZlNy0wNjdkLTQ0NDEtOTIzMy0yMThlMWYxZjk2OTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0Nzh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi03XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDc4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzFhMGMxZjU0LTAxYmMtNDRjMS1hZTc5LTEwMGE0NTAxYjlhYlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ3OX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ3OSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lM2Q5ODFiYi02MDQzLTRkNjYtYjIyOS02MzFhOTdlNjA0ZGJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MjR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi03XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDI0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NzQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ3NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LThcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi04XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4NS43LjIuNVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTEyLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LThcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDM1MSwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMDg3LjQ2NzMyNzY5MjgsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjAxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMTMsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOFwiLFwidGhyZWFkc1wiOjExNyxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbNjkwODM5OCwxMjYsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMTY5Ljg5NTAyNzMwMjM5OTcsXCJvbmxpbmVNb25leU1hZGVcIjo2OTA4Mzk4LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjAxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMTQsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi04XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTk0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LThcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ4MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vODA5MzY5MTctYTVhOS00MzYwLWI2Y2YtZjdlMjYxZDc4MjkwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDk0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ5NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vN2M3MGE0MTctNGI3Yy00MzI0LThmYjgtMmQyOGFmYmEzMzI2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDk1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ5NSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iM2FjYjU1Yy1mODMyLTRjMTctOGNiMS01YTU1ODk5YTZiZTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0OTZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0OTYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzNiOGYzYzMtZTI0NC00ZDMzLWI0NjAtMWFkZmZjZTkwNzlmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDI1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi04XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDkxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0OTMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi05XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtOVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMTUuMy4xLjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjExNixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi05XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTE3LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTlcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzYxMDEzNDAsMTEyLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTA3Ny41MzQ4OTM1NjgsXCJvbmxpbmVNb25leU1hZGVcIjo2MTAxMzQwLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjAxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMTgsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi05XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTk1LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTlcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ5OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZTgzNjhhYmItYzZjNi00MDgzLTg4MDEtNDZlZGQ2YmVmZWQ5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTExfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzUxMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZWVjMWMzYTktY2MzOS00ODVlLWFhNDMtNWUyNTU4NjMwZDljXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTEyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzUxMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hMDY5MTdkNS1jODc5LTQ0MTAtYTMzOS03ZmZhMTllMTYyMGJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MTN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MTMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNjQ2N2M0ZTctYjY0Zi00MWRhLWIyNzEtNGVkOTdhNTUzN2I0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDI2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyNixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi05XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTA4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MTAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0xMFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTEwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzNC44LjIuN1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTIwLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEwXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTIxLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEwXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls0NzA3MDY2LDg0LDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6ODkyLjgxNDYyNjA5OTE5OTksXCJvbmxpbmVNb25leU1hZGVcIjo0NzA3MDY2LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjAxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMjIsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xMFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjE5NixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xMFwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0xMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzUxNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzM0OGQwZTktMGU1NS00YjZkLWJhNzktZGFmZDgxYTA4MjkxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTI4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MjgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzU3NGZmYWVkLWYyZjctNGNlMy1iMzM3LTJlNzc5MTgyOTMxOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzUyOX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTI5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2Q2ZDJlYTZhLTZmMzgtNDcxNC1iNTUwLWU4MGFjNGU3ZGFmZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzUzMH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MzAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTdlYTY2NzMtNDBlNC00Njg0LWE3N2ItNTliNWZmZDY5Nzg5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDI3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MjcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MjUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MjcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0xMVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTExXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzNi42LjYuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTI0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTExXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTI1LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTExXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls2ODQ4MjQwLDEyNiwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjExNjkuODk1MDI3MzAyNCxcIm9ubGluZU1vbmV5TWFkZVwiOjY4NDgyNDAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjEyNixcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTExXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTk3LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTExXCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJwc3J2LTExXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTMyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kMDZlZWYwOC1lY2M3LTQxZDYtOWQ3OS0xNTI3YzMyNDhhOTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1NDV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU0NSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNWZhZGQwODQtNWNhYi00MGI5LWI5ZWEtNmY2NGE5YzVmOWIxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTQ2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1NDYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMDQwMGUxNWMtZmExOS00MDg0LThmZTUtZDBiOWQ2MmI5YmQ2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTQ3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU0NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kNGVjZDY0Yi01ODQ1LTQwYTAtYjUwNS00NzJhY2E4Yzg0MjZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0Mjh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU0MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU0NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTEyXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtMTJcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg3LjguOS4zXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyNTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjI1NC44LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsNDJdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzY5LjQ0MDUzNDkzNzYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjAxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMjgsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTJcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDM1MSwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMDg3LjQ2NzMyNzY5MjgsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjAxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMjksXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTJcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6Wzc1OTI1NzgsMTQwLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTI2Mi4yNTUxNjEwMzY4LFwib25saW5lTW9uZXlNYWRlXCI6NzU5MjU3OCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTMwLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTJcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoxOTgsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTJcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtMTJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1NDksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RjZDc4M2U0LTg5MTQtNGE3NC1iMzQ2LTk2OTRhYWJjZTcwZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU2Mn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTYyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hODUwMTg1MS0zMDdkLTQ1NGYtYmE1ZC0yOTg1M2ViMDE2YTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1NjN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU2MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy80OWYwNjlkZC05Nzk1LTQ4YmUtYWRkNy1jMzYzYTViMGZjOGRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1NjR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTEyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTY0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2YzZDY3OTQ2LTBlNTYtNGYxYS04OGNhLTA0NGVkZGNjOTIzMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyOX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDI5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTU5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTEyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTYxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzcnYtMTNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0xM1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDIuOS44LjlcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjEzMixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xM1wiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMzUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMwODcuNDY3MzI3NjkyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjEzMyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xM1wiLFwidGhyZWFkc1wiOjExNyxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbNjA2OTA0MiwxMTIsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMDc3LjUzNDg5MzU2OCxcIm9ubGluZU1vbmV5TWFkZVwiOjYwNjkwNDIsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjEzNCxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTEzXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTk5LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEzXCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJwc3J2LTEzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTY2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mNmJhYzYzZi1lOGY1LTRmY2EtOThjZC1kZjQwNTlkODZiY2FcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1Nzl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU3OSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzMwMjhmZGYtMTJlZS00MGZmLWI4MGEtMjMyYjE5NmRhMWU1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTgwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1ODAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMjU1MTExNGYtZjNiNi00NTczLTljOGEtOWY1ZDY5Y2UyZmViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTgxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU4MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9jNmVjNzY5OC0yMzAxLTQ2NmItYmQ3Mi1iNzU3ODU0MTI0M2FcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQzMCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU3NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU3OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTE0XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtMTRcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjk5LjIuNC4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyNTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjI1NC44LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsNDJdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzY5LjQ0MDUzNDkzNzYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMzYsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDM1MSwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMDg3LjQ2NzMyNzY5MjgsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMzcsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzYwOTk4MDAsMTEyLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTA3Ny41MzQ4OTM1NjgsXCJvbmxpbmVNb25leU1hZGVcIjo2MDk5ODAwLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMzgsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xNFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIwMCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xNFwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0xNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU4MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMDJiODdlZmUtMjBlNS00MzNmLWI3YmItYjI2ZWY5ZjI5ZTEzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTk2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1OTYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2E4N2QyYTEzLTQ1NGMtNDMwNC1hOWY4LTg1NWI2Nzk2NzFlZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU5N31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTk3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2U0ZDM5YzE4LTBjNWMtNGQ5OC1hYzNlLTRhMzI0OWVjYWUzOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU5OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1OTgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZGJmMDdlYjktMTI0Ny00NWY0LTg5NTktMDhkZjlkMzk0NDI4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDMxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1OTMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1OTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0xNVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTE1XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIxOC44LjEuM1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS44MTAwMDAwMDAxNTMyLFwicGlkXCI6MTQwLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS44MTAwMDAwMDAxNTMyLFwicGlkXCI6MTQxLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls2MTY4NjY2LDExMiwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjEwNzcuNTM0ODkzNTY4LFwib25saW5lTW9uZXlNYWRlXCI6NjE2ODY2NixcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS44MTAwMDAwMDAxNTMyLFwicGlkXCI6MTQyLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTVcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMDEsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTVcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtMTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2MDAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzQwYTM3MmZmLWY0ZGEtNDFmYy04Y2MyLTZiZWQwYjQzMWY0NFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzYxM31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjEzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83MWVlZTAzYi0xYzFkLTQ4NjQtYjkzYy0wMDZmOTFiMTA3OTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2MTR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzYxNCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hZjFkOTY4Yy1jY2M5LTRkYmMtOGRmNC1lMjcyYmViMjQ4NjVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2MTV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjE1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RjYWMyOWQ5LTc4NDYtNGYwMS1hZmYzLTdjNjhmYTFjZmVkNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQzMn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDMyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjEwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjEyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzcnYtMTZcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0xNlwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNjUuMC44LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuODEwMDAwMDAwMTUzMixcInBpZFwiOjE0NCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xNlwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMzUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMwODcuNDY3MzI3NjkyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuODEwMDAwMDAwMTUzMixcInBpZFwiOjE0NSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xNlwiLFwidGhyZWFkc1wiOjExNyxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMzA3OTk0NCw1NiwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjcwOC4wOTQzNTg2MzAzOTk5LFwib25saW5lTW9uZXlNYWRlXCI6MzA3OTk0NCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS44MTAwMDAwMDAxNTMyLFwicGlkXCI6MTQ2LFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTZcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMDIsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTZcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtMTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2MTcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzA0YjFmNTI3LTFjYmQtNGI5ZC04ZTU2LTQyZDhjYzgxNTY5OFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzYzMH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjMwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iZGVmMDUxMy03MmYyLTQ4MTktOGQzYi0zMzJkZThhMThmYzVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2MzF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzYzMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zY2I1NGIxNC0wZGJhLTQ3MWYtOTA1Ny1hODIzZjM1ZDFlYWRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2MzJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjMyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzY5ZjY0YWZkLWY5MjItNDQxZS04M2VkLWM0MjgyYjhhMTAwN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQzM31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDMzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjI3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjI5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzcnYtMTdcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0xN1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDMuOS4zLjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuODEwMDAwMDAwMTUzMixcInBpZFwiOjE0OCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xN1wiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMzUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMwODcuNDY3MzI3NjkyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuODEwMDAwMDAwMTUzMixcInBpZFwiOjE0OSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xN1wiLFwidGhyZWFkc1wiOjExNyxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbNjk0NDMwOCwxMjYsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMTY5Ljg5NTAyNzMwMjQsXCJvbmxpbmVNb25leU1hZGVcIjo2OTQ0MzA4LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNTAsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xN1wiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIwMyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xN1wiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0xN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzYzNCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vODRlZmMyZTQtZTViMS00NjA5LTkzNjUtNTI5ODk3YTZlNzQ0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjQ3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NDcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RiMGM4ODAzLTZjY2ItNGU5ZS1hMDIyLTliNmYxODRlYzZkOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY0OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE3XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjQ4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNhNTAyNjE4LTJiMjYtNDZjZC05N2I2LTE5ODA1OGQ2NGVmZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY0OX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NDksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOWNmZjRhYzEtYWMxYy00OTFmLWFkNDktY2NlMzRkZWE1YTVlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDM0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NDQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NDYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0xOFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTE4XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIyLjUuNi4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyNTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjI1NC44LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsNDJdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzY5LjQ0MDUzNDkzNzYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNTIsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMThcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDM1MSwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMDg3LjQ2NzMyNzY5MjgsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNTMsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMThcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzUzODEwMTIsOTgsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo5ODUuMTc0NzU5ODMzNTk5OSxcIm9ubGluZU1vbmV5TWFkZVwiOjUzODEwMTIsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuODEwMDAwMDAwMTUzMixcInBpZFwiOjE1NCxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTE4XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjA0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE4XCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJwc3J2LTE4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjUxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84ZWU0Y2EwNS03YTAzLTQzOTEtODhlYy1iNzE1YTI5MjgwYmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NjR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY2NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZGY4OGRiOGEtNmM1OS00MjRlLWIyYjMtNjNhZTZjZTg0MDAyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjY1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NjUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMmNhMzNlYzEtMzdkZC00OTZiLWE3NTYtMWU1OTE3MGFmMjFkXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjY2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY2NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lYWQ3ZGEzMS1iZGJlLTQ5ZTQtYTM2OC00ZWFjOTdmMGM5ZTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQzNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY2MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY2MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTE5XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtMTlcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjIzLjUuNi44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyNTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjI1NC44LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsNDJdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzY5LjQ0MDUzNDkzNzYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNTYsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDM1MSwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMDg3LjQ2NzMyNzY5MjgsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNTcsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzYxNjQ5MjgsMTEyLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTA3Ny41MzQ4OTM1NjgsXCJvbmxpbmVNb25leU1hZGVcIjo2MTY0OTI4LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNTgsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xOVwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIwNSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xOVwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0xOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY2OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vM2U1YzI2NWEtNzEwNC00YTc2LWJkYmMtM2JhZTMwNGExNjJiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjgxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2ODEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2Y5NjI0YzkwLTk2NGMtNDJmYS1hMzYxLTQ3Y2RjNmM4YWJlOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY4Mn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjgyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2JjOGZjMzM0LTY3N2QtNGMwNy04OTUxLTBjZTI0OTE3MTg2N1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY4M31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2ODMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYWQxNzU1Y2QtNjQ3My00OTFhLTkyOWYtZGVmNGM2YmU1MjcyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDM2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NzgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2ODAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0yMFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTIwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1Ni40LjIuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS44MTAwMDAwMDAxNTMyLFwicGlkXCI6MTYwLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIwXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS44MTAwMDAwMDAxNTMyLFwicGlkXCI6MTYxLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIwXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls1MzA1MzU2LDk4LDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6OTg1LjE3NDc1OTgzMzU5OTksXCJvbmxpbmVNb25leU1hZGVcIjo1MzA1MzU2LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNjIsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0yMFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIwNixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yMFwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0yMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY4NSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzhiZjYxY2EtZGY1MS00M2Y2LWIyNjUtYTE2Njk1MDE1Nzg1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjk4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2OTgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2Y1ODE4NGRiLTAxZjktNDYwYS05MTQ1LWUyMTFlOGIwNjZjYVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY5OX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjk5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzA1ZjAzMjU3LWEwMjItNDkxYy04YWY4LTc1MjgwMmNhZjA2OFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzcwMH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MDAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzhjYzE4ZmEtZmU5ZS00MDRkLTg0ZjQtNmRkNTc1NWY2ZTc1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDM3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2OTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2OTcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0yMVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTIxXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5Ny4yLjcuNlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTY0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIxXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTY1LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIxXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls1MzUyMDQ2LDk4LDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6OTg1LjE3NDc1OTgzMzU5OTksXCJvbmxpbmVNb25leU1hZGVcIjo1MzUyMDQ2LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjYxMDAwMDAwMDE1MzEsXCJwaWRcIjoxNjYsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0yMVwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIwNyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yMVwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0yMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzcwMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMTQxZGM0ZWQtNmEyNy00Y2ViLTgyN2EtMWEzOTFiNGNlY2ExXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzE1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2UwYWVmNmJjLWZjN2QtNGMxOS04ZDEzLTBlMDk5MDVkY2ZmYlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzcxNn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzE2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2ZiMGUwM2EwLTFlNzktNDE1MS04MzQ3LWI5MjgzZWRlZDQ0OVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzcxN31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MTcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTQ5ZGRjMTYtNTMxYy00NTA0LWIyMzUtM2QzMWUxMzg1NzZjXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDM4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MTIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MTQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0yMlwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTIyXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzMi4yLjAuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTY4LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIyXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTY5LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIyXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls1NDk5NzQ2LDk4LDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6OTg1LjE3NDc1OTgzMzU5OTksXCJvbmxpbmVNb25leU1hZGVcIjo1NDk5NzQ2LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjYxMDAwMDAwMDE1MzEsXCJwaWRcIjoxNzAsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0yMlwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIwOCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yMlwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0yMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzcxOSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDMxNGQxOGYtZGIzZS00MDE1LTk3ZGEtMTMzMjAzMGVlMzU1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzMyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MzIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2UzMmVmODhkLTY2N2YtNDdkMS1iOWRkLTcxMmQyOTcyZDMzZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzczM31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzMzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzdhZGMwNzQzLTJiMjUtNDAwNC04NGJjLWFkM2U2NmI5Mjg4ZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzczNH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MzQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDIzNTNiMjItODA1Ni00MmJlLTg2M2YtMzBmZDVlNDgzMGU2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDM5fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MjksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MzEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0yM1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTIzXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIxNy43LjIuMVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTcyLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTczLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls2MDgwMjE0LDExMiwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjEwNzcuNTM0ODkzNTY4LFwib25saW5lTW9uZXlNYWRlXCI6NjA4MDIxNCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTc0LFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjNcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMDksXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjNcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtMjNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MzYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzZhM2JiNGVkLTZmOWQtNGYxMi04NTQxLWQ4NmM2MjA2ZDc3NFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzc0OX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzQ5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9jMWU4MDI2MC1kMzE3LTQ4NzgtOWY2OS1mMjE0OTIyMDBiNzhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3NTB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzc1MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83ZDg4YmFlMC1iMzNjLTQwZjItOWY5Mi0xZmE2MGQ5YzY3Y2JcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3NTF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzUxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2IzYThmNDA5LTFjNGUtNDgwZC04OTIwLTYyYWZlZTRiY2UyYVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0MH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDQwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzQ2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzQ4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzcnYtMjRcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0yNFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNzkuNi4zLjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuNjEwMDAwMDAwMTUzMSxcInBpZFwiOjE3NixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yNFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMzUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMwODcuNDY3MzI3NjkyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuNjEwMDAwMDAwMTUzMSxcInBpZFwiOjE3NyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yNFwiLFwidGhyZWFkc1wiOjExNyxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbNjkwNjI4NCwxMjYsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMTY5Ljg5NTAyNzMwMjQsXCJvbmxpbmVNb25leU1hZGVcIjo2OTA2Mjg0LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjYxMDAwMDAwMDE1MzEsXCJwaWRcIjoxNzgsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0yNFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIxMCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yNFwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0yNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzc1MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vODI4Mjk2OGEtZTBkNy00YTQzLWIxOTItNzNlMGRmNWJjZWUxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzY2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3NjYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzdkYTY5MWE3LTcyZmUtNDU4MC04ZmM3LTgwMzcwMzQ1ZTk0YVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzc2N31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTI0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzY3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNkNGE4ZDE0LTkyYTktNGUxMS05MGY5LTIxN2JkMGMwZGE5MVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzc2OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3NjgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZmY3MzY4YzUtYWExNi00OTYyLWJlMzktNzU1NGYzYWEwYzRmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDQxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3NjMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3NjUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19fSIsIkNvbXBhbmllc1NhdmUiOiJ7XCJFQ29ycFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJFQ29ycFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjMsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MyxcImpvYlN0YXRSZXFPZmZzZXRcIjoyNDksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk1lZ2FDb3JwXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk1lZ2FDb3JwXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MyxcInNhbGFyeU11bHRpcGxpZXJcIjozLFwiam9iU3RhdFJlcU9mZnNldFwiOjI0OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQmFjaG1hbiAmIEFzc29jaWF0ZXNcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQmFjaG1hbiAmIEFzc29jaWF0ZXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJDaGllZiBGaW5hbmNpYWwgT2ZmaWNlclwiOnRydWUsXCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoyLjYsXCJzYWxhcnlNdWx0aXBsaWVyXCI6Mi42LFwiam9iU3RhdFJlcU9mZnNldFwiOjIyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQmxhZGUgSW5kdXN0cmllc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJCbGFkZSBJbmR1c3RyaWVzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6Mi43NSxcInNhbGFyeU11bHRpcGxpZXJcIjoyLjc1LFwiam9iU3RhdFJlcU9mZnNldFwiOjIyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiTldPXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk5XT1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuNzUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6Mi43NSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyNDksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkNsYXJrZSBJbmNvcnBvcmF0ZWRcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQ2xhcmtlIEluY29ycG9yYXRlZFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuMjUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6Mi4yNSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk9tbmlUZWsgSW5jb3Jwb3JhdGVkXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk9tbmlUZWsgSW5jb3Jwb3JhdGVkXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6Mi4yNSxcInNhbGFyeU11bHRpcGxpZXJcIjoyLjI1LFwiam9iU3RhdFJlcU9mZnNldFwiOjIyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiRm91ciBTaWdtYVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJGb3VyIFNpZ21hXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6Mi41LFwic2FsYXJ5TXVsdGlwbGllclwiOjIuNSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkt1YWlHb25nIEludGVybmF0aW9uYWxcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiS3VhaUdvbmcgSW50ZXJuYXRpb25hbFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuMixcInNhbGFyeU11bHRpcGxpZXJcIjoyLjIsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MjI0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJGdWxjcnVtIFRlY2hub2xvZ2llc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJGdWxjcnVtIFRlY2hub2xvZ2llc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MixcInNhbGFyeU11bHRpcGxpZXJcIjoyLFwiam9iU3RhdFJlcU9mZnNldFwiOjIyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiU3Rvcm0gVGVjaG5vbG9naWVzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIlN0b3JtIFRlY2hub2xvZ2llc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjgsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS44LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiRGVmQ29tbVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJEZWZDb21tXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuNzUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS43NSxcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkhlbGlvcyBMYWJzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkhlbGlvcyBMYWJzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuOCxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjgsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJWaXRhTGlmZVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJWaXRhTGlmZVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjgsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS44LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiSWNhcnVzIE1pY3Jvc3lzdGVtc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJJY2FydXMgTWljcm9zeXN0ZW1zXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuOSxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjksXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJVbml2ZXJzYWwgRW5lcmd5XCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIlVuaXZlcnNhbCBFbmVyZ3lcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJDaGllZiBGaW5hbmNpYWwgT2ZmaWNlclwiOnRydWUsXCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MixcInNhbGFyeU11bHRpcGxpZXJcIjoyLFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiR2FsYWN0aWMgQ3liZXJzeXN0ZW1zXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkdhbGFjdGljIEN5YmVyc3lzdGVtc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjksXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS45LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQWVyb0NvcnBcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQWVyb0NvcnBcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS43LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNyxcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk9tbmlhIEN5YmVyc3lzdGVtc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJPbW5pYSBDeWJlcnN5c3RlbXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS43LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNyxcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIlNvbGFyaXMgU3BhY2UgU3lzdGVtc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJTb2xhcmlzIFNwYWNlIFN5c3RlbXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS43LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNyxcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkRlbHRhT25lXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkRlbHRhT25lXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuNixcInNhbGFyeU11bHRpcGxpZXJcIjoxLjYsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJHbG9iYWwgUGhhcm1hY2V1dGljYWxzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkdsb2JhbCBQaGFybWFjZXV0aWNhbHNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJDaGllZiBGaW5hbmNpYWwgT2ZmaWNlclwiOnRydWUsXCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuOCxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjgsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MjI0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJOb3ZhIE1lZGljYWxcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiTm92YSBNZWRpY2FsXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjc1LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNzUsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJDZW50cmFsIEludGVsbGlnZW5jZSBBZ2VuY3lcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQ2VudHJhbCBJbnRlbGxpZ2VuY2UgQWdlbmN5XCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZSxcIkZpZWxkIEFnZW50XCI6dHJ1ZSxcIlNlY3JldCBBZ2VudFwiOnRydWUsXCJTcGVjaWFsIE9wZXJhdGl2ZVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MixcImpvYlN0YXRSZXFPZmZzZXRcIjoxNDksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MTkzLjY1OTQ0NjExNTgzNDY3LFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiTmF0aW9uYWwgU2VjdXJpdHkgQWdlbmN5XCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk5hdGlvbmFsIFNlY3VyaXR5IEFnZW5jeVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWUsXCJGaWVsZCBBZ2VudFwiOnRydWUsXCJTZWNyZXQgQWdlbnRcIjp0cnVlLFwiU3BlY2lhbCBPcGVyYXRpdmVcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoyLFwic2FsYXJ5TXVsdGlwbGllclwiOjIsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTQ5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJXYXRjaGRvZyBTZWN1cml0eVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJXYXRjaGRvZyBTZWN1cml0eVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWUsXCJGaWVsZCBBZ2VudFwiOnRydWUsXCJTZWNyZXQgQWdlbnRcIjp0cnVlLFwiU3BlY2lhbCBPcGVyYXRpdmVcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuNSxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjUsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTI0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJMZXhvQ29ycFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJMZXhvQ29ycFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS40LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNCxcImpvYlN0YXRSZXFPZmZzZXRcIjo5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiUmhvIENvbnN0cnVjdGlvblwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJSaG8gQ29uc3RydWN0aW9uXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuMyxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjMsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6NDksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkFscGhhIEVudGVycHJpc2VzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkFscGhhIEVudGVycHJpc2VzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS41LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNSxcImpvYlN0YXRSZXFPZmZzZXRcIjo5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQWV2dW0gUG9saWNlIEhlYWRxdWFydGVyc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJBZXZ1bSBQb2xpY2UgSGVhZHF1YXJ0ZXJzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlLFwiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjMsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4zLFwiam9iU3RhdFJlcU9mZnNldFwiOjk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJTeXNDb3JlIFNlY3VyaXRpZXNcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiU3lzQ29yZSBTZWN1cml0aWVzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjMsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4zLFwiam9iU3RhdFJlcU9mZnNldFwiOjEyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQ29tcHVUZWtcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQ29tcHVUZWtcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuMixcInNhbGFyeU11bHRpcGxpZXJcIjoxLjIsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6NzQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk5ldExpbmsgVGVjaG5vbG9naWVzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk5ldExpbmsgVGVjaG5vbG9naWVzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4yLFwiam9iU3RhdFJlcU9mZnNldFwiOjk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJDYXJtaWNoYWVsIFNlY3VyaXR5XCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkNhcm1pY2hhZWwgU2VjdXJpdHlcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIkZpZWxkIEFnZW50XCI6dHJ1ZSxcIlNlY3JldCBBZ2VudFwiOnRydWUsXCJTcGVjaWFsIE9wZXJhdGl2ZVwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4yLFwiam9iU3RhdFJlcU9mZnNldFwiOjc0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJGb29kTlN0dWZmXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkZvb2ROU3R1ZmZcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkVtcGxveWVlXCI6dHJ1ZSxcIlBhcnQtdGltZSBFbXBsb3llZVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MSxcImpvYlN0YXRSZXFPZmZzZXRcIjowLFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJKb2UncyBHdW5zXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkpvZSdzIEd1bnNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkVtcGxveWVlXCI6dHJ1ZSxcIlBhcnQtdGltZSBFbXBsb3llZVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MSxcImpvYlN0YXRSZXFPZmZzZXRcIjowLFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJPbWVnYSBTb2Z0d2FyZVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJPbWVnYSBTb2Z0d2FyZVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjEsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4xLFwiam9iU3RhdFJlcU9mZnNldFwiOjQ5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJOb29kbGUgQmFyXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk5vb2RsZSBCYXJcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIldhaXRlclwiOnRydWUsXCJQYXJ0LXRpbWUgV2FpdGVyXCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MSxcInNhbGFyeU11bHRpcGxpZXJcIjoxLFwiam9iU3RhdFJlcU9mZnNldFwiOjAsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fX0iLCJGYWN0aW9uc1NhdmUiOiJ7XCJJbGx1bWluYXRpXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJORU1FQU4gU3ViZGVybWFsIFdlYXZlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjMgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBBbmFseXplIEVuZ2luZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBEaXJlY3QgTWVtb3J5IEFjY2VzcyBVcGdyYWRlXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIlFMaW5rXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJJbGx1bWluYXRpXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiRGFlZGFsdXNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJTeW50aGV0aWMgSGVhcnRcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIk5FTUVBTiBTdWJkZXJtYWwgV2VhdmVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMyBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIEFuYWx5emUgRW5naW5lXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIERpcmVjdCBNZW1vcnkgQWNjZXNzIFVwZ3JhZGVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiVGhlIFJlZCBQaWxsXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJEYWVkYWx1c1wiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlRoZSBDb3ZlbmFudFwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSUlJXCIsXCJTeW50aGV0aWMgSGVhcnRcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIkNvbWJhdCBSaWIgSUlJXCIsXCJORU1FQU4gU3ViZGVybWFsIFdlYXZlXCIsXCJHcmFwaGVuZSBCb25lIExhY2luZ3NcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMyBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIEFuYWx5emUgRW5naW5lXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIERpcmVjdCBNZW1vcnkgQWNjZXNzIFVwZ3JhZGVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiU1BUTi05NyBHZW5lIE1vZGlmaWNhdGlvblwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiVGhlIENvdmVuYW50XCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiRUNvcnBcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJHcmFwaGVuZSBCaW9uaWMgU3BpbmUgVXBncmFkZVwiLFwiR3JhcGhlbmUgQmlvbmljIExlZ3MgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIEltcGxhbnRcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMiBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjMgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBBbmFseXplIEVuZ2luZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBEaXJlY3QgTWVtb3J5IEFjY2VzcyBVcGdyYWRlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZVwiLFwiUEMgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2UgT3B0aW1pemF0aW9uIFN1Ym1vZHVsZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJFQ29ycCBIVk1pbmQgSW1wbGFudFwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiRUNvcnBcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJNZWdhQ29ycFwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkdyYXBoZW5lIEJpb25pYyBMZWdzIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBJbXBsYW50XCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjIgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYzIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQW5hbHl6ZSBFbmdpbmVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgRGlyZWN0IE1lbW9yeSBBY2Nlc3MgVXBncmFkZVwiLFwiQURSLVYxIFBoZXJvbW9uZSBHZW5lXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkNvcmRpQVJDIEZ1c2lvbiBSZWFjdG9yXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJNZWdhQ29ycFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkJhY2htYW4gJiBBc3NvY2lhdGVzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiRW5oYW5jZWQgU29jaWFsIEludGVyYWN0aW9uIEltcGxhbnRcIixcIk5ldXJhbHN0aW11bGF0b3JcIixcIk51b3B0aW1hbCBOb290cm9waWMgSW5qZWN0b3IgSW1wbGFudFwiLFwiU3BlZWNoIEVuaGFuY2VtZW50XCIsXCJGb2N1c1dpcmVcIixcIkFEUi1WMiBQaGVyb21vbmUgR2VuZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJTbWFydEphd1wiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiQmFjaG1hbiAmIEFzc29jaWF0ZXNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJCbGFkZSBJbmR1c3RyaWVzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiU3luZmlicmlsIE11c2NsZVwiLFwiQ29tYmF0IFJpYiBJXCIsXCJDb21iYXQgUmliIElJXCIsXCJDb21iYXQgUmliIElJSVwiLFwiTmFub2ZpYmVyIFdlYXZlXCIsXCJCaW9uaWMgU3BpbmVcIixcIkJpb25pYyBMZWdzXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgSW1wbGFudFwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYyIFVwZ3JhZGVcIixcIlBDIERpcmVjdC1OZXVyYWwgSW50ZXJmYWNlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZSBPcHRpbWl6YXRpb24gU3VibW9kdWxlXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkh5cGVyU2lnaHQgQ29ybmVhbCBJbXBsYW50XCIsXCJOZW90cmFcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkJsYWRlIEluZHVzdHJpZXNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJOV09cIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJTeW50aGV0aWMgSGVhcnRcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIkVuaGFuY2VkIFNvY2lhbCBJbnRlcmFjdGlvbiBJbXBsYW50XCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgSW1wbGFudFwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYyIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMyBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIEFuYWx5emUgRW5naW5lXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIERpcmVjdCBNZW1vcnkgQWNjZXNzIFVwZ3JhZGVcIixcIkFEUi1WMSBQaGVyb21vbmUgR2VuZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJOZXVyb3RyYWluZXIgSUlJXCIsXCJQb3dlciBSZWNpcmN1bGF0aW9uIENvcmVcIixcIlhhbmlwaGVyXCIsXCJIeWRyb2ZsYW1lIExlZnQgQXJtXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJOV09cIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJDbGFya2UgSW5jb3Jwb3JhdGVkXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiRW5oYW5jZWQgU29jaWFsIEludGVyYWN0aW9uIEltcGxhbnRcIixcIk5ldXJhbHN0aW11bGF0b3JcIixcIk5ldXJvbmFsIERlbnNpZmljYXRpb25cIixcIk51b3B0aW1hbCBOb290cm9waWMgSW5qZWN0b3IgSW1wbGFudFwiLFwiU3BlZWNoIEVuaGFuY2VtZW50XCIsXCJGb2N1c1dpcmVcIixcIkFEUi1WMiBQaGVyb21vbmUgR2VuZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJuZXh0U0VOUyBHZW5lIE1vZGlmaWNhdGlvblwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiQ2xhcmtlIEluY29ycG9yYXRlZFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIk9tbmlUZWsgSW5jb3Jwb3JhdGVkXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiQ29tYmF0IFJpYiBJXCIsXCJDb21iYXQgUmliIElJXCIsXCJDb21iYXQgUmliIElJSVwiLFwiTmFub2ZpYmVyIFdlYXZlXCIsXCJCaW9uaWMgU3BpbmVcIixcIkJpb25pYyBMZWdzXCIsXCJFbmhhbmNlZCBTb2NpYWwgSW50ZXJhY3Rpb24gSW1wbGFudFwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYyIFVwZ3JhZGVcIixcIlBDIERpcmVjdC1OZXVyYWwgSW50ZXJmYWNlXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk9tbmlUZWsgSW5mb0xvYWRcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIk9tbmlUZWsgSW5jb3Jwb3JhdGVkXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiRm91ciBTaWdtYVwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkVuaGFuY2VkIFNvY2lhbCBJbnRlcmFjdGlvbiBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOdW9wdGltYWwgTm9vdHJvcGljIEluamVjdG9yIEltcGxhbnRcIixcIlNwZWVjaCBFbmhhbmNlbWVudFwiLFwiRm9jdXNXaXJlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZVwiLFwiQURSLVYxIFBoZXJvbW9uZSBHZW5lXCIsXCJBRFItVjIgUGhlcm9tb25lIEdlbmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiTmV1cm90cmFpbmVyIElJSVwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiRm91ciBTaWdtYVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkt1YWlHb25nIEludGVybmF0aW9uYWxcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElcIixcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSUlcIixcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSUlJXCIsXCJTeW50aGV0aWMgSGVhcnRcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIkNvbWJhdCBSaWIgSVwiLFwiQ29tYmF0IFJpYiBJSVwiLFwiQ29tYmF0IFJpYiBJSUlcIixcIkJpb25pYyBTcGluZVwiLFwiQmlvbmljIExlZ3NcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMiBVcGdyYWRlXCIsXCJTcGVlY2ggRW5oYW5jZW1lbnRcIixcIkZvY3VzV2lyZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJIeXBlclNpZ2h0IENvcm5lYWwgSW1wbGFudFwiLFwiUGhvdG9zeW50aGV0aWMgQ2VsbHNcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkt1YWlHb25nIEludGVybmF0aW9uYWxcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJGdWxjcnVtIFNlY3JldCBUZWNobm9sb2dpZXNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJTeW50aGV0aWMgSGVhcnRcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIk5hbm9maWJlciBXZWF2ZVwiLFwiTkVNRUFOIFN1YmRlcm1hbCBXZWF2ZVwiLFwiR3JhcGhlbmUgQm9uZSBMYWNpbmdzXCIsXCJHcmFwaGVuZSBCaW9uaWMgU3BpbmUgVXBncmFkZVwiLFwiR3JhcGhlbmUgQmlvbmljIExlZ3MgVXBncmFkZVwiLFwiQXJ0aWZpY2lhbCBCaW8tbmV1cmFsIE5ldHdvcmsgSW1wbGFudFwiLFwiRW5oYW5jZWQgTXllbGluIFNoZWF0aGluZ1wiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIEltcGxhbnRcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMiBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjMgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBBbmFseXplIEVuZ2luZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBEaXJlY3QgTWVtb3J5IEFjY2VzcyBVcGdyYWRlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZSBPcHRpbWl6YXRpb24gU3VibW9kdWxlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZSBOZXVyb05ldCBJbmplY3RvclwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJGdWxjcnVtIFNlY3JldCBUZWNobm9sb2dpZXNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJCaXRSdW5uZXJzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQXJ0aWZpY2lhbCBCaW8tbmV1cmFsIE5ldHdvcmsgSW1wbGFudFwiLFwiRW5oYW5jZWQgTXllbGluIFNoZWF0aGluZ1wiLFwiRGF0YUphY2tcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBJbXBsYW50XCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjIgVXBncmFkZVwiLFwiTmV1cmFsIEFjY2VsZXJhdG9yXCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElJSVwiLFwiQ3JhbmlhbCBTaWduYWwgUHJvY2Vzc29ycyAtIEdlbiBJVlwiLFwiQ3JhbmlhbCBTaWduYWwgUHJvY2Vzc29ycyAtIEdlbiBWXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk5ldXJvdHJhaW5lciBJSVwiLFwiQml0UnVubmVycyBOZXVyb2xpbmtcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkJpdFJ1bm5lcnNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJUaGUgQmxhY2sgSGFuZFwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkFydGlmaWNpYWwgU3luYXB0aWMgUG90ZW50aWF0aW9uXCIsXCJFbmhhbmNlZCBNeWVsaW4gU2hlYXRoaW5nXCIsXCJEYXRhSmFja1wiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIEltcGxhbnRcIixcIk5ldXJhbHN0aW11bGF0b3JcIixcIkNyYW5pYWwgU2lnbmFsIFByb2Nlc3NvcnMgLSBHZW4gSUlJXCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElWXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIlRoZSBCbGFjayBIYW5kXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJUaGUgQmxhY2sgSGFuZFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIk5pdGVTZWNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJCaXRXaXJlXCIsXCJBcnRpZmljaWFsIFN5bmFwdGljIFBvdGVudGlhdGlvblwiLFwiTmV1cmFsLVJldGVudGlvbiBFbmhhbmNlbWVudFwiLFwiRGF0YUphY2tcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGVcIixcIkNyYW5pYWwgU2lnbmFsIFByb2Nlc3NvcnMgLSBHZW4gSUlcIixcIkNyYW5pYWwgU2lnbmFsIFByb2Nlc3NvcnMgLSBHZW4gSUlJXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk5ldXJvdHJhaW5lciBJSVwiLFwiQ1JUWDQyLUFBIEdlbmUgTW9kaWZpY2F0aW9uXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJOaXRlU2VjXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQWV2dW1cIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJXaXJlZCBSZWZsZXhlc1wiLFwiU3BlZWNoIFByb2Nlc3NvciBJbXBsYW50XCIsXCJTeW5hcHRpYyBFbmhhbmNlbWVudCBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk5ldXJvdHJhaW5lciBJXCIsXCJQQ01hdHJpeFwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiQWV2dW1cIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJDaG9uZ3FpbmdcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJTcGVlY2ggUHJvY2Vzc29yIEltcGxhbnRcIixcIkRhdGFKYWNrXCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOdW9wdGltYWwgTm9vdHJvcGljIEluamVjdG9yIEltcGxhbnRcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiTmV1cmVnZW4gR2VuZSBNb2RpZmljYXRpb25cIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOnRydWUsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiQ2hvbmdxaW5nXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiSXNoaW1hXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJDb21iYXQgUmliIElcIixcIldpcmVkIFJlZmxleGVzXCIsXCJTcGVlY2ggUHJvY2Vzc29yIEltcGxhbnRcIixcIk5ldXJhbHN0aW11bGF0b3JcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiSU5GUkFSRVQgRW5oYW5jZW1lbnRcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOnRydWUsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiSXNoaW1hXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiTmV3IFRva3lvXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3BlZWNoIFByb2Nlc3NvciBJbXBsYW50XCIsXCJEYXRhSmFja1wiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk51dHJpR2VuIEltcGxhbnRcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOnRydWUsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiTmV3IFRva3lvXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiU2VjdG9yLTEyXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6dHJ1ZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElcIixcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSUlcIixcIldpcmVkIFJlZmxleGVzXCIsXCJTcGVlY2ggUHJvY2Vzc29yIEltcGxhbnRcIixcIk5ldXJhbHN0aW11bGF0b3JcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiQ2FzaFJvb3QgU3RhcnRlciBLaXRcIl0sXCJmYXZvclwiOjE4LjIxNixcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOnRydWUsXCJuYW1lXCI6XCJTZWN0b3ItMTJcIixcInBsYXllclJlcHV0YXRpb25cIjoxMjkyMC4wOTQwMzI1NTcyODN9fSxcIlZvbGhhdmVuXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQ29tYmF0IFJpYiBJXCIsXCJDb21iYXQgUmliIElJXCIsXCJXaXJlZCBSZWZsZXhlc1wiLFwiU3BlZWNoIFByb2Nlc3NvciBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOdW9wdGltYWwgTm9vdHJvcGljIEluamVjdG9yIEltcGxhbnRcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiRGVybWFGb3JjZSBQYXJ0aWNsZSBCYXJyaWVyXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjp0cnVlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIlZvbGhhdmVuXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiU3BlYWtlcnMgZm9yIHRoZSBEZWFkXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiVW5zdGFibGUgQ2lyY2FkaWFuIE1vZHVsYXRvclwiLFwiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJOYW5vZmliZXIgV2VhdmVcIixcIldpcmVkIFJlZmxleGVzXCIsXCJCaW9uaWMgU3BpbmVcIixcIkJpb25pYyBMZWdzXCIsXCJTcGVlY2ggRW5oYW5jZW1lbnRcIixcIlRoZSBTaGFkb3cncyBTaW11bGFjcnVtXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkdyYXBoZW5lIEJyYWNoaUJsYWRlcyBVcGdyYWRlXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJTcGVha2VycyBmb3IgdGhlIERlYWRcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJUaGUgRGFyayBBcm15XCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiSGVtb1JlY2lyY3VsYXRvclwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiQ29tYmF0IFJpYiBJXCIsXCJDb21iYXQgUmliIElJXCIsXCJDb21iYXQgUmliIElJSVwiLFwiTmFub2ZpYmVyIFdlYXZlXCIsXCJXaXJlZCBSZWZsZXhlc1wiLFwiVGhlIFNoYWRvdydzIFNpbXVsYWNydW1cIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiUG93ZXIgUmVjaXJjdWxhdGlvbiBDb3JlXCIsXCJHcmFwaGVuZSBCaW9uaWMgQXJtcyBVcGdyYWRlXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJUaGUgRGFyayBBcm15XCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiVGhlIFN5bmRpY2F0ZVwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOnRydWUsXCJhdWdtZW50YXRpb25zXCI6W1wiSGVtb1JlY2lyY3VsYXRvclwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiQ29tYmF0IFJpYiBJXCIsXCJDb21iYXQgUmliIElJXCIsXCJDb21iYXQgUmliIElJSVwiLFwiTmFub2ZpYmVyIFdlYXZlXCIsXCJORU1FQU4gU3ViZGVybWFsIFdlYXZlXCIsXCJXaXJlZCBSZWZsZXhlc1wiLFwiQmlvbmljIFNwaW5lXCIsXCJCaW9uaWMgTGVnc1wiLFwiQURSLVYxIFBoZXJvbW9uZSBHZW5lXCIsXCJUaGUgU2hhZG93J3MgU2ltdWxhY3J1bVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJQb3dlciBSZWNpcmN1bGF0aW9uIENvcmVcIixcIkJyYWNoaUJsYWRlc1wiXSxcImZhdm9yXCI6MSxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOnRydWUsXCJuYW1lXCI6XCJUaGUgU3luZGljYXRlXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6NDU2LjUwNjMxNjU3Mzk0Nzh9fSxcIlNpbGhvdWV0dGVcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJTcGVlY2ggUHJvY2Vzc29yIEltcGxhbnRcIixcIlRJVE4tNDEgR2VuZS1Nb2RpZmljYXRpb24gSW5qZWN0aW9uXCIsXCJBRFItVjIgUGhlcm9tb25lIEdlbmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiU2lsaG91ZXR0ZVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlRldHJhZHNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJIZW1vUmVjaXJjdWxhdG9yXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkx1bWluQ2xvYWtpbmctVjEgU2tpbiBJbXBsYW50XCIsXCJMdW1pbkNsb2FraW5nLVYyIFNraW4gSW1wbGFudFwiLFwiUG93ZXIgUmVjaXJjdWxhdGlvbiBDb3JlXCIsXCJCaW9uaWMgQXJtc1wiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiVGV0cmFkc1wiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlNsdW0gU25ha2VzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6dHJ1ZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElcIixcIkNvbWJhdCBSaWIgSVwiLFwiV2lyZWQgUmVmbGV4ZXNcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiTHVtaW5DbG9ha2luZy1WMSBTa2luIEltcGxhbnRcIixcIkx1bWluQ2xvYWtpbmctVjIgU2tpbiBJbXBsYW50XCIsXCJTbWFydFNvbmFyIEltcGxhbnRcIl0sXCJmYXZvclwiOjUzLjIwNjQsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjp0cnVlLFwibmFtZVwiOlwiU2x1bSBTbmFrZXNcIixcInBsYXllclJlcHV0YXRpb25cIjo0ODMxLjc5NDM5NzY1MDU3ODV9fSxcIk5ldGJ1cm5lcnNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJIYWNrbmV0IE5vZGUgQ1BVIEFyY2hpdGVjdHVyZSBOZXVyYWwtVXBsb2FkXCIsXCJIYWNrbmV0IE5vZGUgQ2FjaGUgQXJjaGl0ZWN0dXJlIE5ldXJhbC1VcGxvYWRcIixcIkhhY2tuZXQgTm9kZSBOSUMgQXJjaGl0ZWN0dXJlIE5ldXJhbC1VcGxvYWRcIixcIkhhY2tuZXQgTm9kZSBLZXJuZWwgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2VcIixcIkhhY2tuZXQgTm9kZSBDb3JlIERpcmVjdC1OZXVyYWwgSW50ZXJmYWNlXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIk5ldGJ1cm5lcnNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJUaWFuIERpIEh1aVwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIk5hbm9maWJlciBXZWF2ZVwiLFwiV2lyZWQgUmVmbGV4ZXNcIixcIlNwZWVjaCBQcm9jZXNzb3IgSW1wbGFudFwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJTcGVlY2ggRW5oYW5jZW1lbnRcIixcIkFEUi1WMSBQaGVyb21vbmUgR2VuZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJTb2NpYWwgTmVnb3RpYXRpb24gQXNzaXN0YW50IChTLk4uQSlcIixcIk5ldXJvcmVjZXB0b3IgTWFuYWdlbWVudCBJbXBsYW50XCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJUaWFuIERpIEh1aVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkN5YmVyU2VjXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQml0V2lyZVwiLFwiU3luYXB0aWMgRW5oYW5jZW1lbnQgSW1wbGFudFwiLFwiQ3JhbmlhbCBTaWduYWwgUHJvY2Vzc29ycyAtIEdlbiBJXCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElJXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk5ldXJvdHJhaW5lciBJXCJdLFwiZmF2b3JcIjoxMC45MDMsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkN5YmVyU2VjXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQmxhZGVidXJuZXJzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiRXNwZXJUZWNoIEJsYWRlYnVybmVyIEV5ZXdlYXJcIixcIkVNUy00IFJlY29tYmluYXRpb25cIixcIk9SSU9OLU1LSVYgU2hvdWxkZXJcIixcIkh5cGVyaW9uIFBsYXNtYSBDYW5ub24gVjFcIixcIkh5cGVyaW9uIFBsYXNtYSBDYW5ub24gVjJcIixcIkdPTEVNIFNlcnVtXCIsXCJWYW5nZWxpcyBWaXJ1c1wiLFwiVmFuZ2VsaXMgVmlydXMgMy4wXCIsXCJJLk4uVC5FLlIuTC5JLk4uSy5FLkRcIixcIkJsYWRlJ3MgUnVubmVyc1wiLFwiQkxBREUtNTFiIFRlc2xhIEFybW9yXCIsXCJCTEFERS01MWIgVGVzbGEgQXJtb3I6IFBvd2VyIENlbGxzIFVwZ3JhZGVcIixcIkJMQURFLTUxYiBUZXNsYSBBcm1vcjogRW5lcmd5IFNoaWVsZGluZyBVcGdyYWRlXCIsXCJCTEFERS01MWIgVGVzbGEgQXJtb3I6IFVuaWJlYW0gVXBncmFkZVwiLFwiQkxBREUtNTFiIFRlc2xhIEFybW9yOiBPbW5pYmVhbSBVcGdyYWRlXCIsXCJCTEFERS01MWIgVGVzbGEgQXJtb3I6IElQVSBVcGdyYWRlXCIsXCJUaGUgQmxhZGUncyBTaW11bGFjcnVtXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJCbGFkZWJ1cm5lcnNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJDaHVyY2ggb2YgdGhlIE1hY2hpbmUgR29kXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3RhbmVrJ3MgR2lmdCAtIEdlbmVzaXNcIixcIlN0YW5laydzIEdpZnQgLSBBd2FrZW5pbmdcIixcIlN0YW5laydzIEdpZnQgLSBTZXJlbml0eVwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiQ2h1cmNoIG9mIHRoZSBNYWNoaW5lIEdvZFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fX0iLCJBbGlhc2VzU2F2ZSI6Int9IiwiR2xvYmFsQWxpYXNlc1NhdmUiOiJ7fSIsIk1lc3NhZ2VzU2F2ZSI6IntcImowLm1zZ1wiOntcImN0b3JcIjpcIk1lc3NhZ2VcIixcImRhdGFcIjp7XCJmaWxlbmFtZVwiOlwiajAubXNnXCIsXCJtc2dcIjpcIkkga25vdyB5b3UgY2FuIHNlbnNlIGl0LiBJIGtub3cgeW91J3JlIHNlYXJjaGluZyBmb3IgaXQuIEl0J3Mgd2h5IHlvdSBzcGVuZCBuaWdodCBhZnRlciBuaWdodCBhdCB5b3VyIGNvbXB1dGVyLiA8YnI+PGJyPkl0J3MgcmVhbCwgSSd2ZSBzZWVuIGl0LiBBbmQgSSBjYW4gaGVscCB5b3UgZmluZCBpdC4gQnV0IG5vdCByaWdodCBub3cuIFlvdSdyZSBub3QgcmVhZHkgeWV0Ljxicj48YnI+VXNlIHRoaXMgcHJvZ3JhbSB0byB0cmFjayB5b3VyIHByb2dyZXNzPGJyPjxicj5UaGUgZmwxZ2h0LmV4ZSBwcm9ncmFtIHdhcyBhZGRlZCB0byB5b3VyIGhvbWUgY29tcHV0ZXI8YnI+PGJyPi1qdW1wM1JcIixcInJlY3ZkXCI6dHJ1ZX19LFwiajEubXNnXCI6e1wiY3RvclwiOlwiTWVzc2FnZVwiLFwiZGF0YVwiOntcImZpbGVuYW1lXCI6XCJqMS5tc2dcIixcIm1zZ1wiOlwiU29vbiB5b3Ugd2lsbCBiZSBjb250YWN0ZWQgYnkgYSBoYWNraW5nIGdyb3VwIGtub3duIGFzIEN5YmVyU2VjLiBUaGV5IGNhbiBoZWxwIHlvdSB3aXRoIHlvdXIgc2VhcmNoLiA8YnI+PGJyPllvdSBzaG91bGQgam9pbiB0aGVtLCBnYXJuZXIgdGhlaXIgZmF2b3IsIGFuZCBleHBsb2l0IHRoZW0gZm9yIHRoZWlyIEF1Z21lbnRhdGlvbnMuIEJ1dCBkbyBub3QgdHJ1c3QgdGhlbS4gVGhleSBhcmUgbm90IHdoYXQgdGhleSBzZWVtLiBObyBvbmUgaXMuPGJyPjxicj4tanVtcDNSXCIsXCJyZWN2ZFwiOnRydWV9fSxcImoyLm1zZ1wiOntcImN0b3JcIjpcIk1lc3NhZ2VcIixcImRhdGFcIjp7XCJmaWxlbmFtZVwiOlwiajIubXNnXCIsXCJtc2dcIjpcIkRvIG5vdCB0cnkgdG8gc2F2ZSB0aGUgd29ybGQuIFRoZXJlIGlzIG5vIHdvcmxkIHRvIHNhdmUuIElmIHlvdSB3YW50IHRvIGZpbmQgdGhlIHRydXRoLCB3b3JyeSBvbmx5IGFib3V0IHlvdXJzZWxmLiBFdGhpY3MgYW5kIG1vcmFscyB3aWxsIGdldCB5b3Uga2lsbGVkLiA8YnI+PGJyPldhdGNoIG91dCBmb3IgYSBoYWNraW5nIGdyb3VwIGtub3duIGFzIE5pdGVTZWMuPGJyPjxicj4tanVtcDNSXCIsXCJyZWN2ZFwiOnRydWV9fSxcImozLm1zZ1wiOntcImN0b3JcIjpcIk1lc3NhZ2VcIixcImRhdGFcIjp7XCJmaWxlbmFtZVwiOlwiajMubXNnXCIsXCJtc2dcIjpcIllvdSBtdXN0IGxlYXJuIHRvIHdhbGsgYmVmb3JlIHlvdSBjYW4gcnVuLiBBbmQgeW91IG11c3QgcnVuIGJlZm9yZSB5b3UgY2FuIGZseS4gTG9vayBmb3IgdGhlIGJsYWNrIGhhbmQuIDxicj48YnI+SS5JLkkuSSA8YnI+PGJyPi1qdW1wM1JcIixcInJlY3ZkXCI6dHJ1ZX19LFwiajQubXNnXCI6e1wiY3RvclwiOlwiTWVzc2FnZVwiLFwiZGF0YVwiOntcImZpbGVuYW1lXCI6XCJqNC5tc2dcIixcIm1zZ1wiOlwiVG8gZmluZCB3aGF0IHlvdSBhcmUgc2VhcmNoaW5nIGZvciwgeW91IG11c3QgdW5kZXJzdGFuZCB0aGUgYml0cy4gVGhlIGJpdHMgYXJlIGFsbCBhcm91bmQgdXMuIFRoZSBydW5uZXJzIHdpbGwgaGVscCB5b3UuPGJyPjxicj4tanVtcDNSXCIsXCJyZWN2ZFwiOmZhbHNlfX0sXCJjc2VjLXRlc3QubXNnXCI6e1wiY3RvclwiOlwiTWVzc2FnZVwiLFwiZGF0YVwiOntcImZpbGVuYW1lXCI6XCJjc2VjLXRlc3QubXNnXCIsXCJtc2dcIjpcIldlJ3ZlIGJlZW4gd2F0Y2hpbmcgeW91LiBZb3VyIHNraWxscyBhcmUgdmVyeSBpbXByZXNzaXZlLiBCdXQgeW91J3JlIHdhc3RpbmcgeW91ciB0YWxlbnRzLiBJZiB5b3Ugam9pbiB1cywgeW91IGNhbiBwdXQgeW91ciBza2lsbHMgdG8gZ29vZCB1c2UgYW5kIGNoYW5nZSB0aGUgd29ybGQgZm9yIHRoZSBiZXR0ZXIuIElmIHlvdSBqb2luIHVzLCB3ZSBjYW4gdW5sb2NrIHlvdXIgZnVsbCBwb3RlbnRpYWwuIDxicj48YnI+QnV0IGZpcnN0LCB5b3UgbXVzdCBwYXNzIG91ciB0ZXN0LiBGaW5kIGFuZCBpbnN0YWxsIHRoZSBiYWNrZG9vciBvbiBvdXIgc2VydmVyLiA8YnI+PGJyPi1DeWJlclNlY1wiLFwicmVjdmRcIjp0cnVlfX0sXCJuaXRlc2VjLXRlc3QubXNnXCI6e1wiY3RvclwiOlwiTWVzc2FnZVwiLFwiZGF0YVwiOntcImZpbGVuYW1lXCI6XCJuaXRlc2VjLXRlc3QubXNnXCIsXCJtc2dcIjpcIlBlb3BsZSBzYXkgdGhhdCB0aGUgY29ycnVwdGVkIGdvdmVybm1lbnRzIGFuZCBjb3Jwb3JhdGlvbnMgcnVsZSB0aGUgd29ybGQuIFllcywgbWF5YmUgdGhleSBkby4gQnV0IGRvIHlvdSBrbm93IHdobyBldmVyeW9uZSByZWFsbHkgZmVhcnM/IFBlb3BsZSBsaWtlIHVzLiBCZWNhdXNlIHRoZXkgY2FuJ3QgaGlkZSBmcm9tIHVzLiBCZWNhdXNlIHRoZXkgY2FuJ3QgZmlnaHQgc2hhZG93cyBhbmQgaWRlYXMgd2l0aCBidWxsZXRzLiA8YnI+PGJyPkpvaW4gdXMsIGFuZCBwZW9wbGUgd2lsbCBmZWFyIHlvdSwgdG9vLiA8YnI+PGJyPkZpbmQgYW5kIGluc3RhbGwgdGhlIGJhY2tkb29yIG9uIG91ciBzZXJ2ZXIuIFRoZW4sIHdlIHdpbGwgY29udGFjdCB5b3UgYWdhaW4uPGJyPjxicj4tTml0ZVNlY1wiLFwicmVjdmRcIjp0cnVlfX0sXCIxOWRmajNsMW5kLm1zZ1wiOntcImN0b3JcIjpcIk1lc3NhZ2VcIixcImRhdGFcIjp7XCJmaWxlbmFtZVwiOlwiMTlkZmozbDFuZC5tc2dcIixcIm1zZ1wiOlwiV2Uga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcuIFdlIGtub3cgd2hhdCBkcml2ZXMgeW91LiBXZSBrbm93IHdoYXQgeW91IGFyZSBsb29raW5nIGZvci4gPGJyPjxicj4gV2UgY2FuIGhlbHAgeW91IGZpbmQgdGhlIGFuc3dlcnMuPGJyPjxicj5ydW40dGhlaDExMXpcIixcInJlY3ZkXCI6ZmFsc2V9fSxcImljYXJ1cy5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImljYXJ1cy5tc2dcIixcIm1zZ1wiOlwiQCkoI1YlKk4pQCgjKikqQylAIyUqKSpWKUAjKColVkApKCNWTiUqKUAjKColPGJyPilAQigqIyUpQClNI0IqJVYpX19fX0ZJTkRfX18jJEApIyUoQiopQCMoKiVCKTxicj5AXyMoJV9AI00oQkRTUE9NQl9fVEhFLUNBVkVfIykkKCpAIyQpQCNCTkJFR0I8YnI+REZMU01GVk1WKSNAKCQqKUAjKiRNVilAIygqJFYpTSMoKiQpTUAoIypWTSQpXCIsXCJyZWN2ZFwiOmZhbHNlfX19IiwiU3RvY2tNYXJrZXRTYXZlIjoie1wibGFzdFVwZGF0ZVwiOjAsXCJPcmRlcnNcIjp7fSxcInN0b3JlZEN5Y2xlc1wiOjAsXCJ0aWNrc1VudGlsQ3ljbGVcIjowfSIsIlNldHRpbmdzU2F2ZSI6IntcIkFjdGl2ZVNjcmlwdHNTZXJ2ZXJQYWdlU2l6ZVwiOjEwMCxcIkFjdGl2ZVNjcmlwdHNTY3JpcHRQYWdlU2l6ZVwiOjEwLFwiQXV0b3NhdmVJbnRlcnZhbFwiOjYwLFwiQ29kZUluc3RydWN0aW9uUnVuVGltZVwiOjI1LFwiRGlzYWJsZUFTQ0lJQXJ0XCI6ZmFsc2UsXCJEaXNhYmxlSG90a2V5c1wiOmZhbHNlLFwiRGlzYWJsZVRleHRFZmZlY3RzXCI6ZmFsc2UsXCJEaXNhYmxlT3ZlcnZpZXdQcm9ncmVzc0JhcnNcIjpmYWxzZSxcIkVuYWJsZUJhc2hIb3RrZXlzXCI6ZmFsc2UsXCJUaW1lc3RhbXBzRm9ybWF0XCI6XCJcIixcIkxvY2FsZVwiOlwiZW5cIixcIk1heExvZ0NhcGFjaXR5XCI6NTAsXCJNYXhQb3J0Q2FwYWNpdHlcIjo1MCxcIk1heFRlcm1pbmFsQ2FwYWNpdHlcIjo1MDAsXCJPd25lZEF1Z21lbnRhdGlvbnNPcmRlclwiOjAsXCJQdXJjaGFzZUF1Z21lbnRhdGlvbnNPcmRlclwiOjIsXCJTYXZlR2FtZU9uRmlsZVNhdmVcIjp0cnVlLFwiU3VwcHJlc3NCdXlBdWdtZW50YXRpb25Db25maXJtYXRpb25cIjpmYWxzZSxcIlN1cHByZXNzRmFjdGlvbkludml0ZXNcIjpmYWxzZSxcIlN1cHByZXNzTWVzc2FnZXNcIjpmYWxzZSxcIlN1cHByZXNzVHJhdmVsQ29uZmlybWF0aW9uXCI6ZmFsc2UsXCJTdXBwcmVzc0JsYWRlYnVybmVyUG9wdXBcIjpmYWxzZSxcIlN1cHByZXNzVElYUG9wdXBcIjpmYWxzZSxcIlN1cHByZXNzU2F2ZWRHYW1lVG9hc3RcIjpmYWxzZSxcIlVzZUlFQzYwMDI3XzJcIjpmYWxzZSxcIkV4Y2x1ZGVSdW5uaW5nU2NyaXB0c0Zyb21TYXZlXCI6ZmFsc2UsXCJJc1NpZGViYXJPcGVuZWRcIjp0cnVlLFwiTW9uYWNvVGhlbWVcIjpcIm1vbm9rYWlcIixcIk1vbmFjb0luc2VydFNwYWNlc1wiOmZhbHNlLFwiTW9uYWNvRm9udFNpemVcIjoyMCxcIk1vbmFjb1ZpbVwiOmZhbHNlLFwiTW9uYWNvV29yZFdyYXBcIjpcIm9mZlwiLFwidGhlbWVcIjp7XCJwcmltYXJ5bGlnaHRcIjpcIiMwZjBcIixcInByaW1hcnlcIjpcIiMwYzBcIixcInByaW1hcnlkYXJrXCI6XCIjMDkwXCIsXCJzdWNjZXNzbGlnaHRcIjpcIiMwZjBcIixcInN1Y2Nlc3NcIjpcIiMwYzBcIixcInN1Y2Nlc3NkYXJrXCI6XCIjMDkwXCIsXCJlcnJvcmxpZ2h0XCI6XCIjZjAwXCIsXCJlcnJvclwiOlwiI2MwMFwiLFwiZXJyb3JkYXJrXCI6XCIjOTAwXCIsXCJzZWNvbmRhcnlsaWdodFwiOlwiI0FBQVwiLFwic2Vjb25kYXJ5XCI6XCIjODg4XCIsXCJzZWNvbmRhcnlkYXJrXCI6XCIjNjY2XCIsXCJ3YXJuaW5nbGlnaHRcIjpcIiNmZjBcIixcIndhcm5pbmdcIjpcIiNjYzBcIixcIndhcm5pbmdkYXJrXCI6XCIjOTkwXCIsXCJpbmZvbGlnaHRcIjpcIiM2OWZcIixcImluZm9cIjpcIiMzNmNcIixcImluZm9kYXJrXCI6XCIjMDM5XCIsXCJ3ZWxsbGlnaHRcIjpcIiM0NDRcIixcIndlbGxcIjpcIiMyMjJcIixcIndoaXRlXCI6XCIjZmZmXCIsXCJibGFja1wiOlwiIzAwMFwiLFwiaHBcIjpcIiNkZDM0MzRcIixcIm1vbmV5XCI6XCIjZmZkNzAwXCIsXCJoYWNrXCI6XCIjYWRmZjJmXCIsXCJjb21iYXRcIjpcIiNmYWZmZGZcIixcImNoYVwiOlwiI2E2NzFkMVwiLFwiaW50XCI6XCIjNjQ5NWVkXCIsXCJyZXBcIjpcIiNmYWZmZGZcIixcImRpc2FibGVkXCI6XCIjNjZjZmJjXCIsXCJiYWNrZ3JvdW5kcHJpbWFyeVwiOlwiIzAwMFwiLFwiYmFja2dyb3VuZHNlY29uZGFyeVwiOlwiIzAwMFwiLFwiYnV0dG9uXCI6XCIjMzMzXCJ9LFwic3R5bGVzXCI6e1wibGluZUhlaWdodFwiOjEuNSxcImZvbnRGYW1pbHlcIjpcIkx1Y2lkYSBDb25zb2xlLCBMdWNpZGEgU2FucyBVbmljb2RlLCBGaXJhIE1vbm8sIENvbnNvbGFzLCBDb3VyaWVyIE5ldywgQ291cmllciwgbW9ub3NwYWNlLCBUaW1lcyBOZXcgUm9tYW5cIn0sXCJvdmVydmlld1wiOntcInhcIjowLFwieVwiOjAsXCJvcGVuZWRcIjp0cnVlfX0iLCJWZXJzaW9uU2F2ZSI6IjEwIiwiQWxsR2FuZ3NTYXZlIjoie1wiU2x1bSBTbmFrZXNcIjp7XCJwb3dlclwiOjEsXCJ0ZXJyaXRvcnlcIjowLjE0Mjg1NzE0Mjg1NzE0Mjg1fSxcIlRldHJhZHNcIjp7XCJwb3dlclwiOjIxMDAuODIxNTM2MTc2NjM1NixcInRlcnJpdG9yeVwiOjB9LFwiVGhlIFN5bmRpY2F0ZVwiOntcInBvd2VyXCI6MTk1OS45MDk2OTUxNTM1NzEyLFwidGVycml0b3J5XCI6MH0sXCJUaGUgRGFyayBBcm15XCI6e1wicG93ZXJcIjoyMDE0LjAxNzk4NjM2MjYxMzYsXCJ0ZXJyaXRvcnlcIjowfSxcIlNwZWFrZXJzIGZvciB0aGUgRGVhZFwiOntcInBvd2VyXCI6Nzk1NC4wNjk5Njk2NDEzNTQsXCJ0ZXJyaXRvcnlcIjowLjg1NzE0Mjg1NzE0Mjg1NzV9LFwiTml0ZVNlY1wiOntcInBvd2VyXCI6MTk0Ni42MjM1NjQ0MjMxMTM1LFwidGVycml0b3J5XCI6MH0sXCJUaGUgQmxhY2sgSGFuZFwiOntcInBvd2VyXCI6MTA1My4yNTkwMTc0MTI4MjE4LFwidGVycml0b3J5XCI6MH19IiwiTGFzdEV4cG9ydEJvbnVzIjoiMTY0NTk3NzkwODA5MyIsIlN0YW5la3NHaWZ0U2F2ZSI6IntcImN0b3JcIjpcIlN0YW5la3NHaWZ0XCIsXCJkYXRhXCI6e1wic3RvcmVkQ3ljbGVzXCI6MCxcImZyYWdtZW50c1wiOltdfX0iLCJTYXZlVGltZXN0YW1wIjoiMTY0NTk3NzkwODEzNCJ9fQ==\",\"filename\":\"/saves/bn4.1-get-evil.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"server\":\"home\",\"moduleSequenceNumber\":337}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const members = ns.gang.getMemberNames();\\n  const tasks = ns.gang\\n    .getTaskNames()\\n    .map((name) => ns.gang.getTaskStats(name));\\n\\n  const trainTask = tasks.find((task) => {\\n    return task.name.toLowerCase().includes(\\\"terror\\\") && task.strWeight > 0;\\n  });\\n\\n  ns.tprint(JSON.stringify(tasks, null, 2));\\n}\",\"filename\":\"/gang/cgang-terror.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/gang/cgang-terror.js\",\"url\":\"blob:file:///47da34e9-36f4-4112-94b3-9ea7f815acea\",\"moduleSequenceNumber\":12327}],\"dependents\":[],\"ramUsage\":4.6,\"server\":\"home\",\"moduleSequenceNumber\":338,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskStats\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  while (true) {\\n    const members = ns.gang.getMemberNames();\\n    const tasks = ns.gang\\n      .getTaskNames()\\n      .map((name) => ns.gang.getTaskStats(name));\\n\\n    const trainTask = tasks.find((task) => {\\n      return task.name.toLowerCase().includes(\\\"train\\\") && task.strWeight > 0;\\n    });\\n\\n    if (ns.gang.canRecruitMember()) {\\n      const newGuy = `r00kie-${members.length}`;\\n      if (ns.gang.recruitMember(newGuy)) {\\n        ns.tprint(\\\"new gang member : \\\" + newGuy);\\n        members.push(newGuy);\\n        ns.gang.setMemberTask(newGuy, trainTask.name);\\n      }\\n    }\\n\\n    const equipment = ns.gang\\n      .getEquipmentNames()\\n      .map((name) => ({ name, ...ns.gang.getEquipmentStats(name) }))\\n      .map((stats) => ({\\n        ...stats,\\n        price: ns.gang.getEquipmentCost(stats.name),\\n        type: ns.gang.getEquipmentType(stats.name),\\n      }))\\n      .filter((stats) => stats.str > 0 || stats.def > 0 || stats.agi > 0);\\n\\n    for (let ganger of members.map((name) => ({\\n      name,\\n      ...ns.gang.getMemberInformation(name),\\n    }))) {\\n      const hasEquip = [...ganger.augmentations, ...ganger.upgrades];\\n      const needs = equipment.filter((equip) => !hasEquip.includes(equip.name));\\n\\n      ns.print(\\n        `gang member ${ganger.name} has: ${hasEquip.join(\\\", \\\")}, needs: ${needs\\n          .map((eqp) => eqp.name)\\n          .join(\\\", \\\")}`\\n      );\\n\\n      for (let eqp of needs) {\\n        if (eqp.price < ns.getServerMoneyAvailable(\\\"home\\\")) {\\n          ns.tprint(`purchased ${eqp.name} for ${ganger.name}`);\\n          ns.gang.purchaseEquipment(ganger.name, eqp.name);\\n        }\\n      }\\n    }\\n\\n    await ns.sleep(20);\\n  }\\n}\",\"filename\":\"/gang/gang-mgmt-combat.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/gang/gang-mgmt-combat.js\",\"url\":\"blob:file:///2172059d-9ecd-4ff7-9f10-d28d30ed7450\",\"moduleSequenceNumber\":517}],\"dependents\":[],\"ramUsage\":22.7,\"server\":\"home\",\"moduleSequenceNumber\":517,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskStats\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getEquipmentStats\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentType\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  while (true) {\\n    const members = ns.gang.getMemberNames();\\n    const tasks = ns.gang\\n      .getTaskNames()\\n      .map((name) => ns.gang.getTaskStats(name));\\n\\n    const trainTask = tasks.find((task) => {\\n      return task.name.toLowerCase().includes(\\\"train\\\") && task.hackWeight > 0;\\n    });\\n\\n    if (ns.gang.canRecruitMember()) {\\n      const newGuy = `r00kie-${members.length}`;\\n      if (ns.gang.recruitMember(newGuy)) {\\n        ns.tprint(\\\"new gang member : \\\" + newGuy);\\n        members.push(newGuy);\\n        ns.gang.setMemberTask(newGuy, trainTask.name);\\n      }\\n    }\\n\\n    const equipment = ns.gang\\n      .getEquipmentNames()\\n      .map((name) => ({ name, ...ns.gang.getEquipmentStats(name) }))\\n      .map((stats) => ({\\n        ...stats,\\n        price: ns.gang.getEquipmentCost(stats.name),\\n        type: ns.gang.getEquipmentType(stats.name),\\n      }))\\n      .filter((stats) => stats.hack > 0);\\n\\n    for (let ganger of members.map((name) => ({\\n      name,\\n      ...ns.gang.getMemberInformation(name),\\n    }))) {\\n      const hasEquip = [...ganger.augmentations, ...ganger.upgrades];\\n      const needs = equipment.filter((equip) => !hasEquip.includes(equip.name));\\n\\n      ns.print(\\n        `gang member ${ganger.name} has: ${hasEquip.join(\\\", \\\")}, needs: ${needs\\n          .map((eqp) => eqp.name)\\n          .join(\\\", \\\")}`\\n      );\\n\\n      for (let eqp of needs) {\\n        if (eqp.price < ns.getServerMoneyAvailable(\\\"home\\\")) {\\n          ns.tprint(`purchased ${eqp.name} for ${ganger.name}`);\\n          ns.gang.purchaseEquipment(ganger.name, eqp.name);\\n        }\\n      }\\n    }\\n\\n    await ns.sleep(20);\\n  }\\n}\",\"filename\":\"/gang/gang-mgmt-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":22.8,\"server\":\"home\",\"moduleSequenceNumber\":340,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskStats\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getEquipmentStats\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentType\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const tasks = [\\n  \\\"Unassigned\\\",\\n  \\\"Mug People\\\",\\n  \\\"Deal Drugs\\\",\\n  \\\"Strongarm Civilians\\\",\\n  \\\"Run a Con\\\",\\n  \\\"Armed Robbery\\\",\\n  \\\"Traffick Illegal Arms\\\",\\n  \\\"Threaten & Blackmail\\\",\\n  \\\"Human Trafficking\\\",\\n  \\\"Terrorism\\\",\\n  \\\"Vigilante Justice\\\",\\n  \\\"Train Combat\\\",\\n  \\\"Train Hacking\\\",\\n  \\\"Train Charisma\\\",\\n  \\\"Territory Warfare\\\",\\n];\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const members = ns.gang.getMemberNames();\\n  const task = ns.args.join(\\\" \\\");\\n\\n  for (const member of members) {\\n    ns.gang.setMemberTask(member, task);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return tasks;\\n}\",\"filename\":\"/gang/set-task-all.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/gang/set-task-all.js\",\"url\":\"blob:file:///8faf31f9-028f-4901-a742-f8b16a586a92\",\"moduleSequenceNumber\":12030}],\"dependents\":[],\"ramUsage\":4.6,\"server\":\"home\",\"moduleSequenceNumber\":341,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"psrv-0\",\"psrv-1\",\"psrv-2\",\"psrv-3\",\"psrv-4\",\"psrv-5\",\"psrv-6\",\"psrv-7\",\"psrv-8\",\"psrv-9\",\"psrv-10\",\"psrv-11\",\"psrv-12\",\"psrv-13\",\"psrv-14\",\"psrv-15\",\"psrv-16\",\"psrv-17\",\"psrv-18\",\"psrv-19\",\"psrv-20\",\"psrv-21\",\"psrv-22\",\"psrv-23\",\"psrv-24\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":2.286,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-434107.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[191,12,36,10,62,77,164,6,195,145,120,52,83,28,133,163,30,11,172,70,26,104,195,158,18,48,182,82,84,140],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"28.1.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":35.71600000000001,\"minDifficulty\":33,\"moneyAvailable\":129774254700.9375,\"moneyMax\":129774254700.9375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1072,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"18.0.6.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":31852653656.25,\"moneyMax\":119447451210.9375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1261,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"74.7.8.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":83,\"minDifficulty\":28,\"moneyAvailable\":14982654131.25,\"moneyMax\":56184952992.1875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1150,\"serverGrowth\":71}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"55.2.5.0\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\",\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":24607926540,\"moneyMax\":92279724525,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1004,\"serverGrowth\":65}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"16.0.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\",\"ecorp\",\"megacorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":23145505026,\"moneyMax\":86795643847.5,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1148,\"serverGrowth\":80}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"1.9.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\",\"fulcrumassets\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":55,\"minDifficulty\":18,\"moneyAvailable\":15444504591.75,\"moneyMax\":57916892219.0625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":967,\"serverGrowth\":75}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"21.9.8.9\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":32,\"minDifficulty\":32,\"moneyAvailable\":41050645005.9375,\"moneyMax\":41050645005.9375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":902,\"serverGrowth\":97}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"89.4.7.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":21,\"minDifficulty\":21,\"moneyAvailable\":45100314407.8125,\"moneyMax\":45100314407.8125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":984,\"serverGrowth\":87}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"92.5.7.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"stormtech\",\"blade\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":18278268488.25,\"moneyMax\":68543506830.9375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1282,\"serverGrowth\":99}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"29.1.5.4\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\",\"omnitek\",\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":1257972569.25,\"moneyMax\":4717397134.6875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1161,\"serverGrowth\":93}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"18.0.0.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":750000,\"moneyMax\":2812500,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1137,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-294050.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[6,1,0,7,-10,10,0,0,-1,6,1,-2,6,2,-4,0,-7,10,-10,-4,-2,7,2,-10,-8,10,5,-1,0,-6,7,-9,-3,-1],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"97.0.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\",\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":28,\"minDifficulty\":28,\"moneyAvailable\":3203964337.5,\"moneyMax\":3203964337.5,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1051,\"serverGrowth\":86}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"12.8.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":650902564.5,\"moneyMax\":2440884616.875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":854,\"serverGrowth\":64}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-369621-BitRunners.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,1,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,1,0,0,1],[0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,1,1,0,1,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,1,0,1,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,1,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0]],\"reward\":{\"name\":\"BitRunners\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"56.0.8.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":645419039.25,\"moneyMax\":2420321397.1875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":949,\"serverGrowth\":38}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"67.8.2.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":509956144.5,\"moneyMax\":1912335541.875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":803,\"serverGrowth\":77}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"4.3.1.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":576587316,\"moneyMax\":2162202435,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":819,\"serverGrowth\":67}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"5.9.8.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":30,\"minDifficulty\":30,\"moneyAvailable\":2653998938.4375,\"moneyMax\":2653998938.4375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":867,\"serverGrowth\":85}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"88.3.1.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\",\"infocomm\",\"taiyang-digital\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":30,\"minDifficulty\":30,\"moneyAvailable\":3147728006.25,\"moneyMax\":3147728006.25,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":805,\"serverGrowth\":82}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"13.5.1.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"taiyang-digital\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":630293425.5,\"moneyMax\":2363600345.625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":849,\"serverGrowth\":62}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-478199.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[158,91,50,72,196],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"76.6.1.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":67,\"minDifficulty\":22,\"moneyAvailable\":408484899,\"moneyMax\":1531818371.25,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":844,\"serverGrowth\":74}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"77.3.8.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\",\"titan-labs\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":633632614.5,\"moneyMax\":2376122304.375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":888,\"serverGrowth\":71}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"53.1.3.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aevum-police\",\"deltaone\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":22,\"minDifficulty\":22,\"moneyAvailable\":2274782357.8125,\"moneyMax\":2274782357.8125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":825,\"serverGrowth\":81}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"9.2.2.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"lexo-corp\",\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":856776646.5,\"moneyMax\":3212912424.375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":851,\"serverGrowth\":56}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-242238.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[6,5],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"62.5.8.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aerocorp\",\"defcomm\",\"icarus\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":705538029.75,\"moneyMax\":2645767611.5625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":940,\"serverGrowth\":68}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"91.3.2.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"solaris\",\"applied-energetics\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":57,\"minDifficulty\":19,\"moneyAvailable\":694222270.5,\"moneyMax\":2603333514.375,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":798,\"serverGrowth\":74}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"83.3.4.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":557851596.75,\"moneyMax\":2091943487.8125,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":787,\"serverGrowth\":71}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"14.1.6.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\",\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":582412966.5,\"moneyMax\":2184048624.375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":829,\"serverGrowth\":74}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"33.9.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"galactic-cyber\",\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":1098440514,\"moneyMax\":4119151927.5,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":800,\"serverGrowth\":70}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"86.5.9.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rho-construction\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":26,\"minDifficulty\":26,\"moneyAvailable\":4389730548.75,\"moneyMax\":4389730548.75,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":810,\"serverGrowth\":87}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"86.6.6.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\",\"microdyne\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":862024403.25,\"moneyMax\":3232591512.1875,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":827,\"serverGrowth\":80}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"50.1.5.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":1095641121,\"moneyMax\":4108654203.75,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":802,\"serverGrowth\":75}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"66.1.6.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"galactic-cyber\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":750799098.75,\"moneyMax\":2815496620.3125,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":791,\"serverGrowth\":72}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-235833.cct\",\"type\":\"Total Ways to Sum\",\"data\":75,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"27.2.5.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"summit-uni\",\"aerocorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":581952017.25,\"moneyMax\":2182320064.6875,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":726,\"serverGrowth\":56}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"29.6.5.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-institute\",\"global-pharm\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":55,\"minDifficulty\":18,\"moneyAvailable\":502297137.75,\"moneyMax\":1883614266.5625,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":486,\"serverGrowth\":42}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-30844.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":784815011,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"71.4.4.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":549894405,\"moneyMax\":2062104018.75,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":517,\"serverGrowth\":52}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"60.6.6.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"catalyst\",\"galactic-cyber\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":152243828.25,\"moneyMax\":570914355.9375,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":450,\"serverGrowth\":44}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-251319.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[7,[38,120,191,103,12,26,156,199,165,72,83,149,30,74]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"72.8.3.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":46,\"hackDifficulty\":46,\"minDifficulty\":15,\"moneyAvailable\":149632503.75,\"moneyMax\":561121889.0625,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":418,\"serverGrowth\":43}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-616907.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[128,43,3,79,84,109,110,194,86],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"21.5.9.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"avmnite-02h\",\"rho-construction\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":28,\"minDifficulty\":28,\"moneyAvailable\":2611330827.1875,\"moneyMax\":2611330827.1875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":773,\"serverGrowth\":80}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"61.2.1.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"crush-fitness\",\"lexo-corp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":255954198.75,\"moneyMax\":959828245.3125,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":468,\"serverGrowth\":58}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"73.2.0.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":385112337.75,\"moneyMax\":1444171266.5625,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":558,\"serverGrowth\":61}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-608223.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[14,23],[1,11],[12,16],[15,18],[5,14],[22,30],[14,24],[20,29]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"6.6.5.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"avmnite-02h\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":388395074.25,\"moneyMax\":1456481528.4375,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":427,\"serverGrowth\":46}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-139391-BitRunners.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[170,106,160,13,59,117,33,137,144,160,117,200,18,62,45,101,52,94,195,155,30,101,186,172,49],\"reward\":{\"name\":\"BitRunners\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"18.6.5.8\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"neo-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":44,\"hackDifficulty\":44,\"minDifficulty\":15,\"moneyAvailable\":125273321.25,\"moneyMax\":469774954.6875,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":325,\"serverGrowth\":48}},\"comptek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"comptek\",\"httpPortOpen\":false,\"ip\":\"58.5.0.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"neo-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":58,\"minDifficulty\":19,\"moneyAvailable\":176133954,\"moneyMax\":660502327.5,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":304,\"serverGrowth\":48}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"73.3.7.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omega-net\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":67,\"minDifficulty\":22,\"moneyAvailable\":206250000,\"moneyMax\":773437500,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":412,\"serverGrowth\":75}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-99578-BitRunners.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[31,2,1,36,40,47],[31,43,9,27,11,31],[43,36,3,27,34,2]],\"reward\":{\"name\":\"BitRunners\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"20.7.7.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":43,\"hackDifficulty\":43,\"minDifficulty\":14,\"moneyAvailable\":59896539,\"moneyMax\":224612021.25,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":298,\"serverGrowth\":54}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"45.1.4.7\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":196875,\"moneyMax\":196875,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"53.7.7.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":10,\"minDifficulty\":3,\"moneyAvailable\":1500000,\"moneyMax\":5625000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"71.7.9.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":10,\"minDifficulty\":3,\"moneyAvailable\":1725000,\"moneyMax\":6468750,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"73.7.8.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":1875000,\"moneyMax\":7031250,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-876014.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":720771198,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"83.5.2.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"harakiri-sushi\",\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":5625000,\"moneyMax\":21093750,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"79.9.7.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"harakiri-sushi\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":7,\"minDifficulty\":7,\"moneyAvailable\":7734375,\"moneyMax\":7734375,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"56.5.7.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"CSEC\",\"the-hub\",\"comptek\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25.844,\"minDifficulty\":8,\"moneyAvailable\":5183461.621973237,\"moneyMax\":14062500,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-928192.cct\",\"type\":\"Total Ways to Sum\",\"data\":17,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"36.6.8.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":33750000,\"moneyMax\":126562500,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-469963-BitRunners.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[26,31,24,47,10,30,3,21,40,19,33,49,49,21],[36,8,21,41,16,4,49,36,40,9,15,9,9,11],[2,39,42,3,3,20,47,32,44,16,34,39,1,23],[33,11,44,29,40,33,49,35,10,8,13,26,13,37],[20,31,24,36,48,20,31,44,35,40,11,13,12,1],[49,11,8,4,24,5,27,48,42,3,6,17,15,35]],\"reward\":{\"name\":\"BitRunners\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"52.4.5.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":2250000,\"moneyMax\":8437500,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"85.9.9.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\",\"zer0\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5,\"minDifficulty\":5,\"moneyAvailable\":11250000,\"moneyMax\":11250000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"69.8.9.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":18000000,\"moneyMax\":67500000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"22.1.2.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"joesguns\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15.424,\"minDifficulty\":5,\"moneyAvailable\":10381051.862418702,\"moneyMax\":28125000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-628314.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":932488815,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"35.2.8.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"CSEC\",\"netlink\",\"johnson-ortho\",\"crush-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":51151761,\"moneyMax\":191819103.75,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":198,\"serverGrowth\":31}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"24.1.2.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omega-net\",\"summit-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":39,\"hackDifficulty\":39,\"minDifficulty\":13,\"moneyAvailable\":43500292.5,\"moneyMax\":163126096.875,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":231,\"serverGrowth\":29}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"80.5.4.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":15000000,\"moneyMax\":56250000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"60.9.3.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":46,\"hackDifficulty\":46,\"minDifficulty\":15,\"moneyAvailable\":187500000,\"moneyMax\":703125000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":509,\"serverGrowth\":40}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-243499-Sector-12.cct\",\"type\":\"Array Jumping Game\",\"data\":[2,10,10,0,10,6,0,10,10,0],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-206029.cct\",\"type\":\"Total Ways to Sum\",\"data\":73,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"24.4.1.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":59,\"hackDifficulty\":59,\"minDifficulty\":20,\"moneyAvailable\":675000000,\"moneyMax\":2531250000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1071,\"serverGrowth\":52}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"17.7.8.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rho-construction\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":337500000,\"moneyMax\":1265625000,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":795,\"serverGrowth\":54}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"70.4.7.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"taiyang-digital\",\"fulcrumtech\",\"stormtech\",\"helios\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":540,\"serverGrowth\":0}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"52.8.5.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"avmnite-02h\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":363,\"serverGrowth\":0}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-508766-Sector-12.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,1,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,1,0,0,0],[0,0,0,1,1,1,0,0,0,1,0],[0,0,1,0,1,0,0,0,0,1,0],[0,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,1,1,0]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"36.2.3.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"neo-net\",\"rothman-uni\",\"zb-institute\",\"catalyst\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":214,\"serverGrowth\":0}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"85.6.9.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"helios\",\"b-and-a\",\"nwo\",\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":509,\"serverGrowth\":0}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"26.7.4.3\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"foodnstuff\",\"neo-net\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":58,\"serverGrowth\":0}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"70.6.9.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"85.5.0.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":9000,\"serverGrowth\":0}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"0.8.1.0\",\"isConnectedTo\":false,\"maxRam\":1,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-0\",\"httpPortOpen\":false,\"ip\":\"30.0.3.5\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.311,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.810000016034,\"pid\":23,\"ramUsage\":1.75,\"server\":\"psrv-0\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,241488,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.312000000005,\"onlineExpGained\":51045605.367682554,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.810000016034,\"pid\":24,\"ramUsage\":1.75,\"server\":\"psrv-0\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4429368277074,99216,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.885292707953,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.313,\"onlineExpGained\":21021688.257040028,\"onlineMoneyMade\":4429368277074,\"onlineRunningTime\":37448.810000016034,\"pid\":25,\"ramUsage\":1.7,\"server\":\"psrv-0\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",0,\"rnd-0.9341534307135848\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":229.4099999999955,\"pid\":386362,\"ramUsage\":1.75,\"server\":\"psrv-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e2087d98-42a4-42b3-9783-7e800a479781\",\"moduleSequenceNumber\":545}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9781865157109515\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.40999999999931,\"pid\":387422,\"ramUsage\":1.75,\"server\":\"psrv-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e2087d98-42a4-42b3-9783-7e800a479781\",\"moduleSequenceNumber\":545}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.04317616841001759\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.80999999999975,\"pid\":387555,\"ramUsage\":1.75,\"server\":\"psrv-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e2087d98-42a4-42b3-9783-7e800a479781\",\"moduleSequenceNumber\":545}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.983706005759373\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.6100000000006,\"pid\":387846,\"ramUsage\":1.75,\"server\":\"psrv-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e2087d98-42a4-42b3-9783-7e800a479781\",\"moduleSequenceNumber\":545}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.44705974532570947\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000075,\"pid\":387888,\"ramUsage\":1.75,\"server\":\"psrv-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e2087d98-42a4-42b3-9783-7e800a479781\",\"moduleSequenceNumber\":545}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.40275387661744455\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":98.81000000000087,\"pid\":388229,\"ramUsage\":1.75,\"server\":\"psrv-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e2087d98-42a4-42b3-9783-7e800a479781\",\"moduleSequenceNumber\":545}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.7989084232443968\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.009999999999934,\"pid\":389051,\"ramUsage\":1.75,\"server\":\"psrv-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e2087d98-42a4-42b3-9783-7e800a479781\",\"moduleSequenceNumber\":545}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-0\",\"moduleSequenceNumber\":342,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///0dbeb9a9-f6d5-4281-9f5d-a1d96827efa4\",\"moduleSequenceNumber\":539}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-0\",\"moduleSequenceNumber\":539,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///d1842907-7d8a-4913-9735-16627c0e389e\",\"moduleSequenceNumber\":540}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-0\",\"moduleSequenceNumber\":540,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///a542b4f5-1827-4b87-8137-27711b78ddfc\",\"moduleSequenceNumber\":541}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-0\",\"moduleSequenceNumber\":541,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e2087d98-42a4-42b3-9783-7e800a479781\",\"moduleSequenceNumber\":545}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-0\",\"moduleSequenceNumber\":545,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///10640f17-ef28-4715-b25e-825173c6acf5\",\"moduleSequenceNumber\":4013}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-0\",\"moduleSequenceNumber\":4013,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///5a90ab13-b0a4-4130-8df9-a54c7d9638f0\",\"moduleSequenceNumber\":4014}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-0\",\"moduleSequenceNumber\":4014,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-1\",\"httpPortOpen\":false,\"ip\":\"74.9.2.6\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.317,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.810000016034,\"pid\":30,\"ramUsage\":1.75,\"server\":\"psrv-1\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,243360,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.318,\"onlineExpGained\":51441307.73487389,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.810000016034,\"pid\":31,\"ramUsage\":1.75,\"server\":\"psrv-1\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4673363814288,95940,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.891303811622,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.32,\"onlineExpGained\":20415769.007278275,\"onlineMoneyMade\":4673363814288,\"onlineRunningTime\":37448.810000016034,\"pid\":32,\"ramUsage\":1.7,\"server\":\"psrv-1\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.19201649271075105\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":189.80999999999776,\"pid\":386920,\"ramUsage\":1.75,\"server\":\"psrv-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b9d5d29e-400d-411b-93fa-946ac5adf280\",\"moduleSequenceNumber\":549}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9577956546064639\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":181.00999999999826,\"pid\":387023,\"ramUsage\":1.75,\"server\":\"psrv-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b9d5d29e-400d-411b-93fa-946ac5adf280\",\"moduleSequenceNumber\":549}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.18942534172152037\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.6099999999985,\"pid\":387107,\"ramUsage\":1.75,\"server\":\"psrv-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b9d5d29e-400d-411b-93fa-946ac5adf280\",\"moduleSequenceNumber\":549}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.7439658535869886\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":165.40999999999914,\"pid\":387348,\"ramUsage\":1.75,\"server\":\"psrv-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b9d5d29e-400d-411b-93fa-946ac5adf280\",\"moduleSequenceNumber\":549}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.014370009734317124\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.40999999999994,\"pid\":387624,\"ramUsage\":1.75,\"server\":\"psrv-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b9d5d29e-400d-411b-93fa-946ac5adf280\",\"moduleSequenceNumber\":549}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",600,\"rnd-0.8209734117131482\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.810000000000045,\"pid\":389017,\"ramUsage\":1.75,\"server\":\"psrv-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b9d5d29e-400d-411b-93fa-946ac5adf280\",\"moduleSequenceNumber\":549}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.7515148690698632\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.410000000000025,\"pid\":389023,\"ramUsage\":1.75,\"server\":\"psrv-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b9d5d29e-400d-411b-93fa-946ac5adf280\",\"moduleSequenceNumber\":549}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-1\",\"moduleSequenceNumber\":349,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///5163c237-a691-4847-b31a-ad783e64785b\",\"moduleSequenceNumber\":546}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-1\",\"moduleSequenceNumber\":546,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///665860d5-5d5b-4cfa-aed6-ee90b80aa7fd\",\"moduleSequenceNumber\":547}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-1\",\"moduleSequenceNumber\":547,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///e73ed8b6-7dd3-4662-b42a-ed5d3e57df62\",\"moduleSequenceNumber\":548}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-1\",\"moduleSequenceNumber\":548,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b9d5d29e-400d-411b-93fa-946ac5adf280\",\"moduleSequenceNumber\":549}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-1\",\"moduleSequenceNumber\":549,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///67bf7d99-344f-4447-9cab-ccf648ac1d05\",\"moduleSequenceNumber\":14636}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-1\",\"moduleSequenceNumber\":14636,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///09672c07-5781-45be-a985-4912af97ad47\",\"moduleSequenceNumber\":4015}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-1\",\"moduleSequenceNumber\":4015,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-2\",\"httpPortOpen\":false,\"ip\":\"80.4.8.3\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.322,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.810000016034,\"pid\":34,\"ramUsage\":1.75,\"server\":\"psrv-2\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,241488,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.323000000004,\"onlineExpGained\":51045605.367682554,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.810000016034,\"pid\":35,\"ramUsage\":1.75,\"server\":\"psrv-2\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4742072879544,98280,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.894738728002,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.324,\"onlineExpGained\":20823837.073444355,\"onlineMoneyMade\":4742072879544,\"onlineRunningTime\":37448.810000016034,\"pid\":36,\"ramUsage\":1.7,\"server\":\"psrv-2\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.41729247780235146\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":165.40999999999914,\"pid\":387349,\"ramUsage\":1.75,\"server\":\"psrv-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///84c5e3f2-640c-430c-832e-2a409e8037a9\",\"moduleSequenceNumber\":553}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.14980006913332033\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.80999999999935,\"pid\":387432,\"ramUsage\":1.75,\"server\":\"psrv-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///84c5e3f2-640c-430c-832e-2a409e8037a9\",\"moduleSequenceNumber\":553}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.5029223964911438\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.4100000000004,\"pid\":387778,\"ramUsage\":1.75,\"server\":\"psrv-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///84c5e3f2-640c-430c-832e-2a409e8037a9\",\"moduleSequenceNumber\":553}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.05901015331682169\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.21000000000046,\"pid\":387799,\"ramUsage\":1.75,\"server\":\"psrv-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///84c5e3f2-640c-430c-832e-2a409e8037a9\",\"moduleSequenceNumber\":553}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.3859409023996325\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.81000000000077,\"pid\":387893,\"ramUsage\":1.75,\"server\":\"psrv-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///84c5e3f2-640c-430c-832e-2a409e8037a9\",\"moduleSequenceNumber\":553}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9182887094155998\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"pid\":388965,\"ramUsage\":1.75,\"server\":\"psrv-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///84c5e3f2-640c-430c-832e-2a409e8037a9\",\"moduleSequenceNumber\":553}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6720980744321186\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.210000000000065,\"pid\":388974,\"ramUsage\":1.75,\"server\":\"psrv-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///84c5e3f2-640c-430c-832e-2a409e8037a9\",\"moduleSequenceNumber\":553}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-2\",\"moduleSequenceNumber\":356,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///337510a9-da84-4118-b915-e8c89681ca86\",\"moduleSequenceNumber\":550}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-2\",\"moduleSequenceNumber\":550,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///5a9145af-2b34-4e6a-8070-9d9841aae61d\",\"moduleSequenceNumber\":551}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-2\",\"moduleSequenceNumber\":551,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///f7f52b5e-4e0c-4b41-9655-17d2e57ec561\",\"moduleSequenceNumber\":552}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-2\",\"moduleSequenceNumber\":552,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///84c5e3f2-640c-430c-832e-2a409e8037a9\",\"moduleSequenceNumber\":553}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-2\",\"moduleSequenceNumber\":553,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///2d762ec7-1221-4952-b009-85117234a647\",\"moduleSequenceNumber\":12310}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-2\",\"moduleSequenceNumber\":12310,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///80f5993d-3f1e-4174-97bf-76b5bb82ca33\",\"moduleSequenceNumber\":4016}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-2\",\"moduleSequenceNumber\":4016,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-3\",\"httpPortOpen\":false,\"ip\":\"20.3.8.8\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,30888]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.325000000004,\"onlineExpGained\":6529089.058657071,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.810000016034,\"pid\":38,\"ramUsage\":1.75,\"server\":\"psrv-3\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,241488,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.326,\"onlineExpGained\":51045605.367682554,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.810000016034,\"pid\":39,\"ramUsage\":1.75,\"server\":\"psrv-3\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4780497022236,98280,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.897314915295,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.327000000005,\"onlineExpGained\":20860934.17036854,\"onlineMoneyMade\":4780497022236,\"onlineRunningTime\":37448.810000016034,\"pid\":40,\"ramUsage\":1.7,\"server\":\"psrv-3\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",0,\"rnd-0.19608835836855354\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":278.0099999999928,\"pid\":385592,\"ramUsage\":1.75,\"server\":\"psrv-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///79ca8a80-14ec-49dc-81f8-f1d9fd0db02e\",\"moduleSequenceNumber\":557}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.20542014513587037\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.40999999999994,\"pid\":387625,\"ramUsage\":1.75,\"server\":\"psrv-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///79ca8a80-14ec-49dc-81f8-f1d9fd0db02e\",\"moduleSequenceNumber\":557}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.19317826009659833\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.4100000000004,\"pid\":387779,\"ramUsage\":1.75,\"server\":\"psrv-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///79ca8a80-14ec-49dc-81f8-f1d9fd0db02e\",\"moduleSequenceNumber\":557}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.2142784849681194\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":119.81000000000117,\"pid\":388053,\"ramUsage\":1.75,\"server\":\"psrv-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///79ca8a80-14ec-49dc-81f8-f1d9fd0db02e\",\"moduleSequenceNumber\":557}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.45587236650721485\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"pid\":388966,\"ramUsage\":1.75,\"server\":\"psrv-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///79ca8a80-14ec-49dc-81f8-f1d9fd0db02e\",\"moduleSequenceNumber\":557}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9261899208274365\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.41000000000005,\"pid\":388991,\"ramUsage\":1.75,\"server\":\"psrv-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///79ca8a80-14ec-49dc-81f8-f1d9fd0db02e\",\"moduleSequenceNumber\":557}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",600,\"rnd-0.9606939902284928\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.809999999999963,\"pid\":389085,\"ramUsage\":1.75,\"server\":\"psrv-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///79ca8a80-14ec-49dc-81f8-f1d9fd0db02e\",\"moduleSequenceNumber\":557}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-3\",\"moduleSequenceNumber\":363,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///e8ee2830-acf7-4d59-ba9d-6645676fd334\",\"moduleSequenceNumber\":554}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-3\",\"moduleSequenceNumber\":554,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///9aaab109-29fd-4351-af1b-5737fb57f719\",\"moduleSequenceNumber\":555}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-3\",\"moduleSequenceNumber\":555,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///38e0a85d-bc9b-4b42-9ed1-09eec64146d0\",\"moduleSequenceNumber\":556}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-3\",\"moduleSequenceNumber\":556,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///79ca8a80-14ec-49dc-81f8-f1d9fd0db02e\",\"moduleSequenceNumber\":557}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-3\",\"moduleSequenceNumber\":557,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f4ca7b5a-c8c2-42a4-9b1a-65b3030e4097\",\"moduleSequenceNumber\":9451}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-3\",\"moduleSequenceNumber\":9451,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///3c3ec131-54e2-4a3b-868f-c85566685406\",\"moduleSequenceNumber\":4017}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-3\",\"moduleSequenceNumber\":4017,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-4\",\"httpPortOpen\":false,\"ip\":\"34.2.6.0\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.329000000005,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.810000016034,\"pid\":42,\"ramUsage\":1.75,\"server\":\"psrv-4\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,241488,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.33,\"onlineExpGained\":51045605.367682554,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.810000016034,\"pid\":43,\"ramUsage\":1.75,\"server\":\"psrv-4\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4736836256022,98280,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.902467289863,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.333,\"onlineExpGained\":20873299.86934327,\"onlineMoneyMade\":4736836256022,\"onlineRunningTime\":37448.810000016034,\"pid\":44,\"ramUsage\":1.7,\"server\":\"psrv-4\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",600,\"rnd-0.6735222645712229\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.20999999999881,\"pid\":387224,\"ramUsage\":1.75,\"server\":\"psrv-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///d3fab2bd-5670-43c2-9a3e-db2192581007\",\"moduleSequenceNumber\":561}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.5257515268751121\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.21000000000046,\"pid\":387800,\"ramUsage\":1.75,\"server\":\"psrv-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///d3fab2bd-5670-43c2-9a3e-db2192581007\",\"moduleSequenceNumber\":561}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.8257791299051322\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.21000000000015,\"pid\":388853,\"ramUsage\":1.75,\"server\":\"psrv-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///d3fab2bd-5670-43c2-9a3e-db2192581007\",\"moduleSequenceNumber\":561}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6947347577647995\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.21000000000005,\"pid\":389001,\"ramUsage\":1.75,\"server\":\"psrv-4\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///d3fab2bd-5670-43c2-9a3e-db2192581007\",\"moduleSequenceNumber\":561}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",39287.95392979987,\"rnd-0.2977294036053024\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.21000000000005,\"pid\":389002,\"ramUsage\":1.75,\"server\":\"psrv-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///37d9369e-2494-4896-bc6b-91c898495f44\",\"moduleSequenceNumber\":9452}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",600,\"rnd-0.6718614548780621\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"pid\":389077,\"ramUsage\":1.75,\"server\":\"psrv-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///d3fab2bd-5670-43c2-9a3e-db2192581007\",\"moduleSequenceNumber\":561}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-4\",\"moduleSequenceNumber\":370,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///84e8e1c1-86eb-459a-a1ac-eb639c001a44\",\"moduleSequenceNumber\":558}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-4\",\"moduleSequenceNumber\":558,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///bd9a0e61-b0d2-44f7-a8ed-3c1c8714328b\",\"moduleSequenceNumber\":559}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-4\",\"moduleSequenceNumber\":559,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///53078f36-acca-4371-b97e-8d7da7c8f1dc\",\"moduleSequenceNumber\":560}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-4\",\"moduleSequenceNumber\":560,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///d3fab2bd-5670-43c2-9a3e-db2192581007\",\"moduleSequenceNumber\":561}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-4\",\"moduleSequenceNumber\":561,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///37d9369e-2494-4896-bc6b-91c898495f44\",\"moduleSequenceNumber\":9452}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-4\",\"moduleSequenceNumber\":9452,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///20d96abb-c1b0-4ea8-a30f-1b05e2537b06\",\"moduleSequenceNumber\":4018}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-4\",\"moduleSequenceNumber\":4018,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-5\",\"httpPortOpen\":false,\"ip\":\"38.7.7.2\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,30654]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.335,\"onlineExpGained\":6479626.2627581535,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.810000016034,\"pid\":46,\"ramUsage\":1.75,\"server\":\"psrv-5\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,241488,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.335,\"onlineExpGained\":51045605.367682554,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.810000016034,\"pid\":47,\"ramUsage\":1.75,\"server\":\"psrv-5\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4684510249146,98514,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.905043477153,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.336,\"onlineExpGained\":20972225.461141102,\"onlineMoneyMade\":4684510249146,\"onlineRunningTime\":37448.810000016034,\"pid\":48,\"ramUsage\":1.7,\"server\":\"psrv-5\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",0,\"rnd-0.7133143505226724\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":385718,\"ramUsage\":1.75,\"server\":\"psrv-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///839d6d41-051c-47e5-bb18-2a2fc74a7f3d\",\"moduleSequenceNumber\":565}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.07202841416978711\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.6099999999985,\"pid\":387108,\"ramUsage\":1.75,\"server\":\"psrv-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///839d6d41-051c-47e5-bb18-2a2fc74a7f3d\",\"moduleSequenceNumber\":565}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6336780412778631\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.81000000000084,\"pid\":388252,\"ramUsage\":1.75,\"server\":\"psrv-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///839d6d41-051c-47e5-bb18-2a2fc74a7f3d\",\"moduleSequenceNumber\":565}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9793879460613033\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.81000000000006,\"pid\":388983,\"ramUsage\":1.75,\"server\":\"psrv-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///839d6d41-051c-47e5-bb18-2a2fc74a7f3d\",\"moduleSequenceNumber\":565}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.5664810948025465\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.21000000000005,\"pid\":388997,\"ramUsage\":1.75,\"server\":\"psrv-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///839d6d41-051c-47e5-bb18-2a2fc74a7f3d\",\"moduleSequenceNumber\":565}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6402181203292445\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.41,\"pid\":389036,\"ramUsage\":1.75,\"server\":\"psrv-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///839d6d41-051c-47e5-bb18-2a2fc74a7f3d\",\"moduleSequenceNumber\":565}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.4606458037613206\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.209999999999994,\"pid\":389037,\"ramUsage\":1.75,\"server\":\"psrv-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///839d6d41-051c-47e5-bb18-2a2fc74a7f3d\",\"moduleSequenceNumber\":565}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-5\",\"moduleSequenceNumber\":377,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///ee26cb84-0575-4a6b-a4d1-7592d283aca7\",\"moduleSequenceNumber\":562}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-5\",\"moduleSequenceNumber\":562,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///24b62a6e-c796-493d-802a-03495fd446fc\",\"moduleSequenceNumber\":563}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-5\",\"moduleSequenceNumber\":563,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///778d6e27-e954-42ca-a291-935f3573863f\",\"moduleSequenceNumber\":564}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-5\",\"moduleSequenceNumber\":564,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///839d6d41-051c-47e5-bb18-2a2fc74a7f3d\",\"moduleSequenceNumber\":565}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-5\",\"moduleSequenceNumber\":565,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///e37fde7f-930b-4973-983c-22f4e56d3ccd\",\"moduleSequenceNumber\":3493}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-5\",\"moduleSequenceNumber\":3493,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///ba6754b5-607d-4459-92bb-e83a623d5d7d\",\"moduleSequenceNumber\":3494}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-5\",\"moduleSequenceNumber\":3494,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-6\",\"httpPortOpen\":false,\"ip\":\"31.8.7.6\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,30888]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.338,\"onlineExpGained\":6529089.058657071,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":50,\"ramUsage\":1.75,\"server\":\"psrv-6\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,243360,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.338,\"onlineExpGained\":51441307.73487389,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":51,\"ramUsage\":1.75,\"server\":\"psrv-6\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4858607100906,97578,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.907619664435,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.339,\"onlineExpGained\":20700180.083697055,\"onlineMoneyMade\":4858607100906,\"onlineRunningTime\":37448.61000001604,\"pid\":52,\"ramUsage\":1.7,\"server\":\"psrv-6\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.2774517512697743\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.20999999999847,\"pid\":387092,\"ramUsage\":1.75,\"server\":\"psrv-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///15f6c0d2-c112-4695-915d-2dbeab3f6e0c\",\"moduleSequenceNumber\":572}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.13369480236018916\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.8099999999985,\"pid\":387103,\"ramUsage\":1.75,\"server\":\"psrv-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///15f6c0d2-c112-4695-915d-2dbeab3f6e0c\",\"moduleSequenceNumber\":572}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.10807755293479393\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.6099999999985,\"pid\":387109,\"ramUsage\":1.75,\"server\":\"psrv-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///15f6c0d2-c112-4695-915d-2dbeab3f6e0c\",\"moduleSequenceNumber\":572}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",600,\"rnd-0.4081755080015086\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.20999999999881,\"pid\":387228,\"ramUsage\":1.75,\"server\":\"psrv-6\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///15f6c0d2-c112-4695-915d-2dbeab3f6e0c\",\"moduleSequenceNumber\":572}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.15596373896389504\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.80999999999935,\"pid\":387434,\"ramUsage\":1.75,\"server\":\"psrv-6\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///15f6c0d2-c112-4695-915d-2dbeab3f6e0c\",\"moduleSequenceNumber\":572}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-6\",\"moduleSequenceNumber\":384,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///65f0502d-eb3d-4ba1-8e06-808b54009886\",\"moduleSequenceNumber\":566}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-6\",\"moduleSequenceNumber\":566,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///b28c844b-3cba-46b6-9379-e24492c8244d\",\"moduleSequenceNumber\":567}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-6\",\"moduleSequenceNumber\":567,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///a7e70ab5-2a7a-4df8-b9de-8eb221ca2e0d\",\"moduleSequenceNumber\":568}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-6\",\"moduleSequenceNumber\":568,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///15f6c0d2-c112-4695-915d-2dbeab3f6e0c\",\"moduleSequenceNumber\":572}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-6\",\"moduleSequenceNumber\":572,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///5f6c4881-2315-47ed-9d5b-1594b5789dd9\",\"moduleSequenceNumber\":9453}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-6\",\"moduleSequenceNumber\":9453,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///10bce13f-9296-44a5-bfcd-dc59e7cf016b\",\"moduleSequenceNumber\":4019}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-6\",\"moduleSequenceNumber\":4019,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-7\",\"httpPortOpen\":false,\"ip\":\"84.5.4.5\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,30888]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.344000000005,\"onlineExpGained\":6529089.058657071,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":57,\"ramUsage\":1.75,\"server\":\"psrv-7\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,239616,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.344000000005,\"onlineExpGained\":50649903.00049122,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":58,\"ramUsage\":1.75,\"server\":\"psrv-7\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4674632250366,96408,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.91277203901,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.345,\"onlineExpGained\":20539425.99702557,\"onlineMoneyMade\":4674632250366,\"onlineRunningTime\":37448.61000001604,\"pid\":59,\"ramUsage\":1.7,\"server\":\"psrv-7\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.8774735710216659\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.8099999999978,\"pid\":386932,\"ramUsage\":1.75,\"server\":\"psrv-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///0d81652b-0a9b-4240-bb9c-55f031b3fdc3\",\"moduleSequenceNumber\":576}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.09939139883670722\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.60999999999783,\"pid\":386937,\"ramUsage\":1.75,\"server\":\"psrv-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///0d81652b-0a9b-4240-bb9c-55f031b3fdc3\",\"moduleSequenceNumber\":576}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",600,\"rnd-0.015165302194643182\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.20999999999881,\"pid\":387225,\"ramUsage\":1.75,\"server\":\"psrv-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///0d81652b-0a9b-4240-bb9c-55f031b3fdc3\",\"moduleSequenceNumber\":576}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.3170497552057481\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.60999999999993,\"pid\":387619,\"ramUsage\":1.75,\"server\":\"psrv-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///0d81652b-0a9b-4240-bb9c-55f031b3fdc3\",\"moduleSequenceNumber\":576}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.42930148875538476\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.0100000000002,\"pid\":387718,\"ramUsage\":1.75,\"server\":\"psrv-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///0d81652b-0a9b-4240-bb9c-55f031b3fdc3\",\"moduleSequenceNumber\":576}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.5458836648062111\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000063,\"pid\":387852,\"ramUsage\":1.75,\"server\":\"psrv-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///0d81652b-0a9b-4240-bb9c-55f031b3fdc3\",\"moduleSequenceNumber\":576}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9828287233858644\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.21000000000052,\"pid\":388471,\"ramUsage\":1.75,\"server\":\"psrv-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///0d81652b-0a9b-4240-bb9c-55f031b3fdc3\",\"moduleSequenceNumber\":576}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-7\",\"moduleSequenceNumber\":391,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///8898b442-7889-4849-820f-cd0c9833c51f\",\"moduleSequenceNumber\":573}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-7\",\"moduleSequenceNumber\":573,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///65a4a379-2fc5-4acb-b3fc-ab0df488574a\",\"moduleSequenceNumber\":574}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-7\",\"moduleSequenceNumber\":574,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///723ab1ca-6198-4cb2-840d-c6ce8951221d\",\"moduleSequenceNumber\":575}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-7\",\"moduleSequenceNumber\":575,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///0d81652b-0a9b-4240-bb9c-55f031b3fdc3\",\"moduleSequenceNumber\":576}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-7\",\"moduleSequenceNumber\":576,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///e73a6882-20b2-4c3b-a273-b7416ca3cd05\",\"moduleSequenceNumber\":9454}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-7\",\"moduleSequenceNumber\":9454,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///58a7a8e9-7d32-4075-82a3-3682c6f4e9d9\",\"moduleSequenceNumber\":4020}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-7\",\"moduleSequenceNumber\":4020,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-8\",\"httpPortOpen\":false,\"ip\":\"56.6.8.0\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.346000000005,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":61,\"ramUsage\":1.75,\"server\":\"psrv-8\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,239616,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.347,\"onlineExpGained\":50649903.00049122,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":62,\"ramUsage\":1.75,\"server\":\"psrv-8\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4744761078096,96642,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.9153482263,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.348000000005,\"onlineExpGained\":20601254.49189922,\"onlineMoneyMade\":4744761078096,\"onlineRunningTime\":37448.61000001604,\"pid\":63,\"ramUsage\":1.7,\"server\":\"psrv-8\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",600,\"rnd-0.12778146184324024\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.4099999999988,\"pid\":387216,\"ramUsage\":1.75,\"server\":\"psrv-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c11958b6-126f-46df-935f-b819ccfe7281\",\"moduleSequenceNumber\":580}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.7833054954335978\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":169.00999999999894,\"pid\":387272,\"ramUsage\":1.75,\"server\":\"psrv-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c11958b6-126f-46df-935f-b819ccfe7281\",\"moduleSequenceNumber\":580}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.10921730407192487\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":152.40999999999988,\"pid\":387601,\"ramUsage\":1.75,\"server\":\"psrv-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c11958b6-126f-46df-935f-b819ccfe7281\",\"moduleSequenceNumber\":580}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.8148061835370295\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.6100000000005,\"pid\":387813,\"ramUsage\":1.75,\"server\":\"psrv-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c11958b6-126f-46df-935f-b819ccfe7281\",\"moduleSequenceNumber\":580}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.04426099509632775\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.410000000000025,\"pid\":389024,\"ramUsage\":1.75,\"server\":\"psrv-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c11958b6-126f-46df-935f-b819ccfe7281\",\"moduleSequenceNumber\":580}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.5423551472683379\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"pid\":389048,\"ramUsage\":1.75,\"server\":\"psrv-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c11958b6-126f-46df-935f-b819ccfe7281\",\"moduleSequenceNumber\":580}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\",600,\"rnd-0.9279745435148505\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.809999999999924,\"pid\":389058,\"ramUsage\":1.75,\"server\":\"psrv-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c11958b6-126f-46df-935f-b819ccfe7281\",\"moduleSequenceNumber\":580}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-8\",\"moduleSequenceNumber\":398,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///848f3cc6-409d-47bf-a781-c3a28eb6fa04\",\"moduleSequenceNumber\":577}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-8\",\"moduleSequenceNumber\":577,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///3ab3e672-ed4a-4263-90ab-6c36bc7b0388\",\"moduleSequenceNumber\":578}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-8\",\"moduleSequenceNumber\":578,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///71ce5d8d-4864-4bfd-8e9d-109ac613a2cd\",\"moduleSequenceNumber\":579}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-8\",\"moduleSequenceNumber\":579,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c11958b6-126f-46df-935f-b819ccfe7281\",\"moduleSequenceNumber\":580}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-8\",\"moduleSequenceNumber\":580,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///af151ee8-d307-4549-8513-c54e935c03c5\",\"moduleSequenceNumber\":9455}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-8\",\"moduleSequenceNumber\":9455,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///b6c40d4f-0ca1-435a-b321-890501e90514\",\"moduleSequenceNumber\":4021}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-8\",\"moduleSequenceNumber\":4021,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-9\",\"httpPortOpen\":false,\"ip\":\"65.2.5.1\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.349,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":65,\"ramUsage\":1.75,\"server\":\"psrv-9\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,241488,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.35,\"onlineExpGained\":51045605.367682554,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":66,\"ramUsage\":1.75,\"server\":\"psrv-9\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4571981761698,98280,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.917924413585,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.351,\"onlineExpGained\":20910396.966267455,\"onlineMoneyMade\":4571981761698,\"onlineRunningTime\":37448.61000001604,\"pid\":67,\"ramUsage\":1.7,\"server\":\"psrv-9\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.605213483107548\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":190.6099999999977,\"pid\":386899,\"ramUsage\":1.75,\"server\":\"psrv-9\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///9b8f418f-8733-4852-b455-e262417ef765\",\"moduleSequenceNumber\":584}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.5080713602743392\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.0100000000002,\"pid\":387719,\"ramUsage\":1.75,\"server\":\"psrv-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///9b8f418f-8733-4852-b455-e262417ef765\",\"moduleSequenceNumber\":584}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.47163257110516366\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.01000000000042,\"pid\":387787,\"ramUsage\":1.75,\"server\":\"psrv-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///9b8f418f-8733-4852-b455-e262417ef765\",\"moduleSequenceNumber\":584}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.8900970127062522\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.4100000000008,\"pid\":387899,\"ramUsage\":1.75,\"server\":\"psrv-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///9b8f418f-8733-4852-b455-e262417ef765\",\"moduleSequenceNumber\":584}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.46416369029524485\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.61,\"pid\":389034,\"ramUsage\":1.75,\"server\":\"psrv-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///9b8f418f-8733-4852-b455-e262417ef765\",\"moduleSequenceNumber\":584}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-9\",\"moduleSequenceNumber\":405,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///aabda28a-abfd-4e29-8869-df76dc8f48a4\",\"moduleSequenceNumber\":581}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-9\",\"moduleSequenceNumber\":581,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///257e0812-f5d1-4681-8520-6598ff69f9a1\",\"moduleSequenceNumber\":582}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-9\",\"moduleSequenceNumber\":582,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///c3a1821b-37bb-4c3f-b169-2f10580837bd\",\"moduleSequenceNumber\":583}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-9\",\"moduleSequenceNumber\":583,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///9b8f418f-8733-4852-b455-e262417ef765\",\"moduleSequenceNumber\":584}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-9\",\"moduleSequenceNumber\":584,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///e0a94191-b328-4305-b96b-49657d42c93c\",\"moduleSequenceNumber\":9456}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-9\",\"moduleSequenceNumber\":9456,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///235d357d-e145-4ca7-a056-b99551938b44\",\"moduleSequenceNumber\":4022}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-9\",\"moduleSequenceNumber\":4022,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-10\",\"httpPortOpen\":false,\"ip\":\"54.1.1.0\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.352,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":69,\"ramUsage\":1.75,\"server\":\"psrv-10\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,241488,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.354,\"onlineExpGained\":51045605.367682554,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":70,\"ramUsage\":1.75,\"server\":\"psrv-10\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4472431996734,98046,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.921359329965,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.355,\"onlineExpGained\":20836202.772419084,\"onlineMoneyMade\":4472431996734,\"onlineRunningTime\":37448.61000001604,\"pid\":71,\"ramUsage\":1.7,\"server\":\"psrv-10\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.2657764874288242\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":186.40999999999795,\"pid\":386958,\"ramUsage\":1.75,\"server\":\"psrv-10\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///fde98415-96e8-4af9-914c-10b9e1a4aef2\",\"moduleSequenceNumber\":588}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",600,\"rnd-0.007581713695177683\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.4099999999988,\"pid\":387217,\"ramUsage\":1.75,\"server\":\"psrv-10\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///fde98415-96e8-4af9-914c-10b9e1a4aef2\",\"moduleSequenceNumber\":588}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.5660110422685687\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.81000000000049,\"pid\":387809,\"ramUsage\":1.75,\"server\":\"psrv-10\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///fde98415-96e8-4af9-914c-10b9e1a4aef2\",\"moduleSequenceNumber\":588}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.7387521548303146\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000062,\"pid\":387849,\"ramUsage\":1.75,\"server\":\"psrv-10\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///fde98415-96e8-4af9-914c-10b9e1a4aef2\",\"moduleSequenceNumber\":588}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.43766698219333944\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.610000000000255,\"pid\":388726,\"ramUsage\":1.75,\"server\":\"psrv-10\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///fde98415-96e8-4af9-914c-10b9e1a4aef2\",\"moduleSequenceNumber\":588}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.26749212095464436\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.010000000000005,\"pid\":389033,\"ramUsage\":1.75,\"server\":\"psrv-10\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///fde98415-96e8-4af9-914c-10b9e1a4aef2\",\"moduleSequenceNumber\":588}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.11851184712508589\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"pid\":389067,\"ramUsage\":1.75,\"server\":\"psrv-10\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///fde98415-96e8-4af9-914c-10b9e1a4aef2\",\"moduleSequenceNumber\":588}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-10\",\"moduleSequenceNumber\":412,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///0504b6b5-2211-4eb9-93e5-278146be44c8\",\"moduleSequenceNumber\":585}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-10\",\"moduleSequenceNumber\":585,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///b8866fb2-711c-4239-97d0-77a394210301\",\"moduleSequenceNumber\":586}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-10\",\"moduleSequenceNumber\":586,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///ac3fa170-ecbd-4d0b-80b2-0a12776d946d\",\"moduleSequenceNumber\":587}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-10\",\"moduleSequenceNumber\":587,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///fde98415-96e8-4af9-914c-10b9e1a4aef2\",\"moduleSequenceNumber\":588}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-10\",\"moduleSequenceNumber\":588,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///4c5eaa11-be78-4062-90de-cf62d23e0ec3\",\"moduleSequenceNumber\":9457}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-10\",\"moduleSequenceNumber\":9457,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///1cb0c867-23bb-45fb-9cba-25264eefdba4\",\"moduleSequenceNumber\":4023}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-10\",\"moduleSequenceNumber\":4023,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-11\",\"httpPortOpen\":false,\"ip\":\"79.3.4.2\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,30888]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.356,\"onlineExpGained\":6529089.058657071,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":73,\"ramUsage\":1.75,\"server\":\"psrv-11\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,245232,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.357,\"onlineExpGained\":51837010.10206523,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":74,\"ramUsage\":1.75,\"server\":\"psrv-11\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4823989567956,98982,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.92393551725,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.358,\"onlineExpGained\":21021688.257040028,\"onlineMoneyMade\":4823989567956,\"onlineRunningTime\":37448.61000001604,\"pid\":75,\"ramUsage\":1.7,\"server\":\"psrv-11\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.0011034492876713653\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":155.6099999999997,\"pid\":387539,\"ramUsage\":1.75,\"server\":\"psrv-11\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///5f328fcc-3482-4a49-bcbb-24a92a680a98\",\"moduleSequenceNumber\":592}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.5375556715501646\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.41,\"pid\":387645,\"ramUsage\":1.75,\"server\":\"psrv-11\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///5f328fcc-3482-4a49-bcbb-24a92a680a98\",\"moduleSequenceNumber\":592}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.9140973111136648\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.6100000000005,\"pid\":387814,\"ramUsage\":1.75,\"server\":\"psrv-11\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///5f328fcc-3482-4a49-bcbb-24a92a680a98\",\"moduleSequenceNumber\":592}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.8628630705657596\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000074,\"pid\":387885,\"ramUsage\":1.75,\"server\":\"psrv-11\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///5f328fcc-3482-4a49-bcbb-24a92a680a98\",\"moduleSequenceNumber\":592}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",600,\"rnd-0.6108512428999204\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":105.41000000000096,\"pid\":388165,\"ramUsage\":1.75,\"server\":\"psrv-11\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///5f328fcc-3482-4a49-bcbb-24a92a680a98\",\"moduleSequenceNumber\":592}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.9351995168323026\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.81000000000078,\"pid\":388300,\"ramUsage\":1.75,\"server\":\"psrv-11\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///5f328fcc-3482-4a49-bcbb-24a92a680a98\",\"moduleSequenceNumber\":592}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.20984943292011948\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.21000000000005,\"pid\":388998,\"ramUsage\":1.75,\"server\":\"psrv-11\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///5f328fcc-3482-4a49-bcbb-24a92a680a98\",\"moduleSequenceNumber\":592}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-11\",\"moduleSequenceNumber\":419,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///46609e36-a1b4-4923-a8ef-15d7433d6207\",\"moduleSequenceNumber\":589}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-11\",\"moduleSequenceNumber\":589,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///c5f776eb-e52d-46bb-a237-941f33cd246e\",\"moduleSequenceNumber\":590}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-11\",\"moduleSequenceNumber\":590,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///dcbbdbfb-eff6-4e4d-9de3-b4ef5de594bd\",\"moduleSequenceNumber\":591}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-11\",\"moduleSequenceNumber\":591,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///5f328fcc-3482-4a49-bcbb-24a92a680a98\",\"moduleSequenceNumber\":592}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-11\",\"moduleSequenceNumber\":592,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///9d62989e-bbe9-4b6f-aa2f-6bff3f560b92\",\"moduleSequenceNumber\":9458}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-11\",\"moduleSequenceNumber\":9458,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///1e45a608-28eb-45e4-897d-45634d79267e\",\"moduleSequenceNumber\":4024}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-11\",\"moduleSequenceNumber\":4024,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-12\",\"httpPortOpen\":false,\"ip\":\"52.9.4.7\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,30888]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.359000000004,\"onlineExpGained\":6529089.058657071,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":77,\"ramUsage\":1.75,\"server\":\"psrv-12\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,241488,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.36,\"onlineExpGained\":51045605.367682554,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":78,\"ramUsage\":1.75,\"server\":\"psrv-12\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4245263131590,97344,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.925652975442,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.36,\"onlineExpGained\":20663082.98677287,\"onlineMoneyMade\":4245263131590,\"onlineRunningTime\":37448.61000001604,\"pid\":79,\"ramUsage\":1.7,\"server\":\"psrv-12\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",0,\"rnd-0.49209421182083646\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":216.20999999999626,\"pid\":386536,\"ramUsage\":1.75,\"server\":\"psrv-12\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e95a8765-f870-414c-8860-290f0ef2e0c0\",\"moduleSequenceNumber\":596}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.5205412746494749\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":170.80999999999884,\"pid\":387235,\"ramUsage\":1.75,\"server\":\"psrv-12\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e95a8765-f870-414c-8860-290f0ef2e0c0\",\"moduleSequenceNumber\":596}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.5357155037697905\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.60999999999925,\"pid\":387390,\"ramUsage\":1.75,\"server\":\"psrv-12\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e95a8765-f870-414c-8860-290f0ef2e0c0\",\"moduleSequenceNumber\":596}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.12706933798683906\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.41000000000017,\"pid\":387709,\"ramUsage\":1.75,\"server\":\"psrv-12\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e95a8765-f870-414c-8860-290f0ef2e0c0\",\"moduleSequenceNumber\":596}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.4748434324189812\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.21000000000018,\"pid\":388817,\"ramUsage\":1.75,\"server\":\"psrv-12\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e95a8765-f870-414c-8860-290f0ef2e0c0\",\"moduleSequenceNumber\":596}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.45876121581554363\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.41000000000005,\"pid\":388992,\"ramUsage\":1.75,\"server\":\"psrv-12\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e95a8765-f870-414c-8860-290f0ef2e0c0\",\"moduleSequenceNumber\":596}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.3724236398859897\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.009999999999934,\"pid\":389052,\"ramUsage\":1.75,\"server\":\"psrv-12\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e95a8765-f870-414c-8860-290f0ef2e0c0\",\"moduleSequenceNumber\":596}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-12\",\"moduleSequenceNumber\":426,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///fa4e9074-d832-438b-8988-cb487b606830\",\"moduleSequenceNumber\":593}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-12\",\"moduleSequenceNumber\":593,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///345fff27-fb5f-4b68-88dd-31f827c91058\",\"moduleSequenceNumber\":594}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-12\",\"moduleSequenceNumber\":594,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///bcc21b6a-8105-4744-a032-ec7bcb5dbb6d\",\"moduleSequenceNumber\":595}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-12\",\"moduleSequenceNumber\":595,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e95a8765-f870-414c-8860-290f0ef2e0c0\",\"moduleSequenceNumber\":596}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-12\",\"moduleSequenceNumber\":596,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///a4bd7bec-88f0-431f-b03a-65441c21b17b\",\"moduleSequenceNumber\":9459}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-12\",\"moduleSequenceNumber\":9459,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///28851594-865d-4f27-aad6-4978ff1757e8\",\"moduleSequenceNumber\":4025}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-12\",\"moduleSequenceNumber\":4025,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-13\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-13\",\"httpPortOpen\":false,\"ip\":\"67.8.7.4\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,30888]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.362,\"onlineExpGained\":6529089.058657071,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":81,\"ramUsage\":1.75,\"server\":\"psrv-13\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,243360,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.362,\"onlineExpGained\":51441307.73487389,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.61000001604,\"pid\":82,\"ramUsage\":1.75,\"server\":\"psrv-13\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4577511943602,98982,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.929946620923,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.365000000005,\"onlineExpGained\":21009322.558065295,\"onlineMoneyMade\":4577511943602,\"onlineRunningTime\":37448.61000001604,\"pid\":83,\"ramUsage\":1.7,\"server\":\"psrv-13\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.4636509251880867\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.8099999999985,\"pid\":387104,\"ramUsage\":1.75,\"server\":\"psrv-13\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a18d8117-d609-474f-b030-38635306fa9d\",\"moduleSequenceNumber\":600}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.48357635087654827\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.6099999999985,\"pid\":387110,\"ramUsage\":1.75,\"server\":\"psrv-13\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a18d8117-d609-474f-b030-38635306fa9d\",\"moduleSequenceNumber\":600}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.7836874699247385\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.80999999999975,\"pid\":387556,\"ramUsage\":1.75,\"server\":\"psrv-13\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a18d8117-d609-474f-b030-38635306fa9d\",\"moduleSequenceNumber\":600}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.5619974811172512\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.41,\"pid\":387646,\"ramUsage\":1.75,\"server\":\"psrv-13\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a18d8117-d609-474f-b030-38635306fa9d\",\"moduleSequenceNumber\":600}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.08911012081259306\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.81000000000077,\"pid\":387894,\"ramUsage\":1.75,\"server\":\"psrv-13\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a18d8117-d609-474f-b030-38635306fa9d\",\"moduleSequenceNumber\":600}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.8297399638515599\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.209999999999994,\"pid\":389038,\"ramUsage\":1.75,\"server\":\"psrv-13\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a18d8117-d609-474f-b030-38635306fa9d\",\"moduleSequenceNumber\":600}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",600,\"rnd-0.5722766758413678\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.209999999999926,\"pid\":389064,\"ramUsage\":1.75,\"server\":\"psrv-13\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a18d8117-d609-474f-b030-38635306fa9d\",\"moduleSequenceNumber\":600}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-13\",\"moduleSequenceNumber\":433,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///0d5df8c4-0ea7-4607-8612-da022592e792\",\"moduleSequenceNumber\":597}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-13\",\"moduleSequenceNumber\":597,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///864a607b-0928-451c-a06e-5d1d4739abcd\",\"moduleSequenceNumber\":598}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-13\",\"moduleSequenceNumber\":598,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///af27d11e-bfe9-40e0-a39c-9a051c8f842c\",\"moduleSequenceNumber\":599}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-13\",\"moduleSequenceNumber\":599,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a18d8117-d609-474f-b030-38635306fa9d\",\"moduleSequenceNumber\":600}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-13\",\"moduleSequenceNumber\":600,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///fef122e4-675c-4447-85e0-0adbf6159d56\",\"moduleSequenceNumber\":10235}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-13\",\"moduleSequenceNumber\":10235,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///d4dfec41-fdb9-4158-b0d2-be693a4e0e4c\",\"moduleSequenceNumber\":3495}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-13\",\"moduleSequenceNumber\":3495,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-14\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-14\",\"httpPortOpen\":false,\"ip\":\"72.0.8.1\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,30654]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.366,\"onlineExpGained\":6479626.2627581535,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.41000001604,\"pid\":85,\"ramUsage\":1.75,\"server\":\"psrv-14\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,245232,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.367000000006,\"onlineExpGained\":51837010.10206523,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.41000001604,\"pid\":86,\"ramUsage\":1.75,\"server\":\"psrv-14\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4770457945110,97110,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.932522808205,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.368,\"onlineExpGained\":20675448.6857476,\"onlineMoneyMade\":4770457945110,\"onlineRunningTime\":37448.41000001604,\"pid\":87,\"ramUsage\":1.7,\"server\":\"psrv-14\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.99319715711189\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.6099999999985,\"pid\":387111,\"ramUsage\":1.75,\"server\":\"psrv-14\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///f8b008fd-9578-4bcf-bb73-fbedea80470c\",\"moduleSequenceNumber\":607}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.7334953010975511\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.40999999999994,\"pid\":387626,\"ramUsage\":1.75,\"server\":\"psrv-14\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///f8b008fd-9578-4bcf-bb73-fbedea80470c\",\"moduleSequenceNumber\":607}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.5026561540291838\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.0100000000002,\"pid\":387720,\"ramUsage\":1.75,\"server\":\"psrv-14\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///f8b008fd-9578-4bcf-bb73-fbedea80470c\",\"moduleSequenceNumber\":607}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.1299283775807576\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000074,\"pid\":387886,\"ramUsage\":1.75,\"server\":\"psrv-14\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///f8b008fd-9578-4bcf-bb73-fbedea80470c\",\"moduleSequenceNumber\":607}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\",600,\"rnd-0.4966007055342474\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":106.61000000000098,\"pid\":388155,\"ramUsage\":1.75,\"server\":\"psrv-14\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///f8b008fd-9578-4bcf-bb73-fbedea80470c\",\"moduleSequenceNumber\":607}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.31068511505584095\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.01000000000082,\"pid\":388274,\"ramUsage\":1.75,\"server\":\"psrv-14\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///f8b008fd-9578-4bcf-bb73-fbedea80470c\",\"moduleSequenceNumber\":607}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.7986984785655729\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.81000000000006,\"pid\":388984,\"ramUsage\":1.75,\"server\":\"psrv-14\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///f8b008fd-9578-4bcf-bb73-fbedea80470c\",\"moduleSequenceNumber\":607}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-14\",\"moduleSequenceNumber\":440,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///27822782-4eda-4e02-847e-1f764003d908\",\"moduleSequenceNumber\":601}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-14\",\"moduleSequenceNumber\":601,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///df72ddbc-85a0-4432-bf15-669c4b1c787f\",\"moduleSequenceNumber\":602}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-14\",\"moduleSequenceNumber\":602,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///37547264-ea34-4f11-88d9-bc466de411ad\",\"moduleSequenceNumber\":603}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-14\",\"moduleSequenceNumber\":603,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///f8b008fd-9578-4bcf-bb73-fbedea80470c\",\"moduleSequenceNumber\":607}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-14\",\"moduleSequenceNumber\":607,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///9fb780eb-5c10-4226-8cfa-63826e8fdffd\",\"moduleSequenceNumber\":9460}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-14\",\"moduleSequenceNumber\":9460,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///1d251fca-98a3-4701-b902-19ad07e5e49c\",\"moduleSequenceNumber\":4026}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-14\",\"moduleSequenceNumber\":4026,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-15\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-15\",\"httpPortOpen\":false,\"ip\":\"56.0.6.0\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.371,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.41000001604,\"pid\":92,\"ramUsage\":1.75,\"server\":\"psrv-15\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,241488,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.371,\"onlineExpGained\":51045605.367682554,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.41000001604,\"pid\":93,\"ramUsage\":1.75,\"server\":\"psrv-15\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4562219359620,97812,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.93595772459,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.372,\"onlineExpGained\":20774374.277545433,\"onlineMoneyMade\":4562219359620,\"onlineRunningTime\":37448.41000001604,\"pid\":94,\"ramUsage\":1.7,\"server\":\"psrv-15\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.36667864673075745\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.20999999999847,\"pid\":387093,\"ramUsage\":1.75,\"server\":\"psrv-15\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7125f0e5-71df-4c05-bb70-ae5379a86811\",\"moduleSequenceNumber\":611}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.09408421703146597\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.6099999999985,\"pid\":387112,\"ramUsage\":1.75,\"server\":\"psrv-15\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7125f0e5-71df-4c05-bb70-ae5379a86811\",\"moduleSequenceNumber\":611}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",600,\"rnd-0.31800847509243635\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.4099999999988,\"pid\":387218,\"ramUsage\":1.75,\"server\":\"psrv-15\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7125f0e5-71df-4c05-bb70-ae5379a86811\",\"moduleSequenceNumber\":611}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.8454300090555451\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":155.6099999999997,\"pid\":387540,\"ramUsage\":1.75,\"server\":\"psrv-15\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7125f0e5-71df-4c05-bb70-ae5379a86811\",\"moduleSequenceNumber\":611}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.8680719828698507\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.81000000000078,\"pid\":388301,\"ramUsage\":1.75,\"server\":\"psrv-15\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7125f0e5-71df-4c05-bb70-ae5379a86811\",\"moduleSequenceNumber\":611}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.3310280304593818\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.81000000000006,\"pid\":388985,\"ramUsage\":1.75,\"server\":\"psrv-15\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7125f0e5-71df-4c05-bb70-ae5379a86811\",\"moduleSequenceNumber\":611}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",600,\"rnd-0.5153050069503327\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.40999999999996,\"pid\":389079,\"ramUsage\":1.75,\"server\":\"psrv-15\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7125f0e5-71df-4c05-bb70-ae5379a86811\",\"moduleSequenceNumber\":611}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-15\",\"moduleSequenceNumber\":447,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///ad8edc86-3b97-4058-8231-4dac84926b41\",\"moduleSequenceNumber\":608}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-15\",\"moduleSequenceNumber\":608,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///51d53e4e-3a67-4e9c-9f57-3ee047c5c630\",\"moduleSequenceNumber\":609}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-15\",\"moduleSequenceNumber\":609,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///c3f540dd-8753-407b-ae5a-aac72b466ae4\",\"moduleSequenceNumber\":610}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-15\",\"moduleSequenceNumber\":610,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7125f0e5-71df-4c05-bb70-ae5379a86811\",\"moduleSequenceNumber\":611}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-15\",\"moduleSequenceNumber\":611,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///0993d333-6023-42f0-bd00-f44ec19f5728\",\"moduleSequenceNumber\":14634}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-15\",\"moduleSequenceNumber\":14634,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///377a9305-901d-44ed-8706-06cb5e5e0d12\",\"moduleSequenceNumber\":4027}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-15\",\"moduleSequenceNumber\":4027,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-16\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-16\",\"httpPortOpen\":false,\"ip\":\"58.9.2.0\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.376000000004,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.41000001604,\"pid\":96,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,241488,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.377,\"onlineExpGained\":51045605.367682554,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.41000001604,\"pid\":97,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4637470853340,98982,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.941110099164,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.378000000004,\"onlineExpGained\":20959859.762166377,\"onlineMoneyMade\":4637470853340,\"onlineRunningTime\":37448.41000001604,\"pid\":98,\"ramUsage\":1.7,\"server\":\"psrv-16\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6690009686389717\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.8099999999978,\"pid\":386933,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///579dfcd3-a560-4597-8930-33f1dc46de69\",\"moduleSequenceNumber\":615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.3139982388856204\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.60999999999925,\"pid\":387391,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///579dfcd3-a560-4597-8930-33f1dc46de69\",\"moduleSequenceNumber\":615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.2590258756749533\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000074,\"pid\":387887,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///579dfcd3-a560-4597-8930-33f1dc46de69\",\"moduleSequenceNumber\":615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.4325471883953267\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.61000000000084,\"pid\":388255,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///579dfcd3-a560-4597-8930-33f1dc46de69\",\"moduleSequenceNumber\":615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.927781113025417\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.01000000000079,\"pid\":388297,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///579dfcd3-a560-4597-8930-33f1dc46de69\",\"moduleSequenceNumber\":615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.19896503883689043\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.41000000000011,\"pid\":388904,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///579dfcd3-a560-4597-8930-33f1dc46de69\",\"moduleSequenceNumber\":615}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-16\",\"moduleSequenceNumber\":454,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///52e4b1ff-c0c7-44b7-a661-b79da02a21aa\",\"moduleSequenceNumber\":612}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-16\",\"moduleSequenceNumber\":612,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///93dc59e5-06fb-4134-b587-d28a48d58ecc\",\"moduleSequenceNumber\":613}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-16\",\"moduleSequenceNumber\":613,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///b7303e1e-ad6c-43e8-afa9-8de158497543\",\"moduleSequenceNumber\":614}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-16\",\"moduleSequenceNumber\":614,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///579dfcd3-a560-4597-8930-33f1dc46de69\",\"moduleSequenceNumber\":615}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-16\",\"moduleSequenceNumber\":615,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///6e28962f-e127-4f23-b299-20bc4bb2a70f\",\"moduleSequenceNumber\":14635}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-16\",\"moduleSequenceNumber\":14635,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///755f42e3-9b70-45dc-addf-244bb6b99abe\",\"moduleSequenceNumber\":4028}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-16\",\"moduleSequenceNumber\":4028,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-17\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-17\",\"httpPortOpen\":false,\"ip\":\"99.1.0.0\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.379,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.41000001604,\"pid\":100,\"ramUsage\":1.75,\"server\":\"psrv-17\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,237744,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.380000000005,\"onlineExpGained\":50254200.63329988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.41000001604,\"pid\":101,\"ramUsage\":1.75,\"server\":\"psrv-17\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4767224346612,97578,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.943686286446,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.381,\"onlineExpGained\":20774374.277545433,\"onlineMoneyMade\":4767224346612,\"onlineRunningTime\":37448.41000001604,\"pid\":102,\"ramUsage\":1.7,\"server\":\"psrv-17\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.1237923626328925\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.2099999999983,\"pid\":387034,\"ramUsage\":1.75,\"server\":\"psrv-17\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///13bb5ac7-1e8c-44c8-aa32-596a0a4e77d3\",\"moduleSequenceNumber\":619}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.19337489259734397\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":169.00999999999894,\"pid\":387273,\"ramUsage\":1.75,\"server\":\"psrv-17\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///13bb5ac7-1e8c-44c8-aa32-596a0a4e77d3\",\"moduleSequenceNumber\":619}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.003996769007547529\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.41000000000017,\"pid\":387710,\"ramUsage\":1.75,\"server\":\"psrv-17\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///13bb5ac7-1e8c-44c8-aa32-596a0a4e77d3\",\"moduleSequenceNumber\":619}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.5902003746773123\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.0100000000002,\"pid\":387721,\"ramUsage\":1.75,\"server\":\"psrv-17\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///13bb5ac7-1e8c-44c8-aa32-596a0a4e77d3\",\"moduleSequenceNumber\":619}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6242763860026714\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"pid\":388968,\"ramUsage\":1.75,\"server\":\"psrv-17\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///13bb5ac7-1e8c-44c8-aa32-596a0a4e77d3\",\"moduleSequenceNumber\":619}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.12006433782405823\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.20999999999998,\"pid\":389043,\"ramUsage\":1.75,\"server\":\"psrv-17\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///13bb5ac7-1e8c-44c8-aa32-596a0a4e77d3\",\"moduleSequenceNumber\":619}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-17\",\"moduleSequenceNumber\":461,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///3e2ceb61-e190-498e-ae2a-618212b9b70d\",\"moduleSequenceNumber\":616}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-17\",\"moduleSequenceNumber\":616,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///f2dbdde9-9679-4474-a794-802cc312a720\",\"moduleSequenceNumber\":617}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-17\",\"moduleSequenceNumber\":617,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///f2411bd3-e53b-424d-b34d-23baac683320\",\"moduleSequenceNumber\":618}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-17\",\"moduleSequenceNumber\":618,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///13bb5ac7-1e8c-44c8-aa32-596a0a4e77d3\",\"moduleSequenceNumber\":619}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-17\",\"moduleSequenceNumber\":619,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///0c5ac596-6c3a-4e63-b2a0-fc65b34a2cb1\",\"moduleSequenceNumber\":12047}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-17\",\"moduleSequenceNumber\":12047,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///bbec8000-ddf1-48c3-af82-22efbd0bb0c1\",\"moduleSequenceNumber\":12046}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-17\",\"moduleSequenceNumber\":12046,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-18\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-18\",\"httpPortOpen\":false,\"ip\":\"7.1.3.8\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.382000000005,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.41000001604,\"pid\":104,\"ramUsage\":1.75,\"server\":\"psrv-18\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,243360,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.383,\"onlineExpGained\":51441307.73487389,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.41000001604,\"pid\":105,\"ramUsage\":1.75,\"server\":\"psrv-18\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4104227304450,95706,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.946262473735,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.384000000005,\"onlineExpGained\":20329209.114455175,\"onlineMoneyMade\":4104227304450,\"onlineRunningTime\":37448.41000001604,\"pid\":106,\"ramUsage\":1.7,\"server\":\"psrv-18\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.8210874433123625\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":190.00999999999775,\"pid\":386915,\"ramUsage\":1.75,\"server\":\"psrv-18\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4999b123-b9e9-4ad1-a86e-bcdb1fd8cb74\",\"moduleSequenceNumber\":623}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",600,\"rnd-0.9801350037457466\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.20999999999881,\"pid\":387226,\"ramUsage\":1.75,\"server\":\"psrv-18\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4999b123-b9e9-4ad1-a86e-bcdb1fd8cb74\",\"moduleSequenceNumber\":623}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6756092853950111\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":155.6099999999997,\"pid\":387541,\"ramUsage\":1.75,\"server\":\"psrv-18\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4999b123-b9e9-4ad1-a86e-bcdb1fd8cb74\",\"moduleSequenceNumber\":623}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.32451942780416587\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.0100000000002,\"pid\":387722,\"ramUsage\":1.75,\"server\":\"psrv-18\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4999b123-b9e9-4ad1-a86e-bcdb1fd8cb74\",\"moduleSequenceNumber\":623}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.5982876608499244\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.81000000000078,\"pid\":388302,\"ramUsage\":1.75,\"server\":\"psrv-18\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4999b123-b9e9-4ad1-a86e-bcdb1fd8cb74\",\"moduleSequenceNumber\":623}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9463737507103396\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.81000000000006,\"pid\":388986,\"ramUsage\":1.75,\"server\":\"psrv-18\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4999b123-b9e9-4ad1-a86e-bcdb1fd8cb74\",\"moduleSequenceNumber\":623}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.7353403682413993\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.21000000000005,\"pid\":388999,\"ramUsage\":1.75,\"server\":\"psrv-18\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4999b123-b9e9-4ad1-a86e-bcdb1fd8cb74\",\"moduleSequenceNumber\":623}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-18\",\"moduleSequenceNumber\":468,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///75001fe6-15e2-4acc-9287-b1a09e666476\",\"moduleSequenceNumber\":620}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-18\",\"moduleSequenceNumber\":620,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///8dab48bb-2eb3-44f5-8b50-42d14bf1086b\",\"moduleSequenceNumber\":621}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-18\",\"moduleSequenceNumber\":621,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///20c9036f-278a-4d9d-8977-71196cf6a027\",\"moduleSequenceNumber\":622}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-18\",\"moduleSequenceNumber\":622,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4999b123-b9e9-4ad1-a86e-bcdb1fd8cb74\",\"moduleSequenceNumber\":623}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-18\",\"moduleSequenceNumber\":623,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///81d0a69e-7bc4-42ec-bb34-ce24d6fc33ec\",\"moduleSequenceNumber\":10494}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-18\",\"moduleSequenceNumber\":10494,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///2c0ceb36-9d8f-4164-b19c-3f085a11488e\",\"moduleSequenceNumber\":13601}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-18\",\"moduleSequenceNumber\":13601,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-19\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-19\",\"httpPortOpen\":false,\"ip\":\"86.7.4.2\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,30420]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.385,\"onlineExpGained\":6430163.466859236,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.41000001604,\"pid\":108,\"ramUsage\":1.75,\"server\":\"psrv-19\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,239616,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.388,\"onlineExpGained\":50649903.00049122,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.41000001604,\"pid\":109,\"ramUsage\":1.75,\"server\":\"psrv-19\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4733143954812,98046,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":118907.80222447685,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.389,\"onlineExpGained\":20873299.869343273,\"onlineMoneyMade\":4733143954812,\"onlineRunningTime\":37448.41000001604,\"pid\":110,\"ramUsage\":1.7,\"server\":\"psrv-19\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.7024295001252112\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.2099999999983,\"pid\":387035,\"ramUsage\":1.75,\"server\":\"psrv-19\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///89d1711a-3588-4aa9-b122-a48be317f800\",\"moduleSequenceNumber\":627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48015.07414811978,\"rnd-0.6037772282845411\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.6099999999985,\"pid\":387113,\"ramUsage\":1.75,\"server\":\"psrv-19\",\"threads\":1,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///cd37321c-53e3-444a-abbe-0dad67fc414d\",\"moduleSequenceNumber\":10495}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.16318014144353277\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.00999999999934,\"pid\":387429,\"ramUsage\":1.75,\"server\":\"psrv-19\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///89d1711a-3588-4aa9-b122-a48be317f800\",\"moduleSequenceNumber\":627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.27361266828727193\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.80999999999935,\"pid\":387433,\"ramUsage\":1.75,\"server\":\"psrv-19\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///89d1711a-3588-4aa9-b122-a48be317f800\",\"moduleSequenceNumber\":627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.7650510114289126\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":39.410000000000025,\"pid\":389025,\"ramUsage\":1.75,\"server\":\"psrv-19\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///89d1711a-3588-4aa9-b122-a48be317f800\",\"moduleSequenceNumber\":627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\",600,\"rnd-0.9306892269287681\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.809999999999924,\"pid\":389059,\"ramUsage\":1.75,\"server\":\"psrv-19\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///89d1711a-3588-4aa9-b122-a48be317f800\",\"moduleSequenceNumber\":627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",600,\"rnd-0.21008424369373446\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.40999999999996,\"pid\":389080,\"ramUsage\":1.75,\"server\":\"psrv-19\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///89d1711a-3588-4aa9-b122-a48be317f800\",\"moduleSequenceNumber\":627}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-19\",\"moduleSequenceNumber\":475,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///7816ac9a-c162-4827-b11a-5ed9e81abe15\",\"moduleSequenceNumber\":624}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-19\",\"moduleSequenceNumber\":624,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///71a56236-93ca-47a6-9aad-3e44caa6465c\",\"moduleSequenceNumber\":625}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-19\",\"moduleSequenceNumber\":625,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///39ef7000-0f6d-485e-b3e2-8003e1093193\",\"moduleSequenceNumber\":626}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-19\",\"moduleSequenceNumber\":626,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///89d1711a-3588-4aa9-b122-a48be317f800\",\"moduleSequenceNumber\":627}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-19\",\"moduleSequenceNumber\":627,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///cd37321c-53e3-444a-abbe-0dad67fc414d\",\"moduleSequenceNumber\":10495}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-19\",\"moduleSequenceNumber\":10495,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///9db64132-f3c2-43ae-8355-6a54d3e68416\",\"moduleSequenceNumber\":12045}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-19\",\"moduleSequenceNumber\":12045,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-20\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-20\",\"httpPortOpen\":false,\"ip\":\"23.0.4.4\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.39,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.21000001604,\"pid\":112,\"ramUsage\":1.75,\"server\":\"psrv-20\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,243360,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.391,\"onlineExpGained\":51441307.73487389,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.21000001604,\"pid\":113,\"ramUsage\":1.75,\"server\":\"psrv-20\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4866196874994,98514,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.953132306495,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.392,\"onlineExpGained\":20910396.96626746,\"onlineMoneyMade\":4866196874994,\"onlineRunningTime\":37448.21000001604,\"pid\":114,\"ramUsage\":1.7,\"server\":\"psrv-20\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",0,\"rnd-0.6614709890198969\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":279.0099999999927,\"pid\":385579,\"ramUsage\":1.75,\"server\":\"psrv-20\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///493ab94d-fe51-493e-a2c2-05adb9a86b11\",\"moduleSequenceNumber\":631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.8636818481030519\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.80999999999844,\"pid\":387081,\"ramUsage\":1.75,\"server\":\"psrv-20\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///493ab94d-fe51-493e-a2c2-05adb9a86b11\",\"moduleSequenceNumber\":631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9333899385758999\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.20999999999927,\"pid\":387408,\"ramUsage\":1.75,\"server\":\"psrv-20\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///493ab94d-fe51-493e-a2c2-05adb9a86b11\",\"moduleSequenceNumber\":631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9373647001772216\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.01000000000127,\"pid\":387984,\"ramUsage\":1.75,\"server\":\"psrv-20\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///493ab94d-fe51-493e-a2c2-05adb9a86b11\",\"moduleSequenceNumber\":631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.2539454446685723\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":111.61000000000105,\"pid\":388112,\"ramUsage\":1.75,\"server\":\"psrv-20\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///493ab94d-fe51-493e-a2c2-05adb9a86b11\",\"moduleSequenceNumber\":631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6012384336865397\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.01000000000082,\"pid\":388275,\"ramUsage\":1.75,\"server\":\"psrv-20\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///493ab94d-fe51-493e-a2c2-05adb9a86b11\",\"moduleSequenceNumber\":631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.023767421850963366\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.009999999999934,\"pid\":389053,\"ramUsage\":1.75,\"server\":\"psrv-20\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///493ab94d-fe51-493e-a2c2-05adb9a86b11\",\"moduleSequenceNumber\":631}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-20\",\"moduleSequenceNumber\":482,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///0c9f2ee2-2e53-4415-babc-12f8633aa157\",\"moduleSequenceNumber\":628}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-20\",\"moduleSequenceNumber\":628,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///31a654b6-6896-403c-9aab-84e1733132cf\",\"moduleSequenceNumber\":629}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-20\",\"moduleSequenceNumber\":629,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///27372f59-e649-475b-94b7-49e5f0706605\",\"moduleSequenceNumber\":630}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-20\",\"moduleSequenceNumber\":630,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///493ab94d-fe51-493e-a2c2-05adb9a86b11\",\"moduleSequenceNumber\":631}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-20\",\"moduleSequenceNumber\":631,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///986d56e2-3e55-4a4a-8009-c278e7e6e955\",\"moduleSequenceNumber\":11786}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-20\",\"moduleSequenceNumber\":11786,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///b57b78b5-549a-4c03-b55b-6e40d83bf54a\",\"moduleSequenceNumber\":3496}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-20\",\"moduleSequenceNumber\":3496,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-21\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-21\",\"httpPortOpen\":false,\"ip\":\"56.0.7.6\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.393000000004,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.21000001604,\"pid\":116,\"ramUsage\":1.75,\"server\":\"psrv-21\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,241488,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.394,\"onlineExpGained\":51045605.367682554,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.21000001604,\"pid\":117,\"ramUsage\":1.75,\"server\":\"psrv-21\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4764878339364,97812,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.955708493784,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.395000000004,\"onlineExpGained\":20786739.976520166,\"onlineMoneyMade\":4764878339364,\"onlineRunningTime\":37448.21000001604,\"pid\":118,\"ramUsage\":1.7,\"server\":\"psrv-21\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.2723649060805393\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":190.00999999999775,\"pid\":386916,\"ramUsage\":1.75,\"server\":\"psrv-21\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///bb14b3cf-f9c8-4e26-9c8d-a589d9d3d77d\",\"moduleSequenceNumber\":640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.7189582681444366\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.2099999999983,\"pid\":387036,\"ramUsage\":1.75,\"server\":\"psrv-21\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///bb14b3cf-f9c8-4e26-9c8d-a589d9d3d77d\",\"moduleSequenceNumber\":640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.043604614612583914\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.210000000001,\"pid\":388138,\"ramUsage\":1.75,\"server\":\"psrv-21\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///bb14b3cf-f9c8-4e26-9c8d-a589d9d3d77d\",\"moduleSequenceNumber\":640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\",600,\"rnd-0.7834118922967652\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":106.61000000000098,\"pid\":388156,\"ramUsage\":1.75,\"server\":\"psrv-21\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///bb14b3cf-f9c8-4e26-9c8d-a589d9d3d77d\",\"moduleSequenceNumber\":640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6267362863479018\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.81000000000006,\"pid\":388987,\"ramUsage\":1.75,\"server\":\"psrv-21\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///bb14b3cf-f9c8-4e26-9c8d-a589d9d3d77d\",\"moduleSequenceNumber\":640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.27226076919946096\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.41000000000005,\"pid\":388993,\"ramUsage\":1.75,\"server\":\"psrv-21\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///bb14b3cf-f9c8-4e26-9c8d-a589d9d3d77d\",\"moduleSequenceNumber\":640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.5236480502392011\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.21000000000005,\"pid\":389000,\"ramUsage\":1.75,\"server\":\"psrv-21\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///bb14b3cf-f9c8-4e26-9c8d-a589d9d3d77d\",\"moduleSequenceNumber\":640}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-21\",\"moduleSequenceNumber\":489,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///1a590920-f79c-480d-bdb4-329f00e6c806\",\"moduleSequenceNumber\":632}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-21\",\"moduleSequenceNumber\":632,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///1f162ef9-d7d2-4c04-a165-06c4921b42e3\",\"moduleSequenceNumber\":633}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-21\",\"moduleSequenceNumber\":633,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///a3d7ae07-73f9-4f5f-9234-e9485143d4ce\",\"moduleSequenceNumber\":634}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-21\",\"moduleSequenceNumber\":634,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///bb14b3cf-f9c8-4e26-9c8d-a589d9d3d77d\",\"moduleSequenceNumber\":640}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-21\",\"moduleSequenceNumber\":640,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///d6183a70-7010-4d1e-9b17-cdae7e6a5078\",\"moduleSequenceNumber\":9447}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-21\",\"moduleSequenceNumber\":9447,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///be9e9001-ccee-4c17-8315-306613682685\",\"moduleSequenceNumber\":12306}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-21\",\"moduleSequenceNumber\":12306,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-22\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-22\",\"httpPortOpen\":false,\"ip\":\"8.1.3.2\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.402,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.21000001604,\"pid\":125,\"ramUsage\":1.75,\"server\":\"psrv-22\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,237744,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.402,\"onlineExpGained\":50254200.63329988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.21000001604,\"pid\":126,\"ramUsage\":1.75,\"server\":\"psrv-22\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4400660401020,97812,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.962578326544,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.403,\"onlineExpGained\":20724911.481646515,\"onlineMoneyMade\":4400660401020,\"onlineRunningTime\":37448.21000001604,\"pid\":127,\"ramUsage\":1.7,\"server\":\"psrv-22\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9908193197965376\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.40999999999931,\"pid\":387423,\"ramUsage\":1.75,\"server\":\"psrv-22\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a6b92655-7131-449e-95e3-ef315d2374c0\",\"moduleSequenceNumber\":644}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.7004064760940325\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.80999999999935,\"pid\":387435,\"ramUsage\":1.75,\"server\":\"psrv-22\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a6b92655-7131-449e-95e3-ef315d2374c0\",\"moduleSequenceNumber\":644}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.5557263530903971\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.41,\"pid\":387647,\"ramUsage\":1.75,\"server\":\"psrv-22\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a6b92655-7131-449e-95e3-ef315d2374c0\",\"moduleSequenceNumber\":644}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.6718554599067506\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.81000000000077,\"pid\":387895,\"ramUsage\":1.75,\"server\":\"psrv-22\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a6b92655-7131-449e-95e3-ef315d2374c0\",\"moduleSequenceNumber\":644}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.7143223478877778\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.61000000000007,\"pid\":388967,\"ramUsage\":1.75,\"server\":\"psrv-22\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a6b92655-7131-449e-95e3-ef315d2374c0\",\"moduleSequenceNumber\":644}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.20126457046623214\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.01000000000006,\"pid\":388978,\"ramUsage\":1.75,\"server\":\"psrv-22\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a6b92655-7131-449e-95e3-ef315d2374c0\",\"moduleSequenceNumber\":644}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-22\",\"moduleSequenceNumber\":496,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///b3067df2-a36b-45ef-9c25-910695212a62\",\"moduleSequenceNumber\":641}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-22\",\"moduleSequenceNumber\":641,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///a23ebb05-f041-423e-bd6f-e8aabfe93449\",\"moduleSequenceNumber\":642}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-22\",\"moduleSequenceNumber\":642,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///af21372e-c6b4-4c95-8f3f-fb5e47e908d9\",\"moduleSequenceNumber\":643}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-22\",\"moduleSequenceNumber\":643,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a6b92655-7131-449e-95e3-ef315d2374c0\",\"moduleSequenceNumber\":644}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-22\",\"moduleSequenceNumber\":644,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///a4c84688-8c9f-4a9c-b6e9-45c896ce5379\",\"moduleSequenceNumber\":9448}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-22\",\"moduleSequenceNumber\":9448,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///ca3f2666-73b8-4a7b-8494-637ac6f14486\",\"moduleSequenceNumber\":12307}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-22\",\"moduleSequenceNumber\":12307,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-23\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-23\",\"httpPortOpen\":false,\"ip\":\"92.5.6.7\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.405,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.21000001604,\"pid\":129,\"ramUsage\":1.75,\"server\":\"psrv-23\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,243360,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.405,\"onlineExpGained\":51441307.73487389,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.21000001604,\"pid\":130,\"ramUsage\":1.75,\"server\":\"psrv-23\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4400223978384,97110,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.965154513833,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.406,\"onlineExpGained\":20625985.889848683,\"onlineMoneyMade\":4400223978384,\"onlineRunningTime\":37448.21000001604,\"pid\":131,\"ramUsage\":1.7,\"server\":\"psrv-23\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.16246812160188617\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.8099999999978,\"pid\":386934,\"ramUsage\":1.75,\"server\":\"psrv-23\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4f67949d-20c7-43cb-b8e3-e3b69591fa60\",\"moduleSequenceNumber\":648}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",48015.07414811978,\"rnd-0.6942550182542444\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":176.6099999999985,\"pid\":387114,\"ramUsage\":1.75,\"server\":\"psrv-23\",\"threads\":1,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///49dbe5b3-ffbc-42a2-aa11-b3eeda112052\",\"moduleSequenceNumber\":9449}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.4120403156803374\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.60999999999925,\"pid\":387392,\"ramUsage\":1.75,\"server\":\"psrv-23\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4f67949d-20c7-43cb-b8e3-e3b69591fa60\",\"moduleSequenceNumber\":648}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",200,\"rnd-0.21124247000890772\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":151.60999999999993,\"pid\":387620,\"ramUsage\":1.75,\"server\":\"psrv-23\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4f67949d-20c7-43cb-b8e3-e3b69591fa60\",\"moduleSequenceNumber\":648}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.13074319363084252\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":92.81000000000078,\"pid\":388303,\"ramUsage\":1.75,\"server\":\"psrv-23\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4f67949d-20c7-43cb-b8e3-e3b69591fa60\",\"moduleSequenceNumber\":648}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.1772885926001977\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.41000000000007,\"pid\":388971,\"ramUsage\":1.75,\"server\":\"psrv-23\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4f67949d-20c7-43cb-b8e3-e3b69591fa60\",\"moduleSequenceNumber\":648}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.11159457769055336\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.01000000000006,\"pid\":388979,\"ramUsage\":1.75,\"server\":\"psrv-23\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4f67949d-20c7-43cb-b8e3-e3b69591fa60\",\"moduleSequenceNumber\":648}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-23\",\"moduleSequenceNumber\":503,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///2c97feb9-9f90-4e8d-828d-11081ffc504a\",\"moduleSequenceNumber\":645}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-23\",\"moduleSequenceNumber\":645,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///3f7fabd1-2ff4-481e-8285-fdd26a10bb3d\",\"moduleSequenceNumber\":646}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-23\",\"moduleSequenceNumber\":646,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///c34d0543-445c-43a2-a834-5a243c42ec16\",\"moduleSequenceNumber\":647}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-23\",\"moduleSequenceNumber\":647,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4f67949d-20c7-43cb-b8e3-e3b69591fa60\",\"moduleSequenceNumber\":648}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-23\",\"moduleSequenceNumber\":648,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///49dbe5b3-ffbc-42a2-aa11-b3eeda112052\",\"moduleSequenceNumber\":9449}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-23\",\"moduleSequenceNumber\":9449,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///692695f2-d707-421b-93c0-9723230571f1\",\"moduleSequenceNumber\":12308}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-23\",\"moduleSequenceNumber\":12308,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-24\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-24\",\"httpPortOpen\":false,\"ip\":\"37.5.2.2\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,0,31122]},\"filename\":\"loop-weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.408,\"onlineExpGained\":6578551.854555988,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.21000001604,\"pid\":133,\"ramUsage\":1.75,\"server\":\"psrv-24\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[0,0,241488,0]},\"filename\":\"loop-grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.408,\"onlineExpGained\":51045605.367682554,\"onlineMoneyMade\":0,\"onlineRunningTime\":37448.21000001604,\"pid\":134,\"ramUsage\":1.75,\"server\":\"psrv-24\",\"threads\":1872,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{\"ecorp\":[4372082548236,94302,0,0]},\"filename\":\"loop-hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29726.96944815931,\"offlineMoneyMade\":0,\"offlineRunningTime\":34617.411,\"onlineExpGained\":20118992.231884766,\"onlineMoneyMade\":4372082548236,\"onlineRunningTime\":37448.21000001604,\"pid\":135,\"ramUsage\":1.7,\"server\":\"psrv-24\",\"threads\":234,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.06596820250788848\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":177.80999999999844,\"pid\":387082,\"ramUsage\":1.75,\"server\":\"psrv-24\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b4adf215-9cb4-4ef6-9adc-64f64e25ac68\",\"moduleSequenceNumber\":652}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",600,\"rnd-0.46237773417283634\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.20999999999881,\"pid\":387227,\"ramUsage\":1.75,\"server\":\"psrv-24\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b4adf215-9cb4-4ef6-9adc-64f64e25ac68\",\"moduleSequenceNumber\":652}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",600,\"rnd-0.3411989387414933\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":170.80999999999884,\"pid\":387236,\"ramUsage\":1.75,\"server\":\"psrv-24\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b4adf215-9cb4-4ef6-9adc-64f64e25ac68\",\"moduleSequenceNumber\":652}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.5672514029687852\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.60999999999925,\"pid\":387393,\"ramUsage\":1.75,\"server\":\"psrv-24\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b4adf215-9cb4-4ef6-9adc-64f64e25ac68\",\"moduleSequenceNumber\":652}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.9109037690753166\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.4100000000008,\"pid\":387900,\"ramUsage\":1.75,\"server\":\"psrv-24\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b4adf215-9cb4-4ef6-9adc-64f64e25ac68\",\"moduleSequenceNumber\":652}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",600,\"rnd-0.5760981528837963\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.21000000000052,\"pid\":388472,\"ramUsage\":1.75,\"server\":\"psrv-24\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b4adf215-9cb4-4ef6-9adc-64f64e25ac68\",\"moduleSequenceNumber\":652}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",600,\"rnd-0.35963485301764275\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.810000000000045,\"pid\":389018,\"ramUsage\":1.75,\"server\":\"psrv-24\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b4adf215-9cb4-4ef6-9adc-64f64e25ac68\",\"moduleSequenceNumber\":652}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-24\",\"moduleSequenceNumber\":510,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///3b0f71d8-b9e5-4e67-959b-0fd91f1b9f8d\",\"moduleSequenceNumber\":649}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-24\",\"moduleSequenceNumber\":649,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///e378eaab-c95f-4823-8a28-6b8d5c50875d\",\"moduleSequenceNumber\":650}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-24\",\"moduleSequenceNumber\":650,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///61ee3eeb-f9c2-4e07-89e5-37bc11c24277\",\"moduleSequenceNumber\":651}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-24\",\"moduleSequenceNumber\":651,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b4adf215-9cb4-4ef6-9adc-64f64e25ac68\",\"moduleSequenceNumber\":652}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-24\",\"moduleSequenceNumber\":652,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///51eb168e-838a-4c80-9cb7-63c21fb51700\",\"moduleSequenceNumber\":9450}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-24\",\"moduleSequenceNumber\":9450,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///f258bb9c-dfcd-4422-85cb-1b42aa05508c\",\"moduleSequenceNumber\":12309}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-24\",\"moduleSequenceNumber\":12309,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.4465,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"Daedalus\",\"playerReputation\":41.73213239768534}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"The Covenant\",\"playerReputation\":40.78367484319249}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"BitRunners\",\"playerReputation\":170575.48281238685}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NiteSec\",\"playerReputation\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":86.3181,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":712061.332175536}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":18.5129,\"isBanned\":false,\"isMember\":true,\"name\":\"The Syndicate\",\"playerReputation\":142.62147622429524}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":296.5669,\"isBanned\":false,\"isMember\":true,\"name\":\"Slum Snakes\",\"playerReputation\":36370215.505162664}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Netburners\",\"playerReputation\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tian Di Hui\",\"playerReputation\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":10.903,\"isBanned\":false,\"isMember\":false,\"name\":\"CyberSec\",\"playerReputation\":0}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","MessagesSave":"{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":true}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":true}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and install the backdoor on our server. <br><br>-CyberSec\",\"recvd\":true}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and install the backdoor on our server. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":true}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":false}}}","StockMarketSave":"{\"lastUpdate\":0,\"Orders\":{},\"storedCycles\":0,\"ticksUntilCycle\":0}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":10,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":0,\"PurchaseAugmentationsOrder\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":true,\"SuppressMessages\":true,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"UseIEC60027_2\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":20,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":0,\"y\":0,\"opened\":true}}","VersionSave":"10","AllGangsSave":"{\"Slum Snakes\":{\"power\":1,\"territory\":0.14285714285714285},\"Tetrads\":{\"power\":7774.571536177997,\"territory\":0},\"The Syndicate\":{\"power\":7642.15969515486,\"territory\":0},\"The Dark Army\":{\"power\":7745.5679863639525,\"territory\":0},\"Speakers for the Dead\":{\"power\":29883.87020627557,\"territory\":0.8571428571428575},\"NiteSec\":{\"power\":7646.723564424404,\"territory\":0},\"The Black Hand\":{\"power\":6766.959017413639,\"territory\":0}}","LastExportBonus":"1646165226577","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}","SaveTimestamp":"1646248062541"}}