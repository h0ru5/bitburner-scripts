{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking\":493,\"hp\":40,\"max_hp\":40,\"strength\":277,\"defense\":304,\"dexterity\":241,\"agility\":223,\"charisma\":279,\"intelligence\":0,\"hacking_chance_mult\":1.3587457927692799,\"hacking_speed_mult\":1.3995081665523583,\"hacking_money_mult\":1.3587457927692799,\"hacking_grow_mult\":1.3587457927692799,\"hacking_exp\":15183573.588766843,\"strength_exp\":28681.46601549222,\"defense_exp\":28681.46601549222,\"dexterity_exp\":32983.68591781599,\"agility_exp\":28896.691349066878,\"charisma_exp\":25232.18112088407,\"intelligence_exp\":0,\"hacking_mult\":1.4980172365281315,\"strength_mult\":2.1468727024071734,\"defense_mult\":2.361559972647891,\"dexterity_mult\":1.8126008561990392,\"agility_mult\":1.7302099081899922,\"charisma_mult\":2.2378950830647875,\"hacking_exp_mult\":1.4946203720462081,\"strength_exp_mult\":1.7935444464554495,\"defense_exp_mult\":1.7935444464554495,\"dexterity_exp_mult\":2.0625761134237672,\"agility_exp_mult\":1.7935444464554495,\"charisma_exp_mult\":1.718813427853139,\"company_rep_mult\":1.4946203720462081,\"faction_rep_mult\":1.3587457927692799,\"money\":4986779451.255176,\"city\":\"Sector-12\",\"location\":\"Alpha Enterprises\",\"jobs\":{},\"companyName\":\"\",\"currentServer\":\"home\",\"purchasedServers\":[\"psrv-0\",\"psrv-1\",\"psrv-2\",\"psrv-3\",\"psrv-4\",\"psrv-5\",\"psrv-6\",\"psrv-7\",\"psrv-8\",\"psrv-9\",\"psrv-10\",\"psrv-11\",\"psrv-12\",\"psrv-13\",\"psrv-14\",\"psrv-15\",\"psrv-16\",\"psrv-17\",\"psrv-18\",\"psrv-19\",\"psrv-20\",\"psrv-21\",\"psrv-22\",\"psrv-23\",\"psrv-24\"],\"hacknetNodes\":[],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[\"Slum Snakes\",\"Sector-12\",\"The Syndicate\"],\"factionInvitations\":[],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"BrachiBlades\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":7,\"name\":\"NeuroFlux Governor\"},{\"level\":8,\"name\":\"NeuroFlux Governor\"},{\"level\":9,\"name\":\"NeuroFlux Governor\"},{\"level\":10,\"name\":\"NeuroFlux Governor\"}],\"augmentations\":[{\"level\":1,\"name\":\"SmartSonar Implant\"},{\"level\":1,\"name\":\"Combat Rib I\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"LuminCloaking-V1 Skin Implant\"},{\"level\":1,\"name\":\"LuminCloaking-V2 Skin Implant\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":6,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Power Recirculation Core\"},{\"level\":1,\"name\":\"TITN-41 Gene-Modification Injection\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"Combat Rib II\"},{\"level\":1,\"name\":\"NutriGen Implant\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Speech Enhancement\"}],\"sourceFiles\":[{\"lvl\":3,\"n\":1},{\"lvl\":1,\"n\":2}],\"numPeopleKilled\":15,\"karma\":-88702,\"crime_money_mult\":2.8958269708395283,\"crime_success_mult\":1.684844783033907,\"isWorking\":false,\"focus\":true,\"workType\":\"\",\"workCostMult\":3,\"workExpMult\":2,\"currentWorkFactionName\":\"\",\"currentWorkFactionDescription\":\"\",\"workHackExpGainRate\":0,\"workStrExpGainRate\":0,\"workDefExpGainRate\":0,\"workDexExpGainRate\":0,\"workAgiExpGainRate\":0,\"workChaExpGainRate\":0,\"workRepGainRate\":0,\"workMoneyGainRate\":0,\"workMoneyLossRate\":0,\"workHackExpGained\":0,\"workStrExpGained\":0,\"workDefExpGained\":0,\"workDexExpGained\":0,\"workAgiExpGained\":0,\"workChaExpGained\":0,\"workRepGained\":0,\"workMoneyGained\":0,\"createProgramName\":\"\",\"createProgramReqLvl\":100,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":0,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":80000,\"work_money_mult\":1.3587457927692799,\"hacknet_node_money_mult\":1.3587457927692799,\"hacknet_node_purchase_cost_mult\":0.6778657075687199,\"hacknet_node_ram_cost_mult\":0.6778657075687199,\"hacknet_node_core_cost_mult\":0.6778657075687199,\"hacknet_node_level_cost_mult\":0.6778657075687199,\"hasWseAccount\":false,\"hasTixApiAccess\":false,\"has4SData\":false,\"has4SDataTixApi\":false,\"gang\":{\"ctor\":\"Gang\",\"data\":{\"facName\":\"Slum Snakes\",\"members\":[{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":42791.964445240716,\"hack\":990,\"str\":2553,\"def\":1887,\"dex\":2055,\"agi\":488,\"cha\":1478,\"hack_exp\":63282.26708409598,\"str_exp\":161456.36768835742,\"def_exp\":146736.91683173736,\"dex_exp\":134271.4814914424,\"agi_exp\":4548.665791721496,\"cha_exp\":135882.3144178376,\"hack_mult\":1,\"str_mult\":1.3,\"def_mult\":1,\"dex_mult\":1.3,\"agi_mult\":1.6,\"cha_mult\":1,\"hack_asc_points\":82637.94064452834,\"str_asc_points\":228262.13789330653,\"def_asc_points\":217880.93614771514,\"dex_asc_points\":157866.90197093636,\"agi_asc_points\":34900.921309792044,\"cha_asc_points\":137470.32590518112,\"upgrades\":[],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\"],\"name\":\"scumlord\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":38842.0729782383,\"hack\":924,\"str\":2385,\"def\":1769,\"dex\":1931,\"agi\":457,\"cha\":1379,\"hack_exp\":58276.18418785649,\"str_exp\":147234.11384277945,\"def_exp\":134255.5835544294,\"dex_exp\":123115.28941952117,\"agi_exp\":3903.930256273209,\"cha_exp\":124590.43535529957,\"hack_mult\":1,\"str_mult\":1.3,\"def_mult\":1,\"dex_mult\":1.3,\"agi_mult\":1.6,\"cha_mult\":1,\"hack_asc_points\":74576.23524652713,\"str_asc_points\":205701.530097719,\"def_asc_points\":197652.4810851426,\"dex_asc_points\":143828.38677811265,\"agi_asc_points\":34648.86642981229,\"cha_asc_points\":123393.8189452865,\"upgrades\":[],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\"],\"name\":\"johnny_cold_hands\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Vigilante Justice\",\"earnedRespect\":517450.7046114724,\"hack\":243,\"str\":3777,\"def\":3109,\"dex\":1521,\"agi\":3250,\"cha\":252,\"hack_exp\":96850.87508673522,\"str_exp\":1926385.1486687046,\"def_exp\":2090872.8125627413,\"dex_exp\":1380662.2075338864,\"agi_exp\":1135716.232305471,\"cha_exp\":114553.94485006653,\"hack_mult\":1,\"str_mult\":4.560254899200001,\"def_mult\":3.6338562703872013,\"dex_mult\":1.9305000000000005,\"agi_mult\":4.223569571020801,\"cha_mult\":1.4592614400000004,\"hack_asc_points\":4218.9626666654995,\"str_asc_points\":19832.1984512635,\"def_asc_points\":20737.02574117989,\"dex_asc_points\":19495.33136915771,\"agi_asc_points\":19549.692661971323,\"cha_asc_points\":0,\"upgrades\":[\"Baseball Bat\",\"Katana\",\"Glock 18C\",\"Bulletproof Vest\",\"Full Body Armor\",\"Liquid Body Armor\",\"Graphene Plating Armor\",\"P90C\",\"Steyr AUG\",\"AK-47\",\"M15A10 Assault Rifle\",\"AWM Sniper Rifle\",\"Ford Flex V20\",\"ATX1070 Superbike\",\"Mercedes-Benz S9001\",\"White Ferrari\"],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\"],\"name\":\"r00kie-2\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Train Combat\",\"earnedRespect\":0,\"hack\":32,\"str\":3744,\"def\":2847,\"dex\":3049,\"agi\":2499,\"cha\":78,\"hack_exp\":72.23810537057106,\"str_exp\":596380.0012253474,\"def_exp\":554131.7661124696,\"dex_exp\":498351.4078914083,\"agi_exp\":370788.5671092156,\"cha_exp\":159.24831150781125,\"hack_mult\":1,\"str_mult\":1.3,\"def_mult\":1,\"dex_mult\":1.3,\"agi_mult\":1.6,\"cha_mult\":1,\"hack_asc_points\":81536.62293015198,\"str_asc_points\":326106.88744709786,\"def_asc_points\":325354.52488059324,\"dex_asc_points\":227711.6274575593,\"agi_asc_points\":110227.3538417007,\"cha_asc_points\":142650.13903925003,\"upgrades\":[],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\"],\"name\":\"r00kie-3\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Train Combat\",\"earnedRespect\":0,\"hack\":6,\"str\":3498,\"def\":2659,\"dex\":2855,\"agi\":2435,\"cha\":7,\"hack_exp\":2.3652432663402427,\"str_exp\":560542.1931261786,\"def_exp\":520841.7179966453,\"dex_exp\":469471.3215224113,\"agi_exp\":361818.58210050716,\"cha_exp\":0,\"hack_mult\":1,\"str_mult\":1.3,\"def_mult\":1,\"dex_mult\":1.3,\"agi_mult\":1.6,\"cha_mult\":1,\"hack_asc_points\":69929.69636209824,\"str_asc_points\":289687.4851028623,\"def_asc_points\":289029.10013669095,\"dex_asc_points\":203203.53194900494,\"agi_asc_points\":105466.88017612296,\"cha_asc_points\":123819.42742384283,\"upgrades\":[],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\"],\"name\":\"r00kie-4\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":45502.298525414684,\"hack\":975,\"str\":3104,\"def\":2376,\"dex\":2526,\"agi\":1177,\"cha\":1506,\"hack_exp\":57969.76532135014,\"str_exp\":181557.95161436877,\"def_exp\":169999.02136861414,\"dex_exp\":152311.12458441278,\"agi_exp\":10947.250213714871,\"cha_exp\":127934.33961770791,\"hack_mult\":1,\"str_mult\":1.3,\"def_mult\":1,\"dex_mult\":1.3,\"agi_mult\":1.6,\"cha_mult\":1,\"hack_asc_points\":83204.08317739367,\"str_asc_points\":324142.2899136211,\"def_asc_points\":328408.9002068165,\"dex_asc_points\":228122.64414949872,\"agi_asc_points\":110110.12191840472,\"cha_asc_points\":145887.57965579137,\"upgrades\":[],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\"],\"name\":\"r00kie-5\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":43289.95962189858,\"hack\":942,\"str\":2924,\"def\":2237,\"dex\":2403,\"agi\":1067,\"cha\":1451,\"hack_exp\":56398.170867829096,\"str_exp\":170595.47804563373,\"def_exp\":159692.83710532417,\"dex_exp\":144364.95092178648,\"agi_exp\":9004.602003214304,\"cha_exp\":124093.77917821791,\"hack_mult\":1,\"str_mult\":1.3,\"def_mult\":1,\"dex_mult\":1.3,\"agi_mult\":1.6,\"cha_mult\":1,\"hack_asc_points\":78516.42462215167,\"str_asc_points\":293711.58839278633,\"def_asc_points\":297422.5229911405,\"dex_asc_points\":210334.05115222442,\"agi_asc_points\":102517.77722166506,\"cha_asc_points\":136846.28109022975,\"upgrades\":[],\"augmentations\":[\"Bionic Arms\",\"Bionic Legs\"],\"name\":\"r00kie-6\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":56360.87748313895,\"hack\":1136,\"str\":3571,\"def\":3699,\"dex\":3304,\"agi\":1569,\"cha\":1631,\"hack_exp\":65928.26415645426,\"str_exp\":235957.11934961367,\"def_exp\":243219.20978689365,\"dex_exp\":220695.21918422572,\"agi_exp\":13819.34873801264,\"cha_exp\":137109.30187416056,\"hack_mult\":1,\"str_mult\":1,\"def_mult\":1,\"dex_mult\":1,\"agi_mult\":1,\"cha_mult\":1,\"hack_asc_points\":107131.93816924485,\"str_asc_points\":664336.1102189837,\"def_asc_points\":705858.151654335,\"dex_asc_points\":581175.8226127776,\"agi_asc_points\":436041.31062194356,\"cha_asc_points\":166806.13489759137,\"upgrades\":[],\"augmentations\":[],\"name\":\"r00kie-7\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":48462.186464899394,\"hack\":918,\"str\":3032,\"def\":3159,\"dex\":2805,\"agi\":1274,\"cha\":1379,\"hack_exp\":55282.446946777745,\"str_exp\":203508.49899869203,\"def_exp\":210772.676637388,\"dex_exp\":190382.47046155555,\"agi_exp\":10535.543860790332,\"cha_exp\":119030.12332852845,\"hack_mult\":1,\"str_mult\":1,\"def_mult\":1,\"dex_mult\":1,\"agi_mult\":1,\"cha_mult\":1,\"hack_asc_points\":75175.7723742984,\"str_asc_points\":503010.8171726327,\"def_asc_points\":539561.36396047,\"dex_asc_points\":440216.31950959633,\"agi_asc_points\":338582.8567817806,\"cha_asc_points\":125464.15071304137,\"upgrades\":[],\"augmentations\":[],\"name\":\"r00kie-8\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":45161.71664489964,\"hack\":828,\"str\":2874,\"def\":3055,\"dex\":2435,\"agi\":1004,\"cha\":1281,\"hack_exp\":50855.07767543114,\"str_exp\":192209.44519551334,\"def_exp\":202493.5757453085,\"dex_exp\":166837.77568415142,\"agi_exp\":7204.661060732203,\"cha_exp\":112013.1556087423,\"hack_mult\":1,\"str_mult\":1,\"def_mult\":1,\"dex_mult\":1,\"agi_mult\":1,\"cha_mult\":1,\"hack_asc_points\":63388.30673180632,\"str_asc_points\":460672.5055208604,\"def_asc_points\":511287.6958220898,\"dex_asc_points\":347081.62716192624,\"agi_asc_points\":269336.8528961805,\"cha_asc_points\":110718.3320808199,\"upgrades\":[],\"augmentations\":[],\"name\":\"r00kie-9\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Traffick Illegal Arms\",\"earnedRespect\":37342.29116566406,\"hack\":897,\"str\":2122,\"def\":2146,\"dex\":1725,\"agi\":684,\"cha\":1403,\"hack_exp\":54356.166072305336,\"str_exp\":161776.92503359428,\"def_exp\":163340.93576401507,\"dex_exp\":135647.26705251884,\"agi_exp\":12913.40142207853,\"cha_exp\":121064.44332334807,\"hack_mult\":1,\"str_mult\":1,\"def_mult\":1,\"dex_mult\":1,\"agi_mult\":1,\"cha_mult\":1,\"hack_asc_points\":72314.28576238597,\"str_asc_points\":266322.04214566655,\"def_asc_points\":271496.37683672254,\"dex_asc_points\":187238.88927235888,\"agi_asc_points\":86244.33672369538,\"cha_asc_points\":129140.4177534371,\"upgrades\":[],\"augmentations\":[],\"name\":\"r00kie-10\"}},{\"ctor\":\"GangMember\",\"data\":{\"task\":\"Train Combat\",\"earnedRespect\":5.149765269116121,\"hack\":79,\"str\":2154,\"def\":2178,\"dex\":1748,\"agi\":702,\"cha\":137,\"hack_exp\":255.2761556772759,\"str_exp\":411919.6246346498,\"def_exp\":416062.9130949581,\"dex_exp\":343653.9478253357,\"agi_exp\":156856.81242157906,\"cha_exp\":350.6363883033778,\"hack_mult\":1,\"str_mult\":1,\"def_mult\":1,\"dex_mult\":1,\"agi_mult\":1,\"cha_mult\":1,\"hack_asc_points\":68539.63991149995,\"str_asc_points\":203093.2988891387,\"def_asc_points\":207199.4693632315,\"dex_asc_points\":141355.6925125082,\"agi_asc_points\":29512.39709441758,\"cha_asc_points\":129310.94483423878,\"upgrades\":[],\"augmentations\":[],\"name\":\"r00kie-11\"}}],\"wanted\":1,\"respect\":875207.2052966983,\"isHackingGang\":false,\"respectGainRate\":10.20363757359435,\"wantedGainRate\":-0.06703244139032632,\"moneyGainRate\":558229.5950731211,\"storedCycles\":2,\"storedTerritoryAndPowerCycles\":72,\"territoryClashChance\":0,\"territoryWarfareEngaged\":false,\"notifyMemberDeath\":true}},\"corporation\":null,\"bladeburner\":null,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"sleeves\":[],\"resleeves\":[],\"sleevesFromCovenant\":0,\"bitNodeN\":4,\"lastUpdate\":1646066274520,\"totalPlaytime\":3101601000,\"playtimeSinceLastAug\":73426800,\"playtimeSinceLastBitnode\":496112400,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-250752,\"codingcontract\":0,\"corporation\":0,\"crime\":246772528.64324412,\"gang\":8500699669.973595,\"hacking\":28169315844.77135,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":4986778451.255176,\"work\":0,\"servers\":-22228697297.296494,\"other\":-287700000,\"augmentations\":-9413361542.836584}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-2038272,\"codingcontract\":0,\"corporation\":0,\"crime\":1197454645.075749,\"gang\":6326959395.569966,\"hacking\":36107641762.19103,\"hacknet\":283434.4164158552,\"hacknet_expenses\":-8915.446491544732,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":5213230985.183213,\"work\":19399.33146880015,\"servers\":-23407566722.51145,\"other\":-912600000,\"augmentations\":-14096913741.445509}},\"scriptProdSinceLastAug\":27087569656,\"exploits\":[],\"achievements\":[{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1642969057172},{\"ID\":\"NS2\",\"unlockedOn\":1642970800580},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1642975780581},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1642977640602},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1642983700589},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1643198576997},{\"ID\":\"TOR\",\"unlockedOn\":1643199117000},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1643239925210},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1643240525203},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1643415344697},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1643415344730},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1643415344732},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1643415764690},{\"ID\":\"NITESEC\",\"unlockedOn\":1643415944704},{\"ID\":\"FROZE\",\"unlockedOn\":1643567355869},{\"ID\":\"DONATION\",\"unlockedOn\":1643662227085},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1643670627090},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1643702603950},{\"ID\":\"TRAVEL\",\"unlockedOn\":1643743461069},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1643747001084},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1643990786105},{\"ID\":\"WORKOUT\",\"unlockedOn\":1644168394798},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1644168634802},{\"ID\":\"SF1.1\",\"unlockedOn\":1644173855794},{\"ID\":\"SCRIPTS_30\",\"unlockedOn\":1644264669628},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1644442436672},{\"ID\":\"REPUTATION_10M\",\"unlockedOn\":1644617788996},{\"ID\":\"GANG\",\"unlockedOn\":1644693668397},{\"ID\":\"FULL_GANG\",\"unlockedOn\":1644848860215},{\"ID\":\"GANG_MEMBER_POWER\",\"unlockedOn\":1644956018829},{\"ID\":\"SF2.1\",\"unlockedOn\":1645088256663}],\"factionWorkType\":\"Faction Field Work\",\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":null}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":2,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"0.1.1.2\",\"isConnectedTo\":true,\"maxRam\":4096,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\",\"BruteSSH.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"fl1ght.exe\",\"HTTPWorm.exe\",\"DeepscanV1.exe\",\"SQLInject.exe\"],\"ramUsed\":4075.65,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":694139.4339511438,\"onlineMoneyMade\":83005809,\"onlineRunningTime\":9182.609999998345,\"pid\":2,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///dad4b23e-97bd-47f6-8c34-3bdd0d20870b\",\"moduleSequenceNumber\":394},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///c84a28ad-9ec3-4e5d-a82a-068e7025a052\",\"moduleSequenceNumber\":447},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///5a2fac53-7d6f-44ba-974c-2b2c3e900735\",\"moduleSequenceNumber\":774}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":189574.32257758814,\"onlineMoneyMade\":267196343,\"onlineRunningTime\":9182.609999998345,\"pid\":3,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///dad4b23e-97bd-47f6-8c34-3bdd0d20870b\",\"moduleSequenceNumber\":394},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///c84a28ad-9ec3-4e5d-a82a-068e7025a052\",\"moduleSequenceNumber\":447},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///5a2fac53-7d6f-44ba-974c-2b2c3e900735\",\"moduleSequenceNumber\":774}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":41934.57947874636,\"onlineMoneyMade\":0,\"onlineRunningTime\":9182.609999998345,\"pid\":4,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///dad4b23e-97bd-47f6-8c34-3bdd0d20870b\",\"moduleSequenceNumber\":394},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///c84a28ad-9ec3-4e5d-a82a-068e7025a052\",\"moduleSequenceNumber\":447},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///5a2fac53-7d6f-44ba-974c-2b2c3e900735\",\"moduleSequenceNumber\":774}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":171079.60489333828,\"onlineMoneyMade\":1072791187,\"onlineRunningTime\":9182.609999998345,\"pid\":5,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///dad4b23e-97bd-47f6-8c34-3bdd0d20870b\",\"moduleSequenceNumber\":394},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///c84a28ad-9ec3-4e5d-a82a-068e7025a052\",\"moduleSequenceNumber\":447},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///5a2fac53-7d6f-44ba-974c-2b2c3e900735\",\"moduleSequenceNumber\":774}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/neo/coordinate.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":168682.61767715312,\"onlineMoneyMade\":1888503252,\"onlineRunningTime\":9182.609999998345,\"pid\":6,\"ramUsage\":5.8,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///dad4b23e-97bd-47f6-8c34-3bdd0d20870b\",\"moduleSequenceNumber\":394},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///c84a28ad-9ec3-4e5d-a82a-068e7025a052\",\"moduleSequenceNumber\":447},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///5a2fac53-7d6f-44ba-974c-2b2c3e900735\",\"moduleSequenceNumber\":774}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.05781484605971632\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":191.60999999999765,\"pid\":43076,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///4709275d-5de0-4016-ae5f-1a296d7b4717\",\"moduleSequenceNumber\":853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.8931563107398794\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43426,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":7,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c95f9959-9d35-4a1c-ae10-7757c1505a12\",\"moduleSequenceNumber\":852}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",67109.0971174902,\"rnd-0.5133733255223563\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44093,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":184,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///4709275d-5de0-4016-ae5f-1a296d7b4717\",\"moduleSequenceNumber\":853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.45067116666927465\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44100,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":61,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///7ba5c2d3-bf09-43ac-a622-34d444b3bc76\",\"moduleSequenceNumber\":8432}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",67109.0971174902,\"rnd-0.29972745499819897\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"pid\":44155,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":223,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///4709275d-5de0-4016-ae5f-1a296d7b4717\",\"moduleSequenceNumber\":853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.2447936706117133\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"pid\":44163,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":105,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///7ba5c2d3-bf09-43ac-a622-34d444b3bc76\",\"moduleSequenceNumber\":8432}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\",0,\"rnd-0.896988269833983\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.610000000000156,\"pid\":44199,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":41,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c95f9959-9d35-4a1c-ae10-7757c1505a12\",\"moduleSequenceNumber\":852}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.830083423356839\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.610000000000156,\"pid\":44200,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":28,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c95f9959-9d35-4a1c-ae10-7757c1505a12\",\"moduleSequenceNumber\":852}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",600,\"rnd-0.757459409208201\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.610000000000156,\"pid\":44201,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":18,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c95f9959-9d35-4a1c-ae10-7757c1505a12\",\"moduleSequenceNumber\":852}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",67109.0971174902,\"rnd-0.5423451878826775\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.610000000000156,\"pid\":44202,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":223,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///4709275d-5de0-4016-ae5f-1a296d7b4717\",\"moduleSequenceNumber\":853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.8253907280659845\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.610000000000156,\"pid\":44203,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":461,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///7ba5c2d3-bf09-43ac-a622-34d444b3bc76\",\"moduleSequenceNumber\":8432}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\",0,\"rnd-0.7660108470434916\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":48.21000000000015,\"pid\":44207,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":20,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c95f9959-9d35-4a1c-ae10-7757c1505a12\",\"moduleSequenceNumber\":852}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",66986.2442682868,\"rnd-0.7712121770246159\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44344,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":186,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///4709275d-5de0-4016-ae5f-1a296d7b4717\",\"moduleSequenceNumber\":853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.08910825133962508\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44354,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":113,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///7ba5c2d3-bf09-43ac-a622-34d444b3bc76\",\"moduleSequenceNumber\":8432}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",600,\"rnd-0.1976575615969265\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44401,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c95f9959-9d35-4a1c-ae10-7757c1505a12\",\"moduleSequenceNumber\":852}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",3044.970245284416,\"rnd-0.7258476359730461\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44402,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///4709275d-5de0-4016-ae5f-1a296d7b4717\",\"moduleSequenceNumber\":853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.42236250460345315\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44403,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":19,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///7ba5c2d3-bf09-43ac-a622-34d444b3bc76\",\"moduleSequenceNumber\":8432}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",600,\"rnd-0.4059980177764686\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.409999999999993,\"pid\":44417,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c95f9959-9d35-4a1c-ae10-7757c1505a12\",\"moduleSequenceNumber\":852}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",3044.970245284416,\"rnd-0.9765842252722154\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.409999999999993,\"pid\":44418,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///4709275d-5de0-4016-ae5f-1a296d7b4717\",\"moduleSequenceNumber\":853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.4670284807828178\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.409999999999993,\"pid\":44419,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":224,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///7ba5c2d3-bf09-43ac-a622-34d444b3bc76\",\"moduleSequenceNumber\":8432}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\",0,\"rnd-0.6550506106270708\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.409999999999993,\"pid\":44420,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":13,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c95f9959-9d35-4a1c-ae10-7757c1505a12\",\"moduleSequenceNumber\":852}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",3044.970245284416,\"rnd-0.7115885195242173\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"pid\":44423,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///4709275d-5de0-4016-ae5f-1a296d7b4717\",\"moduleSequenceNumber\":853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.7086068019320908\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"pid\":44424,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":14,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///7ba5c2d3-bf09-43ac-a622-34d444b3bc76\",\"moduleSequenceNumber\":8432}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.0009231848267803322\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"pid\":44437,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":109,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///7ba5c2d3-bf09-43ac-a622-34d444b3bc76\",\"moduleSequenceNumber\":8432}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",600,\"rnd-0.2856671676633409\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":44438,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c95f9959-9d35-4a1c-ae10-7757c1505a12\",\"moduleSequenceNumber\":852}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",3044.970245284416,\"rnd-0.13379071112805496\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":44439,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///4709275d-5de0-4016-ae5f-1a296d7b4717\",\"moduleSequenceNumber\":853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.45020660808444\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":44440,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":224,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///7ba5c2d3-bf09-43ac-a622-34d444b3bc76\",\"moduleSequenceNumber\":8432}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",600,\"rnd-0.8033964065995889\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.810000000000003,\"pid\":44441,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c95f9959-9d35-4a1c-ae10-7757c1505a12\",\"moduleSequenceNumber\":852}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",3044.970245284416,\"rnd-0.2541396597574195\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.810000000000003,\"pid\":44442,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///4709275d-5de0-4016-ae5f-1a296d7b4717\",\"moduleSequenceNumber\":853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.250609272698904\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.810000000000003,\"pid\":44443,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":38,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///7ba5c2d3-bf09-43ac-a622-34d444b3bc76\",\"moduleSequenceNumber\":8432}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9956.635193862627,\"rnd-0.16774373664142272\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44453,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":19,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///7ba5c2d3-bf09-43ac-a622-34d444b3bc76\",\"moduleSequenceNumber\":8432}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n\\n  let securityThresh = ns.getServerMinSecurityLevel(target);\\n  while (ns.getServerSecurityLevel(target) > securityThresh) {\\n    ns.print(\\n      \\\"weaking \\\" +\\n        target +\\n        \\\" is \\\" +\\n        ns.getServerSecurityLevel(target) +\\n        \\\" want \\\" +\\n        securityThresh\\n    );\\n    await ns.weaken(target);\\n  }\\n}\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///b62bd240-ca7e-4514-9539-282e26cc956c\",\"moduleSequenceNumber\":1660}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":399,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const target = ns.args[0];\\n    const moneyThresh = ns.getServerMaxMoney(target) * 0.75;\\n    let moneyStash = ns.getServerMoneyAvailable(target)\\n    while (moneyStash < moneyThresh) {\\n        ns.print(\\\"growing \\\" + target + \\\", have \\\" + moneyStash + \\\" want \\\" + moneyThresh);\\n        await ns.grow(target);\\n        moneyStash = ns.getServerMoneyAvailable(target)\\n    }\\n}\",\"filename\":\"richen.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"richen.js\",\"url\":\"blob:file:///54f104be-3642-45df-b110-b78c9843fc05\",\"moduleSequenceNumber\":21529}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":400,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const net = scan(ns);\\n  const srvs = net.filter((srv) => ns.hasRootAccess(srv));\\n  ns.tprintf(`got ${srvs.length} pwnd-servers, out of ${net.length}`);\\n\\n  for (let srv of srvs) {\\n    const srvRam = ns.getServerMaxRam(srv);\\n    ns.tprint(`server ${srv} (${srvRam} GB) running:`);\\n    const processes = ns.ps(srv);\\n    for (let i = 0; i < processes.length; ++i) {\\n      ns.tprint(\\n        \\\"  \\\" +\\n          processes[i].filename +\\n          \\\" -t \\\" +\\n          processes[i].threads +\\n          \\\" \\\" +\\n          processes[i].args\\n      );\\n    }\\n  }\\n}\",\"filename\":\"show-running.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///c8d42e48-6dfa-43db-8671-3a96419e641c\",\"moduleSequenceNumber\":185},{\"filename\":\"show-running.js\",\"url\":\"blob:file:///1996ee68-4293-4186-a58e-db847c1732b4\",\"moduleSequenceNumber\":364}],\"dependents\":[],\"ramUsage\":2.1,\"server\":\"home\",\"moduleSequenceNumber\":401,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ps\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const targetScript = ns.args.shift();\\n  const targetArgs = ns.args;\\n  const runSize = ns.getScriptRam(targetScript);\\n\\n  const net = scan(ns);\\n\\n  // availiable workforce\\n  const srvs = net.filter((srv) => ns.hasRootAccess(srv));\\n  ns.tprintf(`got ${srvs.length} pwnd-servers, out of ${net.length}`);\\n\\n  // excluding cashcows and home\\n  const exclude = [\\\"home\\\"];\\n\\n  // excluding cash cows\\n  for (let srv of srvs.filter((srv) => !exclude.includes(srv))) {\\n    const srvRam = ns.getServerMaxRam(srv);\\n    ns.tprint(`server ${srv} (${srvRam} GB) running:`);\\n    const processes = ns.ps(srv);\\n    for (let i = 0; i < processes.length; ++i) {\\n      ns.tprint(\\n        \\\"  \\\" +\\n          processes[i].filename +\\n          \\\" -t \\\" +\\n          processes[i].threads +\\n          \\\" \\\" +\\n          processes[i].args\\n      );\\n    }\\n    await ns.scp(\\\"hacker-lib.js\\\", srv);\\n    await ns.scp(targetScript, srv);\\n    await ns.killall(srv);\\n    const threads = Math.floor(srvRam / runSize);\\n    if (threads > 0) {\\n      ns.tprint(\\n        `  starting ${targetScript} with -t ${threads} and args ${targetArgs}`\\n      );\\n      await ns.exec(targetScript, srv, threads, ...targetArgs);\\n    }\\n  }\\n}\",\"filename\":\"run-on-all.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///9f2e82fb-565a-485a-aba1-14d78f14e8d2\",\"moduleSequenceNumber\":186},{\"filename\":\"run-on-all.js\",\"url\":\"blob:file:///e7d2623e-39dc-4857-bf13-1999f9eb192f\",\"moduleSequenceNumber\":354}],\"dependents\":[],\"ramUsage\":4.6,\"server\":\"home\",\"moduleSequenceNumber\":402,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ps\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { fmt } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const myRiches = ns.getServerMoneyAvailable(\\\"home\\\");\\n  const maxSrvs = ns.getPurchasedServerLimit();\\n  const maxRam = ns.getPurchasedServerMaxRam();\\n  let sizes = [];\\n  for (let size = 8; size <= maxRam; size = size * 2) {\\n    sizes.push(size);\\n  }\\n  //const sizes = [8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096...];\\n  sizes.forEach((size) => {\\n    const price = ns.getPurchasedServerCost(size);\\n    const buyQty = Math.floor(myRiches / price);\\n    const maxQty = Math.min(buyQty, maxSrvs);\\n\\n    ns.tprint(`${size} GB srv for ${fmt(price)}, can buy ${maxQty}`);\\n  });\\n}\",\"filename\":\"price-list.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///4450b727-04a5-477e-972f-12fb206c215a\",\"moduleSequenceNumber\":14317},{\"filename\":\"price-list.js\",\"url\":\"blob:file:///9fa59feb-b710-453d-9680-6870d8a325df\",\"moduleSequenceNumber\":14770}],\"dependents\":[],\"ramUsage\":2.05,\"server\":\"home\",\"moduleSequenceNumber\":403,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPurchasedServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { best_target } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const targetRam = ns.args.shift();\\n  const targetScript = ns.args.shift();\\n  const targetArgs = ns.args;\\n  const runSize = ns.getScriptRam(targetScript);\\n  const threads = Math.floor(targetRam / runSize);\\n\\n  const psrvs = ns.getPurchasedServers();\\n  const maxSrvs = ns.getPurchasedServerLimit();\\n  ns.tprintf(\\n    `got ${psrvs.length} p-servers, max ${maxSrvs}:\\\\n${psrvs.join(\\\", \\\")}`\\n  );\\n  ns.tprintf(`adding servers with ${targetRam} GB RAM`);\\n  const target = best_target(ns)?.name;\\n  ns.tprint(`targeting ${target}`);\\n\\n  let i = psrvs.length;\\n  while (i < maxSrvs) {\\n    // Check if we have enough money to purchase a server\\n    if (\\n      ns.getServerMoneyAvailable(\\\"home\\\") > ns.getPurchasedServerCost(targetRam)\\n    ) {\\n      const hostname = await ns.purchaseServer(\\\"psrv-\\\" + i, targetRam);\\n      /* ns.tprintf(\\n        `got new server ${hostname}, running ${targetScript} -t ${threads} ${targetArgs.join(\\n          \\\" \\\"\\n        )}`\\n      );\\n      await ns.scp(targetScript, hostname);\\n      await ns.exec(targetScript, hostname, threads, ...targetArgs); */\\n      ++i;\\n      if (target) {\\n        ns.run(\\\"slave-host.js\\\", 1, hostname, target);\\n        await ns.sleep(20);\\n      }\\n    }\\n  }\\n}\",\"filename\":\"add-hosts.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///603aa468-fbac-429a-b18d-11c9e1650887\",\"moduleSequenceNumber\":14317},{\"filename\":\"add-hosts.js\",\"url\":\"blob:file:///2f567525-9eee-4171-928b-a7c2e1265a62\",\"moduleSequenceNumber\":14771}],\"dependents\":[],\"ramUsage\":8.15,\"server\":\"home\",\"moduleSequenceNumber\":404,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan, best_target } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const net = scan(ns);\\n\\n  // determine ports we can open\\n  let can_ports = 0;\\n  if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"FTPCrack.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"relaySMTP.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"HTTPWorm.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"SQLInject.exe\\\", \\\"home\\\")) can_ports++;\\n\\n  // check ma 1337 skillz\\n  const skillz = ns.getHackingLevel();\\n\\n  const pwnd = net.filter((srv) => ns.hasRootAccess(srv));\\n  const unpwnd = net.filter((srv) => !pwnd.includes(srv));\\n  const tgts = unpwnd.filter((srv) => {\\n    const needPorts = ns.getServerNumPortsRequired(srv);\\n    const needSkillz = ns.getServerRequiredHackingLevel(srv);\\n    return needPorts <= can_ports && needSkillz <= skillz;\\n  });\\n\\n  ns.tprintf(\\n    `got ${pwnd.length} p0wnd servers, out of ${net.length}, found ${tgts.length} targets`\\n  );\\n\\n  tgts.forEach((srv) => {\\n    const needPorts = ns.getServerNumPortsRequired(srv);\\n    const needSkillz = ns.getServerRequiredHackingLevel(srv);\\n    if (needPorts <= can_ports && needSkillz <= skillz) {\\n      ns.tprintf(`tgt ${srv}`);\\n      if (needPorts >= 1) ns.brutessh(srv);\\n      if (needPorts >= 2) ns.ftpcrack(srv);\\n      if (needPorts >= 3) ns.relaysmtp(srv);\\n      if (needPorts >= 4) ns.httpworm(srv);\\n      if (needPorts >= 5) ns.sqlinject(srv);\\n      ns.nuke(srv);\\n      ns.tprintf(`p0wnd ${srv}`);\\n      if (ns.fileExists(\\\"slave-host.js\\\", \\\"home\\\")) {\\n        ns.run(\\\"slave-host.js\\\", 1, srv, best_target(ns)?.name || \\\"\\\");\\n      }\\n    }\\n  });\\n}\",\"filename\":\"scan-pwn.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///2796fbe9-158e-4217-851e-08f0d35b30ba\",\"moduleSequenceNumber\":394},{\"filename\":\"scan-pwn.js\",\"url\":\"blob:file:///dfab19ad-2113-4960-8430-801d1d5ec99a\",\"moduleSequenceNumber\":22897}],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"home\",\"moduleSequenceNumber\":405,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/**\\n *\\n * @param {import('./NS').NS} ns\\n **/\\nexport async function main(ns) {\\n  const srv = ns.args.shift();\\n  const targetScript = ns.args.shift();\\n  const targetArgs = ns.args;\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    await ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  switch (args.length) {\\n    case 1:\\n      return [...data.servers];\\n    case 2:\\n      return [...data.scripts];\\n    default:\\n      return [];\\n  }\\n}\",\"filename\":\"run-max.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///ef1253c0-cec4-47ef-9a0f-1a23b58c66b9\",\"moduleSequenceNumber\":82},{\"filename\":\"run-max.js\",\"url\":\"blob:file:///6036b34e-dee1-4650-a3ec-dd4ecf29fb53\",\"moduleSequenceNumber\":798}],\"dependents\":[],\"ramUsage\":3.05,\"server\":\"home\",\"moduleSequenceNumber\":406,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * @param {import('./NS').NS} ns\\n **/\\nexport async function main(ns) {\\n  const targetScript = ns.args.shift();\\n  const targetArgs = ns.args;\\n  const runSize = ns.getScriptRam(targetScript);\\n  // TODO how to get local hostname or local ram?\\n  const srvRam = ns.getServerMaxRam(\\\"home\\\") - ns.getServerUsedRam(\\\"home\\\");\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  ns.tprint(\\n    `  in 10s starting run ${targetScript} -t ${threads} ${targetArgs}`\\n  );\\n  ns.spawn(targetScript, threads, ...targetArgs);\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...data.scripts];\\n}\",\"filename\":\"run-max-local.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"run-max-local.js\",\"url\":\"blob:file:///a4e85d5d-8221-438c-a1a4-683d3a8561a0\",\"moduleSequenceNumber\":54146}],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"home\",\"moduleSequenceNumber\":407,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"spawn\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"home\",\"moduleSequenceNumber\":408,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  let target = ns.args[0];\\n  ns.tprint(\\\"farming and hacking target \\\" + target);\\n  const moneyThresh = ns.getServerMaxMoney(target) * 0.9;\\n  const securityThresh = ns.getServerMinSecurityLevel(target) + 2;\\n  while (true) {\\n    if (ns.getServerSecurityLevel(target) > securityThresh) {\\n      await ns.weaken(target);\\n    } else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n      await ns.grow(target);\\n    } else {\\n      await ns.hack(target);\\n    }\\n  }\\n}\",\"filename\":\"farm-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"farm-hack.js\",\"url\":\"blob:file:///e96d1bf9-3aae-4914-9a43-219272803565\",\"moduleSequenceNumber\":365}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":409,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  const moneyThresh = ns.getServerMaxMoney(target);\\n  let moneyStash = ns.getServerMoneyAvailable(target);\\n  while (moneyStash < moneyThresh) {\\n    ns.print(\\n      \\\"growing \\\" + target + \\\", have \\\" + moneyStash + \\\" want \\\" + moneyThresh\\n    );\\n    await ns.grow(target);\\n    moneyStash = ns.getServerMoneyAvailable(target);\\n  }\\n}\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///195618f6-0f37-4125-aca0-f4c88c695ca1\",\"moduleSequenceNumber\":64620}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":410,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///85ca64a8-347b-45de-b2b0-abb8b0e6515a\",\"moduleSequenceNumber\":1705}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"moduleSequenceNumber\":411,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan, srv_info, fmt } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => srv_info(ns, srv));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max / a.sec_min - b.money_max / a.sec_min);\\n\\n  output.forEach((info) => {\\n    ns.tprint(`Target ${info.name}:`);\\n    ns.tprint(\\n      `  money: ${fmt(info.money_curr)}/${fmt(info.money_max)} ${\\n        info.money_pct\\n      }%`\\n    );\\n    ns.tprint(`  sec  : ${info.sec_curr}/${info.sec_min} ${info.sec_pct}%`);\\n  });\\n}\",\"filename\":\"srv-stats.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///aea42e9b-fef4-4019-a8d5-9450a3f1174a\",\"moduleSequenceNumber\":1175},{\"filename\":\"srv-stats.js\",\"url\":\"blob:file:///ee771a46-195a-4ac1-af25-83f9ba7b9027\",\"moduleSequenceNumber\":1775}],\"dependents\":[],\"ramUsage\":2.25,\"server\":\"home\",\"moduleSequenceNumber\":412,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  let target = ns.args[0];\\n  ns.tprint(\\\"farming target \\\" + target);\\n  const moneyThresh = ns.getServerMaxMoney(target);\\n  const securityThresh = ns.getServerMinSecurityLevel(target) + 2;\\n  while (true) {\\n    if (ns.getServerSecurityLevel(target) > securityThresh) {\\n      await ns.weaken(target);\\n    } else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n      await ns.grow(target);\\n    } else {\\n      ns.print(\\\"server \\\" + target + \\\"is full and weak\\\");\\n      await ns.sleep(1000);\\n    }\\n  }\\n}\",\"filename\":\"farm.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"farm.js\",\"url\":\"blob:file:///a0e1c54d-f82a-44c2-bd56-927abcc031a6\",\"moduleSequenceNumber\":261}],\"dependents\":[],\"ramUsage\":2.3,\"server\":\"home\",\"moduleSequenceNumber\":413,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { srv_info } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  let target = ns.args[0];\\n  ns.tprint(\\\"watching target \\\" + target);\\n  while (true) {\\n    const info = srv_info(ns, target);\\n    ns.tprint(\\\"watching target \\\" + target);\\n    ns.tprint(\\n      `  money: ${info.money_curr}/${info.money_max} ${info.money_pct}%`\\n    );\\n    ns.tprint(`  sec  : ${info.sec_curr}/${info.sec_max} ${info.sec_pct}%`);\\n    await ns.sleep(1000);\\n  }\\n}\",\"filename\":\"watch-srv.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///ce53f93c-d9a4-411c-8af5-94ec6811a587\",\"moduleSequenceNumber\":14723},{\"filename\":\"watch-srv.js\",\"url\":\"blob:file:///636c22a8-302a-45d5-8371-83edcb37c7cf\",\"moduleSequenceNumber\":15135}],\"dependents\":[],\"ramUsage\":2,\"server\":\"home\",\"moduleSequenceNumber\":414,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { sorted_targets, srv_money, percentage, fmt } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  //random backoff\\n  await ns.sleep(Math.floor(Math.random() * 10000));\\n\\n  while (true) {\\n    //random backoff\\n    await ns.sleep(Math.floor(Math.random() * 5000));\\n\\n    const output = sorted_targets(ns)\\n      .map((srv) => ({\\n        ...srv,\\n        ...srv_money(ns, srv.name),\\n      }))\\n      .filter((info) => info.money_curr < info.money_max)\\n      .filter((info) => info.name !== \\\"n00dles\\\");\\n\\n    ns.print(\\n      `top targets: ${output\\n        .map(\\n          (info) => `${info.name} ${fmt(info.money_max)}$ ${info.money_pct}%`\\n        )\\n        .join(\\\", \\\")}`\\n    );\\n\\n    if (output.length > 0) {\\n      const info = output[0];\\n      ns.print(`Target ${info.name}:`);\\n      ns.print(\\n        `  before money: ${fmt(info.money_curr)}/${fmt(info.money_max)} ${\\n          info.money_pct\\n        }%`\\n      );\\n      const amount = await ns.grow(info.name);\\n      const after = srv_money(ns, info.name);\\n      ns.print(\\n        `  after money: ${fmt(after.money_curr)}/${fmt(after.money_max)} ${\\n          after.money_pct\\n        }% (raised ${percentage(info.money_curr, after.money_curr)}%)`\\n      );\\n      ns.tprint(\\n        `grown ${info.name} to ${fmt(after.money_curr)}$ / ${fmt(\\n          info.money_max\\n        )}$  ${after.money_pct}% (+ ${percentage(amount, info.money_curr)}%)`\\n      );\\n    } else {\\n      ns.print(\\\"no more tagets available\\\");\\n    }\\n    await ns.sleep(100);\\n  }\\n}\",\"filename\":\"grow-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///85769806-3ef4-47b8-a048-dbc6543cd442\",\"moduleSequenceNumber\":138843},{\"filename\":\"grow-top.js\",\"url\":\"blob:file:///8b84dcf1-2846-4e0a-b60b-fa86bec71f0c\",\"moduleSequenceNumber\":139004}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":415,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import {\\n  sorted_targets,\\n  srv_sec,\\n  percentage,\\n  fmt,\\n  srv_money,\\n} from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  //random backoff\\n  await ns.sleep(Math.floor(Math.random() * 10000));\\n\\n  let haveTarget = false;\\n  while (true) {\\n    //random backoff\\n    await ns.sleep(Math.floor(Math.random() * 5000));\\n\\n    const infos = sorted_targets(ns).map((srv) => ({\\n      ...srv,\\n      ...srv_sec(ns, srv.name),\\n      ...srv_money(ns, srv.name),\\n    }));\\n    //      .filter((info) => info.name !== \\\"n00dles\\\");\\n\\n    //ns.tprint(`info: ${infos.map((info) => info.name).join(\\\", \\\")}`);\\n\\n    const output_s = infos\\n      .filter((info) => info.money_curr != 0)\\n      .filter((info) => info.money_curr >= 0.25 * info.money_max)\\n      .filter((info) => info.sec_curr <= info.sec_min + 2); // only with reasonably weak security\\n\\n    ns.print(\\n      `low-sec targets: ${output_s\\n        .map(\\n          (info) =>\\n            `${info.name} ${info.sec_curr}/${info.sec_min}, ${fmt(\\n              info.money_curr\\n            )}$/${fmt(info.money_max)}$`\\n        )\\n        .join(\\\", \\\")}`\\n    );\\n\\n    const output = output_s.filter(\\n      (info) => info.money_curr >= info.money_max * 0.5\\n    ); // only with decent money\\n\\n    ns.print(\\n      `top targets: ${output\\n        .map((info) => `${info.name} ${info.sec_curr}/${info.sec_min}`)\\n        .join(\\\", \\\")}`\\n    );\\n\\n    if (output.length > 0) {\\n      haveTarget = true;\\n      const info = output[0];\\n      ns.print(`Target ${info.name}:`);\\n      const preMoney = info.money_curr;\\n      ns.print(\\n        `  before hack sec: ${info.sec_curr}/${info.sec_min} ${\\n          info.sec_pct\\n        }%, money: ${fmt(preMoney)}`\\n      );\\n      const loot = await ns.hack(info.name);\\n      const postMoney = ns.getServerMoneyAvailable(info.name);\\n      ns.print(\\n        `  after hack sec:  ${info.sec_curr}/${info.sec_min} ${\\n          info.sec_pct\\n        }%, money: ${fmt(postMoney)}, got ${percentage(loot, preMoney)}%`\\n      );\\n      ns.print(\\n        `Hacked ${info.name}: got ${fmt(loot)} (${percentage(\\n          loot,\\n          preMoney\\n        )}%), now at sec ${info.sec_curr.toFixed(2)}/${info.sec_min} (${\\n          info.sec_pct\\n        }%)`\\n      );\\n    } else {\\n      if (haveTarget) {\\n        ns.print(\\\"no more tagets available\\\");\\n        haveTarget = false;\\n      }\\n    }\\n    await ns.sleep(1);\\n  }\\n}\",\"filename\":\"hack-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///d790b634-e044-4eba-808c-32f4308c3e55\",\"moduleSequenceNumber\":199994},{\"filename\":\"hack-top.js\",\"url\":\"blob:file:///cc53e543-12a5-45d9-9bd8-9aea794b3581\",\"moduleSequenceNumber\":204766}],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"home\",\"moduleSequenceNumber\":416,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { sorted_targets, srv_sec } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  //random backoff\\n  await ns.sleep(Math.floor(Math.random() * 10000));\\n\\n  while (true) {\\n    //random backoff\\n    await ns.sleep(Math.floor(Math.random() * 5000));\\n\\n    const output = sorted_targets(ns)\\n      .map((srv) => ({\\n        ...srv,\\n        ...srv_sec(ns, srv.name),\\n      }))\\n      .filter((info) => info.sec_curr > info.sec_min + 1);\\n    //.filter((info) => info.name !== \\\"n00dles\\\");\\n\\n    ns.print(\\n      `top targets: ${output\\n        .map((info) => `${info.name} ${info.sec_curr}/${info.sec_min}`)\\n        .join(\\\", \\\")}`\\n    );\\n\\n    if (output.length > 0) {\\n      const info = output[0];\\n      ns.print(\\n        `Target ${info.name}, before: ${info.sec_curr}/${info.sec_min} ${info.sec_pct}%`\\n      );\\n      await ns.weaken(info.name);\\n      const post = srv_sec(ns, info.name);\\n      ns.print(\\n        `  after sec: ${post.sec_curr}/${post.sec_min} ${post.sec_pct}%`\\n      );\\n      ns.tprint(\\n        `weakened ${info.name}: ${+post.sec_curr.toFixed(2)}/${\\n          post.sec_min\\n        }, now at ${post.sec_pct}%`\\n      );\\n    }\\n    await ns.sleep(100);\\n  }\\n}\",\"filename\":\"weaken-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///f3bec316-e196-46ce-8df0-0e861499f3e2\",\"moduleSequenceNumber\":379648},{\"filename\":\"weaken-top.js\",\"url\":\"blob:file:///45688db2-833f-438f-88e1-0287c68f7004\",\"moduleSequenceNumber\":380202}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":417,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import {\\n  sorted_targets,\\n  best_target,\\n  srv_info,\\n  fmt,\\n  tfmt,\\n} from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const output = sorted_targets(ns).map((srv) => ({\\n    ...srv,\\n    ...srv_info(ns, srv.name),\\n  }));\\n\\n  output.reverse().forEach((info) => {\\n    ns.tprint(`Target ${info.name}:`);\\n    ns.tprint(\\n      `  money: ${fmt(info.money_curr)}/${fmt(info.money_max)} ${\\n        info.money_pct\\n      }%`\\n    );\\n    ns.tprint(`  sec  : ${info.sec_curr}/${info.sec_min} ${info.sec_pct}%`);\\n    ns.tprint(`  score: ${fmt(info.score)}`);\\n    ns.tprint(`  growth: ${fmt(info.growth)}`);\\n    ns.tprint(\\n      `  times: grow ${tfmt(ns.getGrowTime(info.name))} weak ${tfmt(\\n        ns.getWeakenTime(info.name)\\n      )} hack ${tfmt(ns.getHackTime(info.name))} `\\n    );\\n  });\\n\\n  ns.tprint(`best target is ${best_target(ns).name}`);\\n}\",\"filename\":\"targets.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///d0f78f89-9506-4856-9c10-5fa957db6074\",\"moduleSequenceNumber\":13031},{\"filename\":\"targets.js\",\"url\":\"blob:file:///407a5816-4465-4e08-85c5-901c045fd82e\",\"moduleSequenceNumber\":18023}],\"dependents\":[],\"ramUsage\":2.5,\"server\":\"home\",\"moduleSequenceNumber\":418,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  const net = scan(ns);\\n  const srvs = net.filter((srv) => ns.hasRootAccess(srv));\\n  ns.tprintf(`got ${srvs.length} pwnd-servers, out of ${net.length}`);\\n  ns.tprintf(\\\"attacking \\\" + target || \\\" top growing servers\\\");\\n\\n  const exclude = [\\\"home\\\"];\\n\\n  // excluding home\\n  if (ns.fileExists(\\\"slave-host.js\\\", \\\"home\\\")) {\\n    const targets = srvs.filter((srv) => !exclude.includes(srv));\\n    // ns.tprint(\\\"targets: \\\" + targets.join(\\\",\\\"));\\n    for (let srv of targets) {\\n      ns.run(\\\"slave-host.js\\\", 1, srv, target);\\n      await ns.sleep(20);\\n    }\\n  }\\n}\",\"filename\":\"slave-net.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///1faa344f-bf9c-40db-ba17-ccc709783558\",\"moduleSequenceNumber\":249},{\"filename\":\"slave-net.js\",\"url\":\"blob:file:///5888af20-0983-4536-8fd3-7420f97a4740\",\"moduleSequenceNumber\":1700}],\"dependents\":[],\"ramUsage\":2.95,\"server\":\"home\",\"moduleSequenceNumber\":419,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n\\n  const scriptWeaken = \\\"loop-weaken.js\\\";\\n  const scriptGrow = \\\"loop-grow.js\\\";\\n  const scriptHack = \\\"loop-hack.js\\\";\\n\\n  /* ns.tprint(\\n    `target ${target}, scripts: ${scriptWeaken},${scriptGrow},${scriptHack}`\\n  );*/\\n\\n  const srv = \\\"home\\\";\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n\\n  const size = sizeWeaken; //all have same size\\n\\n  const partGrow = 0.8;\\n  const partWeaken = 0.1;\\n\\n  const srvRam = ns.getServerMaxRam(srv) - ns.getServerUsedRam(srv);\\n  const srvThreads = srvRam / size;\\n\\n  const countWeaken = srvThreads * partWeaken;\\n  const countGrow = srvThreads * partGrow;\\n  let countHack = srvThreads - countGrow - countWeaken;\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${Math.floor(\\n      countWeaken\\n    )} weaken / ${Math.floor(countGrow)} grow / ${Math.floor(\\n      countHack\\n    )} hack threads`\\n  );\\n\\n  if (countWeaken > 0) ns.run(scriptWeaken, countWeaken, target);\\n  if (countGrow > 0) ns.run(scriptGrow, countGrow, target);\\n  if (countHack > 0) ns.run(scriptHack, countHack, target);\\n}\",\"filename\":\"slave-home.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///319a7cbf-3b89-4920-a12e-879034a467b7\",\"moduleSequenceNumber\":249},{\"filename\":\"slave-home.js\",\"url\":\"blob:file:///dfd2c11c-c7a0-4176-91fa-6d1e720eb653\",\"moduleSequenceNumber\":1701}],\"dependents\":[],\"ramUsage\":2.8,\"server\":\"home\",\"moduleSequenceNumber\":420,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\nconst scriptWeaken = \\\"weaken-top.js\\\";\\nconst scriptGrow = \\\"grow-top.js\\\";\\nconst scriptHack = \\\"hack-top.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n  const partGrow = (ns.args[0] || 40) / 100;\\n  const partWeaken = 1.0 - partGrow;\\n  const hackFactor = 0.2;\\n\\n  const srv = ns.getHostName();\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const countWeaken = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partWeaken) / sizeWeaken\\n  );\\n  const countGrow = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partGrow) / sizeGrow\\n  );\\n  const countHack = Math.floor((srvRam * hackFactor) / sizeHack);\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${countWeaken} weaken / ${countGrow} grow / ${countHack} hack threads`\\n  );\\n\\n  if (countWeaken > 0) ns.run(scriptWeaken, countWeaken);\\n  if (countGrow > 0) ns.run(scriptGrow, srv, countGrow);\\n  if (countHack > 0) ns.spawn(scriptHack, srv, countHack);\\n}\",\"filename\":\"slave-self.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.75,\"server\":\"home\",\"moduleSequenceNumber\":421,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"spawn\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { search } from \\\"./hacker-lib.js\\\";\\n\\nexport function connect(path) {\\n  const doc = eval(\\\"document\\\");\\n  const terminalInput = doc.getElementById(\\\"terminal-input\\\");\\n  terminalInput.value = `home;${path}`;\\n  const handler = Object.keys(terminalInput)[1];\\n  terminalInput[handler].onChange({ target: terminalInput });\\n  terminalInput[handler].onKeyDown({ keyCode: 13, preventDefault: () => null });\\n}\\n\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  const path = search(ns, target);\\n  if (path && path.length > 0 && path[0] == \\\"home\\\") {\\n    path.shift();\\n  }\\n  if (path) {\\n    const connectStr = \\\"connect \\\" + path.join(\\\"; connect \\\");\\n    connect(connectStr);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...data.servers];\\n}\",\"filename\":\"route.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///919e76bb-2ed4-41b3-8fbb-9187cc0eed0a\",\"moduleSequenceNumber\":14467},{\"filename\":\"route.js\",\"url\":\"blob:file:///ab7c6d1f-bafd-41bb-b3a3-53e5cefc6c3e\",\"moduleSequenceNumber\":15494}],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"home\",\"moduleSequenceNumber\":422,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const srv = ns.args[0];\\n  const target = ns.args[1];\\n\\n  const scriptWeaken = !target ? \\\"weaken-top.js\\\" : \\\"loop-weaken.js\\\";\\n  const scriptGrow = !target ? \\\"grow-top.js\\\" : \\\"loop-grow.js\\\";\\n  const scriptHack = !target ? \\\"hack-top.js\\\" : \\\"loop-hack.js\\\";\\n\\n  ns.tprint(\\n    `host ${srv}, target ${target}, scripts: ${scriptWeaken},${scriptGrow},${scriptHack}`\\n  );\\n\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n\\n  const size = sizeWeaken; //all have same size\\n\\n  const partGrow = 0.8;\\n  const partWeaken = 0.1;\\n\\n  const srvRam = ns.getServerMaxRam(srv);\\n  const srvThreads = srvRam / size;\\n\\n  const countWeaken = srvThreads * partWeaken;\\n  const countGrow = srvThreads * partGrow;\\n  let countHack = srvThreads - countGrow - countWeaken;\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${Math.floor(\\n      countWeaken\\n    )} weaken / ${Math.floor(countGrow)} grow / ${Math.floor(\\n      countHack\\n    )} hack threads`\\n  );\\n\\n  await ns.scp(\\\"hacker-lib.js\\\", srv);\\n  await ns.scp(scriptWeaken, srv);\\n  await ns.scp(scriptGrow, srv);\\n  await ns.scp(scriptHack, srv);\\n  await ns.scp(\\\"weaken-after.js\\\", \\\"home\\\", srv);\\n  await ns.scp(\\\"grow-after.js\\\", \\\"home\\\", srv);\\n  await ns.scp(\\\"hack-after.js\\\", \\\"home\\\", srv);\\n  ns.killall(srv);\\n\\n  if (countWeaken > 0) ns.exec(scriptWeaken, srv, countWeaken, target);\\n  if (countGrow > 0) ns.exec(scriptGrow, srv, countGrow, target);\\n  if (countHack > 0) ns.exec(scriptHack, srv, countHack, target);\\n  ns.tprint(\\\"done slaving \\\" + srv);\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...data.servers];\\n}\",\"filename\":\"slave-host.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///f911b7e6-4826-4ca9-839a-4edd76bb8baf\",\"moduleSequenceNumber\":394},{\"filename\":\"slave-host.js\",\"url\":\"blob:file:///90b42f32-2f69-4c5f-84c1-0a9b1c4dac00\",\"moduleSequenceNumber\":22899}],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"home\",\"moduleSequenceNumber\":423,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst psrvs = ns.getPurchasedServers()\\n\\tfor (let srv of psrvs) {\\n\\t\\tns.run(\\\"run-max.js\\\", 1, srv, \\\"weaken-top.js\\\")\\n\\t}\\n}\",\"filename\":\"yourallweak.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"yourallweak.js\",\"url\":\"blob:file:///32d41ad2-5894-451b-a641-cf89adcd67a5\",\"moduleSequenceNumber\":146014}],\"dependents\":[],\"ramUsage\":4.85,\"server\":\"home\",\"moduleSequenceNumber\":424,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///514fdab3-fdff-4e07-b674-7683ee06c6eb\",\"moduleSequenceNumber\":1703}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":425,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///7862c4b6-5c48-441c-aa05-ea3b37a8e644\",\"moduleSequenceNumber\":1704}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":426,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/**\\n *\\n * @param {import('./NS').NS} ns\\n **/\\nexport async function main(ns) {\\n  const targetScript = ns.args.shift();\\n  const targetArgs = ns.args;\\n  const runSize = ns.getScriptRam(targetScript);\\n\\n  for (const srv of ns.getPurchasedServers()) {\\n    const srvRam = ns.getServerMaxRam(srv);\\n    const threads = Math.floor(srvRam / runSize);\\n    if (threads > 0) {\\n      await ns.scp(targetScript, srv);\\n      ns.killall(srv);\\n      ns.tprint(\\n        `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n      );\\n      await ns.exec(targetScript, srv, threads, ...targetArgs);\\n    }\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...data.scripts];\\n}\",\"filename\":\"run-max-pservs.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///4dd174cd-0ac2-477b-a8f8-b5ae795c1c10\",\"moduleSequenceNumber\":72366},{\"filename\":\"run-max-pservs.js\",\"url\":\"blob:file:///e4322d07-3789-4771-a06e-d65e38da8d76\",\"moduleSequenceNumber\":108273}],\"dependents\":[],\"ramUsage\":6.4,\"server\":\"home\",\"moduleSequenceNumber\":427,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    const server = ns.args[0];\\n    if (args.help || !server) {\\n        ns.tprint(\\\"This script does a more detailed analysis of a server.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()} SERVER`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n    const ram = ns.getServerRam(server);\\n    const money = ns.getServerMoneyAvailable(server);\\n    const maxMoney = ns.getServerMaxMoney(server);\\n    const minSec = ns.getServerMinSecurityLevel(server);\\n    const sec = ns.getServerSecurityLevel(server);\\n    ns.tprint(`\\n\\n${server}:\\n    RAM        : ${ram[1]} / ${ram[0]} (${ram[1] / ram[0] * 100}%)\\n    $          : ${ns.nFormat(money, \\\"$0.000a\\\")} / ${ns.nFormat(maxMoney, \\\"$0.000a\\\")} (${(money / maxMoney * 100).toFixed(2)}%)\\n    security   : ${minSec.toFixed(2)} / ${sec.toFixed(2)}\\n    growth     : ${ns.getServerGrowth(server)}\\n    hack time  : ${ns.tFormat(ns.getHackTime(server))}\\n    grow time  : ${ns.tFormat(ns.getGrowTime(server))}\\n    weaken time: ${ns.tFormat(ns.getWeakenTime(server))}\\n    grow x2    : ${(ns.growthAnalyze(server, 2)).toFixed(2)} threads\\n    grow x3    : ${(ns.growthAnalyze(server, 3)).toFixed(2)} threads\\n    grow x4    : ${(ns.growthAnalyze(server, 4)).toFixed(2)} threads\\n    hack 10%   : ${(.10 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hack 25%   : ${(.25 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hack 50%   : ${(.50 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hackChance : ${(ns.hackAnalyzeChance(server) * 100).toFixed(2)}%\\n`);\\n}\",\"filename\":\"/official/analyze_server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/official/analyze_server.js\",\"url\":\"blob:file:///cd7ca598-c15f-4b0d-843a-e4000637a699\",\"moduleSequenceNumber\":69258}],\"dependents\":[],\"ramUsage\":5.35,\"server\":\"home\",\"moduleSequenceNumber\":428,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const flags = ns.flags([\\n    [\\\"refreshrate\\\", 200],\\n    [\\\"help\\\", false],\\n  ]);\\n  if (flags._.length === 0 || flags.help) {\\n    ns.tprint(\\n      \\\"This script helps visualize the money and security of a server.\\\"\\n    );\\n    ns.tprint(`USAGE: run ${ns.getScriptName()} SERVER_NAME`);\\n    ns.tprint(\\\"Example:\\\");\\n    ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n    return;\\n  }\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  while (true) {\\n    const server = flags._[0];\\n    let money = ns.getServerMoneyAvailable(server);\\n    if (money === 0) money = 1;\\n    const maxMoney = ns.getServerMaxMoney(server);\\n    const minSec = ns.getServerMinSecurityLevel(server);\\n    const sec = ns.getServerSecurityLevel(server);\\n    ns.clearLog(server);\\n    ns.print(`${server}:`);\\n    ns.print(\\n      ` $_______: ${ns.nFormat(money, \\\"$0.000a\\\")} / ${ns.nFormat(\\n        maxMoney,\\n        \\\"$0.000a\\\"\\n      )} (${((money / maxMoney) * 100).toFixed(2)}%)`\\n    );\\n    ns.print(` security: +${(sec - minSec).toFixed(2)}`);\\n    ns.print(\\n      ` hack____: ${ns.tFormat(ns.getHackTime(server))} (t=${Math.ceil(\\n        ns.hackAnalyzeThreads(server, money)\\n      )})`\\n    );\\n    ns.print(\\n      ` grow____: ${ns.tFormat(ns.getGrowTime(server))} (t=${Math.ceil(\\n        ns.growthAnalyze(server, maxMoney / money)\\n      )})`\\n    );\\n    ns.print(\\n      ` weaken__: ${ns.tFormat(ns.getWeakenTime(server))} (t=${Math.ceil(\\n        (sec - minSec) * 20\\n      )})`\\n    );\\n    await ns.sleep(flags.refreshrate);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return data.servers;\\n}\",\"filename\":\"/official/monitor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/official/monitor.js\",\"url\":\"blob:file:///ab09b5db-460f-440c-abb7-7a14db8da985\",\"moduleSequenceNumber\":1699}],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"home\",\"moduleSequenceNumber\":429,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyzeThreads\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { best_target } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = best_target(ns);\\n\\n  ns.tprintf(`new target is ${target.name}`);\\n  ns.run(\\\"official/monitor.js\\\", 1, target.name);\\n\\n  ns.run(\\\"slave-net.js\\\", 1, target.name);\\n  ns.run(\\\"slave-home.js\\\", 1, target.name);\\n}\",\"filename\":\"retarget.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///db4b03d9-dfa5-4182-b477-c6670e002909\",\"moduleSequenceNumber\":249},{\"filename\":\"retarget.js\",\"url\":\"blob:file:///ddf16ce2-25b6-4cd9-8cb7-88608df95f5e\",\"moduleSequenceNumber\":1698}],\"dependents\":[],\"ramUsage\":3.15,\"server\":\"home\",\"moduleSequenceNumber\":430,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan, srv_info, fmt } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => srv_info(ns, srv));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max / a.sec_min - b.money_max / a.sec_min);\\n\\n  output.forEach((info) => {\\n    ns.tprint(`Target ${info.name}:`);\\n    ns.tprint(\\n      `  money: ${fmt(info.money_curr)}/${fmt(info.money_max)} ${\\n        info.money_pct\\n      }%`\\n    );\\n    ns.tprint(`  sec  : ${info.sec_curr}/${info.sec_min} ${info.sec_pct}%`);\\n  });\\n}\",\"filename\":\"/archive/srv-stats.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.25,\"server\":\"home\",\"moduleSequenceNumber\":431,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const args = ns.flags([['help', false]]);\\n    const hostname = args._[0];\\n    if(args.help || !hostname) {\\n        ns.tprint(\\\"This script will generate money by hacking a target server.\\\");\\n        ns.tprint(`USAGE: run ${ns.getScriptName()} SERVER_NAME`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n    while (true) {\\n        if (ns.getServerSecurityLevel(hostname) > ns.getServerMinSecurityLevel(hostname)) {\\n            await ns.weaken(hostname);\\n        } else if (ns.getServerMoneyAvailable(hostname) < ns.getServerMaxMoney(hostname)) {\\n            await ns.grow(hostname);\\n        } else {\\n            await ns.hack(hostname);\\n        }\\n    }\\n}\",\"filename\":\"/official/basic_hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":432,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    if (args.help) {\\n        ns.tprint(\\\"This script will enhance your HUD (Heads up Display) with custom statistics.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\n        return;\\n    }\\n    \\n    const doc = document; // This is expensive! (25GB RAM) Perhaps there's a way around it? ;)\\n    const hook0 = doc.getElementById('overview-extra-hook-0');\\n    const hook1 = doc.getElementById('overview-extra-hook-1');\\n    while (true) {\\n        try {\\n            const headers = []\\n            const values = [];\\n            // Add script income per second\\n            headers.push(\\\"ScrInc\\\");\\n            values.push(ns.getScriptIncome()[0].toPrecision(5) + '/sec');\\n            // Add script exp gain rate per second\\n            headers.push(\\\"ScrExp\\\");\\n            values.push(ns.getScriptExpGain().toPrecision(5) + '/sec');\\n            // TODO: Add more neat stuff\\n\\n            // Now drop it into the placeholder elements\\n            hook0.innerText = headers.join(\\\" \\\\n\\\");\\n            hook1.innerText = values.join(\\\"\\\\n\\\");\\n        } catch (err) { // This might come in handy later\\n            ns.print(\\\"ERROR: Update Skipped: \\\" + String(err));\\n        }\\n        await ns.sleep(1000);\\n    }\\n}\",\"filename\":\"/official/custom-stats.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":26.8,\"server\":\"home\",\"moduleSequenceNumber\":433,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"dom\",\"name\":\"document\",\"cost\":25},{\"type\":\"fn\",\"name\":\"getScriptIncome\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getScriptExpGain\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst args = ns.flags([[\\\"help\\\", false]]);\\n\\tif (args.help || args._.length < 2) {\\n\\t\\tns.tprint(\\\"This script deploys another script on a server with maximum threads possible.\\\");\\n\\t\\tns.tprint(`Usage: run ${ns.getScriptName()} HOST SCRIPT ARGUMENTS`);\\n\\t\\tns.tprint(\\\"Example:\\\");\\n\\t\\tns.tprint(`> run ${ns.getScriptName()} n00dles basic_hack.js foodnstuff`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst host = args._[0];\\n\\tconst script = args._[1];\\n\\tconst script_args = args._.slice(2);\\n\\n\\tif (!ns.serverExists(host)) {\\n\\t\\tns.tprint(`Server '${host}' does not exist. Aborting.`);\\n\\t\\treturn;\\n\\t}\\n\\tif (!ns.ls(ns.getHostname()).find(f => f === script)) {\\n\\t\\tns.tprint(`Script '${script}' does not exist. Aborting.`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst threads = Math.floor((ns.getServerMaxRam(host) - ns.getServerUsedRam(host)) / ns.getScriptRam(script));\\n\\tns.tprint(`Launching script '${script}' on server '${host}' with ${threads} threads and the following arguments: ${script_args}`);\\n\\tawait ns.scp(script, ns.getHostname(), host);\\n\\tns.exec(script, host, threads, ...script_args);\\n}\",\"filename\":\"/official/deploy.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.05,\"server\":\"home\",\"moduleSequenceNumber\":434,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function scan(ns, parent, server, list) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        list.push(child);\\n        \\n        scan(ns, server, child, list);\\n    }\\n}\\n\\nexport function list_servers(ns) {\\n    const list = [];\\n    scan(ns, '', 'home', list);\\n    return list;\\n}\\n\\nexport async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    if (args.help) {\\n        ns.tprint(\\\"This script helps you find an unsolved coding contract.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\n        return;\\n    }\\n\\n    let servers = list_servers(ns);\\n    const boughtServers = ns.getPurchasedServers(ns);\\n    servers = servers.filter(s => !boughtServers.includes(s));\\n    const hostname = servers.find(s => ns.ls(s).find(f => f.endsWith(\\\".cct\\\")))\\n    if(!hostname) {\\n        ns.tprint(\\\"No coding contract found.\\\");\\n        return;\\n    }\\n\\n    ns.tprint(`Found coding contract on '${hostname}'.`)\\n}\",\"filename\":\"/official/find_coding_contract.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.25,\"server\":\"home\",\"moduleSequenceNumber\":435,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function recursiveScan(ns, parent, server, target, route) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        if (child == target) {\\n            route.unshift(child);\\n            route.unshift(server);\\n            return true;\\n        }\\n\\n        if (recursiveScan(ns, server, child, target, route)) {\\n            route.unshift(server);\\n            return true;\\n        }\\n    }\\n    return false;\\n}\\n\\nexport async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    let route = [];\\n    let server = args._[0];\\n    if (!server || args.help) {\\n        ns.tprint(\\\"This script helps you find a server on the network and shows you the path to get to it.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()} SERVER`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n\\n    recursiveScan(ns, '', 'home', server, route);\\n    for (const i in route) {\\n        await ns.sleep(500);\\n        const extra = i > 0 ? \\\"└ \\\" : \\\"\\\";\\n        ns.tprint(`${\\\" \\\".repeat(i)}${extra}${route[i]}`);\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return data.servers;\\n}\",\"filename\":\"/official/find_server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":436,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function scan(ns, parent, server, list) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        list.push(child);\\n        \\n        scan(ns, server, child, list);\\n    }\\n}\\n\\nexport function list_servers(ns) {\\n    const list = [];\\n    scan(ns, '', 'home', list);\\n    return list;\\n}\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst args = ns.flags([[\\\"help\\\", false]]);\\n    if (args.help) {\\n        ns.tprint(\\\"This script lists all servers on which you can run scripts.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\n        return;\\n    }\\n\\n\\tconst servers = list_servers(ns).filter(s => ns.hasRootAccess(s)).concat(['home']);\\n    for(const server of servers) {\\n        const used = ns.getServerUsedRam(server);\\n        const max = ns.getServerMaxRam(server);\\n        ns.tprint(`${server} is opened. ${used} GB / ${max} GB (${(100*used/max).toFixed(2)}%)`)\\n    }\\n}\",\"filename\":\"/official/opened_servers.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":437,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  ns.purchaseTor();\\n}\",\"filename\":\"restart.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"restart.js\",\"url\":\"blob:file:///7ce8a684-b9db-4924-b6a5-f4d6a33e9ebe\",\"moduleSequenceNumber\":102476}],\"dependents\":[],\"ramUsage\":3.6,\"server\":\"home\",\"moduleSequenceNumber\":438,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"purchaseTor\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    const server = ns.args[0];\\n    if (args.help || !server) {\\n        ns.tprint(\\\"This script does a more detailed analysis of a server.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()} SERVER`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n    const ram = ns.getServerRam(server);\\n    const money = ns.getServerMoneyAvailable(server);\\n    const maxMoney = ns.getServerMaxMoney(server);\\n    const minSec = ns.getServerMinSecurityLevel(server);\\n    const sec = ns.getServerSecurityLevel(server);\\n    ns.tprint(`\\n\\n${server}:\\n    RAM        : ${ram[1]} / ${ram[0]} (${ram[1] / ram[0] * 100}%)\\n    $          : ${ns.nFormat(money, \\\"$0.000a\\\")} / ${ns.nFormat(maxMoney, \\\"$0.000a\\\")} (${(money / maxMoney * 100).toFixed(2)}%)\\n    security   : ${minSec.toFixed(2)} / ${sec.toFixed(2)}\\n    growth     : ${ns.getServerGrowth(server)}\\n    hack time  : ${ns.tFormat(ns.getHackTime(server))}\\n    grow time  : ${ns.tFormat(ns.getGrowTime(server))}\\n    weaken time: ${ns.tFormat(ns.getWeakenTime(server))}\\n    grow x2    : ${(ns.growthAnalyze(server, 2)).toFixed(2)} threads\\n    grow x3    : ${(ns.growthAnalyze(server, 3)).toFixed(2)} threads\\n    grow x4    : ${(ns.growthAnalyze(server, 4)).toFixed(2)} threads\\n    hack 10%   : ${(.10 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hack 25%   : ${(.25 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hack 50%   : ${(.50 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hackChance : ${(ns.hackAnalyzeChance(server) * 100).toFixed(2)}%\\n`);\\n}\",\"filename\":\"analyze_server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.35,\"server\":\"home\",\"moduleSequenceNumber\":439,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n    const args = ns.flags([['help', false]]);\\n    const hostname = args._[0];\\n    if(args.help || !hostname) {\\n        ns.tprint(\\\"This script will generate money by hacking a target server.\\\");\\n        ns.tprint(`USAGE: run ${ns.getScriptName()} SERVER_NAME`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n    while (true) {\\n        if (ns.getServerSecurityLevel(hostname) > ns.getServerMinSecurityLevel(hostname)) {\\n            await ns.weaken(hostname);\\n        } else if (ns.getServerMoneyAvailable(hostname) < ns.getServerMaxMoney(hostname)) {\\n            await ns.grow(hostname);\\n        } else {\\n            await ns.hack(hostname);\\n        }\\n    }\\n}\",\"filename\":\"basic_hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":440,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    if (args.help) {\\n        ns.tprint(\\\"This script will enhance your HUD (Heads up Display) with custom statistics.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\n        return;\\n    }\\n    \\n    const doc = document; // This is expensive! (25GB RAM) Perhaps there's a way around it? ;)\\n    const hook0 = doc.getElementById('overview-extra-hook-0');\\n    const hook1 = doc.getElementById('overview-extra-hook-1');\\n    while (true) {\\n        try {\\n            const headers = []\\n            const values = [];\\n            // Add script income per second\\n            headers.push(\\\"ScrInc\\\");\\n            values.push(ns.getScriptIncome()[0].toPrecision(5) + '/sec');\\n            // Add script exp gain rate per second\\n            headers.push(\\\"ScrExp\\\");\\n            values.push(ns.getScriptExpGain().toPrecision(5) + '/sec');\\n            // TODO: Add more neat stuff\\n\\n            // Now drop it into the placeholder elements\\n            hook0.innerText = headers.join(\\\" \\\\n\\\");\\n            hook1.innerText = values.join(\\\"\\\\n\\\");\\n        } catch (err) { // This might come in handy later\\n            ns.print(\\\"ERROR: Update Skipped: \\\" + String(err));\\n        }\\n        await ns.sleep(1000);\\n    }\\n}\",\"filename\":\"custom-stats.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":26.8,\"server\":\"home\",\"moduleSequenceNumber\":441,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"dom\",\"name\":\"document\",\"cost\":25},{\"type\":\"fn\",\"name\":\"getScriptIncome\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getScriptExpGain\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst args = ns.flags([[\\\"help\\\", false]]);\\n\\tif (args.help || args._.length < 2) {\\n\\t\\tns.tprint(\\\"This script deploys another script on a server with maximum threads possible.\\\");\\n\\t\\tns.tprint(`Usage: run ${ns.getScriptName()} HOST SCRIPT ARGUMENTS`);\\n\\t\\tns.tprint(\\\"Example:\\\");\\n\\t\\tns.tprint(`> run ${ns.getScriptName()} n00dles basic_hack.js foodnstuff`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst host = args._[0];\\n\\tconst script = args._[1];\\n\\tconst script_args = args._.slice(2);\\n\\n\\tif (!ns.serverExists(host)) {\\n\\t\\tns.tprint(`Server '${host}' does not exist. Aborting.`);\\n\\t\\treturn;\\n\\t}\\n\\tif (!ns.ls(ns.getHostname()).find(f => f === script)) {\\n\\t\\tns.tprint(`Script '${script}' does not exist. Aborting.`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst threads = Math.floor((ns.getServerMaxRam(host) - ns.getServerUsedRam(host)) / ns.getScriptRam(script));\\n\\tns.tprint(`Launching script '${script}' on server '${host}' with ${threads} threads and the following arguments: ${script_args}`);\\n\\tawait ns.scp(script, ns.getHostname(), host);\\n\\tns.exec(script, host, threads, ...script_args);\\n}\",\"filename\":\"deploy.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.05,\"server\":\"home\",\"moduleSequenceNumber\":442,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function scan(ns, parent, server, list) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        list.push(child);\\n        \\n        scan(ns, server, child, list);\\n    }\\n}\\n\\nexport function list_servers(ns) {\\n    const list = [];\\n    scan(ns, '', 'home', list);\\n    return list;\\n}\\n\\nexport async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    if (args.help) {\\n        ns.tprint(\\\"This script helps you find an unsolved coding contract.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\n        return;\\n    }\\n\\n    let servers = list_servers(ns);\\n    const boughtServers = ns.getPurchasedServers(ns);\\n    servers = servers.filter(s => !boughtServers.includes(s));\\n    const hostname = servers.find(s => ns.ls(s).find(f => f.endsWith(\\\".cct\\\")))\\n    if(!hostname) {\\n        ns.tprint(\\\"No coding contract found.\\\");\\n        return;\\n    }\\n\\n    ns.tprint(`Found coding contract on '${hostname}'.`)\\n}\",\"filename\":\"find_coding_contract.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.25,\"server\":\"home\",\"moduleSequenceNumber\":443,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function recursiveScan(ns, parent, server, target, route) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        if (child == target) {\\n            route.unshift(child);\\n            route.unshift(server);\\n            return true;\\n        }\\n\\n        if (recursiveScan(ns, server, child, target, route)) {\\n            route.unshift(server);\\n            return true;\\n        }\\n    }\\n    return false;\\n}\\n\\nexport async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    let route = [];\\n    let server = args._[0];\\n    if (!server || args.help) {\\n        ns.tprint(\\\"This script helps you find a server on the network and shows you the path to get to it.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()} SERVER`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n\\n    recursiveScan(ns, '', 'home', server, route);\\n    for (const i in route) {\\n        await ns.sleep(500);\\n        const extra = i > 0 ? \\\"└ \\\" : \\\"\\\";\\n        ns.tprint(`${\\\" \\\".repeat(i)}${extra}${route[i]}`);\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return data.servers;\\n}\",\"filename\":\"find_server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":444,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const flags = ns.flags([\\n    [\\\"refreshrate\\\", 200],\\n    [\\\"help\\\", false],\\n  ]);\\n  if (flags._.length === 0 || flags.help) {\\n    ns.tprint(\\n      \\\"This script helps visualize the money and security of a server.\\\"\\n    );\\n    ns.tprint(`USAGE: run ${ns.getScriptName()} SERVER_NAME`);\\n    ns.tprint(\\\"Example:\\\");\\n    ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n    return;\\n  }\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  while (true) {\\n    const server = flags._[0];\\n    let money = ns.getServerMoneyAvailable(server);\\n    if (money === 0) money = 1;\\n    const maxMoney = ns.getServerMaxMoney(server);\\n    const minSec = ns.getServerMinSecurityLevel(server);\\n    const sec = ns.getServerSecurityLevel(server);\\n    ns.clearLog(server);\\n    ns.print(`${server}:`);\\n    ns.print(\\n      ` $_______: ${ns.nFormat(money, \\\"$0.000a\\\")} / ${ns.nFormat(\\n        maxMoney,\\n        \\\"$0.000a\\\"\\n      )} (${((money / maxMoney) * 100).toFixed(2)}%)`\\n    );\\n    ns.print(` security: +${(sec - minSec).toFixed(2)}`);\\n    ns.print(\\n      ` hack____: ${ns.tFormat(ns.getHackTime(server))} (t=${Math.ceil(\\n        ns.hackAnalyzeThreads(server, money)\\n      )})`\\n    );\\n    ns.print(\\n      ` grow____: ${ns.tFormat(ns.getGrowTime(server))} (t=${Math.ceil(\\n        ns.growthAnalyze(server, maxMoney / money)\\n      )})`\\n    );\\n    ns.print(\\n      ` weaken__: ${ns.tFormat(ns.getWeakenTime(server))} (t=${Math.ceil(\\n        (sec - minSec) * 20\\n      )})`\\n    );\\n    await ns.sleep(flags.refreshrate);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return data.servers;\\n}\",\"filename\":\"monitor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"home\",\"moduleSequenceNumber\":445,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyzeThreads\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function scan(ns, parent, server, list) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        list.push(child);\\n        \\n        scan(ns, server, child, list);\\n    }\\n}\\n\\nexport function list_servers(ns) {\\n    const list = [];\\n    scan(ns, '', 'home', list);\\n    return list;\\n}\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst args = ns.flags([[\\\"help\\\", false]]);\\n    if (args.help) {\\n        ns.tprint(\\\"This script lists all servers on which you can run scripts.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\n        return;\\n    }\\n\\n\\tconst servers = list_servers(ns).filter(s => ns.hasRootAccess(s)).concat(['home']);\\n    for(const server of servers) {\\n        const used = ns.getServerUsedRam(server);\\n        const max = ns.getServerMaxRam(server);\\n        ns.tprint(`${server} is opened. ${used} GB / ${max} GB (${(100*used/max).toFixed(2)}%)`)\\n    }\\n}\",\"filename\":\"opened_servers.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":446,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const srv = ns.args[0];\\n\\n  const scriptWeaken = \\\"weaken-top.js\\\";\\n  const scriptGrow = \\\"grow-top.js\\\";\\n  const scriptHack = \\\"hack-top.js\\\";\\n\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n  const partGrow = (ns.args[2] || 45) / 100;\\n\\n  const partWeaken = 1.0 - partGrow;\\n  const hackFactor = 0.1;\\n\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const countWeaken = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partWeaken) / sizeWeaken\\n  );\\n  const countGrow = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partGrow) / sizeGrow\\n  );\\n  const countHack = Math.floor((srvRam * hackFactor) / sizeHack);\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${countWeaken} weaken / ${countGrow} grow / ${countHack} hack threads`\\n  );\\n\\n  await ns.scp(\\\"hacker-lib.js\\\", srv);\\n  await ns.scp(scriptWeaken, srv);\\n  await ns.scp(scriptGrow, srv);\\n  await ns.scp(scriptHack, srv);\\n  ns.killall(srv);\\n\\n  if (countWeaken > 0) ns.exec(scriptWeaken, srv, countWeaken);\\n  if (countGrow > 0) ns.exec(scriptGrow, srv, countGrow);\\n  if (countHack > 0) ns.exec(scriptHack, srv, countHack);\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...data.servers];\\n}\",\"filename\":\"slave-host-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"home\",\"moduleSequenceNumber\":447,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0] || undefined;\\n\\n  const scriptWeaken = !target ? \\\"weaken-top.js\\\" : \\\"loop-weaken.js\\\";\\n  const scriptGrow = !target ? \\\"grow-top.js\\\" : \\\"loop-grow.js\\\";\\n  const scriptHack = !target ? \\\"hack-top.js\\\" : \\\"loop-hack.js\\\";\\n\\n  ns.tprint(\\n    `target ${target}, scripts: ${scriptWeaken},${scriptGrow},${scriptHack}`\\n  );\\n\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n  const partGrow = (ns.args[1] || 45) / 100;\\n  const partWeaken = 1.0 - partGrow;\\n  const hackFactor = 0.1;\\n\\n  const srv = \\\"home\\\";\\n  const srvRam = ns.getServerMaxRam(srv) * 0.99;\\n\\n  const countWeaken = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partWeaken) / sizeWeaken\\n  );\\n  const countGrow = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partGrow) / sizeGrow\\n  );\\n  const countHack = Math.floor((srvRam * hackFactor) / sizeHack);\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${countWeaken} weaken / ${countGrow} grow / ${countHack} hack threads`\\n  );\\n\\n  if (countWeaken > 0) ns.run(scriptWeaken, countWeaken, target);\\n  if (countGrow > 0) ns.run(scriptGrow, countGrow, target);\\n  if (countHack > 0) ns.run(scriptHack, countHack, target);\\n}\",\"filename\":\"slave-home-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///a8a3ee6e-4326-4570-bc83-86c527ea350d\",\"moduleSequenceNumber\":379648},{\"filename\":\"slave-home-top.js\",\"url\":\"blob:file:///5ea8701c-ec0e-4a51-ba90-ea8298945cc4\",\"moduleSequenceNumber\":379992}],\"dependents\":[],\"ramUsage\":2.75,\"server\":\"home\",\"moduleSequenceNumber\":448,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"../hacker-lib.js\\\";\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const srv = ns.args[0];\\n\\n  const scriptWeaken = \\\"weaken-top.js\\\";\\n  const scriptGrow = \\\"grow-top.js\\\";\\n  const scriptHack = \\\"hack-top.js\\\";\\n\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n  const partGrow = (ns.args[2] || 45) / 100;\\n\\n  const partWeaken = 1.0 - partGrow;\\n  const hackFactor = 0.1;\\n\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const countWeaken = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partWeaken) / sizeWeaken\\n  );\\n  const countGrow = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partGrow) / sizeGrow\\n  );\\n  const countHack = Math.floor((srvRam * hackFactor) / sizeHack);\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${countWeaken} weaken / ${countGrow} grow / ${countHack} hack threads`\\n  );\\n\\n  await ns.scp(\\\"hacker-lib.js\\\", srv);\\n  await ns.scp(scriptWeaken, srv);\\n  await ns.scp(scriptGrow, srv);\\n  await ns.scp(scriptHack, srv);\\n  ns.killall(srv);\\n\\n  if (countWeaken > 0) ns.exec(scriptWeaken, srv, countWeaken);\\n  if (countGrow > 0) ns.exec(scriptGrow, srv, countGrow);\\n  if (countHack > 0) ns.exec(scriptHack, srv, countHack);\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...data.servers];\\n}\",\"filename\":\"/archive/slave-host-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"server\":\"home\",\"moduleSequenceNumber\":449}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"../hacker-lib.js\\\";\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const scriptWeaken = \\\"weaken-top.js\\\";\\n  const scriptGrow = \\\"grow-top.js\\\";\\n  const scriptHack = \\\"hack-top.js\\\";\\n\\n  ns.tprint(\\n    `target ${target}, scripts: ${scriptWeaken},${scriptGrow},${scriptHack}`\\n  );\\n\\n  const sizeWeaken = ns.getScriptRam(scriptWeaken);\\n  const sizeGrow = ns.getScriptRam(scriptGrow);\\n  const sizeHack = ns.getScriptRam(scriptHack);\\n  const partGrow = (ns.args[1] || 45) / 100;\\n  const partWeaken = 1.0 - partGrow;\\n  const hackFactor = 0.1;\\n\\n  const srv = \\\"home\\\";\\n  const srvRam = ns.getServerMaxRam(srv) * 0.99;\\n\\n  const countWeaken = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partWeaken) / sizeWeaken\\n  );\\n  const countGrow = Math.floor(\\n    (srvRam * (1.0 - hackFactor) * partGrow) / sizeGrow\\n  );\\n  const countHack = Math.floor((srvRam * hackFactor) / sizeHack);\\n\\n  ns.tprint(\\n    `server ${srv} (${srvRam} GB): ${countWeaken} weaken / ${countGrow} grow / ${countHack} hack threads`\\n  );\\n\\n  if (countWeaken > 0) ns.run(scriptWeaken, countWeaken);\\n  if (countGrow > 0) ns.run(scriptGrow, countGrow);\\n  if (countHack > 0) ns.run(scriptHack, countHack);\\n}\",\"filename\":\"/archive/slave-home-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"server\":\"home\",\"moduleSequenceNumber\":450}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  var factions = [];\\n  const faction_list = [\\n    \\\"CyberSec\\\",\\n    \\\"Tian Di Hui\\\",\\n    \\\"Netburners\\\",\\n    \\\"Sector-12\\\",\\n    \\\"Chongqing\\\",\\n    \\\"New Tokyo\\\",\\n    \\\"Ishima\\\",\\n    \\\"Aevum\\\",\\n    \\\"Volhaven\\\",\\n    \\\"NiteSec\\\",\\n    \\\"The Black Hand\\\",\\n    \\\"BitRunners\\\",\\n    \\\"ECorp\\\",\\n    \\\"MegaCorp\\\",\\n    \\\"KuaiGong International\\\",\\n    \\\"Four Sigma\\\",\\n    \\\"NWO\\\",\\n    \\\"Blade Industries\\\",\\n    \\\"OmniTek Incorporated\\\",\\n    \\\"Bachman & Associates\\\",\\n    \\\"Clarke Incorporated\\\",\\n    \\\"Fulcrum Secret Technologies\\\",\\n    \\\"Slum Snakes\\\",\\n    \\\"Tetrads\\\",\\n    \\\"Silhouette\\\",\\n    \\\"Speakers for the Dead\\\",\\n    \\\"The Dark Army\\\",\\n    \\\"The Syndicate\\\",\\n    \\\"The Covenant\\\",\\n    \\\"Daedalus\\\",\\n    \\\"Illuminati\\\",\\n  ];\\n  ns.tail();\\n  for (let f of faction_list) {\\n    if (ns.joinFaction(f) || ns.getFactionRep(f) > 0) {\\n      factions.push(f);\\n    }\\n  }\\n  for (let f of factions) {\\n    var augs = ns.getAugmentationsFromFaction(f);\\n    for (let a of augs) {\\n      ns.purchaseAugmentation(f, a);\\n    }\\n  }\\n}\",\"filename\":\"/web/factions.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/web/factions.js\",\"url\":\"blob:file:///93fd1f3e-218c-4624-aa9f-1cb5fca769ad\",\"moduleSequenceNumber\":70588}],\"dependents\":[],\"ramUsage\":15.6,\"server\":\"home\",\"moduleSequenceNumber\":451,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {}\",\"filename\":\"smooth_criminal.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":452,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst path = \\\"connect hong-fang-tea; connect CSEC\\\";\\n}\\nexport function connect(path) {\\n\\tconst doc = eval(\\\"document\\\");\\n\\tconst terminalInput = doc.getElementById(\\\"terminal-input\\\"); \\n\\tterminalInput.value = `home;${path}`; \\n\\tconst handler = Object.keys(terminalInput)[1]; \\n\\tterminalInput[handler].onChange({target:terminalInput});\\n\\tterminalInput[handler].onKeyDown({keyCode:13,preventDefault:()=>null});\\n}\",\"filename\":\"experiment.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"experiment.js\",\"url\":\"blob:file:///2420907e-b77b-4679-aefe-cdf868d0da41\",\"moduleSequenceNumber\":119308}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":453,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tawait ns.weaken(ns.args[0]);\\n}\",\"filename\":\"/web/weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/web/weaken.js\",\"url\":\"blob:file:///ba5bc332-85ad-4bcc-b3cd-fa8011461216\",\"moduleSequenceNumber\":65093}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":454,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tawait ns.grow(ns.args[0]);\\n}\",\"filename\":\"/web/grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/web/grow.js\",\"url\":\"blob:file:///db0be560-7fcf-4ab9-bdac-ae688687455d\",\"moduleSequenceNumber\":79406}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":455,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tawait ns.hack(ns.args[0]);\\n}\",\"filename\":\"/web/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/web/hack.js\",\"url\":\"blob:file:///f60d669f-a1b1-4c9e-8390-09105886942a\",\"moduleSequenceNumber\":67221}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"moduleSequenceNumber\":456,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  // Parameters\\n  // param 1: Server you want to hack\\n  // param 2: OPTIONAL - Server you want to start the hack from, i.e. any public servers, purchased servers or 'home'\\n  //\\n  // EXAMPLE 1: run masterHack.js joesguns\\n  // This will start hacking 'joesguns' using the RAM of 'joesguns'\\n  //\\n  // EXAMPLE 2: run masterHack.js joesguns s1\\n  // This will start hacking 'joesguns' using the RAM of my purchased server 's1'\\n  //\\n  // This 'masterHack.js' process will stay active on whatever server you execute it from.\\n  // I usually start it from 'home', then I can track all my earnings in one place.\\n  // Keep in mind, when using 'home' as second parameter the script might use all available RAM\\n  // and you might become unable to execute any other scripts on 'home' until you kill the process.\\n\\n  var target = ns.args[0];\\n  var serverToHackFrom = target; // For single argument calls - server will hack itself\\n  var hackScript = \\\"hack.js\\\";\\n  var growScript = \\\"grow.js\\\";\\n  var weakenScript = \\\"weaken.js\\\";\\n  var hackScriptRAM = ns.getScriptRam(hackScript);\\n  var growScriptRAM = ns.getScriptRam(growScript);\\n  var serverMaxMoney = ns.getServerMaxMoney(target);\\n  var serverGrowthPercentage = ns.getServerGrowth(target) / 100;\\n  var serverMaxRAM;\\n  var serverGrowthRate;\\n  var moneyThresh = serverMaxMoney * 0.9; // 0.90 to maintain near 100% server money.  You can use 0.75 when starting out/using low thread counts\\n  var securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n  var currentServerMoney;\\n  var currentServerSecurity;\\n  var useThreadsHack;\\n  var possibleThreads;\\n  var maxHackFactor = 0.001;\\n  var growWeakenRatio = 0.9; // How many threads are used for growing vs. weaking (90:10).\\n  var sleepTime;\\n  var cores = 1; // I didn't bother with cores for now. Uncomment the line 51 if you want to use this.\\n  var coreMultiplier;\\n  const hackSecurityIncrease = 0.002; // Yes these values are constant. Grow security increase is hack * 2 = 0.004 per thread. hackAnalyzeSecurity() just wastes RAM and this script is too big already.\\n  const serverMaxGrowthRate = 1.0035; // Taken from the source code. I couldn't find a way to calculate the future growth amount without checking the src code for the growthAnalyze() function.\\n  const serverBaseGrowthRate = 1.03; // Taken from the source code\\n  const bitNodeMultiplierServerGrowthRate = 1; // Adjust this according to your BitNode as long as you are not in BN5 or don't have SF-5. In BN5 or with SF-5 you can use ns.getBitNodeMultipliers().ServerGrowthRate instead.\\n  // Check https://github.com/danielyxie/bitburner/blob/62ac7f7d170b14bb7a9988411d7c6f17e690f058/src/BitNode/BitNode.tsx and search for the initBitNodeMultipliers function, there you will find all the different multipliers.\\n\\n  // If second argument is provided, hack will run from this server instead\\n  if (ns.args[1]) {\\n    serverToHackFrom = ns.args[1];\\n  }\\n  serverMaxRAM = ns.getServerMaxRam(serverToHackFrom);\\n  // cores = ns.getServer(serverToHackFrom).cpuCores; // Not sure if this is relevant anywhere outside of 'home'\\n  coreMultiplier = 1 + (cores - 1) / 16;\\n\\n  // Gain root access. Make sure you have the nuke.js script on 'home'\\n  if (!ns.hasRootAccess(target)) {\\n    ns.exec(\\\"nuke.js\\\", \\\"home\\\", 1, target);\\n    await ns.sleep(2000);\\n  }\\n\\n  // Copy the work scripts, if not already on server\\n  if (!ns.fileExists(hackScript, serverToHackFrom)) {\\n    await ns.scp(hackScript, \\\"home\\\", serverToHackFrom);\\n  }\\n  if (!ns.fileExists(growScript, serverToHackFrom)) {\\n    await ns.scp(growScript, \\\"home\\\", serverToHackFrom);\\n  }\\n  if (!ns.fileExists(weakenScript, serverToHackFrom)) {\\n    await ns.scp(weakenScript, \\\"home\\\", serverToHackFrom);\\n  }\\n\\n  // To prevent the script from crashing/terminating after closing and restarting the game.\\n  while (\\n    ns.isRunning(hackScript, serverToHackFrom, target) ||\\n    ns.isRunning(growScript, serverToHackFrom, target) ||\\n    ns.isRunning(weakenScript, serverToHackFrom, target)\\n  ) {\\n    await ns.sleep(10000);\\n  }\\n\\n  // Main loop - will terminate if no RAM available\\n  while (\\n    1 <\\n    (possibleThreads = Math.floor(\\n      (serverMaxRAM - ns.getServerUsedRam(serverToHackFrom)) / growScriptRAM\\n    ))\\n  ) {\\n    currentServerMoney = ns.getServerMoneyAvailable(target);\\n    currentServerSecurity = ns.getServerSecurityLevel(target);\\n\\n    // The first to cases are for new servers with high SECURITY LEVELS and to quickly grow the server to above the threshold\\n    if (\\n      currentServerSecurity > securityThresh &&\\n      currentServerMoney < moneyThresh\\n    ) {\\n      sleepTime = ns.getWeakenTime(target) + 1000; // Added 1 second to the 'sleepTime' variables to prevent any issues with overlapping work scripts\\n      ns.exec(\\n        growScript,\\n        serverToHackFrom,\\n        Math.ceil(possibleThreads / 2),\\n        target\\n      );\\n      ns.exec(\\n        weakenScript,\\n        serverToHackFrom,\\n        Math.floor(possibleThreads / 2),\\n        target\\n      );\\n      await ns.sleep(sleepTime); // wait for the weaken command to finish\\n    } else if (currentServerMoney < moneyThresh) {\\n      sleepTime = ns.getWeakenTime(target) + 1000;\\n      ns.exec(\\n        growScript,\\n        serverToHackFrom,\\n        Math.floor(possibleThreads * growWeakenRatio),\\n        target\\n      );\\n      ns.exec(\\n        weakenScript,\\n        serverToHackFrom,\\n        Math.ceil(possibleThreads * (1 - growWeakenRatio)),\\n        target\\n      );\\n      await ns.sleep(sleepTime); // wait for the weaken command to finish\\n    } else {\\n      // Define max amount that can be restored with one grow (using all available threads) and therefore will be used to define hack threads.\\n      // This loop narrows the hack factor to the best possible value and considers the necessary growth threads AFTER the hack has been performed, since\\n      // the work time is determined with SECURITY LEVEL before start, but the grow amount is determined using the updated SECURITY LEVEL when grow() finishes.\\n      // The code/formula for calculating the grow threads (line 101 - 104) is fully taken from the 'numCycleForGrowth' function that is used by growthAnalyze and others in the source code. I'm not that smort. I simply adjusted it to my needs.\\n      // Maybe they could implement the possibility to give growthAnalyze additional security levels/'hackDifficulty' as a parameter. That way you don't need to use getHackingMultipliers() and save >> 4 << GB.\\n      // Also I didn't bother optimizing the 'growWeakenRatio', as 90% is good enough already. It will be just a few more hack threads, if any at all - even with large RAM sizes.\\n      while (\\n        maxHackFactor < 0.999 &&\\n        Math.floor(\\n          (possibleThreads / growScriptRAM -\\n            (useThreadsHack = Math.floor(\\n              ns.hackAnalyzeThreads(target, currentServerMoney * maxHackFactor)\\n            )) /\\n              hackScriptRAM) *\\n            growScriptRAM *\\n            growWeakenRatio\\n        ) >\\n          Math.floor(\\n            Math.log(serverMaxMoney / (serverMaxMoney * (1 - maxHackFactor))) /\\n              (Math.log(\\n                (serverGrowthRate =\\n                  1 +\\n                  (serverBaseGrowthRate - 1) /\\n                    (currentServerSecurity +\\n                      hackSecurityIncrease * useThreadsHack)) >\\n                  serverMaxGrowthRate\\n                  ? serverMaxGrowthRate\\n                  : serverGrowthRate\\n              ) *\\n                ns.getHackingMultipliers().growth *\\n                serverGrowthPercentage *\\n                bitNodeMultiplierServerGrowthRate *\\n                coreMultiplier)\\n          )\\n      ) {\\n        maxHackFactor += 0.001; // increase by 0.1% with each iteration\\n      }\\n      maxHackFactor -= 0.001; // Since it's more than 'possibleThreads' can handle now, we need to dial it back once.\\n      sleepTime = ns.getHackTime(target) + 1000;\\n      useThreadsHack = Math.min(useThreadsHack, possibleThreads); // Prevents going above RAM limit or hacking too much\\n      ns.tprint(\\n        `threads for hacking ${useThreadsHack} = min(${useThreadsHack},${possibleThreads})`\\n      );\\n      if (useThreadsHack > 0) {\\n        ns.exec(hackScript, serverToHackFrom, useThreadsHack, target);\\n      }\\n      possibleThreads = Math.floor(\\n        (serverMaxRAM - ns.getServerUsedRam(serverToHackFrom)) / growScriptRAM\\n      );\\n      if (possibleThreads >= 2) {\\n        sleepTime = ns.getWeakenTime(target) + 1000;\\n        const growThreads = Math.floor(possibleThreads * growWeakenRatio);\\n        if (growThreads)\\n          ns.exec(growScript, serverToHackFrom, growThreads, target);\\n        ns.exec(\\n          weakenScript,\\n          serverToHackFrom,\\n          Math.ceil(possibleThreads * (1 - growWeakenRatio)),\\n          target\\n        );\\n      }\\n      await ns.sleep(sleepTime); // wait for the weaken command to finish\\n      maxHackFactor = 0.001;\\n    }\\n  }\\n  ns.tprint(\\n    \\\"Script was terminated. Not enough RAM available on '\\\" +\\n      serverToHackFrom +\\n      \\\"'.\\\"\\n  );\\n}\",\"filename\":\"/web/masterHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/web/masterHack.js\",\"url\":\"blob:file:///33c0237d-0cc3-409d-b3c3-5ef89f14c4fb\",\"moduleSequenceNumber\":107195}],\"dependents\":[],\"ramUsage\":9.55,\"server\":\"home\",\"moduleSequenceNumber\":457,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyzeThreads\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getHackingMultipliers\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar serv = ns.args[0];\\n\\tif(ns.fileExists(\\\"BruteSSH.exe\\\"))\\n\\t\\tns.brutessh(serv);\\n\\n\\tif(ns.fileExists(\\\"FTPCrack.exe\\\"))\\n\\t\\tns.ftpcrack(serv);\\n\\n\\tif(ns.fileExists(\\\"relaySMTP.exe\\\"))\\n\\t\\tns.relaysmtp(serv);\\n\\n\\tif(ns.fileExists(\\\"HTTPWorm.exe\\\"))\\n\\t\\tns.httpworm(serv);\\n\\n\\tif(ns.fileExists(\\\"SQLInject.exe\\\"))\\n\\t\\tns.sqlinject(serv);\\n\\n\\tns.nuke(serv);\\n}\",\"filename\":\"/web/nuke.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2,\"server\":\"home\",\"moduleSequenceNumber\":458,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst want_ram = ns.args[0]\\n\\n\\tconst psrvs = ns.getPurchasedServers().map(name => ({\\n\\t\\tname, ram:\\n\\t\\t\\tns.getServerMaxRam(name)\\n\\t}))\\n\\tfor (let srv of psrvs) {\\n\\t\\tns.tprint(`${srv.name} has ${srv.ram} GB`)\\n\\n\\t\\tif (srv.ram < want_ram) {\\n\\t\\t\\tns.tprint(\\\"uprageding \\\" + srv.name)\\n\\t\\t\\tns.killall(srv.name)\\n\\t\\t\\tns.deleteServer(srv.name)\\n\\t\\t\\tns.purchaseServer(srv.name, want_ram)\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"upgrade-pservs.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"upgrade-pservs.js\",\"url\":\"blob:file:///42b3fc06-1b95-4a15-8ab2-bc57a993a9f5\",\"moduleSequenceNumber\":38941}],\"dependents\":[],\"ramUsage\":8.9,\"server\":\"home\",\"moduleSequenceNumber\":459,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { idle_threads } from \\\"neo/get-idle-capa.js\\\";\\n\\n/** @param {import('../NS').NS} ns **/\\nexport function getNeededThreads(ns, server) {\\n  let money = ns.getServerMaxMoney(server) * 0.25;\\n  if (money === 0) money = 1;\\n  const maxMoney = ns.getServerMaxMoney(server);\\n  const minSec = ns.getServerMinSecurityLevel(server);\\n  const sec = ns.getServerSecurityLevel(server);\\n\\n  const thack = Math.ceil(ns.hackAnalyzeThreads(server, money));\\n  const tgrow = Math.ceil(\\n    ns.growthAnalyze(server, maxMoney / (maxMoney - money))\\n  );\\n\\n  const tweaken = Math.ceil((sec - minSec) * 20);\\n  const tweaken2 = Math.ceil(tgrow / 12.5);\\n\\n  /* ns.tprint(\\n    JSON.stringify({ money, maxMoney, minSec, sec, thack, tgrow, tweaken })\\n  ); */\\n\\n  return { thack, tgrow, tweaken, tweaken2 };\\n}\\n\\nexport function after(millis) {\\n  return Date.now() + millis;\\n}\\n\\n/** @param {import('../NS').NS} ns **/\\nexport function launch(ns, capa, threads, action, target, wait_ms) {\\n  let have = 0;\\n  for (const srv of capa.sort((a, b) => a.threads - b.threads)) {\\n    const launchThreads = Math.min(srv.threads, threads - have);\\n    if (!launchThreads || launchThreads < 0) continue;\\n    const pid = ns.exec(\\n      `${action}-after.js`,\\n      srv.name,\\n      launchThreads,\\n      target,\\n      wait_ms,\\n      `rnd-${Math.random()}`\\n    );\\n\\n    /*ns.tprint(\\n      `launching ${action} on ${\\n        srv.name\\n      } with ${launchThreads} threads, target ${target}, waittime ${ns.tFormat(\\n        wait_ms\\n      )}`\\n    ); */\\n    if (pid !== 0) have += launchThreads;\\n    else\\n      ns.print(\\n        `failed to launch on ${srv.name}: ${action} -t ${launchThreads} ${target}, free ${srv.threads}`\\n      );\\n    if (have >= threads) {\\n      return true;\\n    }\\n  }\\n  return false;\\n}\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const flags = ns.flags([\\n    [\\\"refreshrate\\\", 200],\\n    [\\\"help\\\", false],\\n  ]);\\n  if (flags._.length === 0 || flags.help) {\\n    ns.tprint(\\\"This script monitors and starts campaigns for a server.\\\");\\n    ns.tprint(`USAGE: run ${ns.getScriptName()} SERVER_NAME`);\\n    ns.tprint(\\\"Example:\\\");\\n    ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n    return;\\n  }\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  let active = []; //active campaigns\\n  while (true) {\\n    const server = flags._[0];\\n    const { thack, tgrow, tweaken, tweaken2 } = getNeededThreads(ns, server);\\n\\n    const maxMoney = ns.getServerMaxMoney(server);\\n    let money = ns.getServerMoneyAvailable(server);\\n    if (money === 0) money = 1;\\n    const money_pct = (money / maxMoney) * 100;\\n    const protection =\\n      ns.getServerSecurityLevel(server) - ns.getServerMinSecurityLevel(server);\\n\\n    ns.clearLog(server);\\n    ns.print(`${server}:`);\\n    ns.print(\\n      ` $_______: ${ns.nFormat(money, \\\"$0.000a\\\")} / ${ns.nFormat(\\n        maxMoney,\\n        \\\"$0.000a\\\"\\n      )} (${money_pct.toFixed(2)}%)`\\n    );\\n\\n    const hacktime = ns.getHackTime(server);\\n    const growtime = ns.getGrowTime(server);\\n    const weakentime = ns.getWeakenTime(server);\\n\\n    ns.print(` security: +${protection.toFixed(2)}`);\\n    ns.print(` hack____: ${ns.tFormat(hacktime)} (t=${thack})`);\\n    ns.print(` grow____: ${ns.tFormat(growtime)} (t=${tgrow})`);\\n    ns.print(` weaken__: ${ns.tFormat(weakentime)} (t=${tweaken})`);\\n    ns.print(` weaken_2: ${ns.tFormat(weakentime)} (t=${tweaken2})`);\\n\\n    // get idle capa\\n    let { capa, total } = idle_threads(ns, 1.75);\\n\\n    if (protection > 1) {\\n      const otherWeakeners = active.filter((entry) => entry.type == \\\"weaken\\\");\\n      const otherWeakenThreads = otherWeakeners\\n        .map((entry) => entry.threads)\\n        .reduce((sum, threads) => sum + threads, 0);\\n      if (otherWeakeners.length == 0 || otherWeakenThreads < tweaken) {\\n        const launchThreads = Math.min(total, tweaken - otherWeakenThreads);\\n        if (launch(ns, capa, launchThreads, \\\"weaken\\\", server, 0))\\n          active.push({\\n            type: \\\"weaken\\\",\\n            threads: launchThreads,\\n            dur: weakentime,\\n            start: 0,\\n            eta: after(weakentime),\\n          });\\n        else\\n          ns.print(\\n            `expedite weaken with ${launchThreads} of ${total} threads failed`\\n          );\\n\\n        const update = idle_threads(ns, 1.75);\\n        capa = update.capa;\\n        total = update.total;\\n      }\\n    }\\n\\n    // prep server money\\n    if (money_pct < 99) {\\n      const otherGrowers = active.filter((entry) => entry.type == \\\"grow\\\");\\n      const otherGrowThreads = otherGrowers\\n        .map((entry) => entry.threads)\\n        .reduce((sum, threads) => sum + threads, 0);\\n      if (otherGrowers.length == 0 || otherGrowThreads < tgrow) {\\n        const launchThreads = Math.min(total, tgrow - otherGrowThreads);\\n        if (launch(ns, capa, launchThreads, \\\"grow\\\", server, 0))\\n          active.push({\\n            type: \\\"grow\\\",\\n            threads: launchThreads,\\n            dur: growtime,\\n            start: 0,\\n            eta: after(growtime),\\n          });\\n        else\\n          ns.print(\\n            `expedite growth with ${launchThreads} of ${total} threads failed`\\n          );\\n        const update = idle_threads(ns, 1.7);\\n        capa = update.capa;\\n        total = update.total;\\n      }\\n    }\\n\\n    // server is ok, launch campaign\\n    if (money_pct >= 95 && protection <= 2) {\\n      const buffer = 200; //ms\\n\\n      // hwgw\\n      if (total >= thack + tweaken2 + tgrow + tweaken) {\\n        let wait_h1, wait_w1_1, wait_g1, wait_w1_2;\\n\\n        // calc wait times based on longest action\\n        wait_w1_1 = buffer;\\n        wait_w1_2 = weakentime + 3 * buffer - weakentime;\\n        wait_g1 = weakentime + 2 * buffer - growtime;\\n        wait_h1 = weakentime - hacktime;\\n\\n        // launch immediately, script will active wait (consider launching delayed)\\n        if (launch(ns, capa, tweaken, \\\"weaken\\\", server, wait_w1_1))\\n          active.push({\\n            type: \\\"weaken\\\",\\n            threads: tweaken,\\n            dur: weakentime,\\n            start: after(wait_w1_1),\\n            eta: after(wait_w1_1 + weakentime),\\n          });\\n        else ns.print(\\\"w1 failed\\\");\\n        let update = idle_threads(ns, 1.7);\\n        capa = update.capa;\\n        total = update.total;\\n\\n        if (launch(ns, capa, tweaken2, \\\"weaken\\\", server, wait_w1_2))\\n          active.push({\\n            type: \\\"weaken\\\",\\n            threads: tweaken,\\n            dur: weakentime,\\n            start: after(wait_w1_2),\\n            eta: after(wait_w1_2 + weakentime),\\n          });\\n        else ns.print(\\\"w2 failed\\\");\\n        update = idle_threads(ns, 1.7);\\n        capa = update.capa;\\n        total = update.total;\\n\\n        if (launch(ns, capa, tgrow, \\\"grow\\\", server, wait_g1))\\n          active.push({\\n            type: \\\"grow\\\",\\n            threads: tgrow,\\n            dur: growtime,\\n            start: after(wait_g1),\\n            eta: after(wait_g1 + growtime),\\n          });\\n        else ns.print(\\\"g failed\\\");\\n        update = idle_threads(ns, 1.7);\\n        capa = update.capa;\\n        total = update.total;\\n\\n        if (launch(ns, capa, thack, \\\"hack\\\", server, wait_h1))\\n          active.push({\\n            type: \\\"hack\\\",\\n            threads: thack,\\n            dur: hacktime,\\n            start: after(wait_h1),\\n            eta: after(wait_h1 + hacktime),\\n          });\\n        else ns.print(\\\"h failed\\\");\\n        update = idle_threads(ns, 1.7);\\n        capa = update.capa;\\n        total = update.total;\\n      } else {\\n        ns.print(`free: ${total}, need: ${thack + tweaken + tgrow + tweaken}`);\\n        // lets just hack things\\n        /*      const now = Math.random() * 10;\\n        if (launch(ns, capa, thack, \\\"hack\\\", server, now))\\n          active.push({\\n            type: \\\"hack\\\",\\n            threads: thack,\\n            dur: hacktime,\\n            start: after(now),\\n            eta: after(now + hacktime),\\n          });\\n        else ns.print(\\\"h failed\\\");\\n        const update = idle_threads(ns, 1.7);\\n        capa = update.capa;\\n        total = update.total;\\n      }*/\\n      }\\n    }\\n\\n    const now = Date.now();\\n    const waiting = active.filter((active) => active.start > now);\\n    const running = active.filter(\\n      (active) => active.start <= now && active.eta >= now\\n    );\\n    const done = active.filter((active) => active.eta < now);\\n    active = active.filter((active) => active.eta >= now);\\n\\n    ns.print(\\n      `waiting: ${waiting.length}, running: ${running.length}, done: ${\\n        done.length\\n      },free: ${total}, need: ${thack + tweaken + tgrow + tweaken}`\\n    );\\n    await ns.sleep(200);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return data.servers;\\n}\",\"filename\":\"/neo/coordinate.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///7729c2b7-e5d8-4c69-a695-bb26b2bc6e52\",\"moduleSequenceNumber\":408},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///35def195-6ae9-4b92-9091-178d8759a6df\",\"moduleSequenceNumber\":461},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///58012d08-bc4b-4609-ac99-1280f5a19387\",\"moduleSequenceNumber\":802}],\"dependents\":[],\"ramUsage\":5.8,\"server\":\"home\",\"moduleSequenceNumber\":802,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hackAnalyzeThreads\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan } from \\\"hacker-lib.js\\\";\\n\\n/** @param {import('../NS').NS} ns **/\\nexport function idle_threads(ns, size) {\\n  const srvs = scan(ns).filter((srv) => ns.hasRootAccess(srv));\\n  const capa = srvs.map((srv) => {\\n    let freeRam = ns.getServerMaxRam(srv) - ns.getServerUsedRam(srv);\\n    if (srv == \\\"home\\\") {\\n      freeRam = Math.max(freeRam - 20, 0);\\n    }\\n    const idleThreads = Math.floor(freeRam / size);\\n    return { name: srv, threads: idleThreads, free: freeRam };\\n  });\\n  const total = capa.reduce((sum, elem) => sum + elem.threads, 0);\\n  return { capa, total };\\n}\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const { capa, total } = idle_threads(ns, 1.7);\\n  for (const elem of capa) {\\n    if (elem.threads > 0) {\\n      ns.tprint(`${elem.name}: ${elem.threads} (${elem.free} GB)`);\\n    }\\n  }\\n  ns.tprint(total + \\\" threads can be added\\\");\\n}\",\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///e4ea4cd9-7d09-41b2-9df2-71a6b91ed92f\",\"moduleSequenceNumber\":14317},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///ccf4644d-8e53-4cc3-be40-56856e910dc3\",\"moduleSequenceNumber\":14368}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":461,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"/neo/grow-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":462,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"/neo/hack-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/neo/hack-after.js\",\"url\":\"blob:file:///6f2dd913-09ac-4f6b-9201-35e0122f11c7\",\"moduleSequenceNumber\":78666}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"moduleSequenceNumber\":463,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"/neo/weaken-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":464,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c95f9959-9d35-4a1c-ae10-7757c1505a12\",\"moduleSequenceNumber\":852}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":852,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///7ba5c2d3-bf09-43ac-a622-34d444b3bc76\",\"moduleSequenceNumber\":8432}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"moduleSequenceNumber\":8432,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///4709275d-5de0-4016-ae5f-1a296d7b4717\",\"moduleSequenceNumber\":853}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":853,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { idle_threads } from \\\"neo/get-idle-capa.js\\\";\\nimport { launch } from \\\"neo/coordinate.js\\\";\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const { capa, total } = idle_threads(ns, 1.7);\\n  const threads = 10;\\n  const action = \\\"weaken\\\";\\n  const target = \\\"comptek\\\";\\n  const wait_ms = 0;\\n\\n  if (launch(ns, capa, threads, action, target, wait_ms)) {\\n    ns.tprintf(\\\"success\\\");\\n  } else ns.tprintf(\\\"failed\\\");\\n}\",\"filename\":\"/neo/single-launch.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///ba0fb9b7-12a1-4493-b21d-fc84df3ff9a1\",\"moduleSequenceNumber\":125102},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///1072684e-8bc5-4e20-8779-26f7f4b46074\",\"moduleSequenceNumber\":125096},{\"filename\":\"/neo/coordinate.js\",\"url\":\"blob:file:///43f05307-550d-4312-8934-37a89b85154a\",\"moduleSequenceNumber\":125099},{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///03356182-89e7-4f93-8c58-5d2e21d81a97\",\"moduleSequenceNumber\":125102},{\"filename\":\"/neo/get-idle-capa.js\",\"url\":\"blob:file:///9dccaf4e-12d5-4d06-aefa-ea00081eaa88\",\"moduleSequenceNumber\":125096},{\"filename\":\"/neo/single-launch.js\",\"url\":\"blob:file:///82dca534-9d81-4046-8eb0-7f5094888789\",\"moduleSequenceNumber\":125153}],\"dependents\":[],\"ramUsage\":3.25,\"server\":\"home\",\"moduleSequenceNumber\":468,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { scan, sorted_targets } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const net = scan(ns);\\n\\n  // determine ports we can open\\n  let can_ports = 0;\\n  if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"FTPCrack.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"relaySMTP.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"HTTPWorm.exe\\\", \\\"home\\\")) can_ports++;\\n  if (ns.fileExists(\\\"SQLInject.exe\\\", \\\"home\\\")) can_ports++;\\n\\n  // check ma 1337 skillz\\n  const skillz = ns.getHackingLevel();\\n\\n  const pwnd = net.filter((srv) => ns.hasRootAccess(srv));\\n  const unpwnd = net.filter((srv) => !pwnd.includes(srv));\\n  const tgts = unpwnd.filter((srv) => {\\n    const needPorts = ns.getServerNumPortsRequired(srv);\\n    const needSkillz = ns.getServerRequiredHackingLevel(srv);\\n    return needPorts <= can_ports && needSkillz <= skillz;\\n  });\\n\\n  ns.tprintf(\\n    `got ${pwnd.length} p0wnd servers, out of ${net.length}, found ${tgts.length} targets`\\n  );\\n\\n  tgts.forEach((srv) => {\\n    const needPorts = ns.getServerNumPortsRequired(srv);\\n    const needSkillz = ns.getServerRequiredHackingLevel(srv);\\n    if (needPorts <= can_ports && needSkillz <= skillz) {\\n      ns.tprintf(`tgt ${srv}`);\\n      if (needPorts >= 1) ns.brutessh(srv);\\n      if (needPorts >= 2) ns.ftpcrack(srv);\\n      if (needPorts >= 3) ns.relaysmtp(srv);\\n      if (needPorts >= 4) ns.httpworm(srv);\\n      if (needPorts >= 5) ns.sqlinject(srv);\\n      ns.nuke(srv);\\n      ns.tprintf(`p0wnd ${srv}`);\\n    }\\n  });\\n\\n  if (ns.fileExists(\\\"/neo/coordinate.js\\\", \\\"home\\\")) {\\n    const all_tgt = sorted_targets(ns).map((elem) => elem.name);\\n    const output = all_tgt.splice(0, 5);\\n\\n    ns.tprint(\\\"coordinaterd attack on: \\\" + output.join(\\\" \\\"));\\n\\n    output.forEach((target) => {\\n      ns.run(\\\"/neo/coordinate.js\\\", 1, target);\\n    });\\n  } else {\\n    ns.tprint(\\\"no neo/coordinate.js\\\");\\n  }\\n}\",\"filename\":\"/neo/runc.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///6d003467-39b9-456d-b724-578ac2e71986\",\"moduleSequenceNumber\":408},{\"filename\":\"/neo/runc.js\",\"url\":\"blob:file:///d6a101b2-188b-47fb-bc78-4905649935a8\",\"moduleSequenceNumber\":797}],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"home\",\"moduleSequenceNumber\":797,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = -54000;\\n  ns.disableLog(\\\"ALL\\\");\\n  ns.tail();\\n  while (true) {\\n    ns.clearLog();\\n\\n    const karma = ns.heart.break();\\n    if (karma > target)\\n      ns.print(`Current Karma : ${karma}, ${(karma / target).toFixed(2)}%`);\\n\\n    const crime = \\\"Homicide\\\";\\n\\n    const { karma: dkarma, money, time, ...stats } = ns.getCrimeStats(crime);\\n    ns.print(`${crime}, chance: ${(ns.getCrimeChance(crime) * 100.0).toFixed(\\n      2\\n    )}%,\\nKarma: -${dkarma}, dur: ${ns.tFormat(time)}, gain: ${ns.nFormat(\\n      money,\\n      \\\"$0.000a\\\"\\n    )}\\n   ${JSON.stringify(stats, null, 2)}`);\\n    const dur = ns.commitCrime(crime);\\n    await ns.asleep(dur);\\n  }\\n}\",\"filename\":\"/sing/killkill.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sing/killkill.js\",\"url\":\"blob:file:///9c5b6a88-0e8c-43d9-9b29-d16f5882d57a\",\"moduleSequenceNumber\":28747}],\"dependents\":[],\"ramUsage\":16.6,\"server\":\"home\",\"moduleSequenceNumber\":470,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getCrimeStats\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getCrimeChance\",\"cost\":5},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = -54000;\\n  ns.disableLog(\\\"ALL\\\");\\n  ns.tail();\\n  while (true) {\\n    ns.clearLog();\\n\\n    const karma = ns.heart.break();\\n    if (karma > target)\\n      ns.print(`Current Karma : ${karma}, ${(karma / target).toFixed(2)}%`);\\n\\n    const crime = \\\"Mug someone\\\";\\n\\n    const { karma: dkarma, money, time, ...stats } = ns.getCrimeStats(crime);\\n    ns.print(`${crime}, chance: ${(ns.getCrimeChance(crime) * 100.0).toFixed(\\n      2\\n    )}%, \\nKarma: -${dkarma}, dur: ${ns.tFormat(time)}, gain: ${ns.nFormat(\\n      money,\\n      \\\"$0.000a\\\"\\n    )}\\n${JSON.stringify(stats, null, 2)}`);\\n\\n    ns.print(\\n      `Homicide chance: ${(ns.getCrimeChance(\\\"Homicide\\\") * 100.0).toFixed(2)}%`\\n    );\\n\\n    ns.commitCrime(crime);\\n    await ns.asleep(5000);\\n  }\\n}\",\"filename\":\"/sing/mugshot.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sing/mugshot.js\",\"url\":\"blob:file:///8340634e-df94-4266-b511-bd69d6bddbf5\",\"moduleSequenceNumber\":1186}],\"dependents\":[],\"ramUsage\":16.6,\"server\":\"home\",\"moduleSequenceNumber\":471,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getCrimeStats\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getCrimeChance\",\"cost\":5},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const crimes = [\\n  \\\"Shoplift\\\",\\n  \\\"Rob Store\\\",\\n  \\\"Mug\\\",\\n  \\\"Larceny\\\",\\n  \\\"Deal Drugs\\\",\\n  \\\"Bond Forgery\\\",\\n  \\\"Traffick Arms\\\",\\n  \\\"Homicide\\\",\\n  \\\"Grand Theft Auto\\\",\\n  \\\"Kidnap\\\",\\n  \\\"Assassination\\\",\\n  \\\"Heist\\\",\\n];\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  crimes.forEach((crime) => {\\n    const { karma, money, time, ...stats } = ns.getCrimeStats(crime);\\n    ns.tprint(`${crime}, chance: ${(ns.getCrimeChance(crime) * 100.0).toFixed(\\n      2\\n    )}%, Karma: ${karma}, dur: ${ns.tFormat(time)}, gain: ${ns.nFormat(\\n      money,\\n      \\\"$0.000a\\\"\\n    )}\\n   ${JSON.stringify(stats, null, 2)}`);\\n  });\\n}\",\"filename\":\"/sing/menu.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sing/menu.js\",\"url\":\"blob:file:///fed2890b-b5b7-46c8-b2f1-9c043158adcd\",\"moduleSequenceNumber\":23369}],\"dependents\":[],\"ramUsage\":11.6,\"server\":\"home\",\"moduleSequenceNumber\":472,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getCrimeStats\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getCrimeChance\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  while (true) {\\n    const time = ns.commitCrime(\\\"Heist\\\");\\n    await ns.asleep(time);\\n  }\\n}\",\"filename\":\"/sing/moneyjob.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sing/moneyjob.js\",\"url\":\"blob:file:///1b0c811f-55d1-4079-88ac-02a7f46a05b9\",\"moduleSequenceNumber\":4365}],\"dependents\":[],\"ramUsage\":6.6,\"server\":\"home\",\"moduleSequenceNumber\":473,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  while (true) {\\n    const members = ns.gang.getMemberNames();\\n    const tasks = ns.gang\\n      .getTaskNames()\\n      .map((name) => ns.gang.getTaskStats(name));\\n\\n    const trainTask = tasks.find((task) => {\\n      return task.name.toLowerCase().includes(\\\"train\\\") && task.strWeight > 0;\\n    });\\n\\n    if (ns.gang.canRecruitMember()) {\\n      const newGuy = `r00kie-${members.length}`;\\n      if (ns.gang.recruitMember(newGuy)) {\\n        ns.tprint(\\\"new gang member : \\\" + newGuy);\\n        members.push(newGuy);\\n        ns.gang.setMemberTask(newGuy, trainTask.name);\\n      }\\n    }\\n\\n    const equipment = ns.gang\\n      .getEquipmentNames()\\n      .map((name) => ({ name, ...ns.gang.getEquipmentStats(name) }))\\n      .map((stats) => ({\\n        ...stats,\\n        price: ns.gang.getEquipmentCost(stats.name),\\n        type: ns.gang.getEquipmentType(stats.name),\\n      }))\\n      .filter((stats) => stats.str > 0 || stats.def > 0 || stats.agi > 0);\\n\\n    for (let ganger of members.map((name) => ({\\n      name,\\n      ...ns.gang.getMemberInformation(name),\\n    }))) {\\n      const hasEquip = [...ganger.augmentations, ...ganger.upgrades];\\n      const needs = equipment.filter((equip) => !hasEquip.includes(equip.name));\\n\\n      ns.print(\\n        `gang member ${ganger.name} has: ${hasEquip.join(\\\", \\\")}, needs: ${needs\\n          .map((eqp) => eqp.name)\\n          .join(\\\", \\\")}`\\n      );\\n\\n      for (let eqp of needs) {\\n        if (eqp.price < ns.getServerMoneyAvailable(\\\"home\\\")) {\\n          ns.tprint(`purchased ${eqp.name} for ${ganger.name}`);\\n          ns.gang.purchaseEquipment(ganger.name, eqp.name);\\n        }\\n      }\\n    }\\n\\n    await ns.sleep(20);\\n  }\\n}\",\"filename\":\"gang-mgmt-combat.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"gang-mgmt-combat.js\",\"url\":\"blob:file:///bee832b8-f507-4ce2-b382-c4942675d903\",\"moduleSequenceNumber\":769}],\"dependents\":[],\"ramUsage\":22.7,\"server\":\"home\",\"moduleSequenceNumber\":474,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskStats\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getEquipmentStats\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentType\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  while (true) {\\n    const members = ns.gang.getMemberNames();\\n    const tasks = ns.gang\\n      .getTaskNames()\\n      .map((name) => ns.gang.getTaskStats(name));\\n\\n    const trainTask = tasks.find((task) => {\\n      return task.name.toLowerCase().includes(\\\"train\\\") && task.hackWeight > 0;\\n    });\\n\\n    if (ns.gang.canRecruitMember()) {\\n      const newGuy = `r00kie-${members.length}`;\\n      if (ns.gang.recruitMember(newGuy)) {\\n        ns.tprint(\\\"new gang member : \\\" + newGuy);\\n        members.push(newGuy);\\n        ns.gang.setMemberTask(newGuy, trainTask.name);\\n      }\\n    }\\n\\n    const equipment = ns.gang\\n      .getEquipmentNames()\\n      .map((name) => ({ name, ...ns.gang.getEquipmentStats(name) }))\\n      .map((stats) => ({\\n        ...stats,\\n        price: ns.gang.getEquipmentCost(stats.name),\\n        type: ns.gang.getEquipmentType(stats.name),\\n      }))\\n      .filter((stats) => stats.hack > 0);\\n\\n    for (let ganger of members.map((name) => ({\\n      name,\\n      ...ns.gang.getMemberInformation(name),\\n    }))) {\\n      const hasEquip = [...ganger.augmentations, ...ganger.upgrades];\\n      const needs = equipment.filter((equip) => !hasEquip.includes(equip.name));\\n\\n      ns.print(\\n        `gang member ${ganger.name} has: ${hasEquip.join(\\\", \\\")}, needs: ${needs\\n          .map((eqp) => eqp.name)\\n          .join(\\\", \\\")}`\\n      );\\n\\n      for (let eqp of needs) {\\n        if (eqp.price < ns.getServerMoneyAvailable(\\\"home\\\")) {\\n          ns.tprint(`purchased ${eqp.name} for ${ganger.name}`);\\n          ns.gang.purchaseEquipment(ganger.name, eqp.name);\\n        }\\n      }\\n    }\\n\\n    await ns.sleep(20);\\n  }\\n}\",\"filename\":\"gang-mgmt-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":22.8,\"server\":\"home\",\"moduleSequenceNumber\":475,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskStats\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getEquipmentStats\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentType\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const crimes = [\\n  \\\"Shoplift\\\",\\n  \\\"Rob Store\\\",\\n  \\\"Mug\\\",\\n  \\\"Larceny\\\",\\n  \\\"Deal Drugs\\\",\\n  \\\"Bond Forgery\\\",\\n  \\\"Traffick Arms\\\",\\n  \\\"Homicide\\\",\\n  \\\"Grand Theft Auto\\\",\\n  \\\"Kidnap\\\",\\n  \\\"Assassination\\\",\\n  \\\"Heist\\\",\\n];\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const crime = ns.args.join(\\\" \\\");\\n  const target = -54000;\\n  ns.disableLog(\\\"ALL\\\");\\n  ns.tail();\\n  while (true) {\\n    ns.clearLog();\\n\\n    const { karma: dkarma, money, time, ...stats } = ns.getCrimeStats(crime);\\n    const karma = ns.heart.break();\\n\\n    if (karma > target)\\n      ns.print(\\n        `Current Karma : ${karma}, ${(karma / target).toFixed(\\n          2\\n        )}%, delta Karma: -${dkarma}`\\n      );\\n\\n    ns.print(`${crime}, chance: ${(ns.getCrimeChance(crime) * 100.0).toFixed(\\n      2\\n    )}%, \\n    dur: ${ns.tFormat(time)}, gain: ${ns.nFormat(money, \\\"$0.000a\\\")}\\n   ${JSON.stringify(stats, null, 2)}`);\\n    const dur = ns.commitCrime(crime);\\n    await ns.asleep(dur);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [...crimes];\\n}\",\"filename\":\"/sing/crimeloop.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sing/crimeloop.js\",\"url\":\"blob:file:///c86c634a-979b-433c-96a4-20c548c0d7f4\",\"moduleSequenceNumber\":775}],\"dependents\":[],\"ramUsage\":16.6,\"server\":\"home\",\"moduleSequenceNumber\":476,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getCrimeStats\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getCrimeChance\",\"cost\":5},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"eyJjdG9yIjoiQml0YnVybmVyU2F2ZU9iamVjdCIsImRhdGEiOnsiUGxheWVyU2F2ZSI6IntcImN0b3JcIjpcIlBsYXllck9iamVjdFwiLFwiZGF0YVwiOntcImhhY2tpbmdcIjozODEsXCJocFwiOjMzLFwibWF4X2hwXCI6MzMsXCJzdHJlbmd0aFwiOjIxMyxcImRlZmVuc2VcIjoyMzQsXCJkZXh0ZXJpdHlcIjoyNTMsXCJhZ2lsaXR5XCI6MjM0LFwiY2hhcmlzbWFcIjoyMDcsXCJpbnRlbGxpZ2VuY2VcIjowLFwiaGFja2luZ19jaGFuY2VfbXVsdFwiOjEuMzE4Nzg1MjgsXCJoYWNraW5nX3NwZWVkX211bHRcIjoxLjMxODc4NTI4LFwiaGFja2luZ19tb25leV9tdWx0XCI6MS4zMTg3ODUyOCxcImhhY2tpbmdfZ3Jvd19tdWx0XCI6MS4zMTg3ODUyOCxcImhhY2tpbmdfZXhwXCI6MjgxMzQ1NC42NDY4NjQ4NjQ1LFwic3RyZW5ndGhfZXhwXCI6NTA1NDAuMTQxOTM4MTE3NDY0LFwiZGVmZW5zZV9leHBcIjo1MDU0MC4xNDE5MzgxMTc0NjQsXCJkZXh0ZXJpdHlfZXhwXCI6NTgxMjEuMTYzMjI4ODI3MDEsXCJhZ2lsaXR5X2V4cFwiOjUwNTU5LjkyMzcxNzMxNzQ2LFwiY2hhcmlzbWFfZXhwXCI6MjY2OTYuNzY5MTUxNTU2ODczLFwiaW50ZWxsaWdlbmNlX2V4cFwiOjAsXCJoYWNraW5nX211bHRcIjoxLjM4NDcyNDU0NCxcInN0cmVuZ3RoX211bHRcIjoxLjQ1MDY2MzgwODAwMDAwMDMsXCJkZWZlbnNlX211bHRcIjoxLjU5NTczMDE4ODgwMDAwMDQsXCJkZXh0ZXJpdHlfbXVsdFwiOjEuNjc1NTE2Njk4MjQwMDAwNSxcImFnaWxpdHlfbXVsdFwiOjEuNTk5MzU2ODQ4MzIwMDAwNSxcImNoYXJpc21hX211bHRcIjoxLjYzNTI5Mzc0NzIsXCJoYWNraW5nX2V4cF9tdWx0XCI6MS4zMTg3ODUyOCxcInN0cmVuZ3RoX2V4cF9tdWx0XCI6MS4zMTg3ODUyOCxcImRlZmVuc2VfZXhwX211bHRcIjoxLjMxODc4NTI4LFwiZGV4dGVyaXR5X2V4cF9tdWx0XCI6MS41MTY2MDMwNzE5OTk5OTk5LFwiYWdpbGl0eV9leHBfbXVsdFwiOjEuMzE4Nzg1MjgsXCJjaGFyaXNtYV9leHBfbXVsdFwiOjEuMzE4Nzg1MjgsXCJjb21wYW55X3JlcF9tdWx0XCI6MS4zMTg3ODUyOCxcImZhY3Rpb25fcmVwX211bHRcIjoxLjMxODc4NTI4LFwibW9uZXlcIjo5MzM2MTc3NTcuODI1NDI1NCxcImNpdHlcIjpcIlNlY3Rvci0xMlwiLFwibG9jYXRpb25cIjpcIkNlbnRyYWwgSW50ZWxsaWdlbmNlIEFnZW5jeVwiLFwiam9ic1wiOntcIkNlbnRyYWwgSW50ZWxsaWdlbmNlIEFnZW5jeVwiOlwiU2VjdXJpdHkgR3VhcmRcIn0sXCJjb21wYW55TmFtZVwiOlwiQ2VudHJhbCBJbnRlbGxpZ2VuY2UgQWdlbmN5XCIsXCJjdXJyZW50U2VydmVyXCI6XCJob21lXCIsXCJwdXJjaGFzZWRTZXJ2ZXJzXCI6W1wicHNydi0wXCIsXCJwc3J2LTFcIixcInBzcnYtMlwiLFwicHNydi0zXCIsXCJwc3J2LTRcIixcInBzcnYtNVwiLFwicHNydi02XCIsXCJwc3J2LTdcIixcInBzcnYtOFwiLFwicHNydi05XCIsXCJwc3J2LTEwXCIsXCJwc3J2LTExXCIsXCJwc3J2LTEyXCIsXCJwc3J2LTEzXCIsXCJwc3J2LTE0XCIsXCJwc3J2LTE1XCIsXCJwc3J2LTE2XCIsXCJwc3J2LTE3XCIsXCJwc3J2LTE4XCIsXCJwc3J2LTE5XCIsXCJwc3J2LTIwXCIsXCJwc3J2LTIxXCIsXCJwc3J2LTIyXCIsXCJwc3J2LTIzXCIsXCJwc3J2LTI0XCJdLFwiaGFja25ldE5vZGVzXCI6W3tcImN0b3JcIjpcIkhhY2tuZXROb2RlXCIsXCJkYXRhXCI6e1wiY29yZXNcIjoxLFwibGV2ZWxcIjoxLFwibW9uZXlHYWluUmF0ZVBlclNlY29uZFwiOjAuMDk4OTA4ODk2LFwib25saW5lVGltZVNlY29uZHNcIjoxNjA1NjcuNjAwMDAwNzkwODcsXCJyYW1cIjoxLFwidG90YWxNb25leUdlbmVyYXRlZFwiOjE1ODgxLjU2NDA0OTE1NDgzNyxcIm5hbWVcIjpcImhhY2tuZXQtbm9kZS0wXCJ9fV0sXCJoYXNoTWFuYWdlclwiOntcImN0b3JcIjpcIkhhc2hNYW5hZ2VyXCIsXCJkYXRhXCI6e1wiY2FwYWNpdHlcIjowLFwiaGFzaGVzXCI6MCxcInVwZ3JhZGVzXCI6e1wiU2VsbCBmb3IgTW9uZXlcIjowLFwiU2VsbCBmb3IgQ29ycG9yYXRpb24gRnVuZHNcIjowLFwiUmVkdWNlIE1pbmltdW0gU2VjdXJpdHlcIjowLFwiSW5jcmVhc2UgTWF4aW11bSBNb25leVwiOjAsXCJJbXByb3ZlIFN0dWR5aW5nXCI6MCxcIkltcHJvdmUgR3ltIFRyYWluaW5nXCI6MCxcIkV4Y2hhbmdlIGZvciBDb3Jwb3JhdGlvbiBSZXNlYXJjaFwiOjAsXCJFeGNoYW5nZSBmb3IgQmxhZGVidXJuZXIgUmFua1wiOjAsXCJFeGNoYW5nZSBmb3IgQmxhZGVidXJuZXIgU1BcIjowLFwiR2VuZXJhdGUgQ29kaW5nIENvbnRyYWN0XCI6MH19fSxcImZhY3Rpb25zXCI6W1wiU2x1bSBTbmFrZXNcIixcIlNlY3Rvci0xMlwiLFwiVGhlIFN5bmRpY2F0ZVwiXSxcImZhY3Rpb25JbnZpdGF0aW9uc1wiOltdLFwicXVldWVkQXVnbWVudGF0aW9uc1wiOltdLFwiYXVnbWVudGF0aW9uc1wiOlt7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJTbWFydFNvbmFyIEltcGxhbnRcIn0se1wibGV2ZWxcIjoxLFwibmFtZVwiOlwiQ29tYmF0IFJpYiBJXCJ9LHtcImxldmVsXCI6MSxcIm5hbWVcIjpcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSVwifSx7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJMdW1pbkNsb2FraW5nLVYxIFNraW4gSW1wbGFudFwifSx7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJMdW1pbkNsb2FraW5nLVYyIFNraW4gSW1wbGFudFwifSx7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJXaXJlZCBSZWZsZXhlc1wifSx7XCJsZXZlbFwiOjEsXCJuYW1lXCI6XCJCaXRXaXJlXCJ9LHtcImxldmVsXCI6MyxcIm5hbWVcIjpcIk5ldXJvRmx1eCBHb3Zlcm5vclwifV0sXCJzb3VyY2VGaWxlc1wiOlt7XCJsdmxcIjozLFwiblwiOjF9LHtcImx2bFwiOjEsXCJuXCI6Mn1dLFwibnVtUGVvcGxlS2lsbGVkXCI6MTA2NjMsXCJrYXJtYVwiOi04NzYyOSxcImNyaW1lX21vbmV5X211bHRcIjoyLjgxMDY2MTEyODAwMDAwMDUsXCJjcmltZV9zdWNjZXNzX211bHRcIjoxLjYzNTI5Mzc0NzIsXCJpc1dvcmtpbmdcIjp0cnVlLFwiZm9jdXNcIjpmYWxzZSxcIndvcmtUeXBlXCI6XCJTdHVkeWluZyBvciBUYWtpbmcgYSBjbGFzcyBhdCB1bml2ZXJzaXR5XCIsXCJ3b3JrQ29zdE11bHRcIjozLFwid29ya0V4cE11bHRcIjoyLFwiY3VycmVudFdvcmtGYWN0aW9uTmFtZVwiOlwiXCIsXCJjdXJyZW50V29ya0ZhY3Rpb25EZXNjcmlwdGlvblwiOlwiXCIsXCJ3b3JrSGFja0V4cEdhaW5SYXRlXCI6MCxcIndvcmtTdHJFeHBHYWluUmF0ZVwiOjAsXCJ3b3JrRGVmRXhwR2FpblJhdGVcIjowLFwid29ya0RleEV4cEdhaW5SYXRlXCI6MCxcIndvcmtBZ2lFeHBHYWluUmF0ZVwiOjAsXCJ3b3JrQ2hhRXhwR2FpblJhdGVcIjoxLjA1NTAyODIyNCxcIndvcmtSZXBHYWluUmF0ZVwiOjAsXCJ3b3JrTW9uZXlHYWluUmF0ZVwiOjAsXCJ3b3JrTW9uZXlMb3NzUmF0ZVwiOjE5MixcIndvcmtIYWNrRXhwR2FpbmVkXCI6MCxcIndvcmtTdHJFeHBHYWluZWRcIjowLFwid29ya0RlZkV4cEdhaW5lZFwiOjAsXCJ3b3JrRGV4RXhwR2FpbmVkXCI6MCxcIndvcmtBZ2lFeHBHYWluZWRcIjowLFwid29ya0NoYUV4cEdhaW5lZFwiOjU0ODguMjU2ODIxMjQ4MzIzLFwid29ya1JlcEdhaW5lZFwiOjAsXCJ3b3JrTW9uZXlHYWluZWRcIjotOTk4NzgzLjk5OTk5OTkwNDcsXCJjcmVhdGVQcm9ncmFtTmFtZVwiOlwiXCIsXCJjcmVhdGVQcm9ncmFtUmVxTHZsXCI6MTAwLFwiY2xhc3NOYW1lXCI6XCJ0YWtpbmcgYSBMZWFkZXJzaGlwIGNvdXJzZVwiLFwiY3JpbWVUeXBlXCI6XCJcIixcInRpbWVXb3JrZWRcIjoxMjA0ODAwLFwidGltZVdvcmtlZENyZWF0ZVByb2dyYW1cIjowLFwidGltZU5lZWRlZFRvQ29tcGxldGVXb3JrXCI6Mjg4MDAwMDAsXCJ3b3JrX21vbmV5X211bHRcIjoxLjMxODc4NTI4LFwiaGFja25ldF9ub2RlX21vbmV5X211bHRcIjoxLjMxODc4NTI4LFwiaGFja25ldF9ub2RlX3B1cmNoYXNlX2Nvc3RfbXVsdFwiOjAuNjk4NjE1MjgsXCJoYWNrbmV0X25vZGVfcmFtX2Nvc3RfbXVsdFwiOjAuNjk4NjE1MjgsXCJoYWNrbmV0X25vZGVfY29yZV9jb3N0X211bHRcIjowLjY5ODYxNTI4LFwiaGFja25ldF9ub2RlX2xldmVsX2Nvc3RfbXVsdFwiOjAuNjk4NjE1MjgsXCJoYXNXc2VBY2NvdW50XCI6ZmFsc2UsXCJoYXNUaXhBcGlBY2Nlc3NcIjpmYWxzZSxcImhhczRTRGF0YVwiOmZhbHNlLFwiaGFzNFNEYXRhVGl4QXBpXCI6ZmFsc2UsXCJnYW5nXCI6e1wiY3RvclwiOlwiR2FuZ1wiLFwiZGF0YVwiOntcImZhY05hbWVcIjpcIlNsdW0gU25ha2VzXCIsXCJtZW1iZXJzXCI6W3tcImN0b3JcIjpcIkdhbmdNZW1iZXJcIixcImRhdGFcIjp7XCJ0YXNrXCI6XCJWaWdpbGFudGUgSnVzdGljZVwiLFwiZWFybmVkUmVzcGVjdFwiOjMwMDQ3Ljc0MTA4Njk3NTE4LFwiaGFja1wiOjEwOCxcInN0clwiOjUzMixcImRlZlwiOjU2MCxcImRleFwiOjIwOSxcImFnaVwiOjI0NCxcImNoYVwiOjEwOCxcImhhY2tfZXhwXCI6OTIwNi41MTI1OTg0MjY0NjEsXCJzdHJfZXhwXCI6NTg3NzYuMzQwMDY0Mzk1NTQsXCJkZWZfZXhwXCI6NjM2MzQuMzg3NDk4OTM1NTcsXCJkZXhfZXhwXCI6NDI0NTIuNjM2MjY0NTMyMjMsXCJhZ2lfZXhwXCI6Mjk1NDQuOTgwMTU1OTIyODQsXCJjaGFfZXhwXCI6MTI4ODAuOTAyOTcxOTI1NzQ3LFwiaGFja19tdWx0XCI6MS4xNTUwMDAwMDAwMDAwMDAyLFwic3RyX211bHRcIjozLjUwNzg4ODM4NDAwMDAwMSxcImRlZl9tdWx0XCI6My42MzM4NTYyNzAzODcyMDA0LFwiZGV4X211bHRcIjoxLjQ4NTAwMDAwMDAwMDAwMDMsXCJhZ2lfbXVsdFwiOjEuODgxMzA4MDAwMDAwMDAwNCxcImNoYV9tdWx0XCI6MS4wNCxcImhhY2tfYXNjX3BvaW50c1wiOjAsXCJzdHJfYXNjX3BvaW50c1wiOjAsXCJkZWZfYXNjX3BvaW50c1wiOjAsXCJkZXhfYXNjX3BvaW50c1wiOjAsXCJhZ2lfYXNjX3BvaW50c1wiOjAsXCJjaGFfYXNjX3BvaW50c1wiOjAsXCJ1cGdyYWRlc1wiOltcIk5VS0UgUm9vdGtpdFwiLFwiU291bHN0ZWFsZXIgUm9vdGtpdFwiLFwiQmFzZWJhbGwgQmF0XCIsXCJLYXRhbmFcIixcIkJ1bGxldHByb29mIFZlc3RcIixcIkZ1bGwgQm9keSBBcm1vclwiLFwiRm9yZCBGbGV4IFYyMFwiLFwiR2xvY2sgMThDXCIsXCJMaXF1aWQgQm9keSBBcm1vclwiLFwiUDkwQ1wiLFwiU3RleXIgQVVHXCIsXCJBSy00N1wiLFwiTTE1QTEwIEFzc2F1bHQgUmlmbGVcIixcIkdyYXBoZW5lIFBsYXRpbmcgQXJtb3JcIixcIkFXTSBTbmlwZXIgUmlmbGVcIl0sXCJhdWdtZW50YXRpb25zXCI6W10sXCJuYW1lXCI6XCJzY3VtbG9yZFwifX0se1wiY3RvclwiOlwiR2FuZ01lbWJlclwiLFwiZGF0YVwiOntcInRhc2tcIjpcIlRyYWZmaWNrIElsbGVnYWwgQXJtc1wiLFwiZWFybmVkUmVzcGVjdFwiOjI2NzI4Ljg4MjI1NzkwMTkxLFwiaGFja1wiOjExNSxcInN0clwiOjUzNixcImRlZlwiOjU2MyxcImRleFwiOjIxMixcImFnaVwiOjI0MixcImNoYVwiOjExNixcImhhY2tfZXhwXCI6MTEyMDQuNTE1Mzg3MDA3NTQzLFwic3RyX2V4cFwiOjYwOTgxLjgzMjczMTY5NDIyLFwiZGVmX2V4cFwiOjY1MzQwLjgyMDAwMDU0Njg2LFwiZGV4X2V4cFwiOjQ0NTUyLjg0ODA2MTA0NDE2LFwiYWdpX2V4cFwiOjI4NDc2LjEzNjkxNjY5OTA4LFwiY2hhX2V4cFwiOjE2NDA3LjkzMDc0MjY5MTU4LFwiaGFja19tdWx0XCI6MS4xNTUwMDAwMDAwMDAwMDAyLFwic3RyX211bHRcIjozLjUwNzg4ODM4NDAwMDAwMSxcImRlZl9tdWx0XCI6My42MzM4NTYyNzAzODcyMDEsXCJkZXhfbXVsdFwiOjEuNDg1MDAwMDAwMDAwMDAwMyxcImFnaV9tdWx0XCI6MS44ODEzMDgsXCJjaGFfbXVsdFwiOjEuMDQsXCJoYWNrX2FzY19wb2ludHNcIjowLFwic3RyX2FzY19wb2ludHNcIjowLFwiZGVmX2FzY19wb2ludHNcIjowLFwiZGV4X2FzY19wb2ludHNcIjowLFwiYWdpX2FzY19wb2ludHNcIjowLFwiY2hhX2FzY19wb2ludHNcIjowLFwidXBncmFkZXNcIjpbXCJOVUtFIFJvb3RraXRcIixcIlNvdWxzdGVhbGVyIFJvb3RraXRcIixcIkJhc2ViYWxsIEJhdFwiLFwiQnVsbGV0cHJvb2YgVmVzdFwiLFwiRnVsbCBCb2R5IEFybW9yXCIsXCJLYXRhbmFcIixcIkZvcmQgRmxleCBWMjBcIixcIkdsb2NrIDE4Q1wiLFwiUDkwQ1wiLFwiU3RleXIgQVVHXCIsXCJMaXF1aWQgQm9keSBBcm1vclwiLFwiR3JhcGhlbmUgUGxhdGluZyBBcm1vclwiLFwiQUstNDdcIixcIk0xNUExMCBBc3NhdWx0IFJpZmxlXCIsXCJBV00gU25pcGVyIFJpZmxlXCJdLFwiYXVnbWVudGF0aW9uc1wiOltdLFwibmFtZVwiOlwiam9obm55X2NvbGRfaGFuZHNcIn19LHtcImN0b3JcIjpcIkdhbmdNZW1iZXJcIixcImRhdGFcIjp7XCJ0YXNrXCI6XCJUcmFmZmljayBJbGxlZ2FsIEFybXNcIixcImVhcm5lZFJlc3BlY3RcIjoxMzE0OC4wMDEyMDg1NDEyNTYsXCJoYWNrXCI6MTAyLFwic3RyXCI6Mjg4MSxcImRlZlwiOjMwOTgsXCJkZXhcIjoxMTYwLFwiYWdpXCI6MTQyNCxcImNoYVwiOjY4LFwiaGFja19leHBcIjozOTExLjk1NzcwMzE0NTUyNzQsXCJzdHJfZXhwXCI6MTQ2MjUzOS41NTU3MjE1ODAzLFwiZGVmX2V4cFwiOjE2NDk1NzkuMzQ0MjI1NDI1LFwiZGV4X2V4cFwiOjEwNjE1NzguNjg5MTQ2NTQxOCxcImFnaV9leHBcIjoxMTEwMzY1LjAyNDk5MjYzNyxcImNoYV9leHBcIjozOTA3LjA1NDgzNzUzNjIxNSxcImhhY2tfbXVsdFwiOjEsXCJzdHJfbXVsdFwiOjMuNTA3ODg4Mzg0MDAwMDAxLFwiZGVmX211bHRcIjozLjYzMzg1NjI3MDM4NzIwMTMsXCJkZXhfbXVsdFwiOjEuNDg1MDAwMDAwMDAwMDAwMyxcImFnaV9tdWx0XCI6MS44MDg5NSxcImNoYV9tdWx0XCI6MSxcImhhY2tfYXNjX3BvaW50c1wiOjQ0NDEuMDEzMzMzMzMyMTA1LFwic3RyX2FzY19wb2ludHNcIjoyMDg3NS45OTgzNjk3NTEwNTQsXCJkZWZfYXNjX3BvaW50c1wiOjIxODI4LjQ0ODE0ODYxMDQxLFwiZGV4X2FzY19wb2ludHNcIjoyMDUyMS40MDE0NDEyMTg2NDQsXCJhZ2lfYXNjX3BvaW50c1wiOjIwNTc4LjYyMzg1NDcwNjY1NyxcImNoYV9hc2NfcG9pbnRzXCI6MCxcInVwZ3JhZGVzXCI6W1wiQmFzZWJhbGwgQmF0XCIsXCJLYXRhbmFcIixcIkdsb2NrIDE4Q1wiLFwiQnVsbGV0cHJvb2YgVmVzdFwiLFwiRnVsbCBCb2R5IEFybW9yXCIsXCJMaXF1aWQgQm9keSBBcm1vclwiLFwiR3JhcGhlbmUgUGxhdGluZyBBcm1vclwiLFwiUDkwQ1wiLFwiU3RleXIgQVVHXCIsXCJBSy00N1wiLFwiTTE1QTEwIEFzc2F1bHQgUmlmbGVcIixcIkFXTSBTbmlwZXIgUmlmbGVcIl0sXCJhdWdtZW50YXRpb25zXCI6W10sXCJuYW1lXCI6XCJyMDBraWUtMlwifX0se1wiY3RvclwiOlwiR2FuZ01lbWJlclwiLFwiZGF0YVwiOntcInRhc2tcIjpcIlZpZ2lsYW50ZSBKdXN0aWNlXCIsXCJlYXJuZWRSZXNwZWN0XCI6MjI1MTIuODMwNzk3ODY3MTUsXCJoYWNrXCI6OTMsXCJzdHJcIjo1MTcsXCJkZWZcIjo1NDUsXCJkZXhcIjoyMDQsXCJhZ2lcIjoyMzMsXCJjaGFcIjoxMDksXCJoYWNrX2V4cFwiOjkwMzcuMzkzNjk5NzUyMzgsXCJzdHJfZXhwXCI6NTE2NjUuNTU3ODQ4Mjg3MTM1LFwiZGVmX2V4cFwiOjU2MDAxLjUwMzA4MzA3ODYzNSxcImRleF9leHBcIjozNzYwMy45NDMxODc0NTQ5NyxcImFnaV9leHBcIjoyNDQzNS40MTE0NzAzNTY0MzcsXCJjaGFfZXhwXCI6MTMyNDUuNTQ2MjM2NzU5MTE5LFwiaGFja19tdWx0XCI6MSxcInN0cl9tdWx0XCI6My41MDc4ODgzODQwMDAwMDEsXCJkZWZfbXVsdFwiOjMuNjMzODU2MjcwMzg3MjAxMyxcImRleF9tdWx0XCI6MS40ODUwMDAwMDAwMDAwMDAzLFwiYWdpX211bHRcIjoxLjg4MTMwODAwMDAwMDAwMDQsXCJjaGFfbXVsdFwiOjEuMDQsXCJoYWNrX2FzY19wb2ludHNcIjowLFwic3RyX2FzY19wb2ludHNcIjowLFwiZGVmX2FzY19wb2ludHNcIjowLFwiZGV4X2FzY19wb2ludHNcIjowLFwiYWdpX2FzY19wb2ludHNcIjowLFwiY2hhX2FzY19wb2ludHNcIjowLFwidXBncmFkZXNcIjpbXCJCYXNlYmFsbCBCYXRcIixcIkJ1bGxldHByb29mIFZlc3RcIixcIkZ1bGwgQm9keSBBcm1vclwiLFwiRm9yZCBGbGV4IFYyMFwiLFwiS2F0YW5hXCIsXCJHbG9jayAxOENcIixcIkxpcXVpZCBCb2R5IEFybW9yXCIsXCJHcmFwaGVuZSBQbGF0aW5nIEFybW9yXCIsXCJQOTBDXCIsXCJTdGV5ciBBVUdcIixcIkFLLTQ3XCIsXCJNMTVBMTAgQXNzYXVsdCBSaWZsZVwiLFwiQVdNIFNuaXBlciBSaWZsZVwiXSxcImF1Z21lbnRhdGlvbnNcIjpbXSxcIm5hbWVcIjpcInIwMGtpZS0zXCJ9fSx7XCJjdG9yXCI6XCJHYW5nTWVtYmVyXCIsXCJkYXRhXCI6e1widGFza1wiOlwiVmlnaWxhbnRlIEp1c3RpY2VcIixcImVhcm5lZFJlc3BlY3RcIjo5MjgyLjE5Njc2Nzc1MDU4LFwiaGFja1wiOjcxLFwic3RyXCI6NDM3LFwiZGVmXCI6NDYwLFwiZGV4XCI6MTgxLFwiYWdpXCI6MjE4LFwiY2hhXCI6NzQsXCJoYWNrX2V4cFwiOjQzNjcuMTM5NTA5MjkyODE5LFwic3RyX2V4cFwiOjI1MDgwLjc4OTc5ODgyMDYyLFwiZGVmX2V4cFwiOjI2NTU4LjcxOTE4Nzc3MDA1MyxcImRleF9leHBcIjoyMzA1NC45MDAzMjkyMTkxNjMsXCJhZ2lfZXhwXCI6MTkwMDkuMjIxNzk0NzkyMzYsXCJjaGFfZXhwXCI6NDM0MS40NjYxMDczMTMyMzksXCJoYWNrX211bHRcIjoxLFwic3RyX211bHRcIjozLjUwNzg4ODM4NDAwMDAwMSxcImRlZl9tdWx0XCI6My42MzM4NTYyNzAzODcyMDEzLFwiZGV4X211bHRcIjoxLjQ4NTAwMDAwMDAwMDAwMDMsXCJhZ2lfbXVsdFwiOjEuODgxMzA4MDAwMDAwMDAwNCxcImNoYV9tdWx0XCI6MS4wNCxcImhhY2tfYXNjX3BvaW50c1wiOjAsXCJzdHJfYXNjX3BvaW50c1wiOjAsXCJkZWZfYXNjX3BvaW50c1wiOjAsXCJkZXhfYXNjX3BvaW50c1wiOjAsXCJhZ2lfYXNjX3BvaW50c1wiOjAsXCJjaGFfYXNjX3BvaW50c1wiOjAsXCJ1cGdyYWRlc1wiOltcIkJhc2ViYWxsIEJhdFwiLFwiQnVsbGV0cHJvb2YgVmVzdFwiLFwiRnVsbCBCb2R5IEFybW9yXCIsXCJGb3JkIEZsZXggVjIwXCIsXCJLYXRhbmFcIixcIkdsb2NrIDE4Q1wiLFwiTGlxdWlkIEJvZHkgQXJtb3JcIixcIkdyYXBoZW5lIFBsYXRpbmcgQXJtb3JcIixcIlA5MENcIixcIlN0ZXlyIEFVR1wiLFwiQUstNDdcIixcIk0xNUExMCBBc3NhdWx0IFJpZmxlXCIsXCJBV00gU25pcGVyIFJpZmxlXCJdLFwiYXVnbWVudGF0aW9uc1wiOltdLFwibmFtZVwiOlwicjAwa2llLTRcIn19LHtcImN0b3JcIjpcIkdhbmdNZW1iZXJcIixcImRhdGFcIjp7XCJ0YXNrXCI6XCJWaWdpbGFudGUgSnVzdGljZVwiLFwiZWFybmVkUmVzcGVjdFwiOjIxNjc4LjY5NDc1MTk3MjY4MixcImhhY2tcIjo5MyxcInN0clwiOjUxNSxcImRlZlwiOjU0MyxcImRleFwiOjIwMyxcImFnaVwiOjIzMixcImNoYVwiOjEwOSxcImhhY2tfZXhwXCI6OTAzMi45Mzg3ODY3MDMxMzYsXCJzdHJfZXhwXCI6NTAzOTUuMjI0MjAxMTcxODU1LFwiZGVmX2V4cFwiOjU0ODQwLjk2NTEwMjY0MjA5LFwiZGV4X2V4cFwiOjM3MTI1LjA1NjI2NDUyMTA1LFwiYWdpX2V4cFwiOjIzOTk4LjYyNzM2MzI0ODQ3NyxcImNoYV9leHBcIjoxMzIzMy4wMTY0NDEyNDYwNTQsXCJoYWNrX211bHRcIjoxLFwic3RyX211bHRcIjozLjUwNzg4ODM4NDAwMDAwMSxcImRlZl9tdWx0XCI6My42MzM4NTYyNzAzODcyMDEzLFwiZGV4X211bHRcIjoxLjQ4NTAwMDAwMDAwMDAwMDMsXCJhZ2lfbXVsdFwiOjEuODgxMzA4MDAwMDAwMDAwNCxcImNoYV9tdWx0XCI6MS4wNCxcImhhY2tfYXNjX3BvaW50c1wiOjAsXCJzdHJfYXNjX3BvaW50c1wiOjAsXCJkZWZfYXNjX3BvaW50c1wiOjAsXCJkZXhfYXNjX3BvaW50c1wiOjAsXCJhZ2lfYXNjX3BvaW50c1wiOjAsXCJjaGFfYXNjX3BvaW50c1wiOjAsXCJ1cGdyYWRlc1wiOltcIkJhc2ViYWxsIEJhdFwiLFwiQnVsbGV0cHJvb2YgVmVzdFwiLFwiRnVsbCBCb2R5IEFybW9yXCIsXCJGb3JkIEZsZXggVjIwXCIsXCJLYXRhbmFcIixcIkdsb2NrIDE4Q1wiLFwiTGlxdWlkIEJvZHkgQXJtb3JcIixcIkdyYXBoZW5lIFBsYXRpbmcgQXJtb3JcIixcIlA5MENcIixcIlN0ZXlyIEFVR1wiLFwiQUstNDdcIixcIk0xNUExMCBBc3NhdWx0IFJpZmxlXCIsXCJBV00gU25pcGVyIFJpZmxlXCJdLFwiYXVnbWVudGF0aW9uc1wiOltdLFwibmFtZVwiOlwicjAwa2llLTVcIn19LHtcImN0b3JcIjpcIkdhbmdNZW1iZXJcIixcImRhdGFcIjp7XCJ0YXNrXCI6XCJWaWdpbGFudGUgSnVzdGljZVwiLFwiZWFybmVkUmVzcGVjdFwiOjgzNjIuNTI3NzQyODA5MzMyLFwiaGFja1wiOjcxLFwic3RyXCI6NDIzLFwiZGVmXCI6NDQ2LFwiZGV4XCI6MTc1LFwiYWdpXCI6MjA5LFwiY2hhXCI6NzMsXCJoYWNrX2V4cFwiOjQzMDEuMTE5OTk5OTk4NzE3NSxcInN0cl9leHBcIjoyMTk1NC40NjY1ODU2NjQ4MzUsXCJkZWZfZXhwXCI6MjM1MzcuNDQ0MjY3ODE0NSxcImRleF9leHBcIjoyMDExMC4yNjc0MjIyOTA3NyxcImFnaV9leHBcIjoxNjI1NS4zNzkzMDQ5MTIzNjUsXCJjaGFfZXhwXCI6NDEyMy4wNTQ2MDAwMDE5NSxcImhhY2tfbXVsdFwiOjEsXCJzdHJfbXVsdFwiOjMuNTA3ODg4Mzg0MDAwMDAxLFwiZGVmX211bHRcIjozLjYzMzg1NjI3MDM4NzIwMTMsXCJkZXhfbXVsdFwiOjEuNDg1MDAwMDAwMDAwMDAwMyxcImFnaV9tdWx0XCI6MS44ODEzMDgwMDAwMDAwMDA0LFwiY2hhX211bHRcIjoxLjA0LFwiaGFja19hc2NfcG9pbnRzXCI6MCxcInN0cl9hc2NfcG9pbnRzXCI6MCxcImRlZl9hc2NfcG9pbnRzXCI6MCxcImRleF9hc2NfcG9pbnRzXCI6MCxcImFnaV9hc2NfcG9pbnRzXCI6MCxcImNoYV9hc2NfcG9pbnRzXCI6MCxcInVwZ3JhZGVzXCI6W1wiQmFzZWJhbGwgQmF0XCIsXCJCdWxsZXRwcm9vZiBWZXN0XCIsXCJGdWxsIEJvZHkgQXJtb3JcIixcIkthdGFuYVwiLFwiRm9yZCBGbGV4IFYyMFwiLFwiR2xvY2sgMThDXCIsXCJMaXF1aWQgQm9keSBBcm1vclwiLFwiR3JhcGhlbmUgUGxhdGluZyBBcm1vclwiLFwiUDkwQ1wiLFwiU3RleXIgQVVHXCIsXCJBSy00N1wiLFwiTTE1QTEwIEFzc2F1bHQgUmlmbGVcIixcIkFXTSBTbmlwZXIgUmlmbGVcIl0sXCJhdWdtZW50YXRpb25zXCI6W10sXCJuYW1lXCI6XCJyMDBraWUtNlwifX0se1wiY3RvclwiOlwiR2FuZ01lbWJlclwiLFwiZGF0YVwiOntcInRhc2tcIjpcIlRyYWZmaWNrIElsbGVnYWwgQXJtc1wiLFwiZWFybmVkUmVzcGVjdFwiOjIwODMwLjU1NjgwMDQxNzgwMixcImhhY2tcIjo5OCxcInN0clwiOjc2NCxcImRlZlwiOjgwMCxcImRleFwiOjMyMCxcImFnaVwiOjM4OSxcImNoYVwiOjEwMixcImhhY2tfZXhwXCI6MTA4MTIuMTU3NzY3ODUwODE4LFwic3RyX2V4cFwiOjQ2OTI0Ny43OTMyOTQxNzg1LFwiZGVmX2V4cFwiOjUwNjk3NC4zMTMxNDMzMzUsXCJkZXhfZXhwXCI6NDQyOTcyLjIwOTg3MDU2MTEsXCJhZ2lfZXhwXCI6NDMyMDcyLjY3NjkwMDI5MjYsXCJjaGFfZXhwXCI6MTIwNjIuNjk5NjgwNjA2MDgsXCJoYWNrX211bHRcIjoxLFwic3RyX211bHRcIjozLjUwNzg4ODM4NDAwMDAwMSxcImRlZl9tdWx0XCI6My42MzM4NTYyNzAzODcyMDEzLFwiZGV4X211bHRcIjoxLjQ4NTAwMDAwMDAwMDAwMDMsXCJhZ2lfbXVsdFwiOjEuODA4OTUsXCJjaGFfbXVsdFwiOjEsXCJoYWNrX2FzY19wb2ludHNcIjowLFwic3RyX2FzY19wb2ludHNcIjowLFwiZGVmX2FzY19wb2ludHNcIjowLFwiZGV4X2FzY19wb2ludHNcIjowLFwiYWdpX2FzY19wb2ludHNcIjowLFwiY2hhX2FzY19wb2ludHNcIjowLFwidXBncmFkZXNcIjpbXCJCYXNlYmFsbCBCYXRcIixcIkJ1bGxldHByb29mIFZlc3RcIixcIkZ1bGwgQm9keSBBcm1vclwiLFwiS2F0YW5hXCIsXCJHbG9jayAxOENcIixcIkxpcXVpZCBCb2R5IEFybW9yXCIsXCJHcmFwaGVuZSBQbGF0aW5nIEFybW9yXCIsXCJQOTBDXCIsXCJTdGV5ciBBVUdcIixcIkFLLTQ3XCIsXCJNMTVBMTAgQXNzYXVsdCBSaWZsZVwiLFwiQVdNIFNuaXBlciBSaWZsZVwiXSxcImF1Z21lbnRhdGlvbnNcIjpbXSxcIm5hbWVcIjpcInIwMGtpZS03XCJ9fSx7XCJjdG9yXCI6XCJHYW5nTWVtYmVyXCIsXCJkYXRhXCI6e1widGFza1wiOlwiVHJhZmZpY2sgSWxsZWdhbCBBcm1zXCIsXCJlYXJuZWRSZXNwZWN0XCI6MTk3MTguMzkyODIwNzU1MTU4LFwiaGFja1wiOjk4LFwic3RyXCI6NzM2LFwiZGVmXCI6NzczLFwiZGV4XCI6MzA4LFwiYWdpXCI6Mzc0LFwiY2hhXCI6MTAxLFwiaGFja19leHBcIjoxMDcwMC40NjA5NzI4NDYzNzUsXCJzdHJfZXhwXCI6MzY2MDI1LjgwMDk4NDYyNTA2LFwiZGVmX2V4cFwiOjM5OTkwNS40ODQzODA2NDY0MyxcImRleF9leHBcIjozNDIwNjQuNzkxMjk0NzMwNSxcImFnaV9leHBcIjozMzI3NDkuMDcxODAyNjgxMzcsXCJjaGFfZXhwXCI6MTE4NjYuMDI3ODQwMDA4NjMsXCJoYWNrX211bHRcIjoxLFwic3RyX211bHRcIjozLjUwNzg4ODM4NDAwMDAwMSxcImRlZl9tdWx0XCI6My42MzM4NTYyNzAzODcyMDEzLFwiZGV4X211bHRcIjoxLjQ4NTAwMDAwMDAwMDAwMDMsXCJhZ2lfbXVsdFwiOjEuODA4OTUsXCJjaGFfbXVsdFwiOjEsXCJoYWNrX2FzY19wb2ludHNcIjowLFwic3RyX2FzY19wb2ludHNcIjowLFwiZGVmX2FzY19wb2ludHNcIjowLFwiZGV4X2FzY19wb2ludHNcIjowLFwiYWdpX2FzY19wb2ludHNcIjowLFwiY2hhX2FzY19wb2ludHNcIjowLFwidXBncmFkZXNcIjpbXCJCYXNlYmFsbCBCYXRcIixcIkthdGFuYVwiLFwiQnVsbGV0cHJvb2YgVmVzdFwiLFwiRnVsbCBCb2R5IEFybW9yXCIsXCJHbG9jayAxOENcIixcIkxpcXVpZCBCb2R5IEFybW9yXCIsXCJHcmFwaGVuZSBQbGF0aW5nIEFybW9yXCIsXCJQOTBDXCIsXCJTdGV5ciBBVUdcIixcIkFLLTQ3XCIsXCJNMTVBMTAgQXNzYXVsdCBSaWZsZVwiLFwiQVdNIFNuaXBlciBSaWZsZVwiXSxcImF1Z21lbnRhdGlvbnNcIjpbXSxcIm5hbWVcIjpcInIwMGtpZS04XCJ9fSx7XCJjdG9yXCI6XCJHYW5nTWVtYmVyXCIsXCJkYXRhXCI6e1widGFza1wiOlwiVmlnaWxhbnRlIEp1c3RpY2VcIixcImVhcm5lZFJlc3BlY3RcIjo4MDU2LjU4MjM4NjIwMzYzNyxcImhhY2tcIjozMixcInN0clwiOjcyNCxcImRlZlwiOjc2NixcImRleFwiOjI5NCxcImFnaVwiOjM2MCxcImNoYVwiOjMwLFwiaGFja19leHBcIjo5MDUuNTU2NTgzMzU5MDM3OSxcInN0cl9leHBcIjozMjc5MTcuMTMzMTA1NTkxMixcImRlZl9leHBcIjozNzU5NDMuMzI5Nzc5MDg2MDUsXCJkZXhfZXhwXCI6MjUxODYzLjgyMTA1MjM2MzUsXCJhZ2lfZXhwXCI6MjYzMzM2Ljk2OTI2MTA2OSxcImNoYV9leHBcIjo4MDYuMTIzODk0NTU4NTAyMixcImhhY2tfbXVsdFwiOjEsXCJzdHJfbXVsdFwiOjMuNTA3ODg4Mzg0MDAwMDAxLFwiZGVmX211bHRcIjozLjYzMzg1NjI3MDM4NzIwMTMsXCJkZXhfbXVsdFwiOjEuNDg1MDAwMDAwMDAwMDAwMyxcImFnaV9tdWx0XCI6MS44MDg5NSxcImNoYV9tdWx0XCI6MSxcImhhY2tfYXNjX3BvaW50c1wiOjAsXCJzdHJfYXNjX3BvaW50c1wiOjAsXCJkZWZfYXNjX3BvaW50c1wiOjAsXCJkZXhfYXNjX3BvaW50c1wiOjAsXCJhZ2lfYXNjX3BvaW50c1wiOjAsXCJjaGFfYXNjX3BvaW50c1wiOjAsXCJ1cGdyYWRlc1wiOltcIkJhc2ViYWxsIEJhdFwiLFwiS2F0YW5hXCIsXCJHbG9jayAxOENcIixcIkJ1bGxldHByb29mIFZlc3RcIixcIkZ1bGwgQm9keSBBcm1vclwiLFwiTGlxdWlkIEJvZHkgQXJtb3JcIixcIkdyYXBoZW5lIFBsYXRpbmcgQXJtb3JcIixcIlA5MENcIixcIlN0ZXlyIEFVR1wiLFwiQUstNDdcIixcIk0xNUExMCBBc3NhdWx0IFJpZmxlXCIsXCJBV00gU25pcGVyIFJpZmxlXCJdLFwiYXVnbWVudGF0aW9uc1wiOltdLFwibmFtZVwiOlwicjAwa2llLTlcIn19XSxcIndhbnRlZFwiOjEsXCJyZXNwZWN0XCI6MTgwMzY3LjI1MjQ1NTk2NDI4LFwiaXNIYWNraW5nR2FuZ1wiOmZhbHNlLFwicmVzcGVjdEdhaW5SYXRlXCI6MS42NDEzNjMwNDQyMjYyOTEsXCJ3YW50ZWRHYWluUmF0ZVwiOi0wLjAwODcxOTMzODE5MjQ1OTAyNSxcIm1vbmV5R2FpblJhdGVcIjo5Mjg1Ni4wNDY0MTQ2MTI1OSxcInN0b3JlZEN5Y2xlc1wiOjMsXCJzdG9yZWRUZXJyaXRvcnlBbmRQb3dlckN5Y2xlc1wiOjQwLFwidGVycml0b3J5Q2xhc2hDaGFuY2VcIjowLFwidGVycml0b3J5V2FyZmFyZUVuZ2FnZWRcIjpmYWxzZSxcIm5vdGlmeU1lbWJlckRlYXRoXCI6dHJ1ZX19LFwiY29ycG9yYXRpb25cIjpudWxsLFwiYmxhZGVidXJuZXJcIjpudWxsLFwiYmxhZGVidXJuZXJfbWF4X3N0YW1pbmFfbXVsdFwiOjEsXCJibGFkZWJ1cm5lcl9zdGFtaW5hX2dhaW5fbXVsdFwiOjEsXCJibGFkZWJ1cm5lcl9hbmFseXNpc19tdWx0XCI6MSxcImJsYWRlYnVybmVyX3N1Y2Nlc3NfY2hhbmNlX211bHRcIjoxLFwic2xlZXZlc1wiOltdLFwicmVzbGVldmVzXCI6W10sXCJzbGVldmVzRnJvbUNvdmVuYW50XCI6MCxcImJpdE5vZGVOXCI6NCxcImxhc3RVcGRhdGVcIjoxNjQ1OTc3OTA3OTYzLFwidG90YWxQbGF5dGltZVwiOjMwMTMyMzQ4MDAsXCJwbGF5dGltZVNpbmNlTGFzdEF1Z1wiOjE2MDg3NTIwMCxcInBsYXl0aW1lU2luY2VMYXN0Qml0bm9kZVwiOjQwNzc0NjIwMCxcIm1vbmV5U291cmNlQVwiOntcImN0b3JcIjpcIk1vbmV5U291cmNlVHJhY2tlclwiLFwiZGF0YVwiOntcImJsYWRlYnVybmVyXCI6MCxcImNhc2lub1wiOjAsXCJjbGFzc1wiOi0xMTU2NjA4LFwiY29kaW5nY29udHJhY3RcIjowLFwiY29ycG9yYXRpb25cIjowLFwiY3JpbWVcIjo4NDM4MDAzODIuMDEzNjUwNSxcImdhbmdcIjotMTg0NDg3MzIyMC44NTI5NzQ3LFwiaGFja2luZ1wiOjMwNzMwNTQ1NjIuNjgzODIwMixcImhhY2tuZXRcIjoxNTg4MS41NjQwNDkxNTQ4MzcsXCJoYWNrbmV0X2V4cGVuc2VzXCI6LTY5OC42MTUyOCxcImhvc3BpdGFsaXphdGlvblwiOjAsXCJpbmZpbHRyYXRpb25cIjowLFwic2xlZXZlc1wiOjAsXCJzdG9ja1wiOjAsXCJ0b3RhbFwiOjkzMzYxNjc1Ny44MjU0MjU0LFwid29ya1wiOjE3MjM2LjUyMzYwOTU5OTg5LFwic2VydmVyc1wiOi04MjUwNDA3NzcuNDkxMzE2NixcIm90aGVyXCI6LTMxMjIwMDAwMCxcImF1Z21lbnRhdGlvbnNcIjowfX0sXCJtb25leVNvdXJjZUJcIjp7XCJjdG9yXCI6XCJNb25leVNvdXJjZVRyYWNrZXJcIixcImRhdGFcIjp7XCJibGFkZWJ1cm5lclwiOjAsXCJjYXNpbm9cIjowLFwiY2xhc3NcIjotMTE1NjYwOCxcImNvZGluZ2NvbnRyYWN0XCI6MCxcImNvcnBvcmF0aW9uXCI6MCxcImNyaW1lXCI6ODcyMDk2MDMxLjI5MzYyNzYsXCJnYW5nXCI6LTE4NDQ4NzMyMjAuODUyOTc0NyxcImhhY2tpbmdcIjo1NDA5MDY1MzA3LjQxOTY4MixcImhhY2tuZXRcIjoyODE5NTYuNzc2ODU0NDQzMSxcImhhY2tuZXRfZXhwZW5zZXNcIjotODkxNS40NDY0OTE1NDQ3MzIsXCJob3NwaXRhbGl6YXRpb25cIjowLFwiaW5maWx0cmF0aW9uXCI6MCxcInNsZWV2ZXNcIjowLFwic3RvY2tcIjowLFwidG90YWxcIjo5NzI5ODQ1MzQuMDQ4ODM1OSxcIndvcmtcIjoxNzIzNi41MjM2MDk1OTk4OSxcInNlcnZlcnNcIjotMTE3ODg2OTQyNS4yMTQ5NjE1LFwib3RoZXJcIjotNjI0OTAwMDAwLFwiYXVnbWVudGF0aW9uc1wiOi0xNjU4NjY3ODI4LjQ1MDc0MX19LFwic2NyaXB0UHJvZFNpbmNlTGFzdEF1Z1wiOjI1NTg5NzEwOTIsXCJleHBsb2l0c1wiOltdLFwiYWNoaWV2ZW1lbnRzXCI6W3tcIklEXCI6XCJGSVJTVF9IQUNLTkVUX05PREVcIixcInVubG9ja2VkT25cIjoxNjQyOTY5MDU3MTcyfSx7XCJJRFwiOlwiTlMyXCIsXCJ1bmxvY2tlZE9uXCI6MTY0Mjk3MDgwMDU4MH0se1wiSURcIjpcIkJSVVRFU1NILkVYRVwiLFwidW5sb2NrZWRPblwiOjE2NDI5NzU3ODA1ODF9LHtcIklEXCI6XCJDWUJFUlNFQ1wiLFwidW5sb2NrZWRPblwiOjE2NDI5Nzc2NDA2MDJ9LHtcIklEXCI6XCJGVFBDUkFDSy5FWEVcIixcInVubG9ja2VkT25cIjoxNjQyOTgzNzAwNTg5fSx7XCJJRFwiOlwiSEFDS05FVF9OT0RFXzEwTVwiLFwidW5sb2NrZWRPblwiOjE2NDMxOTg1NzY5OTd9LHtcIklEXCI6XCJUT1JcIixcInVubG9ja2VkT25cIjoxNjQzMTk5MTE3MDAwfSx7XCJJRFwiOlwiSU5TVEFMTF8xXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MzIzOTkyNTIxMH0se1wiSURcIjpcIkRSQUlOX1NFUlZFUlwiLFwidW5sb2NrZWRPblwiOjE2NDMyNDA1MjUyMDN9LHtcIklEXCI6XCJSRUxBWVNNVFAuRVhFXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MzQxNTM0NDY5N30se1wiSURcIjpcIkhUVFBXT1JNLkVYRVwiLFwidW5sb2NrZWRPblwiOjE2NDM0MTUzNDQ3MzB9LHtcIklEXCI6XCJTUUxJTkpFQ1QuRVhFXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MzQxNTM0NDczMn0se1wiSURcIjpcIlRIRV9CTEFDS19IQU5EXCIsXCJ1bmxvY2tlZE9uXCI6MTY0MzQxNTc2NDY5MH0se1wiSURcIjpcIk5JVEVTRUNcIixcInVubG9ja2VkT25cIjoxNjQzNDE1OTQ0NzA0fSx7XCJJRFwiOlwiRlJPWkVcIixcInVubG9ja2VkT25cIjoxNjQzNTY3MzU1ODY5fSx7XCJJRFwiOlwiRE9OQVRJT05cIixcInVubG9ja2VkT25cIjoxNjQzNjYyMjI3MDg1fSx7XCJJRFwiOlwiQklUUlVOTkVSU1wiLFwidW5sb2NrZWRPblwiOjE2NDM2NzA2MjcwOTB9LHtcIklEXCI6XCJGT1JNVUxBUy5FWEVcIixcInVubG9ja2VkT25cIjoxNjQzNzAyNjAzOTUwfSx7XCJJRFwiOlwiVFJBVkVMXCIsXCJ1bmxvY2tlZE9uXCI6MTY0Mzc0MzQ2MTA2OX0se1wiSURcIjpcIk1BWF9IQUNLTkVUX05PREVcIixcInVubG9ja2VkT25cIjoxNjQzNzQ3MDAxMDg0fSx7XCJJRFwiOlwiREFFREFMVVNcIixcInVubG9ja2VkT25cIjoxNjQzOTkwNzg2MTA1fSx7XCJJRFwiOlwiV09SS09VVFwiLFwidW5sb2NrZWRPblwiOjE2NDQxNjgzOTQ3OTh9LHtcIklEXCI6XCJIT1NQSVRBTElaRURcIixcInVubG9ja2VkT25cIjoxNjQ0MTY4NjM0ODAyfSx7XCJJRFwiOlwiU0YxLjFcIixcInVubG9ja2VkT25cIjoxNjQ0MTczODU1Nzk0fSx7XCJJRFwiOlwiU0NSSVBUU18zMFwiLFwidW5sb2NrZWRPblwiOjE2NDQyNjQ2Njk2Mjh9LHtcIklEXCI6XCJTQ1JJUFRfMzJHQlwiLFwidW5sb2NrZWRPblwiOjE2NDQ0NDI0MzY2NzJ9LHtcIklEXCI6XCJSRVBVVEFUSU9OXzEwTVwiLFwidW5sb2NrZWRPblwiOjE2NDQ2MTc3ODg5OTZ9LHtcIklEXCI6XCJHQU5HXCIsXCJ1bmxvY2tlZE9uXCI6MTY0NDY5MzY2ODM5N30se1wiSURcIjpcIkZVTExfR0FOR1wiLFwidW5sb2NrZWRPblwiOjE2NDQ4NDg4NjAyMTV9LHtcIklEXCI6XCJHQU5HX01FTUJFUl9QT1dFUlwiLFwidW5sb2NrZWRPblwiOjE2NDQ5NTYwMTg4Mjl9LHtcIklEXCI6XCJTRjIuMVwiLFwidW5sb2NrZWRPblwiOjE2NDUwODgyNTY2NjN9XSxcImZhY3Rpb25Xb3JrVHlwZVwiOlwiRmFjdGlvbiBGaWVsZCBXb3JrXCIsXCJjb21taXR0aW5nQ3JpbWVUaHJ1U2luZ0ZuXCI6ZmFsc2UsXCJzaW5nRm5DcmltZVdvcmtlclNjcmlwdFwiOm51bGx9fSIsIkFsbFNlcnZlcnNTYXZlIjoie1wiaG9tZVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJob21lXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIwLjEuMS4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6dHJ1ZSxcIm1heFJhbVwiOjUxMixcIm1lc3NhZ2VzXCI6W1wiaGFja2Vycy1zdGFydGluZy1oYW5kYm9vay5saXRcIixcImowLm1zZ1wiLFwiajEubXNnXCIsXCJjc2VjLXRlc3QubXNnXCIsXCJqMi5tc2dcIixcIm5pdGVzZWMtdGVzdC5tc2dcIixcImozLm1zZ1wiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkhvbWUgUENcIixcInByb2dyYW1zXCI6W1wiTlVLRS5leGVcIixcImIxdF9mbHVtMy5leGVcIixcImZsMWdodC5leGVcIixcIkJydXRlU1NILmV4ZVwiLFwiRlRQQ3JhY2suZXhlXCIsXCJEZWVwc2NhblYxLmV4ZVwiLFwicmVsYXlTTVRQLmV4ZVwiLFwiRGVlcHNjYW5WMi5leGVcIixcIkhUVFBXb3JtLmV4ZVwiLFwiU1FMSW5qZWN0LmV4ZVwiXSxcInJhbVVzZWRcIjo1MTAuNjUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwiL29mZmljaWFsL21vbml0b3IuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2MzgwLjAwOTk5OTk5NjM5MSxcInBpZFwiOjUsXCJyYW1Vc2FnZVwiOjQuMTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCIvb2ZmaWNpYWwvbW9uaXRvci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNTEwNTMzODEtYWExMy00M2ViLWJiOWMtMTIwYzYyY2UzZGRmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwODd9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDIxMF19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxODQ3LjIwMjY3NDY4ODAwMDMsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjgwOTk5OTk5NjM5MTUsXCJwaWRcIjoxMCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9tZVwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZDNmOWI1ZDUtNjdmZi00ZTg4LWI2ZTctNGQ0MGM5ZGIxMzViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwOTF9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwiZ2FuZy1tZ210LWNvbWJhdC5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNDYuNDA5OTk5OTk2NDIyLFwicGlkXCI6NjksXCJyYW1Vc2FnZVwiOjIyLjcsXCJzZXJ2ZXJcIjpcImhvbWVcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJnYW5nLW1nbXQtY29tYmF0LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82NjMyNjQzZi00ZWRmLTRhNjgtOWE1NS1mZTMwNmI0MmQ1ODFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTI2N31dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMTg5NTQwNjAwLDM0MDAsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNDk2NC45MDc3NzA4OCxcIm9ubGluZU1vbmV5TWFkZVwiOjE4OTU0MDYwMCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjIzMS42MDk5OTk5OTY1MjYsXCJwaWRcIjo3MCxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJob21lXCIsXCJ0aHJlYWRzXCI6MTAwLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzg1Y2E2NGE4LTM0N2ItNDVkZS1iMmIwLWFiYjhiMGU2NTE1YVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzA1fV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIl0sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwiL25lby9jb29yZGluYXRlLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk3LjAwOTk5OTk5OTk5ODksXCJwaWRcIjoxODMsXCJyYW1Vc2FnZVwiOjUuOCxcInNlcnZlclwiOlwiaG9tZVwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNjMjk3ZWUxLTJhNzQtNDExMy05YmRmLWE2ZmNjNWI3NzEwZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzJ9LHtcImZpbGVuYW1lXCI6XCIvbmVvL2dldC1pZGxlLWNhcGEuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2NlNGE5NjAxLWFhM2EtNDY2Zi1hMTEwLWMxN2FlNTdjZGRiMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODZ9LHtcImZpbGVuYW1lXCI6XCIvbmVvL2Nvb3JkaW5hdGUuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RhMmVkOWZjLTY3NmItNGQ3YS05NDZiLTE2ZjVhMDJmYzQ5Y1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NTB9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDguNzAxNjIwNDc5MzI0NDg2XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMjgsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcInRocmVhZHNcIjoxNjIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzJhY2MxZWFiLTY5ODUtNDlhMy04YTNmLTNiN2RlNGMwNWU1YVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1MzU0fV19fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG5cXG4gIGxldCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIHdoaWxlIChucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCkge1xcbiAgICBucy5wcmludChcXG4gICAgICBcXFwid2Vha2luZyBcXFwiICtcXG4gICAgICAgIHRhcmdldCArXFxuICAgICAgICBcXFwiIGlzIFxcXCIgK1xcbiAgICAgICAgbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpICtcXG4gICAgICAgIFxcXCIgd2FudCBcXFwiICtcXG4gICAgICAgIHNlY3VyaXR5VGhyZXNoXFxuICAgICk7XFxuICAgIGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2I2MmJkMjQwLWNhN2UtNDUxNC05NTM5LTI4MmUyNmNjOTU2Y1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNjYwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuOTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI1OSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAgIGNvbnN0IG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuNzU7XFxuICAgIGxldCBtb25leVN0YXNoID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KVxcbiAgICB3aGlsZSAobW9uZXlTdGFzaCA8IG1vbmV5VGhyZXNoKSB7XFxuICAgICAgICBucy5wcmludChcXFwiZ3Jvd2luZyBcXFwiICsgdGFyZ2V0ICsgXFxcIiwgaGF2ZSBcXFwiICsgbW9uZXlTdGFzaCArIFxcXCIgd2FudCBcXFwiICsgbW9uZXlUaHJlc2gpO1xcbiAgICAgICAgYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICAgICAgbW9uZXlTdGFzaCA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldClcXG4gICAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJyaWNoZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJyaWNoZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzU0ZjEwNGJlLTM2NDItNDVkZi1iMTEwLWI3OGM5ODQzZmMwNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMTUyOX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjk1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI0MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc2NhbiB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCBuZXQgPSBzY2FuKG5zKTtcXG4gIGNvbnN0IHNydnMgPSBuZXQuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSk7XFxuICBucy50cHJpbnRmKGBnb3QgJHtzcnZzLmxlbmd0aH0gcHduZC1zZXJ2ZXJzLCBvdXQgb2YgJHtuZXQubGVuZ3RofWApO1xcblxcbiAgZm9yIChsZXQgc3J2IG9mIHNydnMpIHtcXG4gICAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuICAgIG5zLnRwcmludChgc2VydmVyICR7c3J2fSAoJHtzcnZSYW19IEdCKSBydW5uaW5nOmApO1xcbiAgICBjb25zdCBwcm9jZXNzZXMgPSBucy5wcyhzcnYpO1xcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2Nlc3Nlcy5sZW5ndGg7ICsraSkge1xcbiAgICAgIG5zLnRwcmludChcXG4gICAgICAgIFxcXCIgIFxcXCIgK1xcbiAgICAgICAgICBwcm9jZXNzZXNbaV0uZmlsZW5hbWUgK1xcbiAgICAgICAgICBcXFwiIC10IFxcXCIgK1xcbiAgICAgICAgICBwcm9jZXNzZXNbaV0udGhyZWFkcyArXFxuICAgICAgICAgIFxcXCIgXFxcIiArXFxuICAgICAgICAgIHByb2Nlc3Nlc1tpXS5hcmdzXFxuICAgICAgKTtcXG4gICAgfVxcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJzaG93LXJ1bm5pbmcuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9jOGQ0MmU0OC02ZGZhLTQzZGItODY3MS0zYTk2NDE5ZTY0MWNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTg1fSx7XCJmaWxlbmFtZVwiOlwic2hvdy1ydW5uaW5nLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xOTk2ZWU2OC00MjkzLTQxODYtYTU4ZS1kYjg0N2MxNzMyYjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzY0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuMSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjM5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInBzXCIsXCJjb3N0XCI6MC4yfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzY2FuIH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldFNjcmlwdCA9IG5zLmFyZ3Muc2hpZnQoKTtcXG4gIGNvbnN0IHRhcmdldEFyZ3MgPSBucy5hcmdzO1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcblxcbiAgY29uc3QgbmV0ID0gc2Nhbihucyk7XFxuXFxuICAvLyBhdmFpbGlhYmxlIHdvcmtmb3JjZVxcbiAgY29uc3Qgc3J2cyA9IG5ldC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKTtcXG4gIG5zLnRwcmludGYoYGdvdCAke3NydnMubGVuZ3RofSBwd25kLXNlcnZlcnMsIG91dCBvZiAke25ldC5sZW5ndGh9YCk7XFxuXFxuICAvLyBleGNsdWRpbmcgY2FzaGNvd3MgYW5kIGhvbWVcXG4gIGNvbnN0IGV4Y2x1ZGUgPSBbXFxcImhvbWVcXFwiXTtcXG5cXG4gIC8vIGV4Y2x1ZGluZyBjYXNoIGNvd3NcXG4gIGZvciAobGV0IHNydiBvZiBzcnZzLmZpbHRlcigoc3J2KSA9PiAhZXhjbHVkZS5pbmNsdWRlcyhzcnYpKSkge1xcbiAgICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG4gICAgbnMudHByaW50KGBzZXJ2ZXIgJHtzcnZ9ICgke3NydlJhbX0gR0IpIHJ1bm5pbmc6YCk7XFxuICAgIGNvbnN0IHByb2Nlc3NlcyA9IG5zLnBzKHNydik7XFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcHJvY2Vzc2VzLmxlbmd0aDsgKytpKSB7XFxuICAgICAgbnMudHByaW50KFxcbiAgICAgICAgXFxcIiAgXFxcIiArXFxuICAgICAgICAgIHByb2Nlc3Nlc1tpXS5maWxlbmFtZSArXFxuICAgICAgICAgIFxcXCIgLXQgXFxcIiArXFxuICAgICAgICAgIHByb2Nlc3Nlc1tpXS50aHJlYWRzICtcXG4gICAgICAgICAgXFxcIiBcXFwiICtcXG4gICAgICAgICAgcHJvY2Vzc2VzW2ldLmFyZ3NcXG4gICAgICApO1xcbiAgICB9XFxuICAgIGF3YWl0IG5zLnNjcChcXFwiaGFja2VyLWxpYi5qc1xcXCIsIHNydik7XFxuICAgIGF3YWl0IG5zLnNjcCh0YXJnZXRTY3JpcHQsIHNydik7XFxuICAgIGF3YWl0IG5zLmtpbGxhbGwoc3J2KTtcXG4gICAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICAgIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICAgIG5zLnRwcmludChcXG4gICAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgICApO1xcbiAgICAgIGF3YWl0IG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcInJ1bi1vbi1hbGwuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85ZjJlODJmYi01NjVhLTQ4NWEtYWJhMS0xNGQ3OGYxNGU4ZDJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTg2fSx7XCJmaWxlbmFtZVwiOlwicnVuLW9uLWFsbC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZTdkMjYyM2UtMzlkYy00ODU3LWJmMTMtMTk5OWY5ZWIxOTJmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1NH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo0LjYsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIzNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJwc1wiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjcFwiLFwiY29zdFwiOjAuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImtpbGxhbGxcIixcImNvc3RcIjowLjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBmbXQgfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgbXlSaWNoZXMgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShcXFwiaG9tZVxcXCIpO1xcbiAgY29uc3QgbWF4U3J2cyA9IG5zLmdldFB1cmNoYXNlZFNlcnZlckxpbWl0KCk7XFxuICBjb25zdCBtYXhSYW0gPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJNYXhSYW0oKTtcXG4gIGxldCBzaXplcyA9IFtdO1xcbiAgZm9yIChsZXQgc2l6ZSA9IDg7IHNpemUgPD0gbWF4UmFtOyBzaXplID0gc2l6ZSAqIDIpIHtcXG4gICAgc2l6ZXMucHVzaChzaXplKTtcXG4gIH1cXG4gIC8vY29uc3Qgc2l6ZXMgPSBbOCwgMTYsIDMyLCA2NCwgMTI4LCAyNTYsIDUxMiwgMTAyNCwgMjA0OCwgNDA5Ni4uLl07XFxuICBzaXplcy5mb3JFYWNoKChzaXplKSA9PiB7XFxuICAgIGNvbnN0IHByaWNlID0gbnMuZ2V0UHVyY2hhc2VkU2VydmVyQ29zdChzaXplKTtcXG4gICAgY29uc3QgYnV5UXR5ID0gTWF0aC5mbG9vcihteVJpY2hlcyAvIHByaWNlKTtcXG4gICAgY29uc3QgbWF4UXR5ID0gTWF0aC5taW4oYnV5UXR5LCBtYXhTcnZzKTtcXG5cXG4gICAgbnMudHByaW50KGAke3NpemV9IEdCIHNydiBmb3IgJHtmbXQocHJpY2UpfSwgY2FuIGJ1eSAke21heFF0eX1gKTtcXG4gIH0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJwcmljZS1saXN0LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzJkYmZmOWEwLTU0OTAtNGQ4MC1hNDhmLThkYzE5YWY0YjNiMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjA5fSx7XCJmaWxlbmFtZVwiOlwicHJpY2UtbGlzdC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYjMxZWE4ZDMtMDJkZS00MGFlLWFlNmYtYWQyYzlhODRmYmExXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE5NjM1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuMDUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTk2MzUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFB1cmNoYXNlZFNlcnZlckxpbWl0XCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFB1cmNoYXNlZFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRQdXJjaGFzZWRTZXJ2ZXJDb3N0XCIsXCJjb3N0XCI6MC4yNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgYmVzdF90YXJnZXQgfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0UmFtID0gbnMuYXJncy5zaGlmdCgpO1xcbiAgY29uc3QgdGFyZ2V0U2NyaXB0ID0gbnMuYXJncy5zaGlmdCgpO1xcbiAgY29uc3QgdGFyZ2V0QXJncyA9IG5zLmFyZ3M7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcih0YXJnZXRSYW0gLyBydW5TaXplKTtcXG5cXG4gIGNvbnN0IHBzcnZzID0gbnMuZ2V0UHVyY2hhc2VkU2VydmVycygpO1xcbiAgY29uc3QgbWF4U3J2cyA9IG5zLmdldFB1cmNoYXNlZFNlcnZlckxpbWl0KCk7XFxuICBucy50cHJpbnRmKFxcbiAgICBgZ290ICR7cHNydnMubGVuZ3RofSBwLXNlcnZlcnMsIG1heCAke21heFNydnN9OlxcXFxuJHtwc3J2cy5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICk7XFxuICBucy50cHJpbnRmKGBhZGRpbmcgc2VydmVycyB3aXRoICR7dGFyZ2V0UmFtfSBHQiBSQU1gKTtcXG4gIGNvbnN0IHRhcmdldCA9IGJlc3RfdGFyZ2V0KG5zKT8ubmFtZTtcXG4gIG5zLnRwcmludChgdGFyZ2V0aW5nICR7dGFyZ2V0fWApO1xcblxcbiAgbGV0IGkgPSBwc3J2cy5sZW5ndGg7XFxuICB3aGlsZSAoaSA8IG1heFNydnMpIHtcXG4gICAgLy8gQ2hlY2sgaWYgd2UgaGF2ZSBlbm91Z2ggbW9uZXkgdG8gcHVyY2hhc2UgYSBzZXJ2ZXJcXG4gICAgaWYgKFxcbiAgICAgIG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKFxcXCJob21lXFxcIikgPiBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJDb3N0KHRhcmdldFJhbSlcXG4gICAgKSB7XFxuICAgICAgY29uc3QgaG9zdG5hbWUgPSBhd2FpdCBucy5wdXJjaGFzZVNlcnZlcihcXFwicHNydi1cXFwiICsgaSwgdGFyZ2V0UmFtKTtcXG4gICAgICAvKiBucy50cHJpbnRmKFxcbiAgICAgICAgYGdvdCBuZXcgc2VydmVyICR7aG9zdG5hbWV9LCBydW5uaW5nICR7dGFyZ2V0U2NyaXB0fSAtdCAke3RocmVhZHN9ICR7dGFyZ2V0QXJncy5qb2luKFxcbiAgICAgICAgICBcXFwiIFxcXCJcXG4gICAgICAgICl9YFxcbiAgICAgICk7XFxuICAgICAgYXdhaXQgbnMuc2NwKHRhcmdldFNjcmlwdCwgaG9zdG5hbWUpO1xcbiAgICAgIGF3YWl0IG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBob3N0bmFtZSwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7ICovXFxuICAgICAgKytpO1xcbiAgICAgIGlmICh0YXJnZXQpIHtcXG4gICAgICAgIG5zLnJ1bihcXFwic2xhdmUtaG9zdC5qc1xcXCIsIDEsIGhvc3RuYW1lLCB0YXJnZXQpO1xcbiAgICAgICAgYXdhaXQgbnMuc2xlZXAoMjApO1xcbiAgICAgIH1cXG4gICAgfVxcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJhZGQtaG9zdHMuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNWQ0NDZmODQtYzIxMS00MGQ2LTk1YjgtZDFkNGUyYmE4MGY2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkyMDl9LHtcImZpbGVuYW1lXCI6XCJhZGQtaG9zdHMuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzBiZTkwNTI2LTMwNTEtNGJiNC04MGQ2LTBjOTgyMTZjODFhY1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM0Mn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo4LjE1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzQyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0UHVyY2hhc2VkU2VydmVyc1wiLFwiY29zdFwiOjIuMjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRQdXJjaGFzZWRTZXJ2ZXJMaW1pdFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFB1cmNoYXNlZFNlcnZlckNvc3RcIixcImNvc3RcIjowLjI1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwicHVyY2hhc2VTZXJ2ZXJcIixcImNvc3RcIjoyLjI1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwicnVuXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc2NhbiwgYmVzdF90YXJnZXQgfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgbmV0ID0gc2Nhbihucyk7XFxuXFxuICAvLyBkZXRlcm1pbmUgcG9ydHMgd2UgY2FuIG9wZW5cXG4gIGxldCBjYW5fcG9ydHMgPSAwO1xcbiAgaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIGNhbl9wb3J0cysrO1xcbiAgaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkZUUENyYWNrLmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIGNhbl9wb3J0cysrO1xcbiAgaWYgKG5zLmZpbGVFeGlzdHMoXFxcInJlbGF5U01UUC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSBjYW5fcG9ydHMrKztcXG4gIGlmIChucy5maWxlRXhpc3RzKFxcXCJIVFRQV29ybS5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSBjYW5fcG9ydHMrKztcXG4gIGlmIChucy5maWxlRXhpc3RzKFxcXCJTUUxJbmplY3QuZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkgY2FuX3BvcnRzKys7XFxuXFxuICAvLyBjaGVjayBtYSAxMzM3IHNraWxselxcbiAgY29uc3Qgc2tpbGx6ID0gbnMuZ2V0SGFja2luZ0xldmVsKCk7XFxuXFxuICBjb25zdCBwd25kID0gbmV0LmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpO1xcbiAgY29uc3QgdW5wd25kID0gbmV0LmZpbHRlcigoc3J2KSA9PiAhcHduZC5pbmNsdWRlcyhzcnYpKTtcXG4gIGNvbnN0IHRndHMgPSB1bnB3bmQuZmlsdGVyKChzcnYpID0+IHtcXG4gICAgY29uc3QgbmVlZFBvcnRzID0gbnMuZ2V0U2VydmVyTnVtUG9ydHNSZXF1aXJlZChzcnYpO1xcbiAgICBjb25zdCBuZWVkU2tpbGx6ID0gbnMuZ2V0U2VydmVyUmVxdWlyZWRIYWNraW5nTGV2ZWwoc3J2KTtcXG4gICAgcmV0dXJuIG5lZWRQb3J0cyA8PSBjYW5fcG9ydHMgJiYgbmVlZFNraWxseiA8PSBza2lsbHo7XFxuICB9KTtcXG5cXG4gIG5zLnRwcmludGYoXFxuICAgIGBnb3QgJHtwd25kLmxlbmd0aH0gcDB3bmQgc2VydmVycywgb3V0IG9mICR7bmV0Lmxlbmd0aH0sIGZvdW5kICR7dGd0cy5sZW5ndGh9IHRhcmdldHNgXFxuICApO1xcblxcbiAgdGd0cy5mb3JFYWNoKChzcnYpID0+IHtcXG4gICAgY29uc3QgbmVlZFBvcnRzID0gbnMuZ2V0U2VydmVyTnVtUG9ydHNSZXF1aXJlZChzcnYpO1xcbiAgICBjb25zdCBuZWVkU2tpbGx6ID0gbnMuZ2V0U2VydmVyUmVxdWlyZWRIYWNraW5nTGV2ZWwoc3J2KTtcXG4gICAgaWYgKG5lZWRQb3J0cyA8PSBjYW5fcG9ydHMgJiYgbmVlZFNraWxseiA8PSBza2lsbHopIHtcXG4gICAgICBucy50cHJpbnRmKGB0Z3QgJHtzcnZ9YCk7XFxuICAgICAgaWYgKG5lZWRQb3J0cyA+PSAxKSBucy5icnV0ZXNzaChzcnYpO1xcbiAgICAgIGlmIChuZWVkUG9ydHMgPj0gMikgbnMuZnRwY3JhY2soc3J2KTtcXG4gICAgICBpZiAobmVlZFBvcnRzID49IDMpIG5zLnJlbGF5c210cChzcnYpO1xcbiAgICAgIGlmIChuZWVkUG9ydHMgPj0gNCkgbnMuaHR0cHdvcm0oc3J2KTtcXG4gICAgICBpZiAobmVlZFBvcnRzID49IDUpIG5zLnNxbGluamVjdChzcnYpO1xcbiAgICAgIG5zLm51a2Uoc3J2KTtcXG4gICAgICBucy50cHJpbnRmKGBwMHduZCAke3Nydn1gKTtcXG4gICAgICBpZiAobnMuZmlsZUV4aXN0cyhcXFwic2xhdmUtaG9zdC5qc1xcXCIsIFxcXCJob21lXFxcIikpIHtcXG4gICAgICAgIG5zLnJ1bihcXFwic2xhdmUtaG9zdC5qc1xcXCIsIDEsIHNydiwgYmVzdF90YXJnZXQobnMpPy5uYW1lIHx8IFxcXCJcXFwiKTtcXG4gICAgICB9XFxuICAgIH1cXG4gIH0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJzY2FuLXB3bi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85ZGQ2OTUyYy05NzZlLTRjZWEtOWI1OC02N2ZlYWU0MTg0ZGJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIwOX0se1wiZmlsZW5hbWVcIjpcInNjYW4tcHduLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8yZTAzY2Y0NC04NmJlLTRmNDctYWY3NC00ZmI1ODkzMjk1YjdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3Njl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzY5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImZpbGVFeGlzdHNcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRIYWNraW5nTGV2ZWxcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJOdW1Qb3J0c1JlcXVpcmVkXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyUmVxdWlyZWRIYWNraW5nTGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJmdHBjcmFja1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJyZWxheXNtdHBcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaHR0cHdvcm1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic3FsaW5qZWN0XCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIm51a2VcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwicnVuXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc2NhbiB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3Qgc3J2ID0gbnMuYXJncy5zaGlmdCgpO1xcbiAgY29uc3QgdGFyZ2V0U2NyaXB0ID0gbnMuYXJncy5zaGlmdCgpO1xcbiAgY29uc3QgdGFyZ2V0QXJncyA9IG5zLmFyZ3M7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBhd2FpdCBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIGF1dG9jb21wbGV0ZShkYXRhLCBhcmdzKSB7XFxuICBzd2l0Y2ggKGFyZ3MubGVuZ3RoKSB7XFxuICAgIGNhc2UgMTpcXG4gICAgICByZXR1cm4gWy4uLmRhdGEuc2VydmVyc107XFxuICAgIGNhc2UgMjpcXG4gICAgICByZXR1cm4gWy4uLmRhdGEuc2NyaXB0c107XFxuICAgIGRlZmF1bHQ6XFxuICAgICAgcmV0dXJuIFtdO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJydW4tbWF4LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZWYxMjUzYzAtY2VjNC00N2VmLTlhMGYtMWEyM2I1OGM2NmI5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjgyfSx7XCJmaWxlbmFtZVwiOlwicnVuLW1heC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNjAzNmIzNGUtZGVlMS00NjUwLWEzZWMtZGQ0ZWNmMjlmYjUzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjc5OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjA1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkyMzMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM31dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldFNjcmlwdCA9IG5zLmFyZ3Muc2hpZnQoKTtcXG4gIGNvbnN0IHRhcmdldEFyZ3MgPSBucy5hcmdzO1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgLy8gVE9ETyBob3cgdG8gZ2V0IGxvY2FsIGhvc3RuYW1lIG9yIGxvY2FsIHJhbT9cXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShcXFwiaG9tZVxcXCIpIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShcXFwiaG9tZVxcXCIpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBucy50cHJpbnQoXFxuICAgIGAgIGluIDEwcyBzdGFydGluZyBydW4gJHt0YXJnZXRTY3JpcHR9IC10ICR7dGhyZWFkc30gJHt0YXJnZXRBcmdzfWBcXG4gICk7XFxuICBucy5zcGF3bih0YXJnZXRTY3JpcHQsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gYXV0b2NvbXBsZXRlKGRhdGEsIGFyZ3MpIHtcXG4gIHJldHVybiBbLi4uZGF0YS5zY3JpcHRzXTtcXG59XCIsXCJmaWxlbmFtZVwiOlwicnVuLW1heC1sb2NhbC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcInJ1bi1tYXgtbG9jYWwuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2E0ZTg1ZDVkLTgyMjEtNDM4Yy1hMWE0LTY4M2QzYTg1NjFhMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo1NDE0Nn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIyOSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJVc2VkUmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNwYXduXCIsXCJjb3N0XCI6Mn1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjA5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgbGV0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBucy50cHJpbnQoXFxcImZhcm1pbmcgYW5kIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgY29uc3QgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC45O1xcbiAgY29uc3Qgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyAyO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgaWYgKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKSB7XFxuICAgICAgYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIH0gZWxzZSBpZiAobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKSB7XFxuICAgICAgYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgfVxcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2U5NmQxYmY5LTNhYWUtNDkxNC05YTQzLTIxOTI3MjgwMzU2NVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNjV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxODEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBsZXQgbW9uZXlTdGFzaCA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuICB3aGlsZSAobW9uZXlTdGFzaCA8IG1vbmV5VGhyZXNoKSB7XFxuICAgIG5zLnByaW50KFxcbiAgICAgIFxcXCJncm93aW5nIFxcXCIgKyB0YXJnZXQgKyBcXFwiLCBoYXZlIFxcXCIgKyBtb25leVN0YXNoICsgXFxcIiB3YW50IFxcXCIgKyBtb25leVRocmVzaFxcbiAgICApO1xcbiAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG1vbmV5U3Rhc2ggPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMTk1NjE4ZjYtMGYzNy00MTI1LWFjYTAtZjRjODhjNjk1Y2ExXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjY0NjIwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuOTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTE5NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84NWNhNjRhOC0zNDdiLTQ1ZGUtYjJiMC1hYmI4YjBlNjUxNWFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcwNX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIxMyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IHNjYW4sIHNydl9pbmZvLCBmbXQgfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiBzcnZfaW5mbyhucywgc3J2KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLyBhLnNlY19taW4gLSBiLm1vbmV5X21heCAvIGEuc2VjX21pbik7XFxuXFxuICBvdXRwdXQuZm9yRWFjaCgoaW5mbykgPT4ge1xcbiAgICBucy50cHJpbnQoYFRhcmdldCAke2luZm8ubmFtZX06YCk7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBtb25leTogJHtmbXQoaW5mby5tb25leV9jdXJyKX0vJHtmbXQoaW5mby5tb25leV9tYXgpfSAke1xcbiAgICAgICAgaW5mby5tb25leV9wY3RcXG4gICAgICB9JWBcXG4gICAgKTtcXG4gICAgbnMudHByaW50KGAgIHNlYyAgOiAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufSAke2luZm8uc2VjX3BjdH0lYCk7XFxuICB9KTtcXG59XCIsXCJmaWxlbmFtZVwiOlwic3J2LXN0YXRzLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYWVhNDJlOWItZmVmNC00MDE5LWE4ZDUtOTQ1MGEzZjExNzRhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjExNzV9LHtcImZpbGVuYW1lXCI6XCJzcnYtc3RhdHMuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2VlNzcxYTQ2LTE5NWEtNGFjMS1hZjI1LTgzZjliYTdiOTAyN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzc1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuMjUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjUzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGxldCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgbnMudHByaW50KFxcXCJmYXJtaW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIGNvbnN0IG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgMjtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGlmIChucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCkge1xcbiAgICAgIGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICB9IGVsc2UgaWYgKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCkge1xcbiAgICAgIGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBucy5wcmludChcXFwic2VydmVyIFxcXCIgKyB0YXJnZXQgKyBcXFwiaXMgZnVsbCBhbmQgd2Vha1xcXCIpO1xcbiAgICAgIGF3YWl0IG5zLnNsZWVwKDEwMDApO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hMGUxYzU0ZC1mODJhLTQ0YzItYmQ1Ni05MjdhYmNjMDMxYTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjYxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuMyxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTgzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzcnZfaW5mbyB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwid2F0Y2hpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgaW5mbyA9IHNydl9pbmZvKG5zLCB0YXJnZXQpO1xcbiAgICBucy50cHJpbnQoXFxcIndhdGNoaW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIG1vbmV5OiAke2luZm8ubW9uZXlfY3Vycn0vJHtpbmZvLm1vbmV5X21heH0gJHtpbmZvLm1vbmV5X3BjdH0lYFxcbiAgICApO1xcbiAgICBucy50cHJpbnQoYCAgc2VjICA6ICR7aW5mby5zZWNfY3Vycn0vJHtpbmZvLnNlY19tYXh9ICR7aW5mby5zZWNfcGN0fSVgKTtcXG4gICAgYXdhaXQgbnMuc2xlZXAoMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcIndhdGNoLXNydi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2NlNTNmOTNjLWQ5YTQtNDExYy04YWY1LTk0ZWM2ODExYTU4N1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNDcyM30se1wiZmlsZW5hbWVcIjpcIndhdGNoLXNydi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNjM2YzIyYTgtMzAyYS00NWQ1LTgzNzEtODNlZGNiMzdjN2NmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE1MTM1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI1MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc29ydGVkX3RhcmdldHMsIHNydl9tb25leSwgcGVyY2VudGFnZSwgZm10IH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIC8vcmFuZG9tIGJhY2tvZmZcXG4gIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAwKSk7XFxuXFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICAvL3JhbmRvbSBiYWNrb2ZmXFxuICAgIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwMDApKTtcXG5cXG4gICAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpXFxuICAgICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgICAgLi4uc3J2LFxcbiAgICAgICAgLi4uc3J2X21vbmV5KG5zLCBzcnYubmFtZSksXFxuICAgICAgfSkpXFxuICAgICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9jdXJyIDwgaW5mby5tb25leV9tYXgpXFxuICAgICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgICBucy5wcmludChcXG4gICAgICBgdG9wIHRhcmdldHM6ICR7b3V0cHV0XFxuICAgICAgICAubWFwKFxcbiAgICAgICAgICAoaW5mbykgPT4gYCR7aW5mby5uYW1lfSAke2ZtdChpbmZvLm1vbmV5X21heCl9JCAke2luZm8ubW9uZXlfcGN0fSVgXFxuICAgICAgICApXFxuICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuXFxuICAgIGlmIChvdXRwdXQubGVuZ3RoID4gMCkge1xcbiAgICAgIGNvbnN0IGluZm8gPSBvdXRwdXRbMF07XFxuICAgICAgbnMucHJpbnQoYFRhcmdldCAke2luZm8ubmFtZX06YCk7XFxuICAgICAgbnMucHJpbnQoXFxuICAgICAgICBgICBiZWZvcmUgbW9uZXk6ICR7Zm10KGluZm8ubW9uZXlfY3Vycil9LyR7Zm10KGluZm8ubW9uZXlfbWF4KX0gJHtcXG4gICAgICAgICAgaW5mby5tb25leV9wY3RcXG4gICAgICAgIH0lYFxcbiAgICAgICk7XFxuICAgICAgY29uc3QgYW1vdW50ID0gYXdhaXQgbnMuZ3JvdyhpbmZvLm5hbWUpO1xcbiAgICAgIGNvbnN0IGFmdGVyID0gc3J2X21vbmV5KG5zLCBpbmZvLm5hbWUpO1xcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYCAgYWZ0ZXIgbW9uZXk6ICR7Zm10KGFmdGVyLm1vbmV5X2N1cnIpfS8ke2ZtdChhZnRlci5tb25leV9tYXgpfSAke1xcbiAgICAgICAgICBhZnRlci5tb25leV9wY3RcXG4gICAgICAgIH0lIChyYWlzZWQgJHtwZXJjZW50YWdlKGluZm8ubW9uZXlfY3VyciwgYWZ0ZXIubW9uZXlfY3Vycil9JSlgXFxuICAgICAgKTtcXG4gICAgICBucy50cHJpbnQoXFxuICAgICAgICBgZ3Jvd24gJHtpbmZvLm5hbWV9IHRvICR7Zm10KGFmdGVyLm1vbmV5X2N1cnIpfSQgLyAke2ZtdChcXG4gICAgICAgICAgaW5mby5tb25leV9tYXhcXG4gICAgICAgICl9JCAgJHthZnRlci5tb25leV9wY3R9JSAoKyAke3BlcmNlbnRhZ2UoYW1vdW50LCBpbmZvLm1vbmV5X2N1cnIpfSUpYFxcbiAgICAgICk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbnMucHJpbnQoXFxcIm5vIG1vcmUgdGFnZXRzIGF2YWlsYWJsZVxcXCIpO1xcbiAgICB9XFxuICAgIGF3YWl0IG5zLnNsZWVwKDEwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctdG9wLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vODU3Njk4MDYtM2VmNC00N2I4LWEwNDgtZGJjNjU0M2NkNDQyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjEzODg0M30se1wiZmlsZW5hbWVcIjpcImdyb3ctdG9wLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84Yjg0ZGNmMS0yODQ2LTRlMGEtYjYwYi1mYTg2YmVjNzFmMGNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTM5MDA0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTk1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHtcXG4gIHNvcnRlZF90YXJnZXRzLFxcbiAgc3J2X3NlYyxcXG4gIHBlcmNlbnRhZ2UsXFxuICBmbXQsXFxuICBzcnZfbW9uZXksXFxufSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgLy9yYW5kb20gYmFja29mZlxcbiAgYXdhaXQgbnMuc2xlZXAoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDApKTtcXG5cXG4gIGxldCBoYXZlVGFyZ2V0ID0gZmFsc2U7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICAvL3JhbmRvbSBiYWNrb2ZmXFxuICAgIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwMDApKTtcXG5cXG4gICAgY29uc3QgaW5mb3MgPSBzb3J0ZWRfdGFyZ2V0cyhucykubWFwKChzcnYpID0+ICh7XFxuICAgICAgLi4uc3J2LFxcbiAgICAgIC4uLnNydl9zZWMobnMsIHNydi5uYW1lKSxcXG4gICAgICAuLi5zcnZfbW9uZXkobnMsIHNydi5uYW1lKSxcXG4gICAgfSkpO1xcbiAgICAvLyAgICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gICAgLy9ucy50cHJpbnQoYGluZm86ICR7aW5mb3MubWFwKChpbmZvKSA9PiBpbmZvLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YCk7XFxuXFxuICAgIGNvbnN0IG91dHB1dF9zID0gaW5mb3NcXG4gICAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X2N1cnIgIT0gMClcXG4gICAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X2N1cnIgPj0gMC4yNSAqIGluZm8ubW9uZXlfbWF4KVxcbiAgICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8uc2VjX2N1cnIgPD0gaW5mby5zZWNfbWluICsgMik7IC8vIG9ubHkgd2l0aCByZWFzb25hYmx5IHdlYWsgc2VjdXJpdHlcXG5cXG4gICAgbnMucHJpbnQoXFxuICAgICAgYGxvdy1zZWMgdGFyZ2V0czogJHtvdXRwdXRfc1xcbiAgICAgICAgLm1hcChcXG4gICAgICAgICAgKGluZm8pID0+XFxuICAgICAgICAgICAgYCR7aW5mby5uYW1lfSAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufSwgJHtmbXQoXFxuICAgICAgICAgICAgICBpbmZvLm1vbmV5X2N1cnJcXG4gICAgICAgICAgICApfSQvJHtmbXQoaW5mby5tb25leV9tYXgpfSRgXFxuICAgICAgICApXFxuICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuXFxuICAgIGNvbnN0IG91dHB1dCA9IG91dHB1dF9zLmZpbHRlcihcXG4gICAgICAoaW5mbykgPT4gaW5mby5tb25leV9jdXJyID49IGluZm8ubW9uZXlfbWF4ICogMC41XFxuICAgICk7IC8vIG9ubHkgd2l0aCBkZWNlbnQgbW9uZXlcXG5cXG4gICAgbnMucHJpbnQoXFxuICAgICAgYHRvcCB0YXJnZXRzOiAke291dHB1dFxcbiAgICAgICAgLm1hcCgoaW5mbykgPT4gYCR7aW5mby5uYW1lfSAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufWApXFxuICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuXFxuICAgIGlmIChvdXRwdXQubGVuZ3RoID4gMCkge1xcbiAgICAgIGhhdmVUYXJnZXQgPSB0cnVlO1xcbiAgICAgIGNvbnN0IGluZm8gPSBvdXRwdXRbMF07XFxuICAgICAgbnMucHJpbnQoYFRhcmdldCAke2luZm8ubmFtZX06YCk7XFxuICAgICAgY29uc3QgcHJlTW9uZXkgPSBpbmZvLm1vbmV5X2N1cnI7XFxuICAgICAgbnMucHJpbnQoXFxuICAgICAgICBgICBiZWZvcmUgaGFjayBzZWM6ICR7aW5mby5zZWNfY3Vycn0vJHtpbmZvLnNlY19taW59ICR7XFxuICAgICAgICAgIGluZm8uc2VjX3BjdFxcbiAgICAgICAgfSUsIG1vbmV5OiAke2ZtdChwcmVNb25leSl9YFxcbiAgICAgICk7XFxuICAgICAgY29uc3QgbG9vdCA9IGF3YWl0IG5zLmhhY2soaW5mby5uYW1lKTtcXG4gICAgICBjb25zdCBwb3N0TW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShpbmZvLm5hbWUpO1xcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYCAgYWZ0ZXIgaGFjayBzZWM6ICAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufSAke1xcbiAgICAgICAgICBpbmZvLnNlY19wY3RcXG4gICAgICAgIH0lLCBtb25leTogJHtmbXQocG9zdE1vbmV5KX0sIGdvdCAke3BlcmNlbnRhZ2UobG9vdCwgcHJlTW9uZXkpfSVgXFxuICAgICAgKTtcXG4gICAgICBucy5wcmludChcXG4gICAgICAgIGBIYWNrZWQgJHtpbmZvLm5hbWV9OiBnb3QgJHtmbXQobG9vdCl9ICgke3BlcmNlbnRhZ2UoXFxuICAgICAgICAgIGxvb3QsXFxuICAgICAgICAgIHByZU1vbmV5XFxuICAgICAgICApfSUpLCBub3cgYXQgc2VjICR7aW5mby5zZWNfY3Vyci50b0ZpeGVkKDIpfS8ke2luZm8uc2VjX21pbn0gKCR7XFxuICAgICAgICAgIGluZm8uc2VjX3BjdFxcbiAgICAgICAgfSUpYFxcbiAgICAgICk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgaWYgKGhhdmVUYXJnZXQpIHtcXG4gICAgICAgIG5zLnByaW50KFxcXCJubyBtb3JlIHRhZ2V0cyBhdmFpbGFibGVcXFwiKTtcXG4gICAgICAgIGhhdmVUYXJnZXQgPSBmYWxzZTtcXG4gICAgICB9XFxuICAgIH1cXG4gICAgYXdhaXQgbnMuc2xlZXAoMSk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stdG9wLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZDc5MGI2MzQtZTA0NC00ZWJhLTgwOGMtMzJmNDMwOGMzZTU1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE5OTk5NH0se1wiZmlsZW5hbWVcIjpcImhhY2stdG9wLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9jYzUzZTU0My0xMmE1LTQ1ZDktOWJkOC05YWVhNzk0YjM1ODFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjA0NzY2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNDUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIwMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IHNvcnRlZF90YXJnZXRzLCBzcnZfc2VjIH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIC8vcmFuZG9tIGJhY2tvZmZcXG4gIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAwKSk7XFxuXFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICAvL3JhbmRvbSBiYWNrb2ZmXFxuICAgIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwMDApKTtcXG5cXG4gICAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpXFxuICAgICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgICAgLi4uc3J2LFxcbiAgICAgICAgLi4uc3J2X3NlYyhucywgc3J2Lm5hbWUpLFxcbiAgICAgIH0pKVxcbiAgICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8uc2VjX2N1cnIgPiBpbmZvLnNlY19taW4gKyAxKTtcXG4gICAgLy8uZmlsdGVyKChpbmZvKSA9PiBpbmZvLm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICAgIG5zLnByaW50KFxcbiAgICAgIGB0b3AgdGFyZ2V0czogJHtvdXRwdXRcXG4gICAgICAgIC5tYXAoKGluZm8pID0+IGAke2luZm8ubmFtZX0gJHtpbmZvLnNlY19jdXJyfS8ke2luZm8uc2VjX21pbn1gKVxcbiAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcblxcbiAgICBpZiAob3V0cHV0Lmxlbmd0aCA+IDApIHtcXG4gICAgICBjb25zdCBpbmZvID0gb3V0cHV0WzBdO1xcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYFRhcmdldCAke2luZm8ubmFtZX0sIGJlZm9yZTogJHtpbmZvLnNlY19jdXJyfS8ke2luZm8uc2VjX21pbn0gJHtpbmZvLnNlY19wY3R9JWBcXG4gICAgICApO1xcbiAgICAgIGF3YWl0IG5zLndlYWtlbihpbmZvLm5hbWUpO1xcbiAgICAgIGNvbnN0IHBvc3QgPSBzcnZfc2VjKG5zLCBpbmZvLm5hbWUpO1xcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYCAgYWZ0ZXIgc2VjOiAke3Bvc3Quc2VjX2N1cnJ9LyR7cG9zdC5zZWNfbWlufSAke3Bvc3Quc2VjX3BjdH0lYFxcbiAgICAgICk7XFxuICAgICAgbnMudHByaW50KFxcbiAgICAgICAgYHdlYWtlbmVkICR7aW5mby5uYW1lfTogJHsrcG9zdC5zZWNfY3Vyci50b0ZpeGVkKDIpfS8ke1xcbiAgICAgICAgICBwb3N0LnNlY19taW5cXG4gICAgICAgIH0sIG5vdyBhdCAke3Bvc3Quc2VjX3BjdH0lYFxcbiAgICAgICk7XFxuICAgIH1cXG4gICAgYXdhaXQgbnMuc2xlZXAoMTAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLXRvcC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2YzYmVjMzE2LWUxOTYtNDZjZS04ZGYwLTBlODYxNDk5ZjNlMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNzk2NDh9LHtcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tdG9wLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy80NTY4OGRiMi04MzNmLTQzOGYtODhlMS0wMjg3YzY4ZjcwMDRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzgwMjAyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjU3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7XFxuICBzb3J0ZWRfdGFyZ2V0cyxcXG4gIGJlc3RfdGFyZ2V0LFxcbiAgc3J2X2luZm8sXFxuICBmbXQsXFxuICB0Zm10LFxcbn0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5tYXAoKHNydikgPT4gKHtcXG4gICAgLi4uc3J2LFxcbiAgICAuLi5zcnZfaW5mbyhucywgc3J2Lm5hbWUpLFxcbiAgfSkpO1xcblxcbiAgb3V0cHV0LnJldmVyc2UoKS5mb3JFYWNoKChpbmZvKSA9PiB7XFxuICAgIG5zLnRwcmludChgVGFyZ2V0ICR7aW5mby5uYW1lfTpgKTtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIG1vbmV5OiAke2ZtdChpbmZvLm1vbmV5X2N1cnIpfS8ke2ZtdChpbmZvLm1vbmV5X21heCl9ICR7XFxuICAgICAgICBpbmZvLm1vbmV5X3BjdFxcbiAgICAgIH0lYFxcbiAgICApO1xcbiAgICBucy50cHJpbnQoYCAgc2VjICA6ICR7aW5mby5zZWNfY3Vycn0vJHtpbmZvLnNlY19taW59ICR7aW5mby5zZWNfcGN0fSVgKTtcXG4gICAgbnMudHByaW50KGAgIHNjb3JlOiAke2ZtdChpbmZvLnNjb3JlKX1gKTtcXG4gICAgbnMudHByaW50KGAgIGdyb3d0aDogJHtmbXQoaW5mby5ncm93dGgpfWApO1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgdGltZXM6IGdyb3cgJHt0Zm10KG5zLmdldEdyb3dUaW1lKGluZm8ubmFtZSkpfSB3ZWFrICR7dGZtdChcXG4gICAgICAgIG5zLmdldFdlYWtlblRpbWUoaW5mby5uYW1lKVxcbiAgICAgICl9IGhhY2sgJHt0Zm10KG5zLmdldEhhY2tUaW1lKGluZm8ubmFtZSkpfSBgXFxuICAgICk7XFxuICB9KTtcXG5cXG4gIG5zLnRwcmludChgYmVzdCB0YXJnZXQgaXMgJHtiZXN0X3RhcmdldChucykubmFtZX1gKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwidGFyZ2V0cy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82ZDgyMmZhZi05NjhmLTRjZDEtYWQ3NS02YmFhYzZlZWExNzRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIwOX0se1wiZmlsZW5hbWVcIjpcInRhcmdldHMuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzg2MGM3OTUxLTU3ZmMtNDc1MS04OWUxLTYyNmI1Yjk3ODAxOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQxM31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MTMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRHcm93VGltZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRXZWFrZW5UaW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEhhY2tUaW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc2NhbiB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgY29uc3QgbmV0ID0gc2Nhbihucyk7XFxuICBjb25zdCBzcnZzID0gbmV0LmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpO1xcbiAgbnMudHByaW50ZihgZ290ICR7c3J2cy5sZW5ndGh9IHB3bmQtc2VydmVycywgb3V0IG9mICR7bmV0Lmxlbmd0aH1gKTtcXG4gIG5zLnRwcmludGYoXFxcImF0dGFja2luZyBcXFwiICsgdGFyZ2V0IHx8IFxcXCIgdG9wIGdyb3dpbmcgc2VydmVyc1xcXCIpO1xcblxcbiAgY29uc3QgZXhjbHVkZSA9IFtcXFwiaG9tZVxcXCJdO1xcblxcbiAgLy8gZXhjbHVkaW5nIGhvbWVcXG4gIGlmIChucy5maWxlRXhpc3RzKFxcXCJzbGF2ZS1ob3N0LmpzXFxcIiwgXFxcImhvbWVcXFwiKSkge1xcbiAgICBjb25zdCB0YXJnZXRzID0gc3J2cy5maWx0ZXIoKHNydikgPT4gIWV4Y2x1ZGUuaW5jbHVkZXMoc3J2KSk7XFxuICAgIC8vIG5zLnRwcmludChcXFwidGFyZ2V0czogXFxcIiArIHRhcmdldHMuam9pbihcXFwiLFxcXCIpKTtcXG4gICAgZm9yIChsZXQgc3J2IG9mIHRhcmdldHMpIHtcXG4gICAgICBucy5ydW4oXFxcInNsYXZlLWhvc3QuanNcXFwiLCAxLCBzcnYsIHRhcmdldCk7XFxuICAgICAgYXdhaXQgbnMuc2xlZXAoMjApO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcInNsYXZlLW5ldC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzFmYWEzNDRmLWJmOWMtNDBkYi1iYTE3LWNjYzcwOTc4MzU1OFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyNDl9LHtcImZpbGVuYW1lXCI6XCJzbGF2ZS1uZXQuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzU4ODhhZjIwLTA5ODMtNDUzNi04ZmQzLTc0MjBmOTdhNDc0MFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzAwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuOTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI0NSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImZpbGVFeGlzdHNcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJydW5cIixcImNvc3RcIjoxfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzY2FuIH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuXFxuICBjb25zdCBzY3JpcHRXZWFrZW4gPSBcXFwibG9vcC13ZWFrZW4uanNcXFwiO1xcbiAgY29uc3Qgc2NyaXB0R3JvdyA9IFxcXCJsb29wLWdyb3cuanNcXFwiO1xcbiAgY29uc3Qgc2NyaXB0SGFjayA9IFxcXCJsb29wLWhhY2suanNcXFwiO1xcblxcbiAgLyogbnMudHByaW50KFxcbiAgICBgdGFyZ2V0ICR7dGFyZ2V0fSwgc2NyaXB0czogJHtzY3JpcHRXZWFrZW59LCR7c2NyaXB0R3Jvd30sJHtzY3JpcHRIYWNrfWBcXG4gICk7Ki9cXG5cXG4gIGNvbnN0IHNydiA9IFxcXCJob21lXFxcIjtcXG4gIGNvbnN0IHNpemVXZWFrZW4gPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0V2Vha2VuKTtcXG4gIGNvbnN0IHNpemVHcm93ID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdEdyb3cpO1xcbiAgY29uc3Qgc2l6ZUhhY2sgPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0SGFjayk7XFxuXFxuICBjb25zdCBzaXplID0gc2l6ZVdlYWtlbjsgLy9hbGwgaGF2ZSBzYW1lIHNpemVcXG5cXG4gIGNvbnN0IHBhcnRHcm93ID0gMC44O1xcbiAgY29uc3QgcGFydFdlYWtlbiA9IDAuMTtcXG5cXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShzcnYpO1xcbiAgY29uc3Qgc3J2VGhyZWFkcyA9IHNydlJhbSAvIHNpemU7XFxuXFxuICBjb25zdCBjb3VudFdlYWtlbiA9IHNydlRocmVhZHMgKiBwYXJ0V2Vha2VuO1xcbiAgY29uc3QgY291bnRHcm93ID0gc3J2VGhyZWFkcyAqIHBhcnRHcm93O1xcbiAgbGV0IGNvdW50SGFjayA9IHNydlRocmVhZHMgLSBjb3VudEdyb3cgLSBjb3VudFdlYWtlbjtcXG5cXG4gIG5zLnRwcmludChcXG4gICAgYHNlcnZlciAke3Nydn0gKCR7c3J2UmFtfSBHQik6ICR7TWF0aC5mbG9vcihcXG4gICAgICBjb3VudFdlYWtlblxcbiAgICApfSB3ZWFrZW4gLyAke01hdGguZmxvb3IoY291bnRHcm93KX0gZ3JvdyAvICR7TWF0aC5mbG9vcihcXG4gICAgICBjb3VudEhhY2tcXG4gICAgKX0gaGFjayB0aHJlYWRzYFxcbiAgKTtcXG5cXG4gIGlmIChjb3VudFdlYWtlbiA+IDApIG5zLnJ1bihzY3JpcHRXZWFrZW4sIGNvdW50V2Vha2VuLCB0YXJnZXQpO1xcbiAgaWYgKGNvdW50R3JvdyA+IDApIG5zLnJ1bihzY3JpcHRHcm93LCBjb3VudEdyb3csIHRhcmdldCk7XFxuICBpZiAoY291bnRIYWNrID4gMCkgbnMucnVuKHNjcmlwdEhhY2ssIGNvdW50SGFjaywgdGFyZ2V0KTtcXG59XCIsXCJmaWxlbmFtZVwiOlwic2xhdmUtaG9tZS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzMxOWE3Y2JmLTNiODktNDkyMC1hMTJlLTg3OTAzNGE0NjdiN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyNDl9LHtcImZpbGVuYW1lXCI6XCJzbGF2ZS1ob21lLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kZmQyYzExYy1jN2EwLTQxNzYtOTFmYS02ZDFlNzIwZWI2NTNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcwMX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjgsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI0MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJVc2VkUmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInJ1blwiLFwiY29zdFwiOjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IHNjYW4gfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbmNvbnN0IHNjcmlwdFdlYWtlbiA9IFxcXCJ3ZWFrZW4tdG9wLmpzXFxcIjtcXG5jb25zdCBzY3JpcHRHcm93ID0gXFxcImdyb3ctdG9wLmpzXFxcIjtcXG5jb25zdCBzY3JpcHRIYWNrID0gXFxcImhhY2stdG9wLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHNpemVXZWFrZW4gPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0V2Vha2VuKTtcXG4gIGNvbnN0IHNpemVHcm93ID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdEdyb3cpO1xcbiAgY29uc3Qgc2l6ZUhhY2sgPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0SGFjayk7XFxuICBjb25zdCBwYXJ0R3JvdyA9IChucy5hcmdzWzBdIHx8IDQwKSAvIDEwMDtcXG4gIGNvbnN0IHBhcnRXZWFrZW4gPSAxLjAgLSBwYXJ0R3JvdztcXG4gIGNvbnN0IGhhY2tGYWN0b3IgPSAwLjI7XFxuXFxuICBjb25zdCBzcnYgPSBucy5nZXRIb3N0TmFtZSgpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCBjb3VudFdlYWtlbiA9IE1hdGguZmxvb3IoXFxuICAgIChzcnZSYW0gKiAoMS4wIC0gaGFja0ZhY3RvcikgKiBwYXJ0V2Vha2VuKSAvIHNpemVXZWFrZW5cXG4gICk7XFxuICBjb25zdCBjb3VudEdyb3cgPSBNYXRoLmZsb29yKFxcbiAgICAoc3J2UmFtICogKDEuMCAtIGhhY2tGYWN0b3IpICogcGFydEdyb3cpIC8gc2l6ZUdyb3dcXG4gICk7XFxuICBjb25zdCBjb3VudEhhY2sgPSBNYXRoLmZsb29yKChzcnZSYW0gKiBoYWNrRmFjdG9yKSAvIHNpemVIYWNrKTtcXG5cXG4gIG5zLnRwcmludChcXG4gICAgYHNlcnZlciAke3Nydn0gKCR7c3J2UmFtfSBHQik6ICR7Y291bnRXZWFrZW59IHdlYWtlbiAvICR7Y291bnRHcm93fSBncm93IC8gJHtjb3VudEhhY2t9IGhhY2sgdGhyZWFkc2BcXG4gICk7XFxuXFxuICBpZiAoY291bnRXZWFrZW4gPiAwKSBucy5ydW4oc2NyaXB0V2Vha2VuLCBjb3VudFdlYWtlbik7XFxuICBpZiAoY291bnRHcm93ID4gMCkgbnMucnVuKHNjcmlwdEdyb3csIHNydiwgY291bnRHcm93KTtcXG4gIGlmIChjb3VudEhhY2sgPiAwKSBucy5zcGF3bihzY3JpcHRIYWNrLCBzcnYsIGNvdW50SGFjayk7XFxufVwiLFwiZmlsZW5hbWVcIjpcInNsYXZlLXNlbGYuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuNzUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI0NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJydW5cIixcImNvc3RcIjoxfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic3Bhd25cIixcImNvc3RcIjoyfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzZWFyY2ggfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbmV4cG9ydCBmdW5jdGlvbiBjb25uZWN0KHBhdGgpIHtcXG4gIGNvbnN0IGRvYyA9IGV2YWwoXFxcImRvY3VtZW50XFxcIik7XFxuICBjb25zdCB0ZXJtaW5hbElucHV0ID0gZG9jLmdldEVsZW1lbnRCeUlkKFxcXCJ0ZXJtaW5hbC1pbnB1dFxcXCIpO1xcbiAgdGVybWluYWxJbnB1dC52YWx1ZSA9IGBob21lOyR7cGF0aH1gO1xcbiAgY29uc3QgaGFuZGxlciA9IE9iamVjdC5rZXlzKHRlcm1pbmFsSW5wdXQpWzFdO1xcbiAgdGVybWluYWxJbnB1dFtoYW5kbGVyXS5vbkNoYW5nZSh7IHRhcmdldDogdGVybWluYWxJbnB1dCB9KTtcXG4gIHRlcm1pbmFsSW5wdXRbaGFuZGxlcl0ub25LZXlEb3duKHsga2V5Q29kZTogMTMsIHByZXZlbnREZWZhdWx0OiAoKSA9PiBudWxsIH0pO1xcbn1cXG5cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGNvbnN0IHBhdGggPSBzZWFyY2gobnMsIHRhcmdldCk7XFxuICBpZiAocGF0aCAmJiBwYXRoLmxlbmd0aCA+IDAgJiYgcGF0aFswXSA9PSBcXFwiaG9tZVxcXCIpIHtcXG4gICAgcGF0aC5zaGlmdCgpO1xcbiAgfVxcbiAgaWYgKHBhdGgpIHtcXG4gICAgY29uc3QgY29ubmVjdFN0ciA9IFxcXCJjb25uZWN0IFxcXCIgKyBwYXRoLmpvaW4oXFxcIjsgY29ubmVjdCBcXFwiKTtcXG4gICAgY29ubmVjdChjb25uZWN0U3RyKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIGF1dG9jb21wbGV0ZShkYXRhLCBhcmdzKSB7XFxuICByZXR1cm4gWy4uLmRhdGEuc2VydmVyc107XFxufVwiLFwiZmlsZW5hbWVcIjpcInJvdXRlLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOTE5ZTc2YmItMmVkNC00MWIzLThmYmItOTE4N2NjMGVlZDBhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE0NDY3fSx7XCJmaWxlbmFtZVwiOlwicm91dGUuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2FiN2M2ZDFmLWJhZmQtNDFiYi1iM2EzLTUzZTVjZWZjNmMzZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNTQ5NH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIyNyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImNvbm5lY3RcIixcImNvc3RcIjoyfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc2NhbiB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCBzcnYgPSBucy5hcmdzWzBdO1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1sxXTtcXG5cXG4gIGNvbnN0IHNjcmlwdFdlYWtlbiA9ICF0YXJnZXQgPyBcXFwid2Vha2VuLXRvcC5qc1xcXCIgOiBcXFwibG9vcC13ZWFrZW4uanNcXFwiO1xcbiAgY29uc3Qgc2NyaXB0R3JvdyA9ICF0YXJnZXQgPyBcXFwiZ3Jvdy10b3AuanNcXFwiIDogXFxcImxvb3AtZ3Jvdy5qc1xcXCI7XFxuICBjb25zdCBzY3JpcHRIYWNrID0gIXRhcmdldCA/IFxcXCJoYWNrLXRvcC5qc1xcXCIgOiBcXFwibG9vcC1oYWNrLmpzXFxcIjtcXG5cXG4gIG5zLnRwcmludChcXG4gICAgYGhvc3QgJHtzcnZ9LCB0YXJnZXQgJHt0YXJnZXR9LCBzY3JpcHRzOiAke3NjcmlwdFdlYWtlbn0sJHtzY3JpcHRHcm93fSwke3NjcmlwdEhhY2t9YFxcbiAgKTtcXG5cXG4gIGNvbnN0IHNpemVXZWFrZW4gPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0V2Vha2VuKTtcXG4gIGNvbnN0IHNpemVHcm93ID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdEdyb3cpO1xcbiAgY29uc3Qgc2l6ZUhhY2sgPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0SGFjayk7XFxuXFxuICBjb25zdCBzaXplID0gc2l6ZVdlYWtlbjsgLy9hbGwgaGF2ZSBzYW1lIHNpemVcXG5cXG4gIGNvbnN0IHBhcnRHcm93ID0gMC44O1xcbiAgY29uc3QgcGFydFdlYWtlbiA9IDAuMTtcXG5cXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcbiAgY29uc3Qgc3J2VGhyZWFkcyA9IHNydlJhbSAvIHNpemU7XFxuXFxuICBjb25zdCBjb3VudFdlYWtlbiA9IHNydlRocmVhZHMgKiBwYXJ0V2Vha2VuO1xcbiAgY29uc3QgY291bnRHcm93ID0gc3J2VGhyZWFkcyAqIHBhcnRHcm93O1xcbiAgbGV0IGNvdW50SGFjayA9IHNydlRocmVhZHMgLSBjb3VudEdyb3cgLSBjb3VudFdlYWtlbjtcXG5cXG4gIG5zLnRwcmludChcXG4gICAgYHNlcnZlciAke3Nydn0gKCR7c3J2UmFtfSBHQik6ICR7TWF0aC5mbG9vcihcXG4gICAgICBjb3VudFdlYWtlblxcbiAgICApfSB3ZWFrZW4gLyAke01hdGguZmxvb3IoY291bnRHcm93KX0gZ3JvdyAvICR7TWF0aC5mbG9vcihcXG4gICAgICBjb3VudEhhY2tcXG4gICAgKX0gaGFjayB0aHJlYWRzYFxcbiAgKTtcXG5cXG4gIGF3YWl0IG5zLnNjcChcXFwiaGFja2VyLWxpYi5qc1xcXCIsIHNydik7XFxuICBhd2FpdCBucy5zY3Aoc2NyaXB0V2Vha2VuLCBzcnYpO1xcbiAgYXdhaXQgbnMuc2NwKHNjcmlwdEdyb3csIHNydik7XFxuICBhd2FpdCBucy5zY3Aoc2NyaXB0SGFjaywgc3J2KTtcXG4gIGF3YWl0IG5zLnNjcChcXFwid2Vha2VuLWFmdGVyLmpzXFxcIiwgXFxcImhvbWVcXFwiLCBzcnYpO1xcbiAgYXdhaXQgbnMuc2NwKFxcXCJncm93LWFmdGVyLmpzXFxcIiwgXFxcImhvbWVcXFwiLCBzcnYpO1xcbiAgYXdhaXQgbnMuc2NwKFxcXCJoYWNrLWFmdGVyLmpzXFxcIiwgXFxcImhvbWVcXFwiLCBzcnYpO1xcbiAgbnMua2lsbGFsbChzcnYpO1xcblxcbiAgaWYgKGNvdW50V2Vha2VuID4gMCkgbnMuZXhlYyhzY3JpcHRXZWFrZW4sIHNydiwgY291bnRXZWFrZW4sIHRhcmdldCk7XFxuICBpZiAoY291bnRHcm93ID4gMCkgbnMuZXhlYyhzY3JpcHRHcm93LCBzcnYsIGNvdW50R3JvdywgdGFyZ2V0KTtcXG4gIGlmIChjb3VudEhhY2sgPiAwKSBucy5leGVjKHNjcmlwdEhhY2ssIHNydiwgY291bnRIYWNrLCB0YXJnZXQpO1xcbiAgbnMudHByaW50KFxcXCJkb25lIHNsYXZpbmcgXFxcIiArIHNydik7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGUoZGF0YSwgYXJncykge1xcbiAgcmV0dXJuIFsuLi5kYXRhLnNlcnZlcnNdO1xcbn1cIixcImZpbGVuYW1lXCI6XCJzbGF2ZS1ob3N0LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RiZjk3MDZkLTBhNDYtNGJjNS05ZTRlLTNiY2M1ZTFiYWNmN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjA5fSx7XCJmaWxlbmFtZVwiOlwic2xhdmUtaG9zdC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNTYwNDYyMDUtYTZkYS00YzA4LWIyYzQtODdkNGM1MjUyM2IxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzQzfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuMTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNDMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NwXCIsXCJjb3N0XCI6MC42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwia2lsbGFsbFwiLFwiY29zdFwiOjAuNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdGNvbnN0IHBzcnZzID0gbnMuZ2V0UHVyY2hhc2VkU2VydmVycygpXFxuXFx0Zm9yIChsZXQgc3J2IG9mIHBzcnZzKSB7XFxuXFx0XFx0bnMucnVuKFxcXCJydW4tbWF4LmpzXFxcIiwgMSwgc3J2LCBcXFwid2Vha2VuLXRvcC5qc1xcXCIpXFxuXFx0fVxcbn1cIixcImZpbGVuYW1lXCI6XCJ5b3VyYWxsd2Vhay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcInlvdXJhbGx3ZWFrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zMmQ0MWFkMi01ODk0LTQ1MWItYTY0MS1jZjg5YWRjZDY3YTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTQ2MDE0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuODUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjY1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0UHVyY2hhc2VkU2VydmVyc1wiLFwiY29zdFwiOjIuMjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJydW5cIixcImNvc3RcIjoxfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy81MTRmZGFiMy1mZGZmLTRlMDctYjY3NC03NjgzZWUwNmM2ZWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcwM31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkyMTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNzg2MmM0YjYtNWM0OC00NDFjLWFhMDUtZWEzYjM3YThlNjQ0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MDR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjExLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IHNjYW4gfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKlxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldFNjcmlwdCA9IG5zLmFyZ3Muc2hpZnQoKTtcXG4gIGNvbnN0IHRhcmdldEFyZ3MgPSBucy5hcmdzO1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcblxcbiAgZm9yIChjb25zdCBzcnYgb2YgbnMuZ2V0UHVyY2hhc2VkU2VydmVycygpKSB7XFxuICAgIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcbiAgICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gICAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgICAgYXdhaXQgbnMuc2NwKHRhcmdldFNjcmlwdCwgc3J2KTtcXG4gICAgICBucy5raWxsYWxsKHNydik7XFxuICAgICAgbnMudHByaW50KFxcbiAgICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgICApO1xcbiAgICAgIGF3YWl0IG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgICB9XFxuICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGUoZGF0YSwgYXJncykge1xcbiAgcmV0dXJuIFsuLi5kYXRhLnNjcmlwdHNdO1xcbn1cIixcImZpbGVuYW1lXCI6XCJydW4tbWF4LXBzZXJ2cy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzRkZDE3NGNkLTBhYzItNDc3Yi1hOGY4LWI1YWU3OTVjMWMxMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo3MjM2Nn0se1wiZmlsZW5hbWVcIjpcInJ1bi1tYXgtcHNlcnZzLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lNDMyMmQwNy0zNzg5LTQ3NzEtYTA2ZS1kNjVlMzhkYThkNzZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTA4MjczfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjYuNCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjMxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0UHVyY2hhc2VkU2VydmVyc1wiLFwiY29zdFwiOjIuMjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NwXCIsXCJjb3N0XCI6MC42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwia2lsbGFsbFwiLFwiY29zdFwiOjAuNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgIGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuICAgIGNvbnN0IHNlcnZlciA9IG5zLmFyZ3NbMF07XFxuICAgIGlmIChhcmdzLmhlbHAgfHwgIXNlcnZlcikge1xcbiAgICAgICAgbnMudHByaW50KFxcXCJUaGlzIHNjcmlwdCBkb2VzIGEgbW9yZSBkZXRhaWxlZCBhbmFseXNpcyBvZiBhIHNlcnZlci5cXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgVXNhZ2U6IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX0gU0VSVkVSYCk7XFxuICAgICAgICBucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYD4gcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBuMDBkbGVzYCk7XFxuICAgICAgICByZXR1cm47XFxuICAgIH1cXG4gICAgY29uc3QgcmFtID0gbnMuZ2V0U2VydmVyUmFtKHNlcnZlcik7XFxuICAgIGNvbnN0IG1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoc2VydmVyKTtcXG4gICAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leShzZXJ2ZXIpO1xcbiAgICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNlcnZlcik7XFxuICAgIGNvbnN0IHNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwoc2VydmVyKTtcXG4gICAgbnMudHByaW50KGBcXG5cXG4ke3NlcnZlcn06XFxuICAgIFJBTSAgICAgICAgOiAke3JhbVsxXX0gLyAke3JhbVswXX0gKCR7cmFtWzFdIC8gcmFtWzBdICogMTAwfSUpXFxuICAgICQgICAgICAgICAgOiAke25zLm5Gb3JtYXQobW9uZXksIFxcXCIkMC4wMDBhXFxcIil9IC8gJHtucy5uRm9ybWF0KG1heE1vbmV5LCBcXFwiJDAuMDAwYVxcXCIpfSAoJHsobW9uZXkgLyBtYXhNb25leSAqIDEwMCkudG9GaXhlZCgyKX0lKVxcbiAgICBzZWN1cml0eSAgIDogJHttaW5TZWMudG9GaXhlZCgyKX0gLyAke3NlYy50b0ZpeGVkKDIpfVxcbiAgICBncm93dGggICAgIDogJHtucy5nZXRTZXJ2ZXJHcm93dGgoc2VydmVyKX1cXG4gICAgaGFjayB0aW1lICA6ICR7bnMudEZvcm1hdChucy5nZXRIYWNrVGltZShzZXJ2ZXIpKX1cXG4gICAgZ3JvdyB0aW1lICA6ICR7bnMudEZvcm1hdChucy5nZXRHcm93VGltZShzZXJ2ZXIpKX1cXG4gICAgd2Vha2VuIHRpbWU6ICR7bnMudEZvcm1hdChucy5nZXRXZWFrZW5UaW1lKHNlcnZlcikpfVxcbiAgICBncm93IHgyICAgIDogJHsobnMuZ3Jvd3RoQW5hbHl6ZShzZXJ2ZXIsIDIpKS50b0ZpeGVkKDIpfSB0aHJlYWRzXFxuICAgIGdyb3cgeDMgICAgOiAkeyhucy5ncm93dGhBbmFseXplKHNlcnZlciwgMykpLnRvRml4ZWQoMil9IHRocmVhZHNcXG4gICAgZ3JvdyB4NCAgICA6ICR7KG5zLmdyb3d0aEFuYWx5emUoc2VydmVyLCA0KSkudG9GaXhlZCgyKX0gdGhyZWFkc1xcbiAgICBoYWNrIDEwJSAgIDogJHsoLjEwIC8gbnMuaGFja0FuYWx5emUoc2VydmVyKSkudG9GaXhlZCgyKX0gdGhyZWFkc1xcbiAgICBoYWNrIDI1JSAgIDogJHsoLjI1IC8gbnMuaGFja0FuYWx5emUoc2VydmVyKSkudG9GaXhlZCgyKX0gdGhyZWFkc1xcbiAgICBoYWNrIDUwJSAgIDogJHsoLjUwIC8gbnMuaGFja0FuYWx5emUoc2VydmVyKSkudG9GaXhlZCgyKX0gdGhyZWFkc1xcbiAgICBoYWNrQ2hhbmNlIDogJHsobnMuaGFja0FuYWx5emVDaGFuY2Uoc2VydmVyKSAqIDEwMCkudG9GaXhlZCgyKX0lXFxuYCk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9vZmZpY2lhbC9hbmFseXplX3NlcnZlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIi9vZmZpY2lhbC9hbmFseXplX3NlcnZlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vY2Q3Y2E1OTgtYzE1Zi00YjBkLTg0M2EtZTQwMDA2MzdhNjk5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjY5MjU4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjUuMzUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjY5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyUmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0SGFja1RpbWVcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0R3Jvd1RpbWVcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0V2Vha2VuVGltZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93dGhBbmFseXplXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tBbmFseXplXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tBbmFseXplQ2hhbmNlXCIsXCJjb3N0XCI6MX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgZmxhZ3MgPSBucy5mbGFncyhbXFxuICAgIFtcXFwicmVmcmVzaHJhdGVcXFwiLCAyMDBdLFxcbiAgICBbXFxcImhlbHBcXFwiLCBmYWxzZV0sXFxuICBdKTtcXG4gIGlmIChmbGFncy5fLmxlbmd0aCA9PT0gMCB8fCBmbGFncy5oZWxwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBcXFwiVGhpcyBzY3JpcHQgaGVscHMgdmlzdWFsaXplIHRoZSBtb25leSBhbmQgc2VjdXJpdHkgb2YgYSBzZXJ2ZXIuXFxcIlxcbiAgICApO1xcbiAgICBucy50cHJpbnQoYFVTQUdFOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IFNFUlZFUl9OQU1FYCk7XFxuICAgIG5zLnRwcmludChcXFwiRXhhbXBsZTpcXFwiKTtcXG4gICAgbnMudHByaW50KGA+IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX0gbjAwZGxlc2ApO1xcbiAgICByZXR1cm47XFxuICB9XFxuICBucy50YWlsKCk7XFxuICBucy5kaXNhYmxlTG9nKFxcXCJBTExcXFwiKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IHNlcnZlciA9IGZsYWdzLl9bMF07XFxuICAgIGxldCBtb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHNlcnZlcik7XFxuICAgIGlmIChtb25leSA9PT0gMCkgbW9uZXkgPSAxO1xcbiAgICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHNlcnZlcik7XFxuICAgIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc2VydmVyKTtcXG4gICAgY29uc3Qgc2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbChzZXJ2ZXIpO1xcbiAgICBucy5jbGVhckxvZyhzZXJ2ZXIpO1xcbiAgICBucy5wcmludChgJHtzZXJ2ZXJ9OmApO1xcbiAgICBucy5wcmludChcXG4gICAgICBgICRfX19fX19fOiAke25zLm5Gb3JtYXQobW9uZXksIFxcXCIkMC4wMDBhXFxcIil9IC8gJHtucy5uRm9ybWF0KFxcbiAgICAgICAgbWF4TW9uZXksXFxuICAgICAgICBcXFwiJDAuMDAwYVxcXCJcXG4gICAgICApfSAoJHsoKG1vbmV5IC8gbWF4TW9uZXkpICogMTAwKS50b0ZpeGVkKDIpfSUpYFxcbiAgICApO1xcbiAgICBucy5wcmludChgIHNlY3VyaXR5OiArJHsoc2VjIC0gbWluU2VjKS50b0ZpeGVkKDIpfWApO1xcbiAgICBucy5wcmludChcXG4gICAgICBgIGhhY2tfX19fOiAke25zLnRGb3JtYXQobnMuZ2V0SGFja1RpbWUoc2VydmVyKSl9ICh0PSR7TWF0aC5jZWlsKFxcbiAgICAgICAgbnMuaGFja0FuYWx5emVUaHJlYWRzKHNlcnZlciwgbW9uZXkpXFxuICAgICAgKX0pYFxcbiAgICApO1xcbiAgICBucy5wcmludChcXG4gICAgICBgIGdyb3dfX19fOiAke25zLnRGb3JtYXQobnMuZ2V0R3Jvd1RpbWUoc2VydmVyKSl9ICh0PSR7TWF0aC5jZWlsKFxcbiAgICAgICAgbnMuZ3Jvd3RoQW5hbHl6ZShzZXJ2ZXIsIG1heE1vbmV5IC8gbW9uZXkpXFxuICAgICAgKX0pYFxcbiAgICApO1xcbiAgICBucy5wcmludChcXG4gICAgICBgIHdlYWtlbl9fOiAke25zLnRGb3JtYXQobnMuZ2V0V2Vha2VuVGltZShzZXJ2ZXIpKX0gKHQ9JHtNYXRoLmNlaWwoXFxuICAgICAgICAoc2VjIC0gbWluU2VjKSAqIDIwXFxuICAgICAgKX0pYFxcbiAgICApO1xcbiAgICBhd2FpdCBucy5zbGVlcChmbGFncy5yZWZyZXNocmF0ZSk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGUoZGF0YSwgYXJncykge1xcbiAgcmV0dXJuIGRhdGEuc2VydmVycztcXG59XCIsXCJmaWxlbmFtZVwiOlwiL29mZmljaWFsL21vbml0b3IuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL29mZmljaWFsL21vbml0b3IuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2FiMDliNWRiLTQ2MGYtNDQwYy1hYmI3LTdhMTRkYjhkYTk4NVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNjk5fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuMTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTY5OSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEhhY2tUaW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tBbmFseXplVGhyZWFkc1wiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRHcm93VGltZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93dGhBbmFseXplXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFdlYWtlblRpbWVcIixcImNvc3RcIjowLjA1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBiZXN0X3RhcmdldCB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBiZXN0X3RhcmdldChucyk7XFxuXFxuICBucy50cHJpbnRmKGBuZXcgdGFyZ2V0IGlzICR7dGFyZ2V0Lm5hbWV9YCk7XFxuICBucy5ydW4oXFxcIm9mZmljaWFsL21vbml0b3IuanNcXFwiLCAxLCB0YXJnZXQubmFtZSk7XFxuXFxuICBucy5ydW4oXFxcInNsYXZlLW5ldC5qc1xcXCIsIDEsIHRhcmdldC5uYW1lKTtcXG4gIG5zLnJ1bihcXFwic2xhdmUtaG9tZS5qc1xcXCIsIDEsIHRhcmdldC5uYW1lKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwicmV0YXJnZXQuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kYjRiMDNkOS1kZmE1LTQxODItYjQ3Ny1jNjY3MGUwMDI5MDlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjQ5fSx7XCJmaWxlbmFtZVwiOlwicmV0YXJnZXQuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RkZjE2Y2UyLTI1YjYtNGNkOS04Y2I3LTg4NjA4ZGY5NWY1ZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNjk4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuMTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIyNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInJ1blwiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IHNjYW4sIHNydl9pbmZvLCBmbXQgfSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiBzcnZfaW5mbyhucywgc3J2KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLyBhLnNlY19taW4gLSBiLm1vbmV5X21heCAvIGEuc2VjX21pbik7XFxuXFxuICBvdXRwdXQuZm9yRWFjaCgoaW5mbykgPT4ge1xcbiAgICBucy50cHJpbnQoYFRhcmdldCAke2luZm8ubmFtZX06YCk7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBtb25leTogJHtmbXQoaW5mby5tb25leV9jdXJyKX0vJHtmbXQoaW5mby5tb25leV9tYXgpfSAke1xcbiAgICAgICAgaW5mby5tb25leV9wY3RcXG4gICAgICB9JWBcXG4gICAgKTtcXG4gICAgbnMudHByaW50KGAgIHNlYyAgOiAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufSAke2luZm8uc2VjX3BjdH0lYCk7XFxuICB9KTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiL2FyY2hpdmUvc3J2LXN0YXRzLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjI1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxMzksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgIGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbWydoZWxwJywgZmFsc2VdXSk7XFxuICAgIGNvbnN0IGhvc3RuYW1lID0gYXJncy5fWzBdO1xcbiAgICBpZihhcmdzLmhlbHAgfHwgIWhvc3RuYW1lKSB7XFxuICAgICAgICBucy50cHJpbnQoXFxcIlRoaXMgc2NyaXB0IHdpbGwgZ2VuZXJhdGUgbW9uZXkgYnkgaGFja2luZyBhIHRhcmdldCBzZXJ2ZXIuXFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYFVTQUdFOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IFNFUlZFUl9OQU1FYCk7XFxuICAgICAgICBucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYD4gcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBuMDBkbGVzYCk7XFxuICAgICAgICByZXR1cm47XFxuICAgIH1cXG4gICAgd2hpbGUgKHRydWUpIHtcXG4gICAgICAgIGlmIChucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKGhvc3RuYW1lKSA+IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoaG9zdG5hbWUpKSB7XFxuICAgICAgICAgICAgYXdhaXQgbnMud2Vha2VuKGhvc3RuYW1lKTtcXG4gICAgICAgIH0gZWxzZSBpZiAobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoaG9zdG5hbWUpIDwgbnMuZ2V0U2VydmVyTWF4TW9uZXkoaG9zdG5hbWUpKSB7XFxuICAgICAgICAgICAgYXdhaXQgbnMuZ3Jvdyhob3N0bmFtZSk7XFxuICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICAgIGF3YWl0IG5zLmhhY2soaG9zdG5hbWUpO1xcbiAgICAgICAgfVxcbiAgICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9vZmZpY2lhbC9iYXNpY19oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjczLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgIGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuICAgIGlmIChhcmdzLmhlbHApIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgd2lsbCBlbmhhbmNlIHlvdXIgSFVEIChIZWFkcyB1cCBEaXNwbGF5KSB3aXRoIGN1c3RvbSBzdGF0aXN0aWNzLlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGBVc2FnZTogcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfWApO1xcbiAgICAgICAgbnMudHByaW50KFxcXCJFeGFtcGxlOlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGA+IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX1gKTtcXG4gICAgICAgIHJldHVybjtcXG4gICAgfVxcbiAgICBcXG4gICAgY29uc3QgZG9jID0gZG9jdW1lbnQ7IC8vIFRoaXMgaXMgZXhwZW5zaXZlISAoMjVHQiBSQU0pIFBlcmhhcHMgdGhlcmUncyBhIHdheSBhcm91bmQgaXQ/IDspXFxuICAgIGNvbnN0IGhvb2swID0gZG9jLmdldEVsZW1lbnRCeUlkKCdvdmVydmlldy1leHRyYS1ob29rLTAnKTtcXG4gICAgY29uc3QgaG9vazEgPSBkb2MuZ2V0RWxlbWVudEJ5SWQoJ292ZXJ2aWV3LWV4dHJhLWhvb2stMScpO1xcbiAgICB3aGlsZSAodHJ1ZSkge1xcbiAgICAgICAgdHJ5IHtcXG4gICAgICAgICAgICBjb25zdCBoZWFkZXJzID0gW11cXG4gICAgICAgICAgICBjb25zdCB2YWx1ZXMgPSBbXTtcXG4gICAgICAgICAgICAvLyBBZGQgc2NyaXB0IGluY29tZSBwZXIgc2Vjb25kXFxuICAgICAgICAgICAgaGVhZGVycy5wdXNoKFxcXCJTY3JJbmNcXFwiKTtcXG4gICAgICAgICAgICB2YWx1ZXMucHVzaChucy5nZXRTY3JpcHRJbmNvbWUoKVswXS50b1ByZWNpc2lvbig1KSArICcvc2VjJyk7XFxuICAgICAgICAgICAgLy8gQWRkIHNjcmlwdCBleHAgZ2FpbiByYXRlIHBlciBzZWNvbmRcXG4gICAgICAgICAgICBoZWFkZXJzLnB1c2goXFxcIlNjckV4cFxcXCIpO1xcbiAgICAgICAgICAgIHZhbHVlcy5wdXNoKG5zLmdldFNjcmlwdEV4cEdhaW4oKS50b1ByZWNpc2lvbig1KSArICcvc2VjJyk7XFxuICAgICAgICAgICAgLy8gVE9ETzogQWRkIG1vcmUgbmVhdCBzdHVmZlxcblxcbiAgICAgICAgICAgIC8vIE5vdyBkcm9wIGl0IGludG8gdGhlIHBsYWNlaG9sZGVyIGVsZW1lbnRzXFxuICAgICAgICAgICAgaG9vazAuaW5uZXJUZXh0ID0gaGVhZGVycy5qb2luKFxcXCLCoFxcXFxuXFxcIik7XFxuICAgICAgICAgICAgaG9vazEuaW5uZXJUZXh0ID0gdmFsdWVzLmpvaW4oXFxcIlxcXFxuXFxcIik7XFxuICAgICAgICB9IGNhdGNoIChlcnIpIHsgLy8gVGhpcyBtaWdodCBjb21lIGluIGhhbmR5IGxhdGVyXFxuICAgICAgICAgICAgbnMucHJpbnQoXFxcIkVSUk9SOiBVcGRhdGUgU2tpcHBlZDogXFxcIiArIFN0cmluZyhlcnIpKTtcXG4gICAgICAgIH1cXG4gICAgICAgIGF3YWl0IG5zLnNsZWVwKDEwMDApO1xcbiAgICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9vZmZpY2lhbC9jdXN0b20tc3RhdHMuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjI2LjgsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjc0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJkb21cIixcIm5hbWVcIjpcImRvY3VtZW50XCIsXCJjb3N0XCI6MjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRJbmNvbWVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRFeHBHYWluXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHRjb25zdCBhcmdzID0gbnMuZmxhZ3MoW1tcXFwiaGVscFxcXCIsIGZhbHNlXV0pO1xcblxcdGlmIChhcmdzLmhlbHAgfHwgYXJncy5fLmxlbmd0aCA8IDIpIHtcXG5cXHRcXHRucy50cHJpbnQoXFxcIlRoaXMgc2NyaXB0IGRlcGxveXMgYW5vdGhlciBzY3JpcHQgb24gYSBzZXJ2ZXIgd2l0aCBtYXhpbXVtIHRocmVhZHMgcG9zc2libGUuXFxcIik7XFxuXFx0XFx0bnMudHByaW50KGBVc2FnZTogcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBIT1NUIFNDUklQVCBBUkdVTUVOVFNgKTtcXG5cXHRcXHRucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuXFx0XFx0bnMudHByaW50KGA+IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX0gbjAwZGxlcyBiYXNpY19oYWNrLmpzIGZvb2Ruc3R1ZmZgKTtcXG5cXHRcXHRyZXR1cm47XFxuXFx0fVxcblxcblxcdGNvbnN0IGhvc3QgPSBhcmdzLl9bMF07XFxuXFx0Y29uc3Qgc2NyaXB0ID0gYXJncy5fWzFdO1xcblxcdGNvbnN0IHNjcmlwdF9hcmdzID0gYXJncy5fLnNsaWNlKDIpO1xcblxcblxcdGlmICghbnMuc2VydmVyRXhpc3RzKGhvc3QpKSB7XFxuXFx0XFx0bnMudHByaW50KGBTZXJ2ZXIgJyR7aG9zdH0nIGRvZXMgbm90IGV4aXN0LiBBYm9ydGluZy5gKTtcXG5cXHRcXHRyZXR1cm47XFxuXFx0fVxcblxcdGlmICghbnMubHMobnMuZ2V0SG9zdG5hbWUoKSkuZmluZChmID0+IGYgPT09IHNjcmlwdCkpIHtcXG5cXHRcXHRucy50cHJpbnQoYFNjcmlwdCAnJHtzY3JpcHR9JyBkb2VzIG5vdCBleGlzdC4gQWJvcnRpbmcuYCk7XFxuXFx0XFx0cmV0dXJuO1xcblxcdH1cXG5cXG5cXHRjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcigobnMuZ2V0U2VydmVyTWF4UmFtKGhvc3QpIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShob3N0KSkgLyBucy5nZXRTY3JpcHRSYW0oc2NyaXB0KSk7XFxuXFx0bnMudHByaW50KGBMYXVuY2hpbmcgc2NyaXB0ICcke3NjcmlwdH0nIG9uIHNlcnZlciAnJHtob3N0fScgd2l0aCAke3RocmVhZHN9IHRocmVhZHMgYW5kIHRoZSBmb2xsb3dpbmcgYXJndW1lbnRzOiAke3NjcmlwdF9hcmdzfWApO1xcblxcdGF3YWl0IG5zLnNjcChzY3JpcHQsIG5zLmdldEhvc3RuYW1lKCksIGhvc3QpO1xcblxcdG5zLmV4ZWMoc2NyaXB0LCBob3N0LCB0aHJlYWRzLCAuLi5zY3JpcHRfYXJncyk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9vZmZpY2lhbC9kZXBsb3kuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuMDUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjc1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2VydmVyRXhpc3RzXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwibHNcIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRIb3N0bmFtZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyVXNlZFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY3BcIixcImNvc3RcIjowLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJmdW5jdGlvbiBzY2FuKG5zLCBwYXJlbnQsIHNlcnZlciwgbGlzdCkge1xcbiAgICBjb25zdCBjaGlsZHJlbiA9IG5zLnNjYW4oc2VydmVyKTtcXG4gICAgZm9yIChsZXQgY2hpbGQgb2YgY2hpbGRyZW4pIHtcXG4gICAgICAgIGlmIChwYXJlbnQgPT0gY2hpbGQpIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgIH1cXG4gICAgICAgIGxpc3QucHVzaChjaGlsZCk7XFxuICAgICAgICBcXG4gICAgICAgIHNjYW4obnMsIHNlcnZlciwgY2hpbGQsIGxpc3QpO1xcbiAgICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBsaXN0X3NlcnZlcnMobnMpIHtcXG4gICAgY29uc3QgbGlzdCA9IFtdO1xcbiAgICBzY2FuKG5zLCAnJywgJ2hvbWUnLCBsaXN0KTtcXG4gICAgcmV0dXJuIGxpc3Q7XFxufVxcblxcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgIGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuICAgIGlmIChhcmdzLmhlbHApIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgaGVscHMgeW91IGZpbmQgYW4gdW5zb2x2ZWQgY29kaW5nIGNvbnRyYWN0LlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGBVc2FnZTogcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfWApO1xcbiAgICAgICAgbnMudHByaW50KFxcXCJFeGFtcGxlOlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGA+IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX1gKTtcXG4gICAgICAgIHJldHVybjtcXG4gICAgfVxcblxcbiAgICBsZXQgc2VydmVycyA9IGxpc3Rfc2VydmVycyhucyk7XFxuICAgIGNvbnN0IGJvdWdodFNlcnZlcnMgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJzKG5zKTtcXG4gICAgc2VydmVycyA9IHNlcnZlcnMuZmlsdGVyKHMgPT4gIWJvdWdodFNlcnZlcnMuaW5jbHVkZXMocykpO1xcbiAgICBjb25zdCBob3N0bmFtZSA9IHNlcnZlcnMuZmluZChzID0+IG5zLmxzKHMpLmZpbmQoZiA9PiBmLmVuZHNXaXRoKFxcXCIuY2N0XFxcIikpKVxcbiAgICBpZighaG9zdG5hbWUpIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiTm8gY29kaW5nIGNvbnRyYWN0IGZvdW5kLlxcXCIpO1xcbiAgICAgICAgcmV0dXJuO1xcbiAgICB9XFxuXFxuICAgIG5zLnRwcmludChgRm91bmQgY29kaW5nIGNvbnRyYWN0IG9uICcke2hvc3RuYW1lfScuYClcXG59XCIsXCJmaWxlbmFtZVwiOlwiL29mZmljaWFsL2ZpbmRfY29kaW5nX2NvbnRyYWN0LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo0LjI1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI3NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRQdXJjaGFzZWRTZXJ2ZXJzXCIsXCJjb3N0XCI6Mi4yNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImxzXCIsXCJjb3N0XCI6MC4yfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJmdW5jdGlvbiByZWN1cnNpdmVTY2FuKG5zLCBwYXJlbnQsIHNlcnZlciwgdGFyZ2V0LCByb3V0ZSkge1xcbiAgICBjb25zdCBjaGlsZHJlbiA9IG5zLnNjYW4oc2VydmVyKTtcXG4gICAgZm9yIChsZXQgY2hpbGQgb2YgY2hpbGRyZW4pIHtcXG4gICAgICAgIGlmIChwYXJlbnQgPT0gY2hpbGQpIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgIH1cXG4gICAgICAgIGlmIChjaGlsZCA9PSB0YXJnZXQpIHtcXG4gICAgICAgICAgICByb3V0ZS51bnNoaWZ0KGNoaWxkKTtcXG4gICAgICAgICAgICByb3V0ZS51bnNoaWZ0KHNlcnZlcik7XFxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XFxuICAgICAgICB9XFxuXFxuICAgICAgICBpZiAocmVjdXJzaXZlU2Nhbihucywgc2VydmVyLCBjaGlsZCwgdGFyZ2V0LCByb3V0ZSkpIHtcXG4gICAgICAgICAgICByb3V0ZS51bnNoaWZ0KHNlcnZlcik7XFxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XFxuICAgICAgICB9XFxuICAgIH1cXG4gICAgcmV0dXJuIGZhbHNlO1xcbn1cXG5cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgICBjb25zdCBhcmdzID0gbnMuZmxhZ3MoW1tcXFwiaGVscFxcXCIsIGZhbHNlXV0pO1xcbiAgICBsZXQgcm91dGUgPSBbXTtcXG4gICAgbGV0IHNlcnZlciA9IGFyZ3MuX1swXTtcXG4gICAgaWYgKCFzZXJ2ZXIgfHwgYXJncy5oZWxwKSB7XFxuICAgICAgICBucy50cHJpbnQoXFxcIlRoaXMgc2NyaXB0IGhlbHBzIHlvdSBmaW5kIGEgc2VydmVyIG9uIHRoZSBuZXR3b3JrIGFuZCBzaG93cyB5b3UgdGhlIHBhdGggdG8gZ2V0IHRvIGl0LlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGBVc2FnZTogcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBTRVJWRVJgKTtcXG4gICAgICAgIG5zLnRwcmludChcXFwiRXhhbXBsZTpcXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgPiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IG4wMGRsZXNgKTtcXG4gICAgICAgIHJldHVybjtcXG4gICAgfVxcblxcbiAgICByZWN1cnNpdmVTY2FuKG5zLCAnJywgJ2hvbWUnLCBzZXJ2ZXIsIHJvdXRlKTtcXG4gICAgZm9yIChjb25zdCBpIGluIHJvdXRlKSB7XFxuICAgICAgICBhd2FpdCBucy5zbGVlcCg1MDApO1xcbiAgICAgICAgY29uc3QgZXh0cmEgPSBpID4gMCA/IFxcXCLilJQgXFxcIiA6IFxcXCJcXFwiO1xcbiAgICAgICAgbnMudHByaW50KGAke1xcXCIgXFxcIi5yZXBlYXQoaSl9JHtleHRyYX0ke3JvdXRlW2ldfWApO1xcbiAgICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGUoZGF0YSwgYXJncykge1xcbiAgICByZXR1cm4gZGF0YS5zZXJ2ZXJzO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvb2ZmaWNpYWwvZmluZF9zZXJ2ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuOCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyNzcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJmdW5jdGlvbiBzY2FuKG5zLCBwYXJlbnQsIHNlcnZlciwgbGlzdCkge1xcbiAgICBjb25zdCBjaGlsZHJlbiA9IG5zLnNjYW4oc2VydmVyKTtcXG4gICAgZm9yIChsZXQgY2hpbGQgb2YgY2hpbGRyZW4pIHtcXG4gICAgICAgIGlmIChwYXJlbnQgPT0gY2hpbGQpIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgIH1cXG4gICAgICAgIGxpc3QucHVzaChjaGlsZCk7XFxuICAgICAgICBcXG4gICAgICAgIHNjYW4obnMsIHNlcnZlciwgY2hpbGQsIGxpc3QpO1xcbiAgICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBsaXN0X3NlcnZlcnMobnMpIHtcXG4gICAgY29uc3QgbGlzdCA9IFtdO1xcbiAgICBzY2FuKG5zLCAnJywgJ2hvbWUnLCBsaXN0KTtcXG4gICAgcmV0dXJuIGxpc3Q7XFxufVxcblxcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuICAgIGlmIChhcmdzLmhlbHApIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgbGlzdHMgYWxsIHNlcnZlcnMgb24gd2hpY2ggeW91IGNhbiBydW4gc2NyaXB0cy5cXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgVXNhZ2U6IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX1gKTtcXG4gICAgICAgIG5zLnRwcmludChcXFwiRXhhbXBsZTpcXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgPiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9YCk7XFxuICAgICAgICByZXR1cm47XFxuICAgIH1cXG5cXG5cXHRjb25zdCBzZXJ2ZXJzID0gbGlzdF9zZXJ2ZXJzKG5zKS5maWx0ZXIocyA9PiBucy5oYXNSb290QWNjZXNzKHMpKS5jb25jYXQoWydob21lJ10pO1xcbiAgICBmb3IoY29uc3Qgc2VydmVyIG9mIHNlcnZlcnMpIHtcXG4gICAgICAgIGNvbnN0IHVzZWQgPSBucy5nZXRTZXJ2ZXJVc2VkUmFtKHNlcnZlcik7XFxuICAgICAgICBjb25zdCBtYXggPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc2VydmVyKTtcXG4gICAgICAgIG5zLnRwcmludChgJHtzZXJ2ZXJ9IGlzIG9wZW5lZC4gJHt1c2VkfSBHQiAvICR7bWF4fSBHQiAoJHsoMTAwKnVzZWQvbWF4KS50b0ZpeGVkKDIpfSUpYClcXG4gICAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCIvb2ZmaWNpYWwvb3BlbmVkX3NlcnZlcnMuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuOTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjc4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyVXNlZFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIG5zLnB1cmNoYXNlVG9yKCk7XFxufVwiLFwiZmlsZW5hbWVcIjpcInJlc3RhcnQuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJyZXN0YXJ0LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83Y2U4YTY4NC1iOWRiLTQ5MjQtYjZhNS1mNGQ2YTMzZTllYmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTAyNDc2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuNixcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjIzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwicHVyY2hhc2VUb3JcIixcImNvc3RcIjoyfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJleHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgICBjb25zdCBhcmdzID0gbnMuZmxhZ3MoW1tcXFwiaGVscFxcXCIsIGZhbHNlXV0pO1xcbiAgICBjb25zdCBzZXJ2ZXIgPSBucy5hcmdzWzBdO1xcbiAgICBpZiAoYXJncy5oZWxwIHx8ICFzZXJ2ZXIpIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgZG9lcyBhIG1vcmUgZGV0YWlsZWQgYW5hbHlzaXMgb2YgYSBzZXJ2ZXIuXFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYFVzYWdlOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IFNFUlZFUmApO1xcbiAgICAgICAgbnMudHByaW50KFxcXCJFeGFtcGxlOlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGA+IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX0gbjAwZGxlc2ApO1xcbiAgICAgICAgcmV0dXJuO1xcbiAgICB9XFxuICAgIGNvbnN0IHJhbSA9IG5zLmdldFNlcnZlclJhbShzZXJ2ZXIpO1xcbiAgICBjb25zdCBtb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHNlcnZlcik7XFxuICAgIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkoc2VydmVyKTtcXG4gICAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzZXJ2ZXIpO1xcbiAgICBjb25zdCBzZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHNlcnZlcik7XFxuICAgIG5zLnRwcmludChgXFxuXFxuJHtzZXJ2ZXJ9OlxcbiAgICBSQU0gICAgICAgIDogJHtyYW1bMV19IC8gJHtyYW1bMF19ICgke3JhbVsxXSAvIHJhbVswXSAqIDEwMH0lKVxcbiAgICAkICAgICAgICAgIDogJHtucy5uRm9ybWF0KG1vbmV5LCBcXFwiJDAuMDAwYVxcXCIpfSAvICR7bnMubkZvcm1hdChtYXhNb25leSwgXFxcIiQwLjAwMGFcXFwiKX0gKCR7KG1vbmV5IC8gbWF4TW9uZXkgKiAxMDApLnRvRml4ZWQoMil9JSlcXG4gICAgc2VjdXJpdHkgICA6ICR7bWluU2VjLnRvRml4ZWQoMil9IC8gJHtzZWMudG9GaXhlZCgyKX1cXG4gICAgZ3Jvd3RoICAgICA6ICR7bnMuZ2V0U2VydmVyR3Jvd3RoKHNlcnZlcil9XFxuICAgIGhhY2sgdGltZSAgOiAke25zLnRGb3JtYXQobnMuZ2V0SGFja1RpbWUoc2VydmVyKSl9XFxuICAgIGdyb3cgdGltZSAgOiAke25zLnRGb3JtYXQobnMuZ2V0R3Jvd1RpbWUoc2VydmVyKSl9XFxuICAgIHdlYWtlbiB0aW1lOiAke25zLnRGb3JtYXQobnMuZ2V0V2Vha2VuVGltZShzZXJ2ZXIpKX1cXG4gICAgZ3JvdyB4MiAgICA6ICR7KG5zLmdyb3d0aEFuYWx5emUoc2VydmVyLCAyKSkudG9GaXhlZCgyKX0gdGhyZWFkc1xcbiAgICBncm93IHgzICAgIDogJHsobnMuZ3Jvd3RoQW5hbHl6ZShzZXJ2ZXIsIDMpKS50b0ZpeGVkKDIpfSB0aHJlYWRzXFxuICAgIGdyb3cgeDQgICAgOiAkeyhucy5ncm93dGhBbmFseXplKHNlcnZlciwgNCkpLnRvRml4ZWQoMil9IHRocmVhZHNcXG4gICAgaGFjayAxMCUgICA6ICR7KC4xMCAvIG5zLmhhY2tBbmFseXplKHNlcnZlcikpLnRvRml4ZWQoMil9IHRocmVhZHNcXG4gICAgaGFjayAyNSUgICA6ICR7KC4yNSAvIG5zLmhhY2tBbmFseXplKHNlcnZlcikpLnRvRml4ZWQoMil9IHRocmVhZHNcXG4gICAgaGFjayA1MCUgICA6ICR7KC41MCAvIG5zLmhhY2tBbmFseXplKHNlcnZlcikpLnRvRml4ZWQoMil9IHRocmVhZHNcXG4gICAgaGFja0NoYW5jZSA6ICR7KG5zLmhhY2tBbmFseXplQ2hhbmNlKHNlcnZlcikgKiAxMDApLnRvRml4ZWQoMil9JVxcbmApO1xcbn1cIixcImZpbGVuYW1lXCI6XCJhbmFseXplX3NlcnZlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6NS4zNSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTczLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyUmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0SGFja1RpbWVcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0R3Jvd1RpbWVcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0V2Vha2VuVGltZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93dGhBbmFseXplXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tBbmFseXplXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tBbmFseXplQ2hhbmNlXCIsXCJjb3N0XCI6MX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gICAgY29uc3QgYXJncyA9IG5zLmZsYWdzKFtbJ2hlbHAnLCBmYWxzZV1dKTtcXG4gICAgY29uc3QgaG9zdG5hbWUgPSBhcmdzLl9bMF07XFxuICAgIGlmKGFyZ3MuaGVscCB8fCAhaG9zdG5hbWUpIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgd2lsbCBnZW5lcmF0ZSBtb25leSBieSBoYWNraW5nIGEgdGFyZ2V0IHNlcnZlci5cXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgVVNBR0U6IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX0gU0VSVkVSX05BTUVgKTtcXG4gICAgICAgIG5zLnRwcmludChcXFwiRXhhbXBsZTpcXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgPiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IG4wMGRsZXNgKTtcXG4gICAgICAgIHJldHVybjtcXG4gICAgfVxcbiAgICB3aGlsZSAodHJ1ZSkge1xcbiAgICAgICAgaWYgKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwoaG9zdG5hbWUpID4gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChob3N0bmFtZSkpIHtcXG4gICAgICAgICAgICBhd2FpdCBucy53ZWFrZW4oaG9zdG5hbWUpO1xcbiAgICAgICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShob3N0bmFtZSkgPCBucy5nZXRTZXJ2ZXJNYXhNb25leShob3N0bmFtZSkpIHtcXG4gICAgICAgICAgICBhd2FpdCBucy5ncm93KGhvc3RuYW1lKTtcXG4gICAgICAgIH0gZWxzZSB7XFxuICAgICAgICAgICAgYXdhaXQgbnMuaGFjayhob3N0bmFtZSk7XFxuICAgICAgICB9XFxuICAgIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiYmFzaWNfaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxNzUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gICAgY29uc3QgYXJncyA9IG5zLmZsYWdzKFtbXFxcImhlbHBcXFwiLCBmYWxzZV1dKTtcXG4gICAgaWYgKGFyZ3MuaGVscCkge1xcbiAgICAgICAgbnMudHByaW50KFxcXCJUaGlzIHNjcmlwdCB3aWxsIGVuaGFuY2UgeW91ciBIVUQgKEhlYWRzIHVwIERpc3BsYXkpIHdpdGggY3VzdG9tIHN0YXRpc3RpY3MuXFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYFVzYWdlOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9YCk7XFxuICAgICAgICBucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYD4gcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfWApO1xcbiAgICAgICAgcmV0dXJuO1xcbiAgICB9XFxuICAgIFxcbiAgICBjb25zdCBkb2MgPSBkb2N1bWVudDsgLy8gVGhpcyBpcyBleHBlbnNpdmUhICgyNUdCIFJBTSkgUGVyaGFwcyB0aGVyZSdzIGEgd2F5IGFyb3VuZCBpdD8gOylcXG4gICAgY29uc3QgaG9vazAgPSBkb2MuZ2V0RWxlbWVudEJ5SWQoJ292ZXJ2aWV3LWV4dHJhLWhvb2stMCcpO1xcbiAgICBjb25zdCBob29rMSA9IGRvYy5nZXRFbGVtZW50QnlJZCgnb3ZlcnZpZXctZXh0cmEtaG9vay0xJyk7XFxuICAgIHdoaWxlICh0cnVlKSB7XFxuICAgICAgICB0cnkge1xcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSBbXVxcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IFtdO1xcbiAgICAgICAgICAgIC8vIEFkZCBzY3JpcHQgaW5jb21lIHBlciBzZWNvbmRcXG4gICAgICAgICAgICBoZWFkZXJzLnB1c2goXFxcIlNjckluY1xcXCIpO1xcbiAgICAgICAgICAgIHZhbHVlcy5wdXNoKG5zLmdldFNjcmlwdEluY29tZSgpWzBdLnRvUHJlY2lzaW9uKDUpICsgJy9zZWMnKTtcXG4gICAgICAgICAgICAvLyBBZGQgc2NyaXB0IGV4cCBnYWluIHJhdGUgcGVyIHNlY29uZFxcbiAgICAgICAgICAgIGhlYWRlcnMucHVzaChcXFwiU2NyRXhwXFxcIik7XFxuICAgICAgICAgICAgdmFsdWVzLnB1c2gobnMuZ2V0U2NyaXB0RXhwR2FpbigpLnRvUHJlY2lzaW9uKDUpICsgJy9zZWMnKTtcXG4gICAgICAgICAgICAvLyBUT0RPOiBBZGQgbW9yZSBuZWF0IHN0dWZmXFxuXFxuICAgICAgICAgICAgLy8gTm93IGRyb3AgaXQgaW50byB0aGUgcGxhY2Vob2xkZXIgZWxlbWVudHNcXG4gICAgICAgICAgICBob29rMC5pbm5lclRleHQgPSBoZWFkZXJzLmpvaW4oXFxcIsKgXFxcXG5cXFwiKTtcXG4gICAgICAgICAgICBob29rMS5pbm5lclRleHQgPSB2YWx1ZXMuam9pbihcXFwiXFxcXG5cXFwiKTtcXG4gICAgICAgIH0gY2F0Y2ggKGVycikgeyAvLyBUaGlzIG1pZ2h0IGNvbWUgaW4gaGFuZHkgbGF0ZXJcXG4gICAgICAgICAgICBucy5wcmludChcXFwiRVJST1I6IFVwZGF0ZSBTa2lwcGVkOiBcXFwiICsgU3RyaW5nKGVycikpO1xcbiAgICAgICAgfVxcbiAgICAgICAgYXdhaXQgbnMuc2xlZXAoMTAwMCk7XFxuICAgIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiY3VzdG9tLXN0YXRzLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyNi44LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxNzcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImRvbVwiLFwibmFtZVwiOlwiZG9jdW1lbnRcIixcImNvc3RcIjoyNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdEluY29tZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdEV4cEdhaW5cIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuXFx0aWYgKGFyZ3MuaGVscCB8fCBhcmdzLl8ubGVuZ3RoIDwgMikge1xcblxcdFxcdG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgZGVwbG95cyBhbm90aGVyIHNjcmlwdCBvbiBhIHNlcnZlciB3aXRoIG1heGltdW0gdGhyZWFkcyBwb3NzaWJsZS5cXFwiKTtcXG5cXHRcXHRucy50cHJpbnQoYFVzYWdlOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IEhPU1QgU0NSSVBUIEFSR1VNRU5UU2ApO1xcblxcdFxcdG5zLnRwcmludChcXFwiRXhhbXBsZTpcXFwiKTtcXG5cXHRcXHRucy50cHJpbnQoYD4gcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBuMDBkbGVzIGJhc2ljX2hhY2suanMgZm9vZG5zdHVmZmApO1xcblxcdFxcdHJldHVybjtcXG5cXHR9XFxuXFxuXFx0Y29uc3QgaG9zdCA9IGFyZ3MuX1swXTtcXG5cXHRjb25zdCBzY3JpcHQgPSBhcmdzLl9bMV07XFxuXFx0Y29uc3Qgc2NyaXB0X2FyZ3MgPSBhcmdzLl8uc2xpY2UoMik7XFxuXFxuXFx0aWYgKCFucy5zZXJ2ZXJFeGlzdHMoaG9zdCkpIHtcXG5cXHRcXHRucy50cHJpbnQoYFNlcnZlciAnJHtob3N0fScgZG9lcyBub3QgZXhpc3QuIEFib3J0aW5nLmApO1xcblxcdFxcdHJldHVybjtcXG5cXHR9XFxuXFx0aWYgKCFucy5scyhucy5nZXRIb3N0bmFtZSgpKS5maW5kKGYgPT4gZiA9PT0gc2NyaXB0KSkge1xcblxcdFxcdG5zLnRwcmludChgU2NyaXB0ICcke3NjcmlwdH0nIGRvZXMgbm90IGV4aXN0LiBBYm9ydGluZy5gKTtcXG5cXHRcXHRyZXR1cm47XFxuXFx0fVxcblxcblxcdGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKChucy5nZXRTZXJ2ZXJNYXhSYW0oaG9zdCkgLSBucy5nZXRTZXJ2ZXJVc2VkUmFtKGhvc3QpKSAvIG5zLmdldFNjcmlwdFJhbShzY3JpcHQpKTtcXG5cXHRucy50cHJpbnQoYExhdW5jaGluZyBzY3JpcHQgJyR7c2NyaXB0fScgb24gc2VydmVyICcke2hvc3R9JyB3aXRoICR7dGhyZWFkc30gdGhyZWFkcyBhbmQgdGhlIGZvbGxvd2luZyBhcmd1bWVudHM6ICR7c2NyaXB0X2FyZ3N9YCk7XFxuXFx0YXdhaXQgbnMuc2NwKHNjcmlwdCwgbnMuZ2V0SG9zdG5hbWUoKSwgaG9zdCk7XFxuXFx0bnMuZXhlYyhzY3JpcHQsIGhvc3QsIHRocmVhZHMsIC4uLnNjcmlwdF9hcmdzKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZGVwbG95LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo0LjA1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxNzksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzZXJ2ZXJFeGlzdHNcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJsc1wiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEhvc3RuYW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJVc2VkUmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjcFwiLFwiY29zdFwiOjAuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImZ1bmN0aW9uIHNjYW4obnMsIHBhcmVudCwgc2VydmVyLCBsaXN0KSB7XFxuICAgIGNvbnN0IGNoaWxkcmVuID0gbnMuc2NhbihzZXJ2ZXIpO1xcbiAgICBmb3IgKGxldCBjaGlsZCBvZiBjaGlsZHJlbikge1xcbiAgICAgICAgaWYgKHBhcmVudCA9PSBjaGlsZCkge1xcbiAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgfVxcbiAgICAgICAgbGlzdC5wdXNoKGNoaWxkKTtcXG4gICAgICAgIFxcbiAgICAgICAgc2Nhbihucywgc2VydmVyLCBjaGlsZCwgbGlzdCk7XFxuICAgIH1cXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIGxpc3Rfc2VydmVycyhucykge1xcbiAgICBjb25zdCBsaXN0ID0gW107XFxuICAgIHNjYW4obnMsICcnLCAnaG9tZScsIGxpc3QpO1xcbiAgICByZXR1cm4gbGlzdDtcXG59XFxuXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gICAgY29uc3QgYXJncyA9IG5zLmZsYWdzKFtbXFxcImhlbHBcXFwiLCBmYWxzZV1dKTtcXG4gICAgaWYgKGFyZ3MuaGVscCkge1xcbiAgICAgICAgbnMudHByaW50KFxcXCJUaGlzIHNjcmlwdCBoZWxwcyB5b3UgZmluZCBhbiB1bnNvbHZlZCBjb2RpbmcgY29udHJhY3QuXFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYFVzYWdlOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9YCk7XFxuICAgICAgICBucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYD4gcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfWApO1xcbiAgICAgICAgcmV0dXJuO1xcbiAgICB9XFxuXFxuICAgIGxldCBzZXJ2ZXJzID0gbGlzdF9zZXJ2ZXJzKG5zKTtcXG4gICAgY29uc3QgYm91Z2h0U2VydmVycyA9IG5zLmdldFB1cmNoYXNlZFNlcnZlcnMobnMpO1xcbiAgICBzZXJ2ZXJzID0gc2VydmVycy5maWx0ZXIocyA9PiAhYm91Z2h0U2VydmVycy5pbmNsdWRlcyhzKSk7XFxuICAgIGNvbnN0IGhvc3RuYW1lID0gc2VydmVycy5maW5kKHMgPT4gbnMubHMocykuZmluZChmID0+IGYuZW5kc1dpdGgoXFxcIi5jY3RcXFwiKSkpXFxuICAgIGlmKCFob3N0bmFtZSkge1xcbiAgICAgICAgbnMudHByaW50KFxcXCJObyBjb2RpbmcgY29udHJhY3QgZm91bmQuXFxcIik7XFxuICAgICAgICByZXR1cm47XFxuICAgIH1cXG5cXG4gICAgbnMudHByaW50KGBGb3VuZCBjb2RpbmcgY29udHJhY3Qgb24gJyR7aG9zdG5hbWV9Jy5gKVxcbn1cIixcImZpbGVuYW1lXCI6XCJmaW5kX2NvZGluZ19jb250cmFjdC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6NC4yNSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTg1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFB1cmNoYXNlZFNlcnZlcnNcIixcImNvc3RcIjoyLjI1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwibHNcIixcImNvc3RcIjowLjJ9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImZ1bmN0aW9uIHJlY3Vyc2l2ZVNjYW4obnMsIHBhcmVudCwgc2VydmVyLCB0YXJnZXQsIHJvdXRlKSB7XFxuICAgIGNvbnN0IGNoaWxkcmVuID0gbnMuc2NhbihzZXJ2ZXIpO1xcbiAgICBmb3IgKGxldCBjaGlsZCBvZiBjaGlsZHJlbikge1xcbiAgICAgICAgaWYgKHBhcmVudCA9PSBjaGlsZCkge1xcbiAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgfVxcbiAgICAgICAgaWYgKGNoaWxkID09IHRhcmdldCkge1xcbiAgICAgICAgICAgIHJvdXRlLnVuc2hpZnQoY2hpbGQpO1xcbiAgICAgICAgICAgIHJvdXRlLnVuc2hpZnQoc2VydmVyKTtcXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIGlmIChyZWN1cnNpdmVTY2FuKG5zLCBzZXJ2ZXIsIGNoaWxkLCB0YXJnZXQsIHJvdXRlKSkge1xcbiAgICAgICAgICAgIHJvdXRlLnVuc2hpZnQoc2VydmVyKTtcXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcXG4gICAgICAgIH1cXG4gICAgfVxcbiAgICByZXR1cm4gZmFsc2U7XFxufVxcblxcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAgIGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuICAgIGxldCByb3V0ZSA9IFtdO1xcbiAgICBsZXQgc2VydmVyID0gYXJncy5fWzBdO1xcbiAgICBpZiAoIXNlcnZlciB8fCBhcmdzLmhlbHApIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgaGVscHMgeW91IGZpbmQgYSBzZXJ2ZXIgb24gdGhlIG5ldHdvcmsgYW5kIHNob3dzIHlvdSB0aGUgcGF0aCB0byBnZXQgdG8gaXQuXFxcIik7XFxuICAgICAgICBucy50cHJpbnQoYFVzYWdlOiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IFNFUlZFUmApO1xcbiAgICAgICAgbnMudHByaW50KFxcXCJFeGFtcGxlOlxcXCIpO1xcbiAgICAgICAgbnMudHByaW50KGA+IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX0gbjAwZGxlc2ApO1xcbiAgICAgICAgcmV0dXJuO1xcbiAgICB9XFxuXFxuICAgIHJlY3Vyc2l2ZVNjYW4obnMsICcnLCAnaG9tZScsIHNlcnZlciwgcm91dGUpO1xcbiAgICBmb3IgKGNvbnN0IGkgaW4gcm91dGUpIHtcXG4gICAgICAgIGF3YWl0IG5zLnNsZWVwKDUwMCk7XFxuICAgICAgICBjb25zdCBleHRyYSA9IGkgPiAwID8gXFxcIuKUlCBcXFwiIDogXFxcIlxcXCI7XFxuICAgICAgICBucy50cHJpbnQoYCR7XFxcIiBcXFwiLnJlcGVhdChpKX0ke2V4dHJhfSR7cm91dGVbaV19YCk7XFxuICAgIH1cXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIGF1dG9jb21wbGV0ZShkYXRhLCBhcmdzKSB7XFxuICAgIHJldHVybiBkYXRhLnNlcnZlcnM7XFxufVwiLFwiZmlsZW5hbWVcIjpcImZpbmRfc2VydmVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjgsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTE4NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IGZsYWdzID0gbnMuZmxhZ3MoW1xcbiAgICBbXFxcInJlZnJlc2hyYXRlXFxcIiwgMjAwXSxcXG4gICAgW1xcXCJoZWxwXFxcIiwgZmFsc2VdLFxcbiAgXSk7XFxuICBpZiAoZmxhZ3MuXy5sZW5ndGggPT09IDAgfHwgZmxhZ3MuaGVscCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgXFxcIlRoaXMgc2NyaXB0IGhlbHBzIHZpc3VhbGl6ZSB0aGUgbW9uZXkgYW5kIHNlY3VyaXR5IG9mIGEgc2VydmVyLlxcXCJcXG4gICAgKTtcXG4gICAgbnMudHByaW50KGBVU0FHRTogcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBTRVJWRVJfTkFNRWApO1xcbiAgICBucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuICAgIG5zLnRwcmludChgPiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IG4wMGRsZXNgKTtcXG4gICAgcmV0dXJuO1xcbiAgfVxcbiAgbnMudGFpbCgpO1xcbiAgbnMuZGlzYWJsZUxvZyhcXFwiQUxMXFxcIik7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBzZXJ2ZXIgPSBmbGFncy5fWzBdO1xcbiAgICBsZXQgbW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShzZXJ2ZXIpO1xcbiAgICBpZiAobW9uZXkgPT09IDApIG1vbmV5ID0gMTtcXG4gICAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leShzZXJ2ZXIpO1xcbiAgICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNlcnZlcik7XFxuICAgIGNvbnN0IHNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwoc2VydmVyKTtcXG4gICAgbnMuY2xlYXJMb2coc2VydmVyKTtcXG4gICAgbnMucHJpbnQoYCR7c2VydmVyfTpgKTtcXG4gICAgbnMucHJpbnQoXFxuICAgICAgYCAkX19fX19fXzogJHtucy5uRm9ybWF0KG1vbmV5LCBcXFwiJDAuMDAwYVxcXCIpfSAvICR7bnMubkZvcm1hdChcXG4gICAgICAgIG1heE1vbmV5LFxcbiAgICAgICAgXFxcIiQwLjAwMGFcXFwiXFxuICAgICAgKX0gKCR7KChtb25leSAvIG1heE1vbmV5KSAqIDEwMCkudG9GaXhlZCgyKX0lKWBcXG4gICAgKTtcXG4gICAgbnMucHJpbnQoYCBzZWN1cml0eTogKyR7KHNlYyAtIG1pblNlYykudG9GaXhlZCgyKX1gKTtcXG4gICAgbnMucHJpbnQoXFxuICAgICAgYCBoYWNrX19fXzogJHtucy50Rm9ybWF0KG5zLmdldEhhY2tUaW1lKHNlcnZlcikpfSAodD0ke01hdGguY2VpbChcXG4gICAgICAgIG5zLmhhY2tBbmFseXplVGhyZWFkcyhzZXJ2ZXIsIG1vbmV5KVxcbiAgICAgICl9KWBcXG4gICAgKTtcXG4gICAgbnMucHJpbnQoXFxuICAgICAgYCBncm93X19fXzogJHtucy50Rm9ybWF0KG5zLmdldEdyb3dUaW1lKHNlcnZlcikpfSAodD0ke01hdGguY2VpbChcXG4gICAgICAgIG5zLmdyb3d0aEFuYWx5emUoc2VydmVyLCBtYXhNb25leSAvIG1vbmV5KVxcbiAgICAgICl9KWBcXG4gICAgKTtcXG4gICAgbnMucHJpbnQoXFxuICAgICAgYCB3ZWFrZW5fXzogJHtucy50Rm9ybWF0KG5zLmdldFdlYWtlblRpbWUoc2VydmVyKSl9ICh0PSR7TWF0aC5jZWlsKFxcbiAgICAgICAgKHNlYyAtIG1pblNlYykgKiAyMFxcbiAgICAgICl9KWBcXG4gICAgKTtcXG4gICAgYXdhaXQgbnMuc2xlZXAoZmxhZ3MucmVmcmVzaHJhdGUpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gYXV0b2NvbXBsZXRlKGRhdGEsIGFyZ3MpIHtcXG4gIHJldHVybiBkYXRhLnNlcnZlcnM7XFxufVwiLFwiZmlsZW5hbWVcIjpcIm1vbml0b3IuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuMTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIxNyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEhhY2tUaW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tBbmFseXplVGhyZWFkc1wiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRHcm93VGltZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93dGhBbmFseXplXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFdlYWtlblRpbWVcIixcImNvc3RcIjowLjA1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJmdW5jdGlvbiBzY2FuKG5zLCBwYXJlbnQsIHNlcnZlciwgbGlzdCkge1xcbiAgICBjb25zdCBjaGlsZHJlbiA9IG5zLnNjYW4oc2VydmVyKTtcXG4gICAgZm9yIChsZXQgY2hpbGQgb2YgY2hpbGRyZW4pIHtcXG4gICAgICAgIGlmIChwYXJlbnQgPT0gY2hpbGQpIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgIH1cXG4gICAgICAgIGxpc3QucHVzaChjaGlsZCk7XFxuICAgICAgICBcXG4gICAgICAgIHNjYW4obnMsIHNlcnZlciwgY2hpbGQsIGxpc3QpO1xcbiAgICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBsaXN0X3NlcnZlcnMobnMpIHtcXG4gICAgY29uc3QgbGlzdCA9IFtdO1xcbiAgICBzY2FuKG5zLCAnJywgJ2hvbWUnLCBsaXN0KTtcXG4gICAgcmV0dXJuIGxpc3Q7XFxufVxcblxcbi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdGNvbnN0IGFyZ3MgPSBucy5mbGFncyhbW1xcXCJoZWxwXFxcIiwgZmFsc2VdXSk7XFxuICAgIGlmIChhcmdzLmhlbHApIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwiVGhpcyBzY3JpcHQgbGlzdHMgYWxsIHNlcnZlcnMgb24gd2hpY2ggeW91IGNhbiBydW4gc2NyaXB0cy5cXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgVXNhZ2U6IHJ1biAke25zLmdldFNjcmlwdE5hbWUoKX1gKTtcXG4gICAgICAgIG5zLnRwcmludChcXFwiRXhhbXBsZTpcXFwiKTtcXG4gICAgICAgIG5zLnRwcmludChgPiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9YCk7XFxuICAgICAgICByZXR1cm47XFxuICAgIH1cXG5cXG5cXHRjb25zdCBzZXJ2ZXJzID0gbGlzdF9zZXJ2ZXJzKG5zKS5maWx0ZXIocyA9PiBucy5oYXNSb290QWNjZXNzKHMpKS5jb25jYXQoWydob21lJ10pO1xcbiAgICBmb3IoY29uc3Qgc2VydmVyIG9mIHNlcnZlcnMpIHtcXG4gICAgICAgIGNvbnN0IHVzZWQgPSBucy5nZXRTZXJ2ZXJVc2VkUmFtKHNlcnZlcik7XFxuICAgICAgICBjb25zdCBtYXggPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc2VydmVyKTtcXG4gICAgICAgIG5zLnRwcmludChgJHtzZXJ2ZXJ9IGlzIG9wZW5lZC4gJHt1c2VkfSBHQiAvICR7bWF4fSBHQiAoJHsoMTAwKnVzZWQvbWF4KS50b0ZpeGVkKDIpfSUpYClcXG4gICAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJvcGVuZWRfc2VydmVycy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS45NSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjE5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyVXNlZFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzY2FuIH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHNydiA9IG5zLmFyZ3NbMF07XFxuXFxuICBjb25zdCBzY3JpcHRXZWFrZW4gPSBcXFwid2Vha2VuLXRvcC5qc1xcXCI7XFxuICBjb25zdCBzY3JpcHRHcm93ID0gXFxcImdyb3ctdG9wLmpzXFxcIjtcXG4gIGNvbnN0IHNjcmlwdEhhY2sgPSBcXFwiaGFjay10b3AuanNcXFwiO1xcblxcbiAgY29uc3Qgc2l6ZVdlYWtlbiA9IG5zLmdldFNjcmlwdFJhbShzY3JpcHRXZWFrZW4pO1xcbiAgY29uc3Qgc2l6ZUdyb3cgPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0R3Jvdyk7XFxuICBjb25zdCBzaXplSGFjayA9IG5zLmdldFNjcmlwdFJhbShzY3JpcHRIYWNrKTtcXG4gIGNvbnN0IHBhcnRHcm93ID0gKG5zLmFyZ3NbMl0gfHwgNDUpIC8gMTAwO1xcblxcbiAgY29uc3QgcGFydFdlYWtlbiA9IDEuMCAtIHBhcnRHcm93O1xcbiAgY29uc3QgaGFja0ZhY3RvciA9IDAuMTtcXG5cXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgY291bnRXZWFrZW4gPSBNYXRoLmZsb29yKFxcbiAgICAoc3J2UmFtICogKDEuMCAtIGhhY2tGYWN0b3IpICogcGFydFdlYWtlbikgLyBzaXplV2Vha2VuXFxuICApO1xcbiAgY29uc3QgY291bnRHcm93ID0gTWF0aC5mbG9vcihcXG4gICAgKHNydlJhbSAqICgxLjAgLSBoYWNrRmFjdG9yKSAqIHBhcnRHcm93KSAvIHNpemVHcm93XFxuICApO1xcbiAgY29uc3QgY291bnRIYWNrID0gTWF0aC5mbG9vcigoc3J2UmFtICogaGFja0ZhY3RvcikgLyBzaXplSGFjayk7XFxuXFxuICBucy50cHJpbnQoXFxuICAgIGBzZXJ2ZXIgJHtzcnZ9ICgke3NydlJhbX0gR0IpOiAke2NvdW50V2Vha2VufSB3ZWFrZW4gLyAke2NvdW50R3Jvd30gZ3JvdyAvICR7Y291bnRIYWNrfSBoYWNrIHRocmVhZHNgXFxuICApO1xcblxcbiAgYXdhaXQgbnMuc2NwKFxcXCJoYWNrZXItbGliLmpzXFxcIiwgc3J2KTtcXG4gIGF3YWl0IG5zLnNjcChzY3JpcHRXZWFrZW4sIHNydik7XFxuICBhd2FpdCBucy5zY3Aoc2NyaXB0R3Jvdywgc3J2KTtcXG4gIGF3YWl0IG5zLnNjcChzY3JpcHRIYWNrLCBzcnYpO1xcbiAgbnMua2lsbGFsbChzcnYpO1xcblxcbiAgaWYgKGNvdW50V2Vha2VuID4gMCkgbnMuZXhlYyhzY3JpcHRXZWFrZW4sIHNydiwgY291bnRXZWFrZW4pO1xcbiAgaWYgKGNvdW50R3JvdyA+IDApIG5zLmV4ZWMoc2NyaXB0R3Jvdywgc3J2LCBjb3VudEdyb3cpO1xcbiAgaWYgKGNvdW50SGFjayA+IDApIG5zLmV4ZWMoc2NyaXB0SGFjaywgc3J2LCBjb3VudEhhY2spO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gYXV0b2NvbXBsZXRlKGRhdGEsIGFyZ3MpIHtcXG4gIHJldHVybiBbLi4uZGF0YS5zZXJ2ZXJzXTtcXG59XCIsXCJmaWxlbmFtZVwiOlwic2xhdmUtaG9zdC10b3AuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjQuMTUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjcFwiLFwiY29zdFwiOjAuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImtpbGxhbGxcIixcImNvc3RcIjowLjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzY2FuIH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF0gfHwgdW5kZWZpbmVkO1xcblxcbiAgY29uc3Qgc2NyaXB0V2Vha2VuID0gIXRhcmdldCA/IFxcXCJ3ZWFrZW4tdG9wLmpzXFxcIiA6IFxcXCJsb29wLXdlYWtlbi5qc1xcXCI7XFxuICBjb25zdCBzY3JpcHRHcm93ID0gIXRhcmdldCA/IFxcXCJncm93LXRvcC5qc1xcXCIgOiBcXFwibG9vcC1ncm93LmpzXFxcIjtcXG4gIGNvbnN0IHNjcmlwdEhhY2sgPSAhdGFyZ2V0ID8gXFxcImhhY2stdG9wLmpzXFxcIiA6IFxcXCJsb29wLWhhY2suanNcXFwiO1xcblxcbiAgbnMudHByaW50KFxcbiAgICBgdGFyZ2V0ICR7dGFyZ2V0fSwgc2NyaXB0czogJHtzY3JpcHRXZWFrZW59LCR7c2NyaXB0R3Jvd30sJHtzY3JpcHRIYWNrfWBcXG4gICk7XFxuXFxuICBjb25zdCBzaXplV2Vha2VuID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdFdlYWtlbik7XFxuICBjb25zdCBzaXplR3JvdyA9IG5zLmdldFNjcmlwdFJhbShzY3JpcHRHcm93KTtcXG4gIGNvbnN0IHNpemVIYWNrID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdEhhY2spO1xcbiAgY29uc3QgcGFydEdyb3cgPSAobnMuYXJnc1sxXSB8fCA0NSkgLyAxMDA7XFxuICBjb25zdCBwYXJ0V2Vha2VuID0gMS4wIC0gcGFydEdyb3c7XFxuICBjb25zdCBoYWNrRmFjdG9yID0gMC4xO1xcblxcbiAgY29uc3Qgc3J2ID0gXFxcImhvbWVcXFwiO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydikgKiAwLjk5O1xcblxcbiAgY29uc3QgY291bnRXZWFrZW4gPSBNYXRoLmZsb29yKFxcbiAgICAoc3J2UmFtICogKDEuMCAtIGhhY2tGYWN0b3IpICogcGFydFdlYWtlbikgLyBzaXplV2Vha2VuXFxuICApO1xcbiAgY29uc3QgY291bnRHcm93ID0gTWF0aC5mbG9vcihcXG4gICAgKHNydlJhbSAqICgxLjAgLSBoYWNrRmFjdG9yKSAqIHBhcnRHcm93KSAvIHNpemVHcm93XFxuICApO1xcbiAgY29uc3QgY291bnRIYWNrID0gTWF0aC5mbG9vcigoc3J2UmFtICogaGFja0ZhY3RvcikgLyBzaXplSGFjayk7XFxuXFxuICBucy50cHJpbnQoXFxuICAgIGBzZXJ2ZXIgJHtzcnZ9ICgke3NydlJhbX0gR0IpOiAke2NvdW50V2Vha2VufSB3ZWFrZW4gLyAke2NvdW50R3Jvd30gZ3JvdyAvICR7Y291bnRIYWNrfSBoYWNrIHRocmVhZHNgXFxuICApO1xcblxcbiAgaWYgKGNvdW50V2Vha2VuID4gMCkgbnMucnVuKHNjcmlwdFdlYWtlbiwgY291bnRXZWFrZW4sIHRhcmdldCk7XFxuICBpZiAoY291bnRHcm93ID4gMCkgbnMucnVuKHNjcmlwdEdyb3csIGNvdW50R3JvdywgdGFyZ2V0KTtcXG4gIGlmIChjb3VudEhhY2sgPiAwKSBucy5ydW4oc2NyaXB0SGFjaywgY291bnRIYWNrLCB0YXJnZXQpO1xcbn1cIixcImZpbGVuYW1lXCI6XCJzbGF2ZS1ob21lLXRvcC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2E4YTNlZTZlLTQzMjYtNDU3MC1iYzgzLTg2YzUyN2VhMzUwZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNzk2NDh9LHtcImZpbGVuYW1lXCI6XCJzbGF2ZS1ob21lLXRvcC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNWVhODcwMWMtZWMwZS00YTUxLWJhOTAtZWE4Mjk4OTQ1Y2M0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM3OTk5Mn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjc1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4OSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJydW5cIixcImNvc3RcIjoxfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzY2FuIH0gZnJvbSBcXFwiLi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3Qgc3J2ID0gbnMuYXJnc1swXTtcXG5cXG4gIGNvbnN0IHNjcmlwdFdlYWtlbiA9IFxcXCJ3ZWFrZW4tdG9wLmpzXFxcIjtcXG4gIGNvbnN0IHNjcmlwdEdyb3cgPSBcXFwiZ3Jvdy10b3AuanNcXFwiO1xcbiAgY29uc3Qgc2NyaXB0SGFjayA9IFxcXCJoYWNrLXRvcC5qc1xcXCI7XFxuXFxuICBjb25zdCBzaXplV2Vha2VuID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdFdlYWtlbik7XFxuICBjb25zdCBzaXplR3JvdyA9IG5zLmdldFNjcmlwdFJhbShzY3JpcHRHcm93KTtcXG4gIGNvbnN0IHNpemVIYWNrID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdEhhY2spO1xcbiAgY29uc3QgcGFydEdyb3cgPSAobnMuYXJnc1syXSB8fCA0NSkgLyAxMDA7XFxuXFxuICBjb25zdCBwYXJ0V2Vha2VuID0gMS4wIC0gcGFydEdyb3c7XFxuICBjb25zdCBoYWNrRmFjdG9yID0gMC4xO1xcblxcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCBjb3VudFdlYWtlbiA9IE1hdGguZmxvb3IoXFxuICAgIChzcnZSYW0gKiAoMS4wIC0gaGFja0ZhY3RvcikgKiBwYXJ0V2Vha2VuKSAvIHNpemVXZWFrZW5cXG4gICk7XFxuICBjb25zdCBjb3VudEdyb3cgPSBNYXRoLmZsb29yKFxcbiAgICAoc3J2UmFtICogKDEuMCAtIGhhY2tGYWN0b3IpICogcGFydEdyb3cpIC8gc2l6ZUdyb3dcXG4gICk7XFxuICBjb25zdCBjb3VudEhhY2sgPSBNYXRoLmZsb29yKChzcnZSYW0gKiBoYWNrRmFjdG9yKSAvIHNpemVIYWNrKTtcXG5cXG4gIG5zLnRwcmludChcXG4gICAgYHNlcnZlciAke3Nydn0gKCR7c3J2UmFtfSBHQik6ICR7Y291bnRXZWFrZW59IHdlYWtlbiAvICR7Y291bnRHcm93fSBncm93IC8gJHtjb3VudEhhY2t9IGhhY2sgdGhyZWFkc2BcXG4gICk7XFxuXFxuICBhd2FpdCBucy5zY3AoXFxcImhhY2tlci1saWIuanNcXFwiLCBzcnYpO1xcbiAgYXdhaXQgbnMuc2NwKHNjcmlwdFdlYWtlbiwgc3J2KTtcXG4gIGF3YWl0IG5zLnNjcChzY3JpcHRHcm93LCBzcnYpO1xcbiAgYXdhaXQgbnMuc2NwKHNjcmlwdEhhY2ssIHNydik7XFxuICBucy5raWxsYWxsKHNydik7XFxuXFxuICBpZiAoY291bnRXZWFrZW4gPiAwKSBucy5leGVjKHNjcmlwdFdlYWtlbiwgc3J2LCBjb3VudFdlYWtlbik7XFxuICBpZiAoY291bnRHcm93ID4gMCkgbnMuZXhlYyhzY3JpcHRHcm93LCBzcnYsIGNvdW50R3Jvdyk7XFxuICBpZiAoY291bnRIYWNrID4gMCkgbnMuZXhlYyhzY3JpcHRIYWNrLCBzcnYsIGNvdW50SGFjayk7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGUoZGF0YSwgYXJncykge1xcbiAgcmV0dXJuIFsuLi5kYXRhLnNlcnZlcnNdO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvYXJjaGl2ZS9zbGF2ZS1ob3N0LXRvcC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTM3fX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc2NhbiB9IGZyb20gXFxcIi4uL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHNjcmlwdFdlYWtlbiA9IFxcXCJ3ZWFrZW4tdG9wLmpzXFxcIjtcXG4gIGNvbnN0IHNjcmlwdEdyb3cgPSBcXFwiZ3Jvdy10b3AuanNcXFwiO1xcbiAgY29uc3Qgc2NyaXB0SGFjayA9IFxcXCJoYWNrLXRvcC5qc1xcXCI7XFxuXFxuICBucy50cHJpbnQoXFxuICAgIGB0YXJnZXQgJHt0YXJnZXR9LCBzY3JpcHRzOiAke3NjcmlwdFdlYWtlbn0sJHtzY3JpcHRHcm93fSwke3NjcmlwdEhhY2t9YFxcbiAgKTtcXG5cXG4gIGNvbnN0IHNpemVXZWFrZW4gPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0V2Vha2VuKTtcXG4gIGNvbnN0IHNpemVHcm93ID0gbnMuZ2V0U2NyaXB0UmFtKHNjcmlwdEdyb3cpO1xcbiAgY29uc3Qgc2l6ZUhhY2sgPSBucy5nZXRTY3JpcHRSYW0oc2NyaXB0SGFjayk7XFxuICBjb25zdCBwYXJ0R3JvdyA9IChucy5hcmdzWzFdIHx8IDQ1KSAvIDEwMDtcXG4gIGNvbnN0IHBhcnRXZWFrZW4gPSAxLjAgLSBwYXJ0R3JvdztcXG4gIGNvbnN0IGhhY2tGYWN0b3IgPSAwLjE7XFxuXFxuICBjb25zdCBzcnYgPSBcXFwiaG9tZVxcXCI7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KSAqIDAuOTk7XFxuXFxuICBjb25zdCBjb3VudFdlYWtlbiA9IE1hdGguZmxvb3IoXFxuICAgIChzcnZSYW0gKiAoMS4wIC0gaGFja0ZhY3RvcikgKiBwYXJ0V2Vha2VuKSAvIHNpemVXZWFrZW5cXG4gICk7XFxuICBjb25zdCBjb3VudEdyb3cgPSBNYXRoLmZsb29yKFxcbiAgICAoc3J2UmFtICogKDEuMCAtIGhhY2tGYWN0b3IpICogcGFydEdyb3cpIC8gc2l6ZUdyb3dcXG4gICk7XFxuICBjb25zdCBjb3VudEhhY2sgPSBNYXRoLmZsb29yKChzcnZSYW0gKiBoYWNrRmFjdG9yKSAvIHNpemVIYWNrKTtcXG5cXG4gIG5zLnRwcmludChcXG4gICAgYHNlcnZlciAke3Nydn0gKCR7c3J2UmFtfSBHQik6ICR7Y291bnRXZWFrZW59IHdlYWtlbiAvICR7Y291bnRHcm93fSBncm93IC8gJHtjb3VudEhhY2t9IGhhY2sgdGhyZWFkc2BcXG4gICk7XFxuXFxuICBpZiAoY291bnRXZWFrZW4gPiAwKSBucy5ydW4oc2NyaXB0V2Vha2VuLCBjb3VudFdlYWtlbik7XFxuICBpZiAoY291bnRHcm93ID4gMCkgbnMucnVuKHNjcmlwdEdyb3csIGNvdW50R3Jvdyk7XFxuICBpZiAoY291bnRIYWNrID4gMCkgbnMucnVuKHNjcmlwdEhhY2ssIGNvdW50SGFjayk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9hcmNoaXZlL3NsYXZlLWhvbWUtdG9wLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjowLFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxMzV9fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIHZhciBmYWN0aW9ucyA9IFtdO1xcbiAgY29uc3QgZmFjdGlvbl9saXN0ID0gW1xcbiAgICBcXFwiQ3liZXJTZWNcXFwiLFxcbiAgICBcXFwiVGlhbiBEaSBIdWlcXFwiLFxcbiAgICBcXFwiTmV0YnVybmVyc1xcXCIsXFxuICAgIFxcXCJTZWN0b3ItMTJcXFwiLFxcbiAgICBcXFwiQ2hvbmdxaW5nXFxcIixcXG4gICAgXFxcIk5ldyBUb2t5b1xcXCIsXFxuICAgIFxcXCJJc2hpbWFcXFwiLFxcbiAgICBcXFwiQWV2dW1cXFwiLFxcbiAgICBcXFwiVm9saGF2ZW5cXFwiLFxcbiAgICBcXFwiTml0ZVNlY1xcXCIsXFxuICAgIFxcXCJUaGUgQmxhY2sgSGFuZFxcXCIsXFxuICAgIFxcXCJCaXRSdW5uZXJzXFxcIixcXG4gICAgXFxcIkVDb3JwXFxcIixcXG4gICAgXFxcIk1lZ2FDb3JwXFxcIixcXG4gICAgXFxcIkt1YWlHb25nIEludGVybmF0aW9uYWxcXFwiLFxcbiAgICBcXFwiRm91ciBTaWdtYVxcXCIsXFxuICAgIFxcXCJOV09cXFwiLFxcbiAgICBcXFwiQmxhZGUgSW5kdXN0cmllc1xcXCIsXFxuICAgIFxcXCJPbW5pVGVrIEluY29ycG9yYXRlZFxcXCIsXFxuICAgIFxcXCJCYWNobWFuICYgQXNzb2NpYXRlc1xcXCIsXFxuICAgIFxcXCJDbGFya2UgSW5jb3Jwb3JhdGVkXFxcIixcXG4gICAgXFxcIkZ1bGNydW0gU2VjcmV0IFRlY2hub2xvZ2llc1xcXCIsXFxuICAgIFxcXCJTbHVtIFNuYWtlc1xcXCIsXFxuICAgIFxcXCJUZXRyYWRzXFxcIixcXG4gICAgXFxcIlNpbGhvdWV0dGVcXFwiLFxcbiAgICBcXFwiU3BlYWtlcnMgZm9yIHRoZSBEZWFkXFxcIixcXG4gICAgXFxcIlRoZSBEYXJrIEFybXlcXFwiLFxcbiAgICBcXFwiVGhlIFN5bmRpY2F0ZVxcXCIsXFxuICAgIFxcXCJUaGUgQ292ZW5hbnRcXFwiLFxcbiAgICBcXFwiRGFlZGFsdXNcXFwiLFxcbiAgICBcXFwiSWxsdW1pbmF0aVxcXCIsXFxuICBdO1xcbiAgbnMudGFpbCgpO1xcbiAgZm9yIChsZXQgZiBvZiBmYWN0aW9uX2xpc3QpIHtcXG4gICAgaWYgKG5zLmpvaW5GYWN0aW9uKGYpIHx8IG5zLmdldEZhY3Rpb25SZXAoZikgPiAwKSB7XFxuICAgICAgZmFjdGlvbnMucHVzaChmKTtcXG4gICAgfVxcbiAgfVxcbiAgZm9yIChsZXQgZiBvZiBmYWN0aW9ucykge1xcbiAgICB2YXIgYXVncyA9IG5zLmdldEF1Z21lbnRhdGlvbnNGcm9tRmFjdGlvbihmKTtcXG4gICAgZm9yIChsZXQgYSBvZiBhdWdzKSB7XFxuICAgICAgbnMucHVyY2hhc2VBdWdtZW50YXRpb24oZiwgYSk7XFxuICAgIH1cXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiL3dlYi9mYWN0aW9ucy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIi93ZWIvZmFjdGlvbnMuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzkzZmQxZjNlLTIxOGMtNDYyNC1hYTlmLTFjYjVmY2E3NjlhZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo3MDU4OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxNS42LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxNTksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJqb2luRmFjdGlvblwiLFwiY29zdFwiOjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRGYWN0aW9uUmVwXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEF1Z21lbnRhdGlvbnNGcm9tRmFjdGlvblwiLFwiY29zdFwiOjV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJwdXJjaGFzZUF1Z21lbnRhdGlvblwiLFwiY29zdFwiOjV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge31cIixcImZpbGVuYW1lXCI6XCJzbW9vdGhfY3JpbWluYWwuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNixcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjQ5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHRjb25zdCBwYXRoID0gXFxcImNvbm5lY3QgaG9uZy1mYW5nLXRlYTsgY29ubmVjdCBDU0VDXFxcIjtcXG59XFxuZXhwb3J0IGZ1bmN0aW9uIGNvbm5lY3QocGF0aCkge1xcblxcdGNvbnN0IGRvYyA9IGV2YWwoXFxcImRvY3VtZW50XFxcIik7XFxuXFx0Y29uc3QgdGVybWluYWxJbnB1dCA9IGRvYy5nZXRFbGVtZW50QnlJZChcXFwidGVybWluYWwtaW5wdXRcXFwiKTsgXFxuXFx0dGVybWluYWxJbnB1dC52YWx1ZSA9IGBob21lOyR7cGF0aH1gOyBcXG5cXHRjb25zdCBoYW5kbGVyID0gT2JqZWN0LmtleXModGVybWluYWxJbnB1dClbMV07IFxcblxcdHRlcm1pbmFsSW5wdXRbaGFuZGxlcl0ub25DaGFuZ2Uoe3RhcmdldDp0ZXJtaW5hbElucHV0fSk7XFxuXFx0dGVybWluYWxJbnB1dFtoYW5kbGVyXS5vbktleURvd24oe2tleUNvZGU6MTMscHJldmVudERlZmF1bHQ6KCk9Pm51bGx9KTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZXhwZXJpbWVudC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImV4cGVyaW1lbnQuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzI0MjA5MDdlLWI3N2ItNDY3OS1hZWZlLWNkZjg2OGQwZGE0MVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxMTkzMDh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS42LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI5NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0YXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvd2ViL3dlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIi93ZWIvd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iYTViYzMzMi04NWFkLTRiY2MtYjNjZC1mYTgwMTE0NjEyMTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NjUwOTN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTY5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0YXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiL3dlYi9ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL3dlYi9ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kYjBiZTU2MC03ZmNmLTRhYjktYmRhYy1hZTY4ODY4NzQ1NWRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Nzk0MDZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTYxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcblxcdGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi93ZWIvaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIi93ZWIvaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZjYwZDY2OWYtYTFiMS00YzllLTgzOTAtMDkxMDU4ODY5NDJhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjY3MjIxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTYzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAvLyBQYXJhbWV0ZXJzXFxuICAvLyBwYXJhbSAxOiBTZXJ2ZXIgeW91IHdhbnQgdG8gaGFja1xcbiAgLy8gcGFyYW0gMjogT1BUSU9OQUwgLSBTZXJ2ZXIgeW91IHdhbnQgdG8gc3RhcnQgdGhlIGhhY2sgZnJvbSwgaS5lLiBhbnkgcHVibGljIHNlcnZlcnMsIHB1cmNoYXNlZCBzZXJ2ZXJzIG9yICdob21lJ1xcbiAgLy9cXG4gIC8vIEVYQU1QTEUgMTogcnVuIG1hc3RlckhhY2suanMgam9lc2d1bnNcXG4gIC8vIFRoaXMgd2lsbCBzdGFydCBoYWNraW5nICdqb2VzZ3VucycgdXNpbmcgdGhlIFJBTSBvZiAnam9lc2d1bnMnXFxuICAvL1xcbiAgLy8gRVhBTVBMRSAyOiBydW4gbWFzdGVySGFjay5qcyBqb2VzZ3VucyBzMVxcbiAgLy8gVGhpcyB3aWxsIHN0YXJ0IGhhY2tpbmcgJ2pvZXNndW5zJyB1c2luZyB0aGUgUkFNIG9mIG15IHB1cmNoYXNlZCBzZXJ2ZXIgJ3MxJ1xcbiAgLy9cXG4gIC8vIFRoaXMgJ21hc3RlckhhY2suanMnIHByb2Nlc3Mgd2lsbCBzdGF5IGFjdGl2ZSBvbiB3aGF0ZXZlciBzZXJ2ZXIgeW91IGV4ZWN1dGUgaXQgZnJvbS5cXG4gIC8vIEkgdXN1YWxseSBzdGFydCBpdCBmcm9tICdob21lJywgdGhlbiBJIGNhbiB0cmFjayBhbGwgbXkgZWFybmluZ3MgaW4gb25lIHBsYWNlLlxcbiAgLy8gS2VlcCBpbiBtaW5kLCB3aGVuIHVzaW5nICdob21lJyBhcyBzZWNvbmQgcGFyYW1ldGVyIHRoZSBzY3JpcHQgbWlnaHQgdXNlIGFsbCBhdmFpbGFibGUgUkFNXFxuICAvLyBhbmQgeW91IG1pZ2h0IGJlY29tZSB1bmFibGUgdG8gZXhlY3V0ZSBhbnkgb3RoZXIgc2NyaXB0cyBvbiAnaG9tZScgdW50aWwgeW91IGtpbGwgdGhlIHByb2Nlc3MuXFxuXFxuICB2YXIgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIHZhciBzZXJ2ZXJUb0hhY2tGcm9tID0gdGFyZ2V0OyAvLyBGb3Igc2luZ2xlIGFyZ3VtZW50IGNhbGxzIC0gc2VydmVyIHdpbGwgaGFjayBpdHNlbGZcXG4gIHZhciBoYWNrU2NyaXB0ID0gXFxcImhhY2suanNcXFwiO1xcbiAgdmFyIGdyb3dTY3JpcHQgPSBcXFwiZ3Jvdy5qc1xcXCI7XFxuICB2YXIgd2Vha2VuU2NyaXB0ID0gXFxcIndlYWtlbi5qc1xcXCI7XFxuICB2YXIgaGFja1NjcmlwdFJBTSA9IG5zLmdldFNjcmlwdFJhbShoYWNrU2NyaXB0KTtcXG4gIHZhciBncm93U2NyaXB0UkFNID0gbnMuZ2V0U2NyaXB0UmFtKGdyb3dTY3JpcHQpO1xcbiAgdmFyIHNlcnZlck1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIHZhciBzZXJ2ZXJHcm93dGhQZXJjZW50YWdlID0gbnMuZ2V0U2VydmVyR3Jvd3RoKHRhcmdldCkgLyAxMDA7XFxuICB2YXIgc2VydmVyTWF4UkFNO1xcbiAgdmFyIHNlcnZlckdyb3d0aFJhdGU7XFxuICB2YXIgbW9uZXlUaHJlc2ggPSBzZXJ2ZXJNYXhNb25leSAqIDAuOTsgLy8gMC45MCB0byBtYWludGFpbiBuZWFyIDEwMCUgc2VydmVyIG1vbmV5LiAgWW91IGNhbiB1c2UgMC43NSB3aGVuIHN0YXJ0aW5nIG91dC91c2luZyBsb3cgdGhyZWFkIGNvdW50c1xcbiAgdmFyIHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgNTtcXG4gIHZhciBjdXJyZW50U2VydmVyTW9uZXk7XFxuICB2YXIgY3VycmVudFNlcnZlclNlY3VyaXR5O1xcbiAgdmFyIHVzZVRocmVhZHNIYWNrO1xcbiAgdmFyIHBvc3NpYmxlVGhyZWFkcztcXG4gIHZhciBtYXhIYWNrRmFjdG9yID0gMC4wMDE7XFxuICB2YXIgZ3Jvd1dlYWtlblJhdGlvID0gMC45OyAvLyBIb3cgbWFueSB0aHJlYWRzIGFyZSB1c2VkIGZvciBncm93aW5nIHZzLiB3ZWFraW5nICg5MDoxMCkuXFxuICB2YXIgc2xlZXBUaW1lO1xcbiAgdmFyIGNvcmVzID0gMTsgLy8gSSBkaWRuJ3QgYm90aGVyIHdpdGggY29yZXMgZm9yIG5vdy4gVW5jb21tZW50IHRoZSBsaW5lIDUxIGlmIHlvdSB3YW50IHRvIHVzZSB0aGlzLlxcbiAgdmFyIGNvcmVNdWx0aXBsaWVyO1xcbiAgY29uc3QgaGFja1NlY3VyaXR5SW5jcmVhc2UgPSAwLjAwMjsgLy8gWWVzIHRoZXNlIHZhbHVlcyBhcmUgY29uc3RhbnQuIEdyb3cgc2VjdXJpdHkgaW5jcmVhc2UgaXMgaGFjayAqIDIgPSAwLjAwNCBwZXIgdGhyZWFkLiBoYWNrQW5hbHl6ZVNlY3VyaXR5KCkganVzdCB3YXN0ZXMgUkFNIGFuZCB0aGlzIHNjcmlwdCBpcyB0b28gYmlnIGFscmVhZHkuXFxuICBjb25zdCBzZXJ2ZXJNYXhHcm93dGhSYXRlID0gMS4wMDM1OyAvLyBUYWtlbiBmcm9tIHRoZSBzb3VyY2UgY29kZS4gSSBjb3VsZG4ndCBmaW5kIGEgd2F5IHRvIGNhbGN1bGF0ZSB0aGUgZnV0dXJlIGdyb3d0aCBhbW91bnQgd2l0aG91dCBjaGVja2luZyB0aGUgc3JjIGNvZGUgZm9yIHRoZSBncm93dGhBbmFseXplKCkgZnVuY3Rpb24uXFxuICBjb25zdCBzZXJ2ZXJCYXNlR3Jvd3RoUmF0ZSA9IDEuMDM7IC8vIFRha2VuIGZyb20gdGhlIHNvdXJjZSBjb2RlXFxuICBjb25zdCBiaXROb2RlTXVsdGlwbGllclNlcnZlckdyb3d0aFJhdGUgPSAxOyAvLyBBZGp1c3QgdGhpcyBhY2NvcmRpbmcgdG8geW91ciBCaXROb2RlIGFzIGxvbmcgYXMgeW91IGFyZSBub3QgaW4gQk41IG9yIGRvbid0IGhhdmUgU0YtNS4gSW4gQk41IG9yIHdpdGggU0YtNSB5b3UgY2FuIHVzZSBucy5nZXRCaXROb2RlTXVsdGlwbGllcnMoKS5TZXJ2ZXJHcm93dGhSYXRlIGluc3RlYWQuXFxuICAvLyBDaGVjayBodHRwczovL2dpdGh1Yi5jb20vZGFuaWVseXhpZS9iaXRidXJuZXIvYmxvYi82MmFjN2Y3ZDE3MGIxNGJiN2E5OTg4NDExZDdjNmYxN2U2OTBmMDU4L3NyYy9CaXROb2RlL0JpdE5vZGUudHN4IGFuZCBzZWFyY2ggZm9yIHRoZSBpbml0Qml0Tm9kZU11bHRpcGxpZXJzIGZ1bmN0aW9uLCB0aGVyZSB5b3Ugd2lsbCBmaW5kIGFsbCB0aGUgZGlmZmVyZW50IG11bHRpcGxpZXJzLlxcblxcbiAgLy8gSWYgc2Vjb25kIGFyZ3VtZW50IGlzIHByb3ZpZGVkLCBoYWNrIHdpbGwgcnVuIGZyb20gdGhpcyBzZXJ2ZXIgaW5zdGVhZFxcbiAgaWYgKG5zLmFyZ3NbMV0pIHtcXG4gICAgc2VydmVyVG9IYWNrRnJvbSA9IG5zLmFyZ3NbMV07XFxuICB9XFxuICBzZXJ2ZXJNYXhSQU0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc2VydmVyVG9IYWNrRnJvbSk7XFxuICAvLyBjb3JlcyA9IG5zLmdldFNlcnZlcihzZXJ2ZXJUb0hhY2tGcm9tKS5jcHVDb3JlczsgLy8gTm90IHN1cmUgaWYgdGhpcyBpcyByZWxldmFudCBhbnl3aGVyZSBvdXRzaWRlIG9mICdob21lJ1xcbiAgY29yZU11bHRpcGxpZXIgPSAxICsgKGNvcmVzIC0gMSkgLyAxNjtcXG5cXG4gIC8vIEdhaW4gcm9vdCBhY2Nlc3MuIE1ha2Ugc3VyZSB5b3UgaGF2ZSB0aGUgbnVrZS5qcyBzY3JpcHQgb24gJ2hvbWUnXFxuICBpZiAoIW5zLmhhc1Jvb3RBY2Nlc3ModGFyZ2V0KSkge1xcbiAgICBucy5leGVjKFxcXCJudWtlLmpzXFxcIiwgXFxcImhvbWVcXFwiLCAxLCB0YXJnZXQpO1xcbiAgICBhd2FpdCBucy5zbGVlcCgyMDAwKTtcXG4gIH1cXG5cXG4gIC8vIENvcHkgdGhlIHdvcmsgc2NyaXB0cywgaWYgbm90IGFscmVhZHkgb24gc2VydmVyXFxuICBpZiAoIW5zLmZpbGVFeGlzdHMoaGFja1NjcmlwdCwgc2VydmVyVG9IYWNrRnJvbSkpIHtcXG4gICAgYXdhaXQgbnMuc2NwKGhhY2tTY3JpcHQsIFxcXCJob21lXFxcIiwgc2VydmVyVG9IYWNrRnJvbSk7XFxuICB9XFxuICBpZiAoIW5zLmZpbGVFeGlzdHMoZ3Jvd1NjcmlwdCwgc2VydmVyVG9IYWNrRnJvbSkpIHtcXG4gICAgYXdhaXQgbnMuc2NwKGdyb3dTY3JpcHQsIFxcXCJob21lXFxcIiwgc2VydmVyVG9IYWNrRnJvbSk7XFxuICB9XFxuICBpZiAoIW5zLmZpbGVFeGlzdHMod2Vha2VuU2NyaXB0LCBzZXJ2ZXJUb0hhY2tGcm9tKSkge1xcbiAgICBhd2FpdCBucy5zY3Aod2Vha2VuU2NyaXB0LCBcXFwiaG9tZVxcXCIsIHNlcnZlclRvSGFja0Zyb20pO1xcbiAgfVxcblxcbiAgLy8gVG8gcHJldmVudCB0aGUgc2NyaXB0IGZyb20gY3Jhc2hpbmcvdGVybWluYXRpbmcgYWZ0ZXIgY2xvc2luZyBhbmQgcmVzdGFydGluZyB0aGUgZ2FtZS5cXG4gIHdoaWxlIChcXG4gICAgbnMuaXNSdW5uaW5nKGhhY2tTY3JpcHQsIHNlcnZlclRvSGFja0Zyb20sIHRhcmdldCkgfHxcXG4gICAgbnMuaXNSdW5uaW5nKGdyb3dTY3JpcHQsIHNlcnZlclRvSGFja0Zyb20sIHRhcmdldCkgfHxcXG4gICAgbnMuaXNSdW5uaW5nKHdlYWtlblNjcmlwdCwgc2VydmVyVG9IYWNrRnJvbSwgdGFyZ2V0KVxcbiAgKSB7XFxuICAgIGF3YWl0IG5zLnNsZWVwKDEwMDAwKTtcXG4gIH1cXG5cXG4gIC8vIE1haW4gbG9vcCAtIHdpbGwgdGVybWluYXRlIGlmIG5vIFJBTSBhdmFpbGFibGVcXG4gIHdoaWxlIChcXG4gICAgMSA8XFxuICAgIChwb3NzaWJsZVRocmVhZHMgPSBNYXRoLmZsb29yKFxcbiAgICAgIChzZXJ2ZXJNYXhSQU0gLSBucy5nZXRTZXJ2ZXJVc2VkUmFtKHNlcnZlclRvSGFja0Zyb20pKSAvIGdyb3dTY3JpcHRSQU1cXG4gICAgKSlcXG4gICkge1xcbiAgICBjdXJyZW50U2VydmVyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcbiAgICBjdXJyZW50U2VydmVyU2VjdXJpdHkgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICAgIC8vIFRoZSBmaXJzdCB0byBjYXNlcyBhcmUgZm9yIG5ldyBzZXJ2ZXJzIHdpdGggaGlnaCBTRUNVUklUWSBMRVZFTFMgYW5kIHRvIHF1aWNrbHkgZ3JvdyB0aGUgc2VydmVyIHRvIGFib3ZlIHRoZSB0aHJlc2hvbGRcXG4gICAgaWYgKFxcbiAgICAgIGN1cnJlbnRTZXJ2ZXJTZWN1cml0eSA+IHNlY3VyaXR5VGhyZXNoICYmXFxuICAgICAgY3VycmVudFNlcnZlck1vbmV5IDwgbW9uZXlUaHJlc2hcXG4gICAgKSB7XFxuICAgICAgc2xlZXBUaW1lID0gbnMuZ2V0V2Vha2VuVGltZSh0YXJnZXQpICsgMTAwMDsgLy8gQWRkZWQgMSBzZWNvbmQgdG8gdGhlICdzbGVlcFRpbWUnIHZhcmlhYmxlcyB0byBwcmV2ZW50IGFueSBpc3N1ZXMgd2l0aCBvdmVybGFwcGluZyB3b3JrIHNjcmlwdHNcXG4gICAgICBucy5leGVjKFxcbiAgICAgICAgZ3Jvd1NjcmlwdCxcXG4gICAgICAgIHNlcnZlclRvSGFja0Zyb20sXFxuICAgICAgICBNYXRoLmNlaWwocG9zc2libGVUaHJlYWRzIC8gMiksXFxuICAgICAgICB0YXJnZXRcXG4gICAgICApO1xcbiAgICAgIG5zLmV4ZWMoXFxuICAgICAgICB3ZWFrZW5TY3JpcHQsXFxuICAgICAgICBzZXJ2ZXJUb0hhY2tGcm9tLFxcbiAgICAgICAgTWF0aC5mbG9vcihwb3NzaWJsZVRocmVhZHMgLyAyKSxcXG4gICAgICAgIHRhcmdldFxcbiAgICAgICk7XFxuICAgICAgYXdhaXQgbnMuc2xlZXAoc2xlZXBUaW1lKTsgLy8gd2FpdCBmb3IgdGhlIHdlYWtlbiBjb21tYW5kIHRvIGZpbmlzaFxcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnRTZXJ2ZXJNb25leSA8IG1vbmV5VGhyZXNoKSB7XFxuICAgICAgc2xlZXBUaW1lID0gbnMuZ2V0V2Vha2VuVGltZSh0YXJnZXQpICsgMTAwMDtcXG4gICAgICBucy5leGVjKFxcbiAgICAgICAgZ3Jvd1NjcmlwdCxcXG4gICAgICAgIHNlcnZlclRvSGFja0Zyb20sXFxuICAgICAgICBNYXRoLmZsb29yKHBvc3NpYmxlVGhyZWFkcyAqIGdyb3dXZWFrZW5SYXRpbyksXFxuICAgICAgICB0YXJnZXRcXG4gICAgICApO1xcbiAgICAgIG5zLmV4ZWMoXFxuICAgICAgICB3ZWFrZW5TY3JpcHQsXFxuICAgICAgICBzZXJ2ZXJUb0hhY2tGcm9tLFxcbiAgICAgICAgTWF0aC5jZWlsKHBvc3NpYmxlVGhyZWFkcyAqICgxIC0gZ3Jvd1dlYWtlblJhdGlvKSksXFxuICAgICAgICB0YXJnZXRcXG4gICAgICApO1xcbiAgICAgIGF3YWl0IG5zLnNsZWVwKHNsZWVwVGltZSk7IC8vIHdhaXQgZm9yIHRoZSB3ZWFrZW4gY29tbWFuZCB0byBmaW5pc2hcXG4gICAgfSBlbHNlIHtcXG4gICAgICAvLyBEZWZpbmUgbWF4IGFtb3VudCB0aGF0IGNhbiBiZSByZXN0b3JlZCB3aXRoIG9uZSBncm93ICh1c2luZyBhbGwgYXZhaWxhYmxlIHRocmVhZHMpIGFuZCB0aGVyZWZvcmUgd2lsbCBiZSB1c2VkIHRvIGRlZmluZSBoYWNrIHRocmVhZHMuXFxuICAgICAgLy8gVGhpcyBsb29wIG5hcnJvd3MgdGhlIGhhY2sgZmFjdG9yIHRvIHRoZSBiZXN0IHBvc3NpYmxlIHZhbHVlIGFuZCBjb25zaWRlcnMgdGhlIG5lY2Vzc2FyeSBncm93dGggdGhyZWFkcyBBRlRFUiB0aGUgaGFjayBoYXMgYmVlbiBwZXJmb3JtZWQsIHNpbmNlXFxuICAgICAgLy8gdGhlIHdvcmsgdGltZSBpcyBkZXRlcm1pbmVkIHdpdGggU0VDVVJJVFkgTEVWRUwgYmVmb3JlIHN0YXJ0LCBidXQgdGhlIGdyb3cgYW1vdW50IGlzIGRldGVybWluZWQgdXNpbmcgdGhlIHVwZGF0ZWQgU0VDVVJJVFkgTEVWRUwgd2hlbiBncm93KCkgZmluaXNoZXMuXFxuICAgICAgLy8gVGhlIGNvZGUvZm9ybXVsYSBmb3IgY2FsY3VsYXRpbmcgdGhlIGdyb3cgdGhyZWFkcyAobGluZSAxMDEgLSAxMDQpIGlzIGZ1bGx5IHRha2VuIGZyb20gdGhlICdudW1DeWNsZUZvckdyb3d0aCcgZnVuY3Rpb24gdGhhdCBpcyB1c2VkIGJ5IGdyb3d0aEFuYWx5emUgYW5kIG90aGVycyBpbiB0aGUgc291cmNlIGNvZGUuIEknbSBub3QgdGhhdCBzbW9ydC4gSSBzaW1wbHkgYWRqdXN0ZWQgaXQgdG8gbXkgbmVlZHMuXFxuICAgICAgLy8gTWF5YmUgdGhleSBjb3VsZCBpbXBsZW1lbnQgdGhlIHBvc3NpYmlsaXR5IHRvIGdpdmUgZ3Jvd3RoQW5hbHl6ZSBhZGRpdGlvbmFsIHNlY3VyaXR5IGxldmVscy8naGFja0RpZmZpY3VsdHknIGFzIGEgcGFyYW1ldGVyLiBUaGF0IHdheSB5b3UgZG9uJ3QgbmVlZCB0byB1c2UgZ2V0SGFja2luZ011bHRpcGxpZXJzKCkgYW5kIHNhdmUgPj4gNCA8PCBHQi5cXG4gICAgICAvLyBBbHNvIEkgZGlkbid0IGJvdGhlciBvcHRpbWl6aW5nIHRoZSAnZ3Jvd1dlYWtlblJhdGlvJywgYXMgOTAlIGlzIGdvb2QgZW5vdWdoIGFscmVhZHkuIEl0IHdpbGwgYmUganVzdCBhIGZldyBtb3JlIGhhY2sgdGhyZWFkcywgaWYgYW55IGF0IGFsbCAtIGV2ZW4gd2l0aCBsYXJnZSBSQU0gc2l6ZXMuXFxuICAgICAgd2hpbGUgKFxcbiAgICAgICAgbWF4SGFja0ZhY3RvciA8IDAuOTk5ICYmXFxuICAgICAgICBNYXRoLmZsb29yKFxcbiAgICAgICAgICAocG9zc2libGVUaHJlYWRzIC8gZ3Jvd1NjcmlwdFJBTSAtXFxuICAgICAgICAgICAgKHVzZVRocmVhZHNIYWNrID0gTWF0aC5mbG9vcihcXG4gICAgICAgICAgICAgIG5zLmhhY2tBbmFseXplVGhyZWFkcyh0YXJnZXQsIGN1cnJlbnRTZXJ2ZXJNb25leSAqIG1heEhhY2tGYWN0b3IpXFxuICAgICAgICAgICAgKSkgL1xcbiAgICAgICAgICAgICAgaGFja1NjcmlwdFJBTSkgKlxcbiAgICAgICAgICAgIGdyb3dTY3JpcHRSQU0gKlxcbiAgICAgICAgICAgIGdyb3dXZWFrZW5SYXRpb1xcbiAgICAgICAgKSA+XFxuICAgICAgICAgIE1hdGguZmxvb3IoXFxuICAgICAgICAgICAgTWF0aC5sb2coc2VydmVyTWF4TW9uZXkgLyAoc2VydmVyTWF4TW9uZXkgKiAoMSAtIG1heEhhY2tGYWN0b3IpKSkgL1xcbiAgICAgICAgICAgICAgKE1hdGgubG9nKFxcbiAgICAgICAgICAgICAgICAoc2VydmVyR3Jvd3RoUmF0ZSA9XFxuICAgICAgICAgICAgICAgICAgMSArXFxuICAgICAgICAgICAgICAgICAgKHNlcnZlckJhc2VHcm93dGhSYXRlIC0gMSkgL1xcbiAgICAgICAgICAgICAgICAgICAgKGN1cnJlbnRTZXJ2ZXJTZWN1cml0eSArXFxuICAgICAgICAgICAgICAgICAgICAgIGhhY2tTZWN1cml0eUluY3JlYXNlICogdXNlVGhyZWFkc0hhY2spKSA+XFxuICAgICAgICAgICAgICAgICAgc2VydmVyTWF4R3Jvd3RoUmF0ZVxcbiAgICAgICAgICAgICAgICAgID8gc2VydmVyTWF4R3Jvd3RoUmF0ZVxcbiAgICAgICAgICAgICAgICAgIDogc2VydmVyR3Jvd3RoUmF0ZVxcbiAgICAgICAgICAgICAgKSAqXFxuICAgICAgICAgICAgICAgIG5zLmdldEhhY2tpbmdNdWx0aXBsaWVycygpLmdyb3d0aCAqXFxuICAgICAgICAgICAgICAgIHNlcnZlckdyb3d0aFBlcmNlbnRhZ2UgKlxcbiAgICAgICAgICAgICAgICBiaXROb2RlTXVsdGlwbGllclNlcnZlckdyb3d0aFJhdGUgKlxcbiAgICAgICAgICAgICAgICBjb3JlTXVsdGlwbGllcilcXG4gICAgICAgICAgKVxcbiAgICAgICkge1xcbiAgICAgICAgbWF4SGFja0ZhY3RvciArPSAwLjAwMTsgLy8gaW5jcmVhc2UgYnkgMC4xJSB3aXRoIGVhY2ggaXRlcmF0aW9uXFxuICAgICAgfVxcbiAgICAgIG1heEhhY2tGYWN0b3IgLT0gMC4wMDE7IC8vIFNpbmNlIGl0J3MgbW9yZSB0aGFuICdwb3NzaWJsZVRocmVhZHMnIGNhbiBoYW5kbGUgbm93LCB3ZSBuZWVkIHRvIGRpYWwgaXQgYmFjayBvbmNlLlxcbiAgICAgIHNsZWVwVGltZSA9IG5zLmdldEhhY2tUaW1lKHRhcmdldCkgKyAxMDAwO1xcbiAgICAgIHVzZVRocmVhZHNIYWNrID0gTWF0aC5taW4odXNlVGhyZWFkc0hhY2ssIHBvc3NpYmxlVGhyZWFkcyk7IC8vIFByZXZlbnRzIGdvaW5nIGFib3ZlIFJBTSBsaW1pdCBvciBoYWNraW5nIHRvbyBtdWNoXFxuICAgICAgbnMudHByaW50KFxcbiAgICAgICAgYHRocmVhZHMgZm9yIGhhY2tpbmcgJHt1c2VUaHJlYWRzSGFja30gPSBtaW4oJHt1c2VUaHJlYWRzSGFja30sJHtwb3NzaWJsZVRocmVhZHN9KWBcXG4gICAgICApO1xcbiAgICAgIGlmICh1c2VUaHJlYWRzSGFjayA+IDApIHtcXG4gICAgICAgIG5zLmV4ZWMoaGFja1NjcmlwdCwgc2VydmVyVG9IYWNrRnJvbSwgdXNlVGhyZWFkc0hhY2ssIHRhcmdldCk7XFxuICAgICAgfVxcbiAgICAgIHBvc3NpYmxlVGhyZWFkcyA9IE1hdGguZmxvb3IoXFxuICAgICAgICAoc2VydmVyTWF4UkFNIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShzZXJ2ZXJUb0hhY2tGcm9tKSkgLyBncm93U2NyaXB0UkFNXFxuICAgICAgKTtcXG4gICAgICBpZiAocG9zc2libGVUaHJlYWRzID49IDIpIHtcXG4gICAgICAgIHNsZWVwVGltZSA9IG5zLmdldFdlYWtlblRpbWUodGFyZ2V0KSArIDEwMDA7XFxuICAgICAgICBjb25zdCBncm93VGhyZWFkcyA9IE1hdGguZmxvb3IocG9zc2libGVUaHJlYWRzICogZ3Jvd1dlYWtlblJhdGlvKTtcXG4gICAgICAgIGlmIChncm93VGhyZWFkcylcXG4gICAgICAgICAgbnMuZXhlYyhncm93U2NyaXB0LCBzZXJ2ZXJUb0hhY2tGcm9tLCBncm93VGhyZWFkcywgdGFyZ2V0KTtcXG4gICAgICAgIG5zLmV4ZWMoXFxuICAgICAgICAgIHdlYWtlblNjcmlwdCxcXG4gICAgICAgICAgc2VydmVyVG9IYWNrRnJvbSxcXG4gICAgICAgICAgTWF0aC5jZWlsKHBvc3NpYmxlVGhyZWFkcyAqICgxIC0gZ3Jvd1dlYWtlblJhdGlvKSksXFxuICAgICAgICAgIHRhcmdldFxcbiAgICAgICAgKTtcXG4gICAgICB9XFxuICAgICAgYXdhaXQgbnMuc2xlZXAoc2xlZXBUaW1lKTsgLy8gd2FpdCBmb3IgdGhlIHdlYWtlbiBjb21tYW5kIHRvIGZpbmlzaFxcbiAgICAgIG1heEhhY2tGYWN0b3IgPSAwLjAwMTtcXG4gICAgfVxcbiAgfVxcbiAgbnMudHByaW50KFxcbiAgICBcXFwiU2NyaXB0IHdhcyB0ZXJtaW5hdGVkLiBOb3QgZW5vdWdoIFJBTSBhdmFpbGFibGUgb24gJ1xcXCIgK1xcbiAgICAgIHNlcnZlclRvSGFja0Zyb20gK1xcbiAgICAgIFxcXCInLlxcXCJcXG4gICk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi93ZWIvbWFzdGVySGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIi93ZWIvbWFzdGVySGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMzNjMDIzN2QtMGNjMy00MDlkLWIzYzMtNWVmODlmMTRjNGZiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjEwNzE5NX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjo5LjU1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxNjUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZmlsZUV4aXN0c1wiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjcFwiLFwiY29zdFwiOjAuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImlzUnVubmluZ1wiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclVzZWRSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0V2Vha2VuVGltZVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrQW5hbHl6ZVRocmVhZHNcIixcImNvc3RcIjoxfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0SGFja2luZ011bHRpcGxpZXJzXCIsXCJjb3N0XCI6NH0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEhhY2tUaW1lXCIsXCJjb3N0XCI6MC4wNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuXFx0dmFyIHNlcnYgPSBucy5hcmdzWzBdO1xcblxcdGlmKG5zLmZpbGVFeGlzdHMoXFxcIkJydXRlU1NILmV4ZVxcXCIpKVxcblxcdFxcdG5zLmJydXRlc3NoKHNlcnYpO1xcblxcblxcdGlmKG5zLmZpbGVFeGlzdHMoXFxcIkZUUENyYWNrLmV4ZVxcXCIpKVxcblxcdFxcdG5zLmZ0cGNyYWNrKHNlcnYpO1xcblxcblxcdGlmKG5zLmZpbGVFeGlzdHMoXFxcInJlbGF5U01UUC5leGVcXFwiKSlcXG5cXHRcXHRucy5yZWxheXNtdHAoc2Vydik7XFxuXFxuXFx0aWYobnMuZmlsZUV4aXN0cyhcXFwiSFRUUFdvcm0uZXhlXFxcIikpXFxuXFx0XFx0bnMuaHR0cHdvcm0oc2Vydik7XFxuXFxuXFx0aWYobnMuZmlsZUV4aXN0cyhcXFwiU1FMSW5qZWN0LmV4ZVxcXCIpKVxcblxcdFxcdG5zLnNxbGluamVjdChzZXJ2KTtcXG5cXG5cXHRucy5udWtlKHNlcnYpO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvd2ViL251a2UuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTE2NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImZpbGVFeGlzdHNcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJmdHBjcmFja1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJyZWxheXNtdHBcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaHR0cHdvcm1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic3FsaW5qZWN0XCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIm51a2VcIixcImNvc3RcIjowLjA1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG5cXHRjb25zdCB3YW50X3JhbSA9IG5zLmFyZ3NbMF1cXG5cXG5cXHRjb25zdCBwc3J2cyA9IG5zLmdldFB1cmNoYXNlZFNlcnZlcnMoKS5tYXAobmFtZSA9PiAoe1xcblxcdFxcdG5hbWUsIHJhbTpcXG5cXHRcXHRcXHRucy5nZXRTZXJ2ZXJNYXhSYW0obmFtZSlcXG5cXHR9KSlcXG5cXHRmb3IgKGxldCBzcnYgb2YgcHNydnMpIHtcXG5cXHRcXHRucy50cHJpbnQoYCR7c3J2Lm5hbWV9IGhhcyAke3Nydi5yYW19IEdCYClcXG5cXG5cXHRcXHRpZiAoc3J2LnJhbSA8IHdhbnRfcmFtKSB7XFxuXFx0XFx0XFx0bnMudHByaW50KFxcXCJ1cHJhZ2VkaW5nIFxcXCIgKyBzcnYubmFtZSlcXG5cXHRcXHRcXHRucy5raWxsYWxsKHNydi5uYW1lKVxcblxcdFxcdFxcdG5zLmRlbGV0ZVNlcnZlcihzcnYubmFtZSlcXG5cXHRcXHRcXHRucy5wdXJjaGFzZVNlcnZlcihzcnYubmFtZSwgd2FudF9yYW0pXFxuXFx0XFx0fVxcblxcdH1cXG59XCIsXCJmaWxlbmFtZVwiOlwidXBncmFkZS1wc2VydnMuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ1cGdyYWRlLXBzZXJ2cy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDJiM2ZjMDYtMWI5NS00YTE1LThhYjItYmM1N2E5OTNhOWY1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM4OTQxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjguOSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMDAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRQdXJjaGFzZWRTZXJ2ZXJzXCIsXCJjb3N0XCI6Mi4yNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJraWxsYWxsXCIsXCJjb3N0XCI6MC41fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZGVsZXRlU2VydmVyXCIsXCJjb3N0XCI6Mi4yNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInB1cmNoYXNlU2VydmVyXCIsXCJjb3N0XCI6Mi4yNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgaWRsZV90aHJlYWRzIH0gZnJvbSBcXFwibmVvL2dldC1pZGxlLWNhcGEuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGdldE5lZWRlZFRocmVhZHMobnMsIHNlcnZlcikge1xcbiAgbGV0IG1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoc2VydmVyKTtcXG4gIGlmIChtb25leSA9PT0gMCkgbW9uZXkgPSAxO1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leShzZXJ2ZXIpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzZXJ2ZXIpO1xcbiAgY29uc3Qgc2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbChzZXJ2ZXIpO1xcblxcbiAgY29uc3QgdGhhY2sgPSBNYXRoLmNlaWwobnMuaGFja0FuYWx5emVUaHJlYWRzKHNlcnZlciwgbW9uZXkpKTtcXG4gIGNvbnN0IHRncm93ID0gTWF0aC5jZWlsKG5zLmdyb3d0aEFuYWx5emUoc2VydmVyLCBtYXhNb25leSAvIG1vbmV5KSk7XFxuICBjb25zdCB0d2Vha2VuID0gTWF0aC5jZWlsKChzZWMgLSBtaW5TZWMpICogMjApO1xcblxcbiAgLyogbnMudHByaW50KFxcbiAgICBKU09OLnN0cmluZ2lmeSh7IG1vbmV5LCBtYXhNb25leSwgbWluU2VjLCBzZWMsIHRoYWNrLCB0Z3JvdywgdHdlYWtlbiB9KVxcbiAgKTsgKi9cXG5cXG4gIHJldHVybiB7IHRoYWNrLCB0Z3JvdywgdHdlYWtlbiB9O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gYWZ0ZXIobWlsbGlzKSB7XFxuICByZXR1cm4gRGF0ZS5ub3coKSArIG1pbGxpcztcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gbGF1bmNoKG5zLCBjYXBhLCB0aHJlYWRzLCBhY3Rpb24sIHRhcmdldCwgd2FpdF9tcykge1xcbiAgbGV0IGhhdmUgPSAwO1xcbiAgZm9yIChjb25zdCBzcnYgb2YgY2FwYS5zb3J0KChhLCBiKSA9PiBhLnRocmVhZHMgLSBiLnRocmVhZHMpKSB7XFxuICAgIGNvbnN0IGxhdW5jaFRocmVhZHMgPSBNYXRoLm1pbihzcnYudGhyZWFkcywgdGhyZWFkcyAtIGhhdmUpO1xcbiAgICBpZiAoIWxhdW5jaFRocmVhZHMgfHwgbGF1bmNoVGhyZWFkcyA8IDApIGNvbnRpbnVlO1xcbiAgICBjb25zdCBwaWQgPSBucy5leGVjKFxcbiAgICAgIGAke2FjdGlvbn0tYWZ0ZXIuanNgLFxcbiAgICAgIHNydi5uYW1lLFxcbiAgICAgIGxhdW5jaFRocmVhZHMsXFxuICAgICAgdGFyZ2V0LFxcbiAgICAgIHdhaXRfbXNcXG4gICAgKTtcXG5cXG4gICAgLypucy50cHJpbnQoXFxuICAgICAgYGxhdW5jaGluZyAke2FjdGlvbn0gb24gJHtcXG4gICAgICAgIHNydi5uYW1lXFxuICAgICAgfSB3aXRoICR7bGF1bmNoVGhyZWFkc30gdGhyZWFkcywgdGFyZ2V0ICR7dGFyZ2V0fSwgd2FpdHRpbWUgJHtucy50Rm9ybWF0KFxcbiAgICAgICAgd2FpdF9tc1xcbiAgICAgICl9YFxcbiAgICApOyAqL1xcbiAgICBpZiAocGlkICE9PSAwKSBoYXZlICs9IGxhdW5jaFRocmVhZHM7XFxuICAgIGVsc2VcXG4gICAgICBucy5wcmludChcXG4gICAgICAgIGBmYWlsZWQgdG8gbGF1bmNoIG9uICR7c3J2Lm5hbWV9OiAke2FjdGlvbn0gLXQgJHtsYXVuY2hUaHJlYWRzfSAke3RhcmdldH0sIGZyZWUgJHtzcnYudGhyZWFkc31gXFxuICAgICAgKTtcXG4gICAgaWYgKGhhdmUgPj0gdGhyZWFkcykge1xcbiAgICAgIHJldHVybiB0cnVlO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gZmFsc2U7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IGZsYWdzID0gbnMuZmxhZ3MoW1xcbiAgICBbXFxcInJlZnJlc2hyYXRlXFxcIiwgMjAwXSxcXG4gICAgW1xcXCJoZWxwXFxcIiwgZmFsc2VdLFxcbiAgXSk7XFxuICBpZiAoZmxhZ3MuXy5sZW5ndGggPT09IDAgfHwgZmxhZ3MuaGVscCkge1xcbiAgICBucy50cHJpbnQoXFxcIlRoaXMgc2NyaXB0IG1vbml0b3JzIGFuZCBzdGFydHMgY2FtcGFpZ25zIGZvciBhIHNlcnZlci5cXFwiKTtcXG4gICAgbnMudHByaW50KGBVU0FHRTogcnVuICR7bnMuZ2V0U2NyaXB0TmFtZSgpfSBTRVJWRVJfTkFNRWApO1xcbiAgICBucy50cHJpbnQoXFxcIkV4YW1wbGU6XFxcIik7XFxuICAgIG5zLnRwcmludChgPiBydW4gJHtucy5nZXRTY3JpcHROYW1lKCl9IG4wMGRsZXNgKTtcXG4gICAgcmV0dXJuO1xcbiAgfVxcbiAgbnMudGFpbCgpO1xcbiAgbnMuZGlzYWJsZUxvZyhcXFwiQUxMXFxcIik7XFxuICBsZXQgYWN0aXZlID0gW107IC8vYWN0aXZlIGNhbXBhaWduc1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3Qgc2VydmVyID0gZmxhZ3MuX1swXTtcXG4gICAgY29uc3QgeyB0aGFjaywgdGdyb3csIHR3ZWFrZW4gfSA9IGdldE5lZWRlZFRocmVhZHMobnMsIHNlcnZlcik7XFxuXFxuICAgIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkoc2VydmVyKTtcXG4gICAgbGV0IG1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoc2VydmVyKTtcXG4gICAgaWYgKG1vbmV5ID09PSAwKSBtb25leSA9IDE7XFxuICAgIGNvbnN0IG1vbmV5X3BjdCA9IChtb25leSAvIG1heE1vbmV5KSAqIDEwMDtcXG4gICAgY29uc3QgcHJvdGVjdGlvbiA9XFxuICAgICAgbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbChzZXJ2ZXIpIC0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzZXJ2ZXIpO1xcblxcbiAgICBucy5jbGVhckxvZyhzZXJ2ZXIpO1xcbiAgICBucy5wcmludChgJHtzZXJ2ZXJ9OmApO1xcbiAgICBucy5wcmludChcXG4gICAgICBgICRfX19fX19fOiAke25zLm5Gb3JtYXQobW9uZXksIFxcXCIkMC4wMDBhXFxcIil9IC8gJHtucy5uRm9ybWF0KFxcbiAgICAgICAgbWF4TW9uZXksXFxuICAgICAgICBcXFwiJDAuMDAwYVxcXCJcXG4gICAgICApfSAoJHttb25leV9wY3QudG9GaXhlZCgyKX0lKWBcXG4gICAgKTtcXG5cXG4gICAgY29uc3QgaGFja3RpbWUgPSBucy5nZXRIYWNrVGltZShzZXJ2ZXIpO1xcbiAgICBjb25zdCBncm93dGltZSA9IG5zLmdldEdyb3dUaW1lKHNlcnZlcik7XFxuICAgIGNvbnN0IHdlYWtlbnRpbWUgPSBucy5nZXRXZWFrZW5UaW1lKHNlcnZlcik7XFxuXFxuICAgIG5zLnByaW50KGAgc2VjdXJpdHk6ICske3Byb3RlY3Rpb24udG9GaXhlZCgyKX1gKTtcXG4gICAgbnMucHJpbnQoYCBoYWNrX19fXzogJHtucy50Rm9ybWF0KGhhY2t0aW1lKX0gKHQ9JHt0aGFja30pYCk7XFxuICAgIG5zLnByaW50KGAgZ3Jvd19fX186ICR7bnMudEZvcm1hdChncm93dGltZSl9ICh0PSR7dGdyb3d9KWApO1xcbiAgICBucy5wcmludChgIHdlYWtlbl9fOiAke25zLnRGb3JtYXQod2Vha2VudGltZSl9ICh0PSR7dHdlYWtlbn0pYCk7XFxuXFxuICAgIC8vIGdldCBpZGxlIGNhcGFcXG4gICAgbGV0IHsgY2FwYSwgdG90YWwgfSA9IGlkbGVfdGhyZWFkcyhucywgMS43NSk7XFxuXFxuICAgIGlmIChwcm90ZWN0aW9uID4gNSkge1xcbiAgICAgIGNvbnN0IG90aGVyV2Vha2VuZXJzID0gYWN0aXZlLmZpbHRlcigoZW50cnkpID0+IGVudHJ5LnR5cGUgPT0gXFxcIndlYWtlblxcXCIpO1xcbiAgICAgIGNvbnN0IG90aGVyV2Vha2VuVGhyZWFkcyA9IG90aGVyV2Vha2VuZXJzXFxuICAgICAgICAubWFwKChlbnRyeSkgPT4gZW50cnkudGhyZWFkcylcXG4gICAgICAgIC5yZWR1Y2UoKHN1bSwgdGhyZWFkcykgPT4gc3VtICsgdGhyZWFkcywgMCk7XFxuICAgICAgaWYgKG90aGVyV2Vha2VuZXJzLmxlbmd0aCA9PSAwIHx8IG90aGVyV2Vha2VuVGhyZWFkcyA8IHR3ZWFrZW4pIHtcXG4gICAgICAgIGNvbnN0IGxhdW5jaFRocmVhZHMgPSBNYXRoLm1pbih0b3RhbCwgdHdlYWtlbiAtIG90aGVyV2Vha2VuVGhyZWFkcyk7XFxuICAgICAgICBpZiAoXFxuICAgICAgICAgIGxhdW5jaChucywgY2FwYSwgbGF1bmNoVGhyZWFkcywgXFxcIndlYWtlblxcXCIsIHNlcnZlciwgTWF0aC5yYW5kb20oKSAqIDEwKVxcbiAgICAgICAgKVxcbiAgICAgICAgICBhY3RpdmUucHVzaCh7XFxuICAgICAgICAgICAgdHlwZTogXFxcIndlYWtlblxcXCIsXFxuICAgICAgICAgICAgdGhyZWFkczogbGF1bmNoVGhyZWFkcyxcXG4gICAgICAgICAgICBkdXI6IHdlYWtlbnRpbWUsXFxuICAgICAgICAgICAgc3RhcnQ6IDAsXFxuICAgICAgICAgICAgZXRhOiBhZnRlcih3ZWFrZW50aW1lKSxcXG4gICAgICAgICAgfSk7XFxuICAgICAgICBlbHNlXFxuICAgICAgICAgIG5zLnByaW50KFxcbiAgICAgICAgICAgIGBleHBlZGl0ZSB3ZWFrZW4gd2l0aCAke2xhdW5jaFRocmVhZHN9IG9mICR7dG90YWx9IHRocmVhZHMgZmFpbGVkYFxcbiAgICAgICAgICApO1xcblxcbiAgICAgICAgY29uc3QgdXBkYXRlID0gaWRsZV90aHJlYWRzKG5zLCAxLjc1KTtcXG4gICAgICAgIGNhcGEgPSB1cGRhdGUuY2FwYTtcXG4gICAgICAgIHRvdGFsID0gdXBkYXRlLnRvdGFsO1xcbiAgICAgIH1cXG4gICAgfVxcblxcbiAgICAvLyBwcmVwIHNlcnZlciBtb25leVxcbiAgICBpZiAobW9uZXlfcGN0IDwgOTApIHtcXG4gICAgICBjb25zdCBvdGhlckdyb3dlcnMgPSBhY3RpdmUuZmlsdGVyKChlbnRyeSkgPT4gZW50cnkudHlwZSA9PSBcXFwiZ3Jvd1xcXCIpO1xcbiAgICAgIGNvbnN0IG90aGVyR3Jvd1RocmVhZHMgPSBvdGhlckdyb3dlcnNcXG4gICAgICAgIC5tYXAoKGVudHJ5KSA9PiBlbnRyeS50aHJlYWRzKVxcbiAgICAgICAgLnJlZHVjZSgoc3VtLCB0aHJlYWRzKSA9PiBzdW0gKyB0aHJlYWRzLCAwKTtcXG4gICAgICBpZiAob3RoZXJHcm93ZXJzLmxlbmd0aCA9PSAwIHx8IG90aGVyR3Jvd1RocmVhZHMgPCB0Z3Jvdykge1xcbiAgICAgICAgY29uc3QgbGF1bmNoVGhyZWFkcyA9IE1hdGgubWluKHRvdGFsLCB0Z3JvdyAtIG90aGVyR3Jvd1RocmVhZHMpO1xcbiAgICAgICAgaWYgKGxhdW5jaChucywgY2FwYSwgbGF1bmNoVGhyZWFkcywgXFxcImdyb3dcXFwiLCBzZXJ2ZXIsIE1hdGgucmFuZG9tKCkgKiAxMCkpXFxuICAgICAgICAgIGFjdGl2ZS5wdXNoKHtcXG4gICAgICAgICAgICB0eXBlOiBcXFwiZ3Jvd1xcXCIsXFxuICAgICAgICAgICAgdGhyZWFkczogbGF1bmNoVGhyZWFkcyxcXG4gICAgICAgICAgICBkdXI6IGdyb3d0aW1lLFxcbiAgICAgICAgICAgIHN0YXJ0OiAwLFxcbiAgICAgICAgICAgIGV0YTogYWZ0ZXIoZ3Jvd3RpbWUpLFxcbiAgICAgICAgICB9KTtcXG4gICAgICAgIGVsc2VcXG4gICAgICAgICAgbnMucHJpbnQoXFxuICAgICAgICAgICAgYGV4cGVkaXRlIGdyb3d0aCB3aXRoICR7bGF1bmNoVGhyZWFkc30gb2YgJHt0b3RhbH0gdGhyZWFkcyBmYWlsZWRgXFxuICAgICAgICAgICk7XFxuICAgICAgICBjb25zdCB1cGRhdGUgPSBpZGxlX3RocmVhZHMobnMsIDEuNyk7XFxuICAgICAgICBjYXBhID0gdXBkYXRlLmNhcGE7XFxuICAgICAgICB0b3RhbCA9IHVwZGF0ZS50b3RhbDtcXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgLy8gc2VydmVyIGlzIG9rLCBsYXVuY2ggY2FtcGFpZ25cXG4gICAgaWYgKG1vbmV5X3BjdCA+PSA5MCAmJiBwcm90ZWN0aW9uIDw9IDUpIHtcXG4gICAgICBjb25zdCBidWZmZXIgPSAyMDA7IC8vbXNcXG5cXG4gICAgICAvL3NpbXBsZSBjYXNlXFxuICAgICAgaWYgKHRvdGFsID49IHRoYWNrICsgdHdlYWtlbiArIHRncm93ICsgdHdlYWtlbikge1xcbiAgICAgICAgbGV0IHdhaXRfaDEsIHdhaXRfdzFfMSwgd2FpdF9nMSwgd2FpdF93MV8yO1xcblxcbiAgICAgICAgLy8gY2FsYyB3YWl0IHRpbWVzIGJhc2VkIG9uIGxvbmdlc3QgYWN0aW9uXFxuICAgICAgICB3YWl0X3cxXzEgPSBidWZmZXI7XFxuICAgICAgICB3YWl0X3cxXzIgPSB3ZWFrZW50aW1lICsgMyAqIGJ1ZmZlciAtIHdlYWtlbnRpbWU7XFxuICAgICAgICB3YWl0X2cxID0gd2Vha2VudGltZSArIDIgKiBidWZmZXIgLSBncm93dGltZTtcXG4gICAgICAgIHdhaXRfaDEgPSB3ZWFrZW50aW1lIC0gaGFja3RpbWU7XFxuXFxuICAgICAgICAvLyBsYXVuY2ggaW1tZWRpYXRlbHksIHNjcmlwdCB3aWxsIGFjdGl2ZSB3YWl0IChjb25zaWRlciBsYXVuY2hpbmcgZGVsYXllZClcXG4gICAgICAgIGlmIChsYXVuY2gobnMsIGNhcGEsIHR3ZWFrZW4sIFxcXCJ3ZWFrZW5cXFwiLCBzZXJ2ZXIsIHdhaXRfdzFfMSkpXFxuICAgICAgICAgIGFjdGl2ZS5wdXNoKHtcXG4gICAgICAgICAgICB0eXBlOiBcXFwid2Vha2VuXFxcIixcXG4gICAgICAgICAgICB0aHJlYWRzOiB0d2Vha2VuLFxcbiAgICAgICAgICAgIGR1cjogd2Vha2VudGltZSxcXG4gICAgICAgICAgICBzdGFydDogYWZ0ZXIod2FpdF93MV8xKSxcXG4gICAgICAgICAgICBldGE6IGFmdGVyKHdhaXRfdzFfMSArIHdlYWtlbnRpbWUpLFxcbiAgICAgICAgICB9KTtcXG4gICAgICAgIGVsc2UgbnMucHJpbnQoXFxcIncxIGZhaWxlZFxcXCIpO1xcbiAgICAgICAgbGV0IHVwZGF0ZSA9IGlkbGVfdGhyZWFkcyhucywgMS43KTtcXG4gICAgICAgIGNhcGEgPSB1cGRhdGUuY2FwYTtcXG4gICAgICAgIHRvdGFsID0gdXBkYXRlLnRvdGFsO1xcblxcbiAgICAgICAgaWYgKGxhdW5jaChucywgY2FwYSwgdHdlYWtlbiwgXFxcIndlYWtlblxcXCIsIHNlcnZlciwgd2FpdF93MV8yKSlcXG4gICAgICAgICAgYWN0aXZlLnB1c2goe1xcbiAgICAgICAgICAgIHR5cGU6IFxcXCJ3ZWFrZW5cXFwiLFxcbiAgICAgICAgICAgIHRocmVhZHM6IHR3ZWFrZW4sXFxuICAgICAgICAgICAgZHVyOiB3ZWFrZW50aW1lLFxcbiAgICAgICAgICAgIHN0YXJ0OiBhZnRlcih3YWl0X3cxXzIpLFxcbiAgICAgICAgICAgIGV0YTogYWZ0ZXIod2FpdF93MV8yICsgd2Vha2VudGltZSksXFxuICAgICAgICAgIH0pO1xcbiAgICAgICAgZWxzZSBucy5wcmludChcXFwidzIgZmFpbGVkXFxcIik7XFxuICAgICAgICB1cGRhdGUgPSBpZGxlX3RocmVhZHMobnMsIDEuNyk7XFxuICAgICAgICBjYXBhID0gdXBkYXRlLmNhcGE7XFxuICAgICAgICB0b3RhbCA9IHVwZGF0ZS50b3RhbDtcXG5cXG4gICAgICAgIGlmIChsYXVuY2gobnMsIGNhcGEsIHRncm93LCBcXFwiZ3Jvd1xcXCIsIHNlcnZlciwgd2FpdF9nMSkpXFxuICAgICAgICAgIGFjdGl2ZS5wdXNoKHtcXG4gICAgICAgICAgICB0eXBlOiBcXFwiZ3Jvd1xcXCIsXFxuICAgICAgICAgICAgdGhyZWFkczogdGdyb3csXFxuICAgICAgICAgICAgZHVyOiBncm93dGltZSxcXG4gICAgICAgICAgICBzdGFydDogYWZ0ZXIod2FpdF9nMSksXFxuICAgICAgICAgICAgZXRhOiBhZnRlcih3YWl0X2cxICsgZ3Jvd3RpbWUpLFxcbiAgICAgICAgICB9KTtcXG4gICAgICAgIGVsc2UgbnMucHJpbnQoXFxcImcgZmFpbGVkXFxcIik7XFxuICAgICAgICB1cGRhdGUgPSBpZGxlX3RocmVhZHMobnMsIDEuNyk7XFxuICAgICAgICBjYXBhID0gdXBkYXRlLmNhcGE7XFxuICAgICAgICB0b3RhbCA9IHVwZGF0ZS50b3RhbDtcXG5cXG4gICAgICAgIGlmIChsYXVuY2gobnMsIGNhcGEsIHRoYWNrLCBcXFwiaGFja1xcXCIsIHNlcnZlciwgd2FpdF9oMSkpXFxuICAgICAgICAgIGFjdGl2ZS5wdXNoKHtcXG4gICAgICAgICAgICB0eXBlOiBcXFwiaGFja1xcXCIsXFxuICAgICAgICAgICAgdGhyZWFkczogdGhhY2ssXFxuICAgICAgICAgICAgZHVyOiBoYWNrdGltZSxcXG4gICAgICAgICAgICBzdGFydDogYWZ0ZXIod2FpdF9oMSksXFxuICAgICAgICAgICAgZXRhOiBhZnRlcih3YWl0X2gxICsgaGFja3RpbWUpLFxcbiAgICAgICAgICB9KTtcXG4gICAgICAgIGVsc2UgbnMucHJpbnQoXFxcImggZmFpbGVkXFxcIik7XFxuICAgICAgICB1cGRhdGUgPSBpZGxlX3RocmVhZHMobnMsIDEuNyk7XFxuICAgICAgICBjYXBhID0gdXBkYXRlLmNhcGE7XFxuICAgICAgICB0b3RhbCA9IHVwZGF0ZS50b3RhbDtcXG4gICAgICB9IGVsc2Uge1xcbiAgICAgICAgbnMucHJpbnQoYGZyZWU6ICR7dG90YWx9LCBuZWVkOiAke3RoYWNrICsgdHdlYWtlbiArIHRncm93ICsgdHdlYWtlbn1gKTtcXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcXG4gICAgY29uc3Qgd2FpdGluZyA9IGFjdGl2ZS5maWx0ZXIoKGFjdGl2ZSkgPT4gYWN0aXZlLnN0YXJ0ID4gbm93KTtcXG4gICAgY29uc3QgcnVubmluZyA9IGFjdGl2ZS5maWx0ZXIoXFxuICAgICAgKGFjdGl2ZSkgPT4gYWN0aXZlLnN0YXJ0IDw9IG5vdyAmJiBhY3RpdmUuZXRhID49IG5vd1xcbiAgICApO1xcbiAgICBjb25zdCBkb25lID0gYWN0aXZlLmZpbHRlcigoYWN0aXZlKSA9PiBhY3RpdmUuZXRhIDwgbm93KTtcXG4gICAgYWN0aXZlID0gYWN0aXZlLmZpbHRlcigoYWN0aXZlKSA9PiBhY3RpdmUuZXRhID49IG5vdyk7XFxuXFxuICAgIG5zLnByaW50KFxcbiAgICAgIGB3YWl0aW5nOiAke3dhaXRpbmcubGVuZ3RofSwgcnVubmluZzogJHtydW5uaW5nLmxlbmd0aH0sIGRvbmU6ICR7XFxuICAgICAgICBkb25lLmxlbmd0aFxcbiAgICAgIH0sZnJlZTogJHt0b3RhbH0sIG5lZWQ6ICR7dGhhY2sgKyB0d2Vha2VuICsgdGdyb3cgKyB0d2Vha2VufWBcXG4gICAgKTtcXG4gICAgYXdhaXQgbnMuc2xlZXAoMjApO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gYXV0b2NvbXBsZXRlKGRhdGEsIGFyZ3MpIHtcXG4gIHJldHVybiBkYXRhLnNlcnZlcnM7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9uZW8vY29vcmRpbmF0ZS5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85NzAyNzk1MS02MGI5LTQ2YjQtYjMxZC1mMDg5OThjMzc2MTJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTIwOX0se1wiZmlsZW5hbWVcIjpcIi9uZW8vZ2V0LWlkbGUtY2FwYS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vN2RkNGI1YmEtMzcyMS00NDVjLThkYjUtYTM2NDIwMjBmM2NkXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE5ODgzfSx7XCJmaWxlbmFtZVwiOlwiL25lby9jb29yZGluYXRlLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy80NTg3Y2I5Yy01YzUzLTQxNmUtOGNmMy0wZjg4OTVmZDY1MGJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MTR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6NS44LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDE0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja0FuYWx5emVUaHJlYWRzXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3d0aEFuYWx5emVcIixcImNvc3RcIjoxfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEhhY2tUaW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldEdyb3dUaW1lXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFdlYWtlblRpbWVcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclVzZWRSYW1cIixcImNvc3RcIjowLjA1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzY2FuIH0gZnJvbSBcXFwiaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gaWRsZV90aHJlYWRzKG5zLCBzaXplKSB7XFxuICBjb25zdCBzcnZzID0gc2NhbihucykuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSk7XFxuICBjb25zdCBjYXBhID0gc3J2cy5tYXAoKHNydikgPT4ge1xcbiAgICBjb25zdCBmcmVlUmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydikgLSBucy5nZXRTZXJ2ZXJVc2VkUmFtKHNydik7XFxuICAgIGNvbnN0IGlkbGVUaHJlYWRzID0gTWF0aC5mbG9vcihmcmVlUmFtIC8gc2l6ZSk7XFxuICAgIHJldHVybiB7IG5hbWU6IHNydiwgdGhyZWFkczogaWRsZVRocmVhZHMsIGZyZWU6IGZyZWVSYW0gfTtcXG4gIH0pO1xcbiAgY29uc3QgdG90YWwgPSBjYXBhLnJlZHVjZSgoc3VtLCBlbGVtKSA9PiBzdW0gKyBlbGVtLnRocmVhZHMsIDApO1xcbiAgcmV0dXJuIHsgY2FwYSwgdG90YWwgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgeyBjYXBhLCB0b3RhbCB9ID0gaWRsZV90aHJlYWRzKG5zLCAxLjcpO1xcbiAgZm9yIChjb25zdCBlbGVtIG9mIGNhcGEpIHtcXG4gICAgaWYgKGVsZW0udGhyZWFkcyA+IDApIHtcXG4gICAgICBucy50cHJpbnQoYCR7ZWxlbS5uYW1lfTogJHtlbGVtLnRocmVhZHN9ICgke2VsZW0uZnJlZX0gR0IpYCk7XFxuICAgIH1cXG4gIH1cXG4gIG5zLnRwcmludCh0b3RhbCArIFxcXCIgdGhyZWFkcyBjYW4gYmUgYWRkZWRcXFwiKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiL25lby9nZXQtaWRsZS1jYXBhLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2Q5OWE1N2ViLTM0M2QtNDE1My05ZDRlLTgyMzQ5YzRmNDE1N1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MjA5fSx7XCJmaWxlbmFtZVwiOlwiL25lby9nZXQtaWRsZS1jYXBhLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zYTU5Y2U5Ny04Y2YwLTQyNGUtYWYzMC01ZGZhZDE1OTIzYTJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTk4ODN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS45NSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxOTg4MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJVc2VkUmFtXCIsXCJjb3N0XCI6MC4wNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvbmVvL2dyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzAzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiL25lby9oYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL25lby9oYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82ZjJkZDkxMy0wOWFjLTRmNmItOTIwMS0zNWUwMTIyZjExYzdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Nzg2NjZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMwNCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvbmVvL3dlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMDUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mZmY3NTFmYy1hMzFlLTQ1YjctYTBmZi00ZmM5ZWFmNmYxZjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDY4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI1NSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzBiYWZjZjM3LWJlNjktNDM4Ni05ZWJiLTk2YTlmNWQzMDk4ZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMjk5fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTk5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzYyMWZjYmUyLTA2MzMtNDRlMi1hZjI5LThhMjRlM2RiNGVjMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ1OX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDU5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IGlkbGVfdGhyZWFkcyB9IGZyb20gXFxcIm5lby9nZXQtaWRsZS1jYXBhLmpzXFxcIjtcXG5pbXBvcnQgeyBsYXVuY2ggfSBmcm9tIFxcXCJuZW8vY29vcmRpbmF0ZS5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgeyBjYXBhLCB0b3RhbCB9ID0gaWRsZV90aHJlYWRzKG5zLCAxLjcpO1xcbiAgY29uc3QgdGhyZWFkcyA9IDEwO1xcbiAgY29uc3QgYWN0aW9uID0gXFxcIndlYWtlblxcXCI7XFxuICBjb25zdCB0YXJnZXQgPSBcXFwiY29tcHRla1xcXCI7XFxuICBjb25zdCB3YWl0X21zID0gMDtcXG5cXG4gIGlmIChsYXVuY2gobnMsIGNhcGEsIHRocmVhZHMsIGFjdGlvbiwgdGFyZ2V0LCB3YWl0X21zKSkge1xcbiAgICBucy50cHJpbnRmKFxcXCJzdWNjZXNzXFxcIik7XFxuICB9IGVsc2UgbnMudHByaW50ZihcXFwiZmFpbGVkXFxcIik7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9uZW8vc2luZ2xlLWxhdW5jaC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2JhMGZiOWI3LTEyYTEtNDQ5My1iMjFkLWZjODRkZjNmZjlhMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxMjUxMDJ9LHtcImZpbGVuYW1lXCI6XCIvbmVvL2dldC1pZGxlLWNhcGEuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzEwNzI2ODRlLThiYzUtNGUyMC04Nzc5LTI2ZjdmNGI0NjA3NFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxMjUwOTZ9LHtcImZpbGVuYW1lXCI6XCIvbmVvL2Nvb3JkaW5hdGUuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzQzZjA1MzA3LTU1MGQtNDMxMi04OTM0LTM3YTg5Yjg1MTU0YVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxMjUwOTl9LHtcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8wMzM1NjE4Mi04OWU3LTRmOTMtOGM1OC01ZDJlMjFkODFhOTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTI1MTAyfSx7XCJmaWxlbmFtZVwiOlwiL25lby9nZXQtaWRsZS1jYXBhLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85ZGNjYWY0ZS0xMmQ1LTRkMDYtYWVmYS1lYTAwMDgxZWFhODhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTI1MDk2fSx7XCJmaWxlbmFtZVwiOlwiL25lby9zaW5nbGUtbGF1bmNoLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84MmRjYTUzNC05ZDgxLTQwNDYtOGViMC03ZjUwOTQ4ODg3ODlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTI1MTUzfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuMjUsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTE0NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJVc2VkUmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImltcG9ydCB7IHNjYW4sIHNvcnRlZF90YXJnZXRzIH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4uL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCBuZXQgPSBzY2FuKG5zKTtcXG5cXG4gIC8vIGRldGVybWluZSBwb3J0cyB3ZSBjYW4gb3BlblxcbiAgbGV0IGNhbl9wb3J0cyA9IDA7XFxuICBpZiAobnMuZmlsZUV4aXN0cyhcXFwiQnJ1dGVTU0guZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkgY2FuX3BvcnRzKys7XFxuICBpZiAobnMuZmlsZUV4aXN0cyhcXFwiRlRQQ3JhY2suZXhlXFxcIiwgXFxcImhvbWVcXFwiKSkgY2FuX3BvcnRzKys7XFxuICBpZiAobnMuZmlsZUV4aXN0cyhcXFwicmVsYXlTTVRQLmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIGNhbl9wb3J0cysrO1xcbiAgaWYgKG5zLmZpbGVFeGlzdHMoXFxcIkhUVFBXb3JtLmV4ZVxcXCIsIFxcXCJob21lXFxcIikpIGNhbl9wb3J0cysrO1xcbiAgaWYgKG5zLmZpbGVFeGlzdHMoXFxcIlNRTEluamVjdC5leGVcXFwiLCBcXFwiaG9tZVxcXCIpKSBjYW5fcG9ydHMrKztcXG5cXG4gIC8vIGNoZWNrIG1hIDEzMzcgc2tpbGx6XFxuICBjb25zdCBza2lsbHogPSBucy5nZXRIYWNraW5nTGV2ZWwoKTtcXG5cXG4gIGNvbnN0IHB3bmQgPSBuZXQuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSk7XFxuICBjb25zdCB1bnB3bmQgPSBuZXQuZmlsdGVyKChzcnYpID0+ICFwd25kLmluY2x1ZGVzKHNydikpO1xcbiAgY29uc3QgdGd0cyA9IHVucHduZC5maWx0ZXIoKHNydikgPT4ge1xcbiAgICBjb25zdCBuZWVkUG9ydHMgPSBucy5nZXRTZXJ2ZXJOdW1Qb3J0c1JlcXVpcmVkKHNydik7XFxuICAgIGNvbnN0IG5lZWRTa2lsbHogPSBucy5nZXRTZXJ2ZXJSZXF1aXJlZEhhY2tpbmdMZXZlbChzcnYpO1xcbiAgICByZXR1cm4gbmVlZFBvcnRzIDw9IGNhbl9wb3J0cyAmJiBuZWVkU2tpbGx6IDw9IHNraWxsejtcXG4gIH0pO1xcblxcbiAgbnMudHByaW50ZihcXG4gICAgYGdvdCAke3B3bmQubGVuZ3RofSBwMHduZCBzZXJ2ZXJzLCBvdXQgb2YgJHtuZXQubGVuZ3RofSwgZm91bmQgJHt0Z3RzLmxlbmd0aH0gdGFyZ2V0c2BcXG4gICk7XFxuXFxuICB0Z3RzLmZvckVhY2goKHNydikgPT4ge1xcbiAgICBjb25zdCBuZWVkUG9ydHMgPSBucy5nZXRTZXJ2ZXJOdW1Qb3J0c1JlcXVpcmVkKHNydik7XFxuICAgIGNvbnN0IG5lZWRTa2lsbHogPSBucy5nZXRTZXJ2ZXJSZXF1aXJlZEhhY2tpbmdMZXZlbChzcnYpO1xcbiAgICBpZiAobmVlZFBvcnRzIDw9IGNhbl9wb3J0cyAmJiBuZWVkU2tpbGx6IDw9IHNraWxseikge1xcbiAgICAgIG5zLnRwcmludGYoYHRndCAke3Nydn1gKTtcXG4gICAgICBpZiAobmVlZFBvcnRzID49IDEpIG5zLmJydXRlc3NoKHNydik7XFxuICAgICAgaWYgKG5lZWRQb3J0cyA+PSAyKSBucy5mdHBjcmFjayhzcnYpO1xcbiAgICAgIGlmIChuZWVkUG9ydHMgPj0gMykgbnMucmVsYXlzbXRwKHNydik7XFxuICAgICAgaWYgKG5lZWRQb3J0cyA+PSA0KSBucy5odHRwd29ybShzcnYpO1xcbiAgICAgIGlmIChuZWVkUG9ydHMgPj0gNSkgbnMuc3FsaW5qZWN0KHNydik7XFxuICAgICAgbnMubnVrZShzcnYpO1xcbiAgICAgIG5zLnRwcmludGYoYHAwd25kICR7c3J2fWApO1xcbiAgICB9XFxuICB9KTtcXG5cXG4gIGlmIChucy5maWxlRXhpc3RzKFxcXCIvbmVvL2Nvb3JkaW5hdGUuanNcXFwiLCBcXFwiaG9tZVxcXCIpKSB7XFxuICAgIGNvbnN0IGFsbF90Z3QgPSBzb3J0ZWRfdGFyZ2V0cyhucykubWFwKChlbGVtKSA9PiBlbGVtLm5hbWUpO1xcbiAgICBjb25zdCBvdXRwdXQgPSBhbGxfdGd0LnNwbGljZSgwLCA1KTtcXG5cXG4gICAgbnMudHByaW50KFxcXCJjb29yZGluYXRlcmQgYXR0YWNrIG9uOiBcXFwiICsgb3V0cHV0LmpvaW4oXFxcIiBcXFwiKSk7XFxuXFxuICAgIG91dHB1dC5mb3JFYWNoKCh0YXJnZXQpID0+IHtcXG4gICAgICBucy5ydW4oXFxcIi9uZW8vY29vcmRpbmF0ZS5qc1xcXCIsIDEsIHRhcmdldCk7XFxuICAgIH0pO1xcbiAgfSBlbHNlIHtcXG4gICAgbnMudHByaW50KFxcXCJubyBuZW8vY29vcmRpbmF0ZS5qc1xcXCIpO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCIvbmVvL3J1bmMuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iMDQ0YzAzNy1mYjZiLTQ3MmYtYTM0Yy1jN2I2MTFkYTlkMjhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMyfSx7XCJmaWxlbmFtZVwiOlwiL25lby9ydW5jLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy80NDUwNjU2YS1hYThjLTQ3YWQtYWUzZS1kNTNiMTEzMzk3NzhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDQ1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTQ1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImZpbGVFeGlzdHNcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRIYWNraW5nTGV2ZWxcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJOdW1Qb3J0c1JlcXVpcmVkXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyUmVxdWlyZWRIYWNraW5nTGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJicnV0ZXNzaFwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJmdHBjcmFja1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJyZWxheXNtdHBcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaHR0cHdvcm1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic3FsaW5qZWN0XCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIm51a2VcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwicnVuXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gLTU0MDAwO1xcbiAgbnMuZGlzYWJsZUxvZyhcXFwiQUxMXFxcIik7XFxuICBucy50YWlsKCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5jbGVhckxvZygpO1xcblxcbiAgICBjb25zdCBrYXJtYSA9IG5zLmhlYXJ0LmJyZWFrKCk7XFxuICAgIGlmIChrYXJtYSA+IHRhcmdldClcXG4gICAgICBucy5wcmludChgQ3VycmVudCBLYXJtYSA6ICR7a2FybWF9LCAkeyhrYXJtYSAvIHRhcmdldCkudG9GaXhlZCgyKX0lYCk7XFxuXFxuICAgIGNvbnN0IGNyaW1lID0gXFxcIkhvbWljaWRlXFxcIjtcXG5cXG4gICAgY29uc3QgeyBrYXJtYTogZGthcm1hLCBtb25leSwgdGltZSwgLi4uc3RhdHMgfSA9IG5zLmdldENyaW1lU3RhdHMoY3JpbWUpO1xcbiAgICBucy5wcmludChgJHtjcmltZX0sIGNoYW5jZTogJHsobnMuZ2V0Q3JpbWVDaGFuY2UoY3JpbWUpICogMTAwLjApLnRvRml4ZWQoXFxuICAgICAgMlxcbiAgICApfSUsXFxuS2FybWE6IC0ke2RrYXJtYX0sIGR1cjogJHtucy50Rm9ybWF0KHRpbWUpfSwgZ2FpbjogJHtucy5uRm9ybWF0KFxcbiAgICAgIG1vbmV5LFxcbiAgICAgIFxcXCIkMC4wMDBhXFxcIlxcbiAgICApfVxcbiAgICR7SlNPTi5zdHJpbmdpZnkoc3RhdHMsIG51bGwsIDIpfWApO1xcbiAgICBjb25zdCBkdXIgPSBucy5jb21taXRDcmltZShjcmltZSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChkdXIpO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCIvc2luZy9raWxsa2lsbC5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIi9zaW5nL2tpbGxraWxsLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iNDQxMDljYS05NTc4LTRiOGYtYTRkOS1mMDFjMGEwZGZlNzlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDI5fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjE2LjYsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTE1MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldENyaW1lU3RhdHNcIixcImNvc3RcIjo1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0Q3JpbWVDaGFuY2VcIixcImNvc3RcIjo1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiY29tbWl0Q3JpbWVcIixcImNvc3RcIjo1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4uL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSAtNTQwMDA7XFxuICBucy5kaXNhYmxlTG9nKFxcXCJBTExcXFwiKTtcXG4gIG5zLnRhaWwoKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLmNsZWFyTG9nKCk7XFxuXFxuICAgIGNvbnN0IGthcm1hID0gbnMuaGVhcnQuYnJlYWsoKTtcXG4gICAgaWYgKGthcm1hID4gdGFyZ2V0KVxcbiAgICAgIG5zLnByaW50KGBDdXJyZW50IEthcm1hIDogJHtrYXJtYX0sICR7KGthcm1hIC8gdGFyZ2V0KS50b0ZpeGVkKDIpfSVgKTtcXG5cXG4gICAgY29uc3QgY3JpbWUgPSBcXFwiTXVnIHNvbWVvbmVcXFwiO1xcblxcbiAgICBjb25zdCB7IGthcm1hOiBka2FybWEsIG1vbmV5LCB0aW1lLCAuLi5zdGF0cyB9ID0gbnMuZ2V0Q3JpbWVTdGF0cyhjcmltZSk7XFxuICAgIG5zLnByaW50KGAke2NyaW1lfSwgY2hhbmNlOiAkeyhucy5nZXRDcmltZUNoYW5jZShjcmltZSkgKiAxMDAuMCkudG9GaXhlZChcXG4gICAgICAyXFxuICAgICl9JSwgXFxuS2FybWE6IC0ke2RrYXJtYX0sIGR1cjogJHtucy50Rm9ybWF0KHRpbWUpfSwgZ2FpbjogJHtucy5uRm9ybWF0KFxcbiAgICAgIG1vbmV5LFxcbiAgICAgIFxcXCIkMC4wMDBhXFxcIlxcbiAgICApfVxcbiR7SlNPTi5zdHJpbmdpZnkoc3RhdHMsIG51bGwsIDIpfWApO1xcblxcbiAgICBucy5wcmludChcXG4gICAgICBgSG9taWNpZGUgY2hhbmNlOiAkeyhucy5nZXRDcmltZUNoYW5jZShcXFwiSG9taWNpZGVcXFwiKSAqIDEwMC4wKS50b0ZpeGVkKDIpfSVgXFxuICAgICk7XFxuXFxuICAgIG5zLmNvbW1pdENyaW1lKGNyaW1lKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKDUwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCIvc2luZy9tdWdzaG90LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL3NpbmcvbXVnc2hvdC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMzcyZTIyMGYtYmYwOS00MmU4LWIzYmMtOTAyNGMwZjQzNjdjXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjExNjM1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjE2LjYsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTE1NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldENyaW1lU3RhdHNcIixcImNvc3RcIjo1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0Q3JpbWVDaGFuY2VcIixcImNvc3RcIjo1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiY29tbWl0Q3JpbWVcIixcImNvc3RcIjo1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJjb25zdCBjcmltZXMgPSBbXFxuICBcXFwiU2hvcGxpZnRcXFwiLFxcbiAgXFxcIlJvYiBTdG9yZVxcXCIsXFxuICBcXFwiTXVnXFxcIixcXG4gIFxcXCJMYXJjZW55XFxcIixcXG4gIFxcXCJEZWFsIERydWdzXFxcIixcXG4gIFxcXCJCb25kIEZvcmdlcnlcXFwiLFxcbiAgXFxcIlRyYWZmaWNrIEFybXNcXFwiLFxcbiAgXFxcIkhvbWljaWRlXFxcIixcXG4gIFxcXCJHcmFuZCBUaGVmdCBBdXRvXFxcIixcXG4gIFxcXCJLaWRuYXBcXFwiLFxcbiAgXFxcIkFzc2Fzc2luYXRpb25cXFwiLFxcbiAgXFxcIkhlaXN0XFxcIixcXG5dO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNyaW1lcy5mb3JFYWNoKChjcmltZSkgPT4ge1xcbiAgICBjb25zdCB7IGthcm1hLCBtb25leSwgdGltZSwgLi4uc3RhdHMgfSA9IG5zLmdldENyaW1lU3RhdHMoY3JpbWUpO1xcbiAgICBucy50cHJpbnQoYCR7Y3JpbWV9LCBjaGFuY2U6ICR7KG5zLmdldENyaW1lQ2hhbmNlKGNyaW1lKSAqIDEwMC4wKS50b0ZpeGVkKFxcbiAgICAgIDJcXG4gICAgKX0lLCBLYXJtYTogJHtrYXJtYX0sIGR1cjogJHtucy50Rm9ybWF0KHRpbWUpfSwgZ2FpbjogJHtucy5uRm9ybWF0KFxcbiAgICAgIG1vbmV5LFxcbiAgICAgIFxcXCIkMC4wMDBhXFxcIlxcbiAgICApfVxcbiAgICR7SlNPTi5zdHJpbmdpZnkoc3RhdHMsIG51bGwsIDIpfWApO1xcbiAgfSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9zaW5nL21lbnUuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL3NpbmcvbWVudS5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOGU4NjJmMzktODVmZC00MzA4LTg1ZWMtOTIwZDFjMDg1ODI2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI3OTkwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjExLjYsXCJzZXJ2ZXJcIjpcImhvbWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjc5OTAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRDcmltZVN0YXRzXCIsXCJjb3N0XCI6NX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldENyaW1lQ2hhbmNlXCIsXCJjb3N0XCI6NX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgdGltZSA9IG5zLmNvbW1pdENyaW1lKFxcXCJIZWlzdFxcXCIpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAodGltZSk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcIi9zaW5nL21vbmV5am9iLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL3NpbmcvbW9uZXlqb2IuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzFiMGM4MTFmLTU1ZDEtNDA3OS04OGFjLTAyYTdmNDZhMDViOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MzY1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjYuNixcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTU1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiY29tbWl0Q3JpbWVcIixcImNvc3RcIjo1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IG1lbWJlcnMgPSBucy5nYW5nLmdldE1lbWJlck5hbWVzKCk7XFxuICAgIGNvbnN0IHRhc2tzID0gbnMuZ2FuZ1xcbiAgICAgIC5nZXRUYXNrTmFtZXMoKVxcbiAgICAgIC5tYXAoKG5hbWUpID0+IG5zLmdhbmcuZ2V0VGFza1N0YXRzKG5hbWUpKTtcXG5cXG4gICAgY29uc3QgdHJhaW5UYXNrID0gdGFza3MuZmluZCgodGFzaykgPT4ge1xcbiAgICAgIHJldHVybiB0YXNrLm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhcXFwidHJhaW5cXFwiKSAmJiB0YXNrLnN0cldlaWdodCA+IDA7XFxuICAgIH0pO1xcblxcbiAgICBpZiAobnMuZ2FuZy5jYW5SZWNydWl0TWVtYmVyKCkpIHtcXG4gICAgICBjb25zdCBuZXdHdXkgPSBgcjAwa2llLSR7bWVtYmVycy5sZW5ndGh9YDtcXG4gICAgICBpZiAobnMuZ2FuZy5yZWNydWl0TWVtYmVyKG5ld0d1eSkpIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwibmV3IGdhbmcgbWVtYmVyIDogXFxcIiArIG5ld0d1eSk7XFxuICAgICAgICBtZW1iZXJzLnB1c2gobmV3R3V5KTtcXG4gICAgICAgIG5zLmdhbmcuc2V0TWVtYmVyVGFzayhuZXdHdXksIHRyYWluVGFzay5uYW1lKTtcXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgY29uc3QgZXF1aXBtZW50ID0gbnMuZ2FuZ1xcbiAgICAgIC5nZXRFcXVpcG1lbnROYW1lcygpXFxuICAgICAgLm1hcCgobmFtZSkgPT4gKHsgbmFtZSwgLi4ubnMuZ2FuZy5nZXRFcXVpcG1lbnRTdGF0cyhuYW1lKSB9KSlcXG4gICAgICAubWFwKChzdGF0cykgPT4gKHtcXG4gICAgICAgIC4uLnN0YXRzLFxcbiAgICAgICAgcHJpY2U6IG5zLmdhbmcuZ2V0RXF1aXBtZW50Q29zdChzdGF0cy5uYW1lKSxcXG4gICAgICAgIHR5cGU6IG5zLmdhbmcuZ2V0RXF1aXBtZW50VHlwZShzdGF0cy5uYW1lKSxcXG4gICAgICB9KSlcXG4gICAgICAuZmlsdGVyKChzdGF0cykgPT4gc3RhdHMuc3RyID4gMCB8fCBzdGF0cy5kZWYgPiAwKTtcXG5cXG4gICAgZm9yIChsZXQgZ2FuZ2VyIG9mIG1lbWJlcnMubWFwKChuYW1lKSA9PiAoe1xcbiAgICAgIG5hbWUsXFxuICAgICAgLi4ubnMuZ2FuZy5nZXRNZW1iZXJJbmZvcm1hdGlvbihuYW1lKSxcXG4gICAgfSkpKSB7XFxuICAgICAgY29uc3QgaGFzRXF1aXAgPSBbLi4uZ2FuZ2VyLmF1Z21lbnRhdGlvbnMsIC4uLmdhbmdlci51cGdyYWRlc107XFxuICAgICAgY29uc3QgbmVlZHMgPSBlcXVpcG1lbnQuZmlsdGVyKChlcXVpcCkgPT4gIWhhc0VxdWlwLmluY2x1ZGVzKGVxdWlwLm5hbWUpKTtcXG5cXG4gICAgICBucy5wcmludChcXG4gICAgICAgIGBnYW5nIG1lbWJlciAke2dhbmdlci5uYW1lfSBoYXM6ICR7aGFzRXF1aXAuam9pbihcXFwiLCBcXFwiKX0sIG5lZWRzOiAke25lZWRzXFxuICAgICAgICAgIC5tYXAoKGVxcCkgPT4gZXFwLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcblxcbiAgICAgIGZvciAobGV0IGVxcCBvZiBuZWVkcykge1xcbiAgICAgICAgaWYgKGVxcC5wcmljZSA8IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKFxcXCJob21lXFxcIikpIHtcXG4gICAgICAgICAgbnMudHByaW50KGBwdXJjaGFzZWQgJHtlcXAubmFtZX0gZm9yICR7Z2FuZ2VyLm5hbWV9YCk7XFxuICAgICAgICAgIG5zLmdhbmcucHVyY2hhc2VFcXVpcG1lbnQoZ2FuZ2VyLm5hbWUsIGVxcC5uYW1lKTtcXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgYXdhaXQgbnMuc2xlZXAoMjApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJnYW5nLW1nbXQtY29tYmF0LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZ2FuZy1tZ210LWNvbWJhdC5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMWY0ZjJmZjYtNzYxNC00NzdlLWExOTYtZWFmN2MwODlmNjA3XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3NDF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MjIuNyxcInNlcnZlclwiOlwiaG9tZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo5MTg5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5nZXRNZW1iZXJOYW1lc1wiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldFRhc2tOYW1lc1wiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldFRhc2tTdGF0c1wiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmNhblJlY3J1aXRNZW1iZXJcIixcImNvc3RcIjoxfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5yZWNydWl0TWVtYmVyXCIsXCJjb3N0XCI6Mn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuc2V0TWVtYmVyVGFza1wiLFwiY29zdFwiOjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldEVxdWlwbWVudE5hbWVzXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuZ2V0RXF1aXBtZW50U3RhdHNcIixcImNvc3RcIjoyfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5nZXRFcXVpcG1lbnRDb3N0XCIsXCJjb3N0XCI6Mn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuZ2V0RXF1aXBtZW50VHlwZVwiLFwiY29zdFwiOjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldE1lbWJlckluZm9ybWF0aW9uXCIsXCJjb3N0XCI6Mn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5wdXJjaGFzZUVxdWlwbWVudFwiLFwiY29zdFwiOjR9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgbWVtYmVycyA9IG5zLmdhbmcuZ2V0TWVtYmVyTmFtZXMoKTtcXG4gICAgY29uc3QgdGFza3MgPSBucy5nYW5nXFxuICAgICAgLmdldFRhc2tOYW1lcygpXFxuICAgICAgLm1hcCgobmFtZSkgPT4gbnMuZ2FuZy5nZXRUYXNrU3RhdHMobmFtZSkpO1xcblxcbiAgICBjb25zdCB0cmFpblRhc2sgPSB0YXNrcy5maW5kKCh0YXNrKSA9PiB7XFxuICAgICAgcmV0dXJuIHRhc2submFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKFxcXCJ0cmFpblxcXCIpICYmIHRhc2suaGFja1dlaWdodCA+IDA7XFxuICAgIH0pO1xcblxcbiAgICBpZiAobnMuZ2FuZy5jYW5SZWNydWl0TWVtYmVyKCkpIHtcXG4gICAgICBjb25zdCBuZXdHdXkgPSBgcjAwa2llLSR7bWVtYmVycy5sZW5ndGh9YDtcXG4gICAgICBpZiAobnMuZ2FuZy5yZWNydWl0TWVtYmVyKG5ld0d1eSkpIHtcXG4gICAgICAgIG5zLnRwcmludChcXFwibmV3IGdhbmcgbWVtYmVyIDogXFxcIiArIG5ld0d1eSk7XFxuICAgICAgICBtZW1iZXJzLnB1c2gobmV3R3V5KTtcXG4gICAgICAgIG5zLmdhbmcuc2V0TWVtYmVyVGFzayhuZXdHdXksIHRyYWluVGFzay5uYW1lKTtcXG4gICAgICB9XFxuICAgIH1cXG5cXG4gICAgY29uc3QgZXF1aXBtZW50ID0gbnMuZ2FuZ1xcbiAgICAgIC5nZXRFcXVpcG1lbnROYW1lcygpXFxuICAgICAgLm1hcCgobmFtZSkgPT4gKHsgbmFtZSwgLi4ubnMuZ2FuZy5nZXRFcXVpcG1lbnRTdGF0cyhuYW1lKSB9KSlcXG4gICAgICAubWFwKChzdGF0cykgPT4gKHtcXG4gICAgICAgIC4uLnN0YXRzLFxcbiAgICAgICAgcHJpY2U6IG5zLmdhbmcuZ2V0RXF1aXBtZW50Q29zdChzdGF0cy5uYW1lKSxcXG4gICAgICAgIHR5cGU6IG5zLmdhbmcuZ2V0RXF1aXBtZW50VHlwZShzdGF0cy5uYW1lKSxcXG4gICAgICB9KSlcXG4gICAgICAuZmlsdGVyKChzdGF0cykgPT4gc3RhdHMuaGFjayA+IDApO1xcblxcbiAgICBmb3IgKGxldCBnYW5nZXIgb2YgbWVtYmVycy5tYXAoKG5hbWUpID0+ICh7XFxuICAgICAgbmFtZSxcXG4gICAgICAuLi5ucy5nYW5nLmdldE1lbWJlckluZm9ybWF0aW9uKG5hbWUpLFxcbiAgICB9KSkpIHtcXG4gICAgICBjb25zdCBoYXNFcXVpcCA9IFsuLi5nYW5nZXIuYXVnbWVudGF0aW9ucywgLi4uZ2FuZ2VyLnVwZ3JhZGVzXTtcXG4gICAgICBjb25zdCBuZWVkcyA9IGVxdWlwbWVudC5maWx0ZXIoKGVxdWlwKSA9PiAhaGFzRXF1aXAuaW5jbHVkZXMoZXF1aXAubmFtZSkpO1xcblxcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYGdhbmcgbWVtYmVyICR7Z2FuZ2VyLm5hbWV9IGhhczogJHtoYXNFcXVpcC5qb2luKFxcXCIsIFxcXCIpfSwgbmVlZHM6ICR7bmVlZHNcXG4gICAgICAgICAgLm1hcCgoZXFwKSA9PiBlcXAubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuXFxuICAgICAgZm9yIChsZXQgZXFwIG9mIG5lZWRzKSB7XFxuICAgICAgICBpZiAoZXFwLnByaWNlIDwgbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoXFxcImhvbWVcXFwiKSkge1xcbiAgICAgICAgICBucy50cHJpbnQoYHB1cmNoYXNlZCAke2VxcC5uYW1lfSBmb3IgJHtnYW5nZXIubmFtZX1gKTtcXG4gICAgICAgICAgbnMuZ2FuZy5wdXJjaGFzZUVxdWlwbWVudChnYW5nZXIubmFtZSwgZXFwLm5hbWUpO1xcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgfVxcblxcbiAgICBhd2FpdCBucy5zbGVlcCgyMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImdhbmctbWdtdC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyMi44LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkxOTEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldE1lbWJlck5hbWVzXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuZ2V0VGFza05hbWVzXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuZ2V0VGFza1N0YXRzXCIsXCJjb3N0XCI6MX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuY2FuUmVjcnVpdE1lbWJlclwiLFwiY29zdFwiOjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLnJlY3J1aXRNZW1iZXJcIixcImNvc3RcIjoyfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5zZXRNZW1iZXJUYXNrXCIsXCJjb3N0XCI6Mn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdhbmcuZ2V0RXF1aXBtZW50TmFtZXNcIixcImNvc3RcIjoxfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5nZXRFcXVpcG1lbnRTdGF0c1wiLFwiY29zdFwiOjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldEVxdWlwbWVudENvc3RcIixcImNvc3RcIjoyfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5nZXRFcXVpcG1lbnRUeXBlXCIsXCJjb3N0XCI6Mn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnYW5nLmdldE1lbWJlckluZm9ybWF0aW9uXCIsXCJjb3N0XCI6Mn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2FuZy5wdXJjaGFzZUVxdWlwbWVudFwiLFwiY29zdFwiOjR9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcImNvbnN0IGNyaW1lcyA9IFtcXG4gIFxcXCJTaG9wbGlmdFxcXCIsXFxuICBcXFwiUm9iIFN0b3JlXFxcIixcXG4gIFxcXCJNdWdcXFwiLFxcbiAgXFxcIkxhcmNlbnlcXFwiLFxcbiAgXFxcIkRlYWwgRHJ1Z3NcXFwiLFxcbiAgXFxcIkJvbmQgRm9yZ2VyeVxcXCIsXFxuICBcXFwiVHJhZmZpY2sgQXJtc1xcXCIsXFxuICBcXFwiSG9taWNpZGVcXFwiLFxcbiAgXFxcIkdyYW5kIFRoZWZ0IEF1dG9cXFwiLFxcbiAgXFxcIktpZG5hcFxcXCIsXFxuICBcXFwiQXNzYXNzaW5hdGlvblxcXCIsXFxuICBcXFwiSGVpc3RcXFwiLFxcbl07XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgY3JpbWUgPSBucy5hcmdzLmpvaW4oXFxcIiBcXFwiKTtcXG4gIGNvbnN0IHRhcmdldCA9IC01NDAwMDtcXG4gIG5zLmRpc2FibGVMb2coXFxcIkFMTFxcXCIpO1xcbiAgbnMudGFpbCgpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMuY2xlYXJMb2coKTtcXG5cXG4gICAgY29uc3Qga2FybWEgPSBucy5oZWFydC5icmVhaygpO1xcbiAgICBpZiAoa2FybWEgPiB0YXJnZXQpXFxuICAgICAgbnMucHJpbnQoYEN1cnJlbnQgS2FybWEgOiAke2thcm1hfSwgJHsoa2FybWEgLyB0YXJnZXQpLnRvRml4ZWQoMil9JWApO1xcblxcbiAgICBjb25zdCB7IGthcm1hOiBka2FybWEsIG1vbmV5LCB0aW1lLCAuLi5zdGF0cyB9ID0gbnMuZ2V0Q3JpbWVTdGF0cyhjcmltZSk7XFxuICAgIG5zLnByaW50KGAke2NyaW1lfSwgY2hhbmNlOiAkeyhucy5nZXRDcmltZUNoYW5jZShjcmltZSkgKiAxMDAuMCkudG9GaXhlZChcXG4gICAgICAyXFxuICAgICl9JSxcXG5LYXJtYTogLSR7ZGthcm1hfSwgZHVyOiAke25zLnRGb3JtYXQodGltZSl9LCBnYWluOiAke25zLm5Gb3JtYXQoXFxuICAgICAgbW9uZXksXFxuICAgICAgXFxcIiQwLjAwMGFcXFwiXFxuICAgICl9XFxuICAgJHtKU09OLnN0cmluZ2lmeShzdGF0cywgbnVsbCwgMil9YCk7XFxuICAgIGNvbnN0IGR1ciA9IG5zLmNvbW1pdENyaW1lKGNyaW1lKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKGR1cik7XFxuICB9XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGUoZGF0YSwgYXJncykge1xcbiAgcmV0dXJuIFsuLi5jcmltZXNdO1xcbn1cIixcImZpbGVuYW1lXCI6XCIvc2luZy9jcmltZWxvb3AuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiL3NpbmcvY3JpbWVsb29wLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84ZmZmOGFjMC1jNzNiLTQ4ODAtODcyNi0zY2UxZWU3NGQ0MjVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6OTI2MH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxNi42LFwic2VydmVyXCI6XCJob21lXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjkyNjAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRDcmltZVN0YXRzXCIsXCJjb3N0XCI6NX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldENyaW1lQ2hhbmNlXCIsXCJjb3N0XCI6NX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImNvbW1pdENyaW1lXCIsXCJjb3N0XCI6NX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcIm4wMGRsZXNcIixcImZvb2Ruc3R1ZmZcIixcInNpZ21hLWNvc21ldGljc1wiLFwiam9lc2d1bnNcIixcImhvbmctZmFuZy10ZWFcIixcImhhcmFraXJpLXN1c2hpXCIsXCJpcm9uLWd5bVwiLFwiZGFya3dlYlwiLFwicHNydi0wXCIsXCJwc3J2LTFcIixcInBzcnYtMlwiLFwicHNydi0zXCIsXCJwc3J2LTRcIixcInBzcnYtNVwiLFwicHNydi02XCIsXCJwc3J2LTdcIixcInBzcnYtOFwiLFwicHNydi05XCIsXCJwc3J2LTEwXCIsXCJwc3J2LTExXCIsXCJwc3J2LTEyXCIsXCJwc3J2LTEzXCIsXCJwc3J2LTE0XCIsXCJwc3J2LTE1XCIsXCJwc3J2LTE2XCIsXCJwc3J2LTE3XCIsXCJwc3J2LTE4XCIsXCJwc3J2LTE5XCIsXCJwc3J2LTIwXCIsXCJwc3J2LTIxXCIsXCJwc3J2LTIyXCIsXCJwc3J2LTIzXCIsXCJwc3J2LTI0XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6Mi4yODYsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwiZWNvcnBcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImVjb3JwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI3OC4zLjQuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJFQ29ycFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJjbGFya2luY1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5OSxcImhhY2tEaWZmaWN1bHR5XCI6OTksXCJtaW5EaWZmaWN1bHR5XCI6MzMsXCJtb25leUF2YWlsYWJsZVwiOjUwMDU1MzYxMjI1LjUsXCJtb25leU1heFwiOjE4NzcwNzYwNDU5NS42MjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTA3NixcInNlcnZlckdyb3d0aFwiOjk5fX0sXCJtZWdhY29ycFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC00NTU3MDMtU2VjdG9yLTEyLmNjdFwiLFwidHlwZVwiOlwiVG90YWwgV2F5cyB0byBTdW1cIixcImRhdGFcIjoxOSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlNlY3Rvci0xMlwiLFwidHlwZVwiOjB9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwibWVnYWNvcnBcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ2LjEuNy41XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk1lZ2FDb3JwXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImNsYXJraW5jXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjk5LFwiaGFja0RpZmZpY3VsdHlcIjo5OSxcIm1pbkRpZmZpY3VsdHlcIjozMyxcIm1vbmV5QXZhaWxhYmxlXCI6MzIwMTUyNDI3NDguMjUsXCJtb25leU1heFwiOjEyMDA1NzE2MDMwNS45Mzc1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEzNDQsXCJzZXJ2ZXJHcm93dGhcIjo5OX19LFwiYi1hbmQtYVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC0xMDY2NDMtU2VjdG9yLTEyLmNjdFwiLFwidHlwZVwiOlwiVG90YWwgV2F5cyB0byBTdW1cIixcImRhdGFcIjo0MCxcInJld2FyZFwiOntcIm5hbWVcIjpcIlNlY3Rvci0xMlwiLFwidHlwZVwiOjB9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiYi1hbmQtYVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjQuMS41LjdcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQmFjaG1hbiAmIEFzc29jaWF0ZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiNHNpZ21hXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjczLFwiaGFja0RpZmZpY3VsdHlcIjo3MyxcIm1pbkRpZmZpY3VsdHlcIjoyNCxcIm1vbmV5QXZhaWxhYmxlXCI6MjE0OTk3NDQyMDguMjUsXCJtb25leU1heFwiOjgwNjI0MDQwNzgwLjkzNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTA3MixcInNlcnZlckdyb3d0aFwiOjYxfX0sXCJibGFkZVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiYmxhZGVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjEwLjEuMS41XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltcImJleW9uZC1tYW4ubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQmxhZGUgSW5kdXN0cmllc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCI0c2lnbWFcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6OTEsXCJoYWNrRGlmZmljdWx0eVwiOjkxLFwibWluRGlmZmljdWx0eVwiOjMwLFwibW9uZXlBdmFpbGFibGVcIjoxMTk5MTYzNTI2OC43NSxcIm1vbmV5TWF4XCI6NDQ5Njg2MzIyNTcuODEyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMTUwLFwic2VydmVyR3Jvd3RoXCI6ODB9fSxcIm53b1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwibndvXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5Ny45LjEuNlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W1widGhlLWhpZGRlbi13b3JsZC5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJOV09cIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiNHNpZ21hXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjk5LFwiaGFja0RpZmZpY3VsdHlcIjo5OSxcIm1pbkRpZmZpY3VsdHlcIjozMyxcIm1vbmV5QXZhaWxhYmxlXCI6MjEyMTkwNTM3MTgsXCJtb25leU1heFwiOjc5NTcxNDUxNDQyLjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTI5NCxcInNlcnZlckdyb3d0aFwiOjc0fX0sXCJjbGFya2luY1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC02Njk5NTEuY2N0XCIsXCJ0eXBlXCI6XCJTYW5pdGl6ZSBQYXJlbnRoZXNlcyBpbiBFeHByZXNzaW9uXCIsXCJkYXRhXCI6XCIoKClhKGEpYSkpYSlhKGEoKSgpYVwiLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6MX19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJjbGFya2luY1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiODguNS40LjhcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltcImJleW9uZC1tYW4ubGl0XCIsXCJjb3N0LW9mLWltbW9ydGFsaXR5LmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkNsYXJrZSBJbmNvcnBvcmF0ZWRcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wia3VhaS1nb25nXCIsXCJlY29ycFwiLFwibWVnYWNvcnBcIixcIlRoZS1DYXZlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjQ1LFwiaGFja0RpZmZpY3VsdHlcIjo0NSxcIm1pbkRpZmZpY3VsdHlcIjoxNSxcIm1vbmV5QXZhaWxhYmxlXCI6MTgzNDU2NDEwNjQsXCJtb25leU1heFwiOjY4Nzk2MTUzOTkwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEwOTUsXCJzZXJ2ZXJHcm93dGhcIjo3NH19LFwib21uaXRla1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwib21uaXRla1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNjMuNS4wLjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W1wiY29kZWQtaW50ZWxsaWdlbmNlLmxpdFwiLFwiaGlzdG9yeS1vZi1zeW50aG9pZHMubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiT21uaVRlayBJbmNvcnBvcmF0ZWRcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1widml0YWxpZmVcIixcInBvd2VyaG91c2UtZml0bmVzc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5MSxcImhhY2tEaWZmaWN1bHR5XCI6OTEsXCJtaW5EaWZmaWN1bHR5XCI6MzAsXCJtb25leUF2YWlsYWJsZVwiOjEwMTM5NTU2MjUzLjUsXCJtb25leU1heFwiOjM4MDIzMzM1OTUwLjYyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMDU2LFwic2VydmVyR3Jvd3RoXCI6OTZ9fSxcIjRzaWdtYVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC04NDI0NDMuY2N0XCIsXCJ0eXBlXCI6XCJNaW5pbXVtIFBhdGggU3VtIGluIGEgVHJpYW5nbGVcIixcImRhdGFcIjpbWzZdLFsxLDZdLFszLDMsNl0sWzIsNSw3LDldLFsyLDQsOSw2LDhdLFszLDUsNSw1LDksN10sWzEsMiw1LDYsOSw3LDddLFs3LDMsNCw0LDUsNCw1LDNdLFszLDQsNCw4LDcsMSwxLDcsMV1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCI0c2lnbWFcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ2LjguMy4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkZvdXIgU2lnbWFcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaGVsaW9zXCIsXCJiLWFuZC1hXCIsXCJibGFkZVwiLFwibndvXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjYwLFwiaGFja0RpZmZpY3VsdHlcIjo2MCxcIm1pbkRpZmZpY3VsdHlcIjoyMCxcIm1vbmV5QXZhaWxhYmxlXCI6MTU2MzY4MTI1MjUuMjUsXCJtb25leU1heFwiOjU4NjM4MDQ2OTY5LjY4NzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTA4NyxcInNlcnZlckdyb3d0aFwiOjg1fX0sXCJrdWFpLWdvbmdcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtODkwMzQwLmNjdFwiLFwidHlwZVwiOlwiQWxnb3JpdGhtaWMgU3RvY2sgVHJhZGVyIElcIixcImRhdGFcIjpbNjAsNjEsODAsMTIwLDE4MywxMzgsMTI5LDIzLDE2MiwzNiwxNDAsODQsMTE5LDE1NSw1Nyw5OSwzMSwxNDIsMTIzLDY2LDEyNSwxMCwxMzksMTA1LDE4OSwxNjIsOTYsNTUsMTY4LDQ2LDI2LDEyOCwxOTQsOTcsODUsMTY5LDUwLDkyLDk5LDQ4LDEwMSw2NCwxMTYsMTIsMTIyLDE1NSwxMDFdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJrdWFpLWdvbmdcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg5LjYuMC43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkt1YWlHb25nIEludGVybmF0aW9uYWxcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wic3Rvcm10ZWNoXCIsXCJjbGFya2luY1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5OSxcImhhY2tEaWZmaWN1bHR5XCI6OTksXCJtaW5EaWZmaWN1bHR5XCI6MzMsXCJtb25leUF2YWlsYWJsZVwiOjE2MjM1OTk0MTI3LjUsXCJtb25leU1heFwiOjYwODg0OTc3OTc4LjEyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMDEyLFwic2VydmVyR3Jvd3RoXCI6OTh9fSxcImZ1bGNydW10ZWNoXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTk5ODg4Ny1TZWN0b3ItMTIuY2N0XCIsXCJ0eXBlXCI6XCJBbGdvcml0aG1pYyBTdG9jayBUcmFkZXIgSUlcIixcImRhdGFcIjpbNjIsNyw4Nyw1LDE0LDE1Niw3MCwzMCw3NywxNDUsMTk1LDg1LDE2NiwxNDYsMTQxLDQyLDkwLDk4LDE1OCw2OCwxNTksNzIsMTUyLDE1OCwxMSwxOF0sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJTZWN0b3ItMTJcIixcInR5cGVcIjowfX19LHtcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTk1NDc2NS5jY3RcIixcInR5cGVcIjpcIkFsZ29yaXRobWljIFN0b2NrIFRyYWRlciBJXCIsXCJkYXRhXCI6WzE4LDEzNyw5MSwxMjcsOTksMTE2LDEwNyw5NywxNzMsMTI0LDQ5LDU3LDk4LDEwMiwxNTQsMTIsMTNdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJmdWxjcnVtdGVjaFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNTQuNi4xLjRcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjUxMixcIm1lc3NhZ2VzXCI6W1wic2ltdWxhdGVkLXJlYWxpdHkubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiRnVsY3J1bSBUZWNobm9sb2dpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicnVuNHRoZWgxMTF6XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjkyLFwiaGFja0RpZmZpY3VsdHlcIjo5MixcIm1pbkRpZmZpY3VsdHlcIjozMSxcIm1vbmV5QXZhaWxhYmxlXCI6MTMxMTc5NjAxMS43NSxcIm1vbmV5TWF4XCI6NDkxOTIzNTA0NC4wNjI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEwNTYsXCJzZXJ2ZXJHcm93dGhcIjo4OH19LFwiZnVsY3J1bWFzc2V0c1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiZnVsY3J1bWFzc2V0c1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjUuMS40LjJcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiRnVsY3J1bSBUZWNobm9sb2dpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicG93ZXJob3VzZS1maXRuZXNzXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjk5LFwiaGFja0RpZmZpY3VsdHlcIjo5OSxcIm1pbkRpZmZpY3VsdHlcIjozMyxcIm1vbmV5QXZhaWxhYmxlXCI6NzUwMDAwLFwibW9uZXlNYXhcIjoyODEyNTAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEzMjgsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJzdG9ybXRlY2hcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInN0b3JtdGVjaFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMi4wLjguN1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTdG9ybSBUZWNobm9sb2dpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiYXBwbGllZC1lbmVyZ2V0aWNzXCIsXCJrdWFpLWdvbmdcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NzgsXCJoYWNrRGlmZmljdWx0eVwiOjc4LFwibWluRGlmZmljdWx0eVwiOjI2LFwibW9uZXlBdmFpbGFibGVcIjo3NzcyMTA2NjguMjUsXCJtb25leU1heFwiOjI5MTQ1NDAwMDUuOTM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5NDgsXCJzZXJ2ZXJHcm93dGhcIjo4Mn19LFwiZGVmY29tbVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC01NzAxNjYuY2N0XCIsXCJ0eXBlXCI6XCJUb3RhbCBXYXlzIHRvIFN1bVwiLFwiZGF0YVwiOjM2LFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6MX19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJkZWZjb21tXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5Ni44LjguMFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJEZWZDb21tXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcIm9tbmlhXCIsXCJpbmZvY29tbVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo5MSxcImhhY2tEaWZmaWN1bHR5XCI6OTEsXCJtaW5EaWZmaWN1bHR5XCI6MzAsXCJtb25leUF2YWlsYWJsZVwiOjYyMzU2NjcxNixcIm1vbmV5TWF4XCI6MjMzODM3NTE4NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMDAxLFwic2VydmVyR3Jvd3RoXCI6NjV9fSxcImluZm9jb21tXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTc1MDU1Ny5jY3RcIixcInR5cGVcIjpcIkdlbmVyYXRlIElQIEFkZHJlc3Nlc1wiLFwiZGF0YVwiOlwiMjUzMjExNjQxNjlcIixcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiaW5mb2NvbW1cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjExLjYuOS43XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkluZm9Db21tXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImRlZmNvbW1cIixcInJ1bjR0aGVoMTExelwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo4NSxcImhhY2tEaWZmaWN1bHR5XCI6ODUsXCJtaW5EaWZmaWN1bHR5XCI6MjgsXCJtb25leUF2YWlsYWJsZVwiOjU1MjA5MzI5OC41LFwibW9uZXlNYXhcIjoyMDcwMzQ5ODY5LjM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NzUsXCJzZXJ2ZXJHcm93dGhcIjo3NX19LFwiaGVsaW9zXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTMyNDA2Ni5jY3RcIixcInR5cGVcIjpcIkFsZ29yaXRobWljIFN0b2NrIFRyYWRlciBJXCIsXCJkYXRhXCI6WzE2MCwxNjEsNDUsNTQsOTksNTUsNDEsMTA0LDExMCwxNDQsNDYsMTg0LDM1LDkwLDU0LDEwLDYsNzcsMTQ1LDEzMyw2OSwxODIsMzUsMjUsMjksMTI5LDE3LDEzMCw0OSwxNzMsMTEwLDQ2LDEyNSwxMTcsMTU4LDQ2LDE5Nyw4MCwxMjAsNTYsNywyOCw2Nyw3OSwxMTAsMTJdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJoZWxpb3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI4LjguOS45XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltcImJleW9uZC1tYW4ubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSGVsaW9zIExhYnNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wibWljcm9keW5lXCIsXCI0c2lnbWFcIixcIi5cIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODksXCJoYWNrRGlmZmljdWx0eVwiOjg5LFwibWluRGlmZmljdWx0eVwiOjMwLFwibW9uZXlBdmFpbGFibGVcIjo1Mzk2Njc2MjUuNSxcIm1vbmV5TWF4XCI6MjAyMzc1MzU5NS42MjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODkwLFwic2VydmVyR3Jvd3RoXCI6NzV9fSxcInZpdGFsaWZlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ2aXRhbGlmZVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjAuOS43LjJcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXCJBLUdyZWVuLVRvbW9ycm93LmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlZpdGFMaWZlXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInRpdGFuLWxhYnNcIixcIm9tbml0ZWtcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODgsXCJoYWNrRGlmZmljdWx0eVwiOjg4LFwibWluRGlmZmljdWx0eVwiOjI5LFwibW9uZXlBdmFpbGFibGVcIjo1OTQxNjEyMjguMjUsXCJtb25leU1heFwiOjIyMjgxMDQ2MDUuOTM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MzksXCJzZXJ2ZXJHcm93dGhcIjo2NH19LFwiaWNhcnVzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTY1Mzk3MS5jY3RcIixcInR5cGVcIjpcIkZpbmQgTGFyZ2VzdCBQcmltZSBGYWN0b3JcIixcImRhdGFcIjo1MTE5MzYxMjEsXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjozfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImljYXJ1c1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTcuOC40LjdcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSWNhcnVzIE1pY3Jvc3lzdGVtc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJkZWx0YW9uZVwiLFwidGFpeWFuZy1kaWdpdGFsXCIsXCJ6Yi1kZWZcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODcsXCJoYWNrRGlmZmljdWx0eVwiOjg3LFwibWluRGlmZmljdWx0eVwiOjI5LFwibW9uZXlBdmFpbGFibGVcIjo3MDE5OTcxNDcsXCJtb25leU1heFwiOjI2MzI0ODkzMDEuMjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODc3LFwic2VydmVyR3Jvd3RoXCI6OTF9fSxcInVuaXYtZW5lcmd5XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ1bml2LWVuZXJneVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMTAuMy42LjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjY0LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlVuaXZlcnNhbCBFbmVyZ3lcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiZGVsdGFvbmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODUsXCJoYWNrRGlmZmljdWx0eVwiOjg1LFwibWluRGlmZmljdWx0eVwiOjI4LFwibW9uZXlBdmFpbGFibGVcIjo4NDk2Nzg4OTQsXCJtb25leU1heFwiOjMxODYyOTU4NTIuNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MDksXCJzZXJ2ZXJHcm93dGhcIjo4MH19LFwidGl0YW4tbGFic1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC04MjEzNy5jY3RcIixcInR5cGVcIjpcIkZpbmQgTGFyZ2VzdCBQcmltZSBGYWN0b3JcIixcImRhdGFcIjoyMjkwNDIzNjgsXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjozfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInRpdGFuLWxhYnNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ2LjIuMC4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltcImNvZGVkLWludGVsbGlnZW5jZS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJUaXRhbiBMYWJvcmF0b3JpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1widGFpeWFuZy1kaWdpdGFsXCIsXCJ2aXRhbGlmZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3MCxcImhhY2tEaWZmaWN1bHR5XCI6NzAsXCJtaW5EaWZmaWN1bHR5XCI6MjMsXCJtb25leUF2YWlsYWJsZVwiOjY1NTI1NjA5OC41LFwibW9uZXlNYXhcIjoyNDU3MjEwMzY5LjM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MjMsXCJzZXJ2ZXJHcm93dGhcIjo3NX19LFwibWljcm9keW5lXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTQzOTMxOC5jY3RcIixcInR5cGVcIjpcIkFsZ29yaXRobWljIFN0b2NrIFRyYWRlciBJXCIsXCJkYXRhXCI6WzczLDc1LDIwMCw3Niw4NywxOTAsNjMsNzEsMzYsNDgsNzAsOTQsMTM4LDE0LDExOSw2LDY5LDY5LDk4LDE3OSw5Myw2LDE1Miw0NiwxODVdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fSx7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC00NDgxODAuY2N0XCIsXCJ0eXBlXCI6XCJNZXJnZSBPdmVybGFwcGluZyBJbnRlcnZhbHNcIixcImRhdGFcIjpbWzgsMTVdLFsyMSwyM10sWzE0LDE4XSxbMTEsMTZdLFsyMCwyNl0sWzE2LDI2XSxbOCwxN10sWzMsN10sWzIsNF0sWzIsM10sWzE5LDI2XSxbNiwxMV0sWzksMTVdLFsxNCwyM10sWzMsNF1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJtaWNyb2R5bmVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjUyLjQuOS44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wic3ludGhldGljLW11c2NsZXMubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTWljcm9keW5lIFRlY2hub2xvZ2llc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJub3ZhLW1lZFwiLFwiaGVsaW9zXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjY2LFwiaGFja0RpZmZpY3VsdHlcIjo2NixcIm1pbkRpZmZpY3VsdHlcIjoyMixcIm1vbmV5QXZhaWxhYmxlXCI6NDkwNjgzNTIwLjUsXCJtb25leU1heFwiOjE4NDAwNjMyMDEuODc1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjg1NSxcInNlcnZlckdyb3d0aFwiOjg0fX0sXCJ0YWl5YW5nLWRpZ2l0YWxcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInRhaXlhbmctZGlnaXRhbFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMzYuNC4wLjFcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltcIkEtR3JlZW4tVG9tb3Jyb3cubGl0XCIsXCJicmlnaHRlci10aGFuLXRoZS1zdW4ubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiVGFpeWFuZyBEaWdpdGFsXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImljYXJ1c1wiLFwidGl0YW4tbGFic1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3NCxcImhhY2tEaWZmaWN1bHR5XCI6NzQsXCJtaW5EaWZmaWN1bHR5XCI6MjUsXCJtb25leUF2YWlsYWJsZVwiOjYxNzIyMzA4NC43NSxcIm1vbmV5TWF4XCI6MjMxNDU4NjU2Ny44MTI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjg3NixcInNlcnZlckdyb3d0aFwiOjc3fX0sXCJnYWxhY3RpYy1jeWJlclwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiZ2FsYWN0aWMtY3liZXJcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg3LjMuNS42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkdhbGFjdGljIEN5YmVyc3lzdGVtc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJhZXZ1bS1wb2xpY2VcIixcIm9tbmlhXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjY0LFwiaGFja0RpZmZpY3VsdHlcIjo2NCxcIm1pbkRpZmZpY3VsdHlcIjoyMSxcIm1vbmV5QXZhaWxhYmxlXCI6NTk2ODc4MjM5Ljc1LFwibW9uZXlNYXhcIjoyMjM4MjkzMzk5LjA2MjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODY5LFwic2VydmVyR3Jvd3RoXCI6ODR9fSxcImFlcm9jb3JwXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhZXJvY29ycFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjIuMC4wLjFcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltcIm1hbi1hbmQtbWFjaGluZS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJBZXJvQ29ycFwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJyaG8tY29uc3RydWN0aW9uXCIsXCJ1bml0YWxpZmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODksXCJoYWNrRGlmZmljdWx0eVwiOjg5LFwibWluRGlmZmljdWx0eVwiOjMwLFwibW9uZXlBdmFpbGFibGVcIjo4NDU2NDQwNDAuMjUsXCJtb25leU1heFwiOjMxNzExNjUxNTAuOTM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NTEsXCJzZXJ2ZXJHcm93dGhcIjo2NH19LFwib21uaWFcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIm9tbmlhXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4LjguOC40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo2NCxcIm1lc3NhZ2VzXCI6W1wiaGlzdG9yeS1vZi1zeW50aG9pZHMubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiT21uaWEgQ3liZXJzeXN0ZW1zXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImdhbGFjdGljLWN5YmVyXCIsXCJkZWZjb21tXCIsXCJ6ZXVzLW1lZFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo4NixcImhhY2tEaWZmaWN1bHR5XCI6ODYsXCJtaW5EaWZmaWN1bHR5XCI6MjksXCJtb25leUF2YWlsYWJsZVwiOjcyNDExMzMxNSxcIm1vbmV5TWF4XCI6MjcxNTQyNDkzMS4yNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MDIsXCJzZXJ2ZXJHcm93dGhcIjo2MH19LFwiemItZGVmXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ6Yi1kZWZcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjEzLjAuOC42XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXCJzeW50aGV0aWMtbXVzY2xlcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJaQiBEZWZlbnNlIEluZHVzdHJpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaWNhcnVzXCIsXCJhcHBsaWVkLWVuZXJnZXRpY3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NTgsXCJoYWNrRGlmZmljdWx0eVwiOjU4LFwibWluRGlmZmljdWx0eVwiOjE5LFwibW9uZXlBdmFpbGFibGVcIjo3MjIxNTcyNjkuMjUsXCJtb25leU1heFwiOjI3MDgwODk3NTkuNjg3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MjQsXCJzZXJ2ZXJHcm93dGhcIjo3Mn19LFwiYXBwbGllZC1lbmVyZ2V0aWNzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhcHBsaWVkLWVuZXJnZXRpY3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjAuNy4wLjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQXBwbGllZCBFbmVyZ2V0aWNzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInpiLWRlZlwiLFwic3Rvcm10ZWNoXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjc1LFwiaGFja0RpZmZpY3VsdHlcIjo3NSxcIm1pbkRpZmZpY3VsdHlcIjoyNSxcIm1vbmV5QXZhaWxhYmxlXCI6NjI0MDEyNjQxLjI1LFwibW9uZXlNYXhcIjoyMzQwMDQ3NDA0LjY4NzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODQxLFwic2VydmVyR3Jvd3RoXCI6NzN9fSxcInNvbGFyaXNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInNvbGFyaXNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjkzLjMuMy4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W1wiQS1HcmVlbi1Ub21vcnJvdy5saXRcIixcInRoZS1mYWlsZWQtZnJvbnRpZXIubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiU29sYXJpcyBTcGFjZSBTeXN0ZW1zXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInVuaXRhbGlmZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3OCxcImhhY2tEaWZmaWN1bHR5XCI6NzgsXCJtaW5EaWZmaWN1bHR5XCI6MjYsXCJtb25leUF2YWlsYWJsZVwiOjU3NzA2MzEwMi41LFwibW9uZXlNYXhcIjoyMTYzOTg2NjM0LjM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo3OTksXCJzZXJ2ZXJHcm93dGhcIjo3NX19LFwiZGVsdGFvbmVcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtMjA3Nzk4LmNjdFwiLFwidHlwZVwiOlwiQWxnb3JpdGhtaWMgU3RvY2sgVHJhZGVyIElWXCIsXCJkYXRhXCI6WzMsWzEwNiwzNSwxMjksMTQyLDExLDE1MywxNSwxNzUsMjIsOTYsMTcyLDE2Nl1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6MX19fSx7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC02MDI3MjQuY2N0XCIsXCJ0eXBlXCI6XCJNZXJnZSBPdmVybGFwcGluZyBJbnRlcnZhbHNcIixcImRhdGFcIjpbWzE1LDI1XSxbMTMsMTddLFsxMywxOV0sWzMsOF0sWzEyLDIxXSxbNSwxMl0sWzE0LDE4XSxbMjIsMjddLFs0LDE0XSxbMjEsMjVdXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX0se1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNjQwMjQuY2N0XCIsXCJ0eXBlXCI6XCJBbGdvcml0aG1pYyBTdG9jayBUcmFkZXIgSVwiLFwiZGF0YVwiOlszNCw5OCw2MSwzMCwxMjEsNjIsMTMyLDE0NiwxMDQsMTU0LDE0MywxODAsNTAsMTIxLDQsOTUsMTY1LDE4MCw5NiwxNDIsNDUsMTE3LDE2MCwxMjMsNDUsMTY0LDEyMiwxNjUsMTc5LDE1MCwxMTYsMTc1LDEzNiwxODMsMjgsMTcwLDE2M10sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjozfX19LHtcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTk5NDA4NS5jY3RcIixcInR5cGVcIjpcIkZpbmQgTGFyZ2VzdCBQcmltZSBGYWN0b3JcIixcImRhdGFcIjo3ODQzMTk5MDUsXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjoxfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcImRlbHRhb25lXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1LjguOS4zXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkRlbHRhT25lXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImdsb2JhbC1waGFybVwiLFwiaWNhcnVzXCIsXCJ1bml2LWVuZXJneVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3OSxcImhhY2tEaWZmaWN1bHR5XCI6NzksXCJtaW5EaWZmaWN1bHR5XCI6MjYsXCJtb25leUF2YWlsYWJsZVwiOjExMjA0OTE5MzguMjUsXCJtb25leU1heFwiOjQyMDE4NDQ3NjguNDM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4NzksXCJzZXJ2ZXJHcm93dGhcIjo1MH19LFwiZ2xvYmFsLXBoYXJtXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJnbG9iYWwtcGhhcm1cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjYuOS43LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXCJBLUdyZWVuLVRvbW9ycm93LmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkdsb2JhbCBQaGFybWFjZXV0aWNhbHNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wicmhvLWNvbnN0cnVjdGlvblwiLFwiZGVsdGFvbmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NzcsXCJoYWNrRGlmZmljdWx0eVwiOjc3LFwibWluRGlmZmljdWx0eVwiOjI2LFwibW9uZXlBdmFpbGFibGVcIjoxMjAyOTE1NTUzLjc1LFwibW9uZXlNYXhcIjo0NTEwOTMzMzI2LjU2MjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODE3LFwic2VydmVyR3Jvd3RoXCI6ODR9fSxcIm5vdmEtbWVkXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJub3ZhLW1lZFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjAuMy4xLjZcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTm92YSBNZWRpY2FsXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInpldXMtbWVkXCIsXCJtaWNyb2R5bmVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjYsXCJoYWNrRGlmZmljdWx0eVwiOjY2LFwibWluRGlmZmljdWx0eVwiOjIyLFwibW9uZXlBdmFpbGFibGVcIjo5MDUzNTA3NTIuNzUsXCJtb25leU1heFwiOjMzOTUwNjUzMjIuODEyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MjYsXCJzZXJ2ZXJHcm93dGhcIjo2Nn19LFwiemV1cy1tZWRcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNTQ1MDI4LVNlY3Rvci0xMi5jY3RcIixcInR5cGVcIjpcIlRvdGFsIFdheXMgdG8gU3VtXCIsXCJkYXRhXCI6ODgsXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJTZWN0b3ItMTJcIixcInR5cGVcIjowfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInpldXMtbWVkXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIyMS44LjYuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJaZXVzIE1lZGljYWxcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wib21uaWFcIixcIm5vdmEtbWVkXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjc0LFwiaGFja0RpZmZpY3VsdHlcIjo3NCxcIm1pbkRpZmZpY3VsdHlcIjoyNSxcIm1vbmV5QXZhaWxhYmxlXCI6OTc3NTQxNTE4LjI1LFwibW9uZXlNYXhcIjozNjY1NzgwNjkzLjQzNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6ODM5LFwic2VydmVyR3Jvd3RoXCI6ODB9fSxcInVuaXRhbGlmZVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC01NTQ1NzEuY2N0XCIsXCJ0eXBlXCI6XCJGaW5kIEFsbCBWYWxpZCBNYXRoIEV4cHJlc3Npb25zXCIsXCJkYXRhXCI6W1wiODM3MjY4N1wiLC04M10sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjoxfX19LHtcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTIwMTMyMC5jY3RcIixcInR5cGVcIjpcIlVuaXF1ZSBQYXRocyBpbiBhIEdyaWQgSUlcIixcImRhdGFcIjpbWzAsMCwwLDEsMCwwLDAsMCwwLDAsMV0sWzAsMCwwLDAsMCwwLDAsMSwwLDAsMV0sWzAsMCwwLDAsMCwwLDEsMCwwLDAsMF0sWzEsMCwwLDAsMCwwLDEsMCwwLDAsMF0sWzAsMCwwLDAsMCwwLDAsMCwwLDAsMF0sWzEsMCwwLDAsMCwwLDAsMCwwLDAsMF1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6MX19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJ1bml0YWxpZmVcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjcyLjQuMy45XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo2NCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJVbml0YUxpZmUgR3JvdXBcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiYWVyb2NvcnBcIixcInNvbGFyaXNcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6ODAsXCJoYWNrRGlmZmljdWx0eVwiOjgwLFwibWluRGlmZmljdWx0eVwiOjI3LFwibW9uZXlBdmFpbGFibGVcIjo3NjI2MTAzMjYuNzUsXCJtb25leU1heFwiOjI4NTk3ODg3MjUuMzEyNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MjQsXCJzZXJ2ZXJHcm93dGhcIjo3NX19LFwibGV4by1jb3JwXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTYzNjI0MS5jY3RcIixcInR5cGVcIjpcIkFsZ29yaXRobWljIFN0b2NrIFRyYWRlciBJXCIsXCJkYXRhXCI6WzY2LDE0MywxNiwxOTIsMTkxLDE0NywxMiw4OCwxNjYsMTUxLDEzLDU2LDcxLDIsNDMsMTcwLDE3MCwxNiw1MSwxMzMsMTg3LDEyOSwxODZdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJsZXhvLWNvcnBcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjEyLjIuMy44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxMjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTGV4b0NvcnBcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wic3VtbWl0LXVuaVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo2MCxcImhhY2tEaWZmaWN1bHR5XCI6NjAsXCJtaW5EaWZmaWN1bHR5XCI6MjAsXCJtb25leUF2YWlsYWJsZVwiOjU1MDQxMDkxNC4yNSxcIm1vbmV5TWF4XCI6MjA2NDA0MDkyOC40Mzc1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo0LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjY5NCxcInNlcnZlckdyb3d0aFwiOjU5fX0sXCJyaG8tY29uc3RydWN0aW9uXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJyaG8tY29uc3RydWN0aW9uXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI3Ny4yLjEuN1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MzIsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiUmhvIENvbnN0cnVjdGlvblwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJzdW1taXQtdW5pXCIsXCJhZXJvY29ycFwiLFwiZ2xvYmFsLXBoYXJtXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjQ3LFwiaGFja0RpZmZpY3VsdHlcIjo0NyxcIm1pbkRpZmZpY3VsdHlcIjoxNixcIm1vbmV5QXZhaWxhYmxlXCI6NDk2MjkzNzY0LjI1LFwibW9uZXlNYXhcIjoxODYxMTAxNjE1LjkzNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjMsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NDg5LFwic2VydmVyR3Jvd3RoXCI6NDZ9fSxcImFscGhhLWVudFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC02MTY3Ny5jY3RcIixcInR5cGVcIjpcIlVuaXF1ZSBQYXRocyBpbiBhIEdyaWQgSUlcIixcImRhdGFcIjpbWzAsMCwwLDAsMF0sWzAsMCwwLDAsMF0sWzAsMCwwLDAsMF0sWzAsMCwwLDEsMF0sWzAsMSwwLDAsMF0sWzAsMCwwLDAsMF1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6MX19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhbHBoYS1lbnRcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjU5LjIuNS41XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wic2VjdG9yLTEyLWNyaW1lLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkFscGhhIEVudGVycHJpc2VzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcInJvdGhtYW4tdW5pXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjYzLFwiaGFja0RpZmZpY3VsdHlcIjo2MyxcIm1pbkRpZmZpY3VsdHlcIjoyMSxcIm1vbmV5QXZhaWxhYmxlXCI6NTIxNjA4Njk1LFwibW9uZXlNYXhcIjoxOTU2MDMyNjA2LjI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo0LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjU1NSxcInNlcnZlckdyb3d0aFwiOjU3fX0sXCJhZXZ1bS1wb2xpY2VcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNTQ0ODMzLmNjdFwiLFwidHlwZVwiOlwiRmluZCBMYXJnZXN0IFByaW1lIEZhY3RvclwiLFwiZGF0YVwiOjQ0MzU0MzIxLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fSx7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC04ODU1NDQuY2N0XCIsXCJ0eXBlXCI6XCJVbmlxdWUgUGF0aHMgaW4gYSBHcmlkIElJXCIsXCJkYXRhXCI6W1swLDAsMSwxLDAsMCwwLDAsMF0sWzAsMCwwLDAsMCwwLDAsMCwwXSxbMCwwLDAsMCwwLDAsMCwwLDBdLFswLDEsMCwxLDAsMCwwLDEsMF0sWzAsMCwwLDAsMCwwLDAsMSwwXV0sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjozfX19LHtcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTgxODkxLmNjdFwiLFwidHlwZVwiOlwiQWxnb3JpdGhtaWMgU3RvY2sgVHJhZGVyIElJXCIsXCJkYXRhXCI6WzExOSw1Miw5MCw2LDEzMCwxNSw0OCw1Niw0MSwyLDg2LDM3LDE2LDEyLDE2OSwyMDAsNzgsMzIsNDFdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6MX19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJhZXZ1bS1wb2xpY2VcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI2LjIuMS40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJBZXZ1bSBQb2xpY2UgSGVhZHF1YXJ0ZXJzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImNhdGFseXN0XCIsXCJnYWxhY3RpYy1jeWJlclwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo3NyxcImhhY2tEaWZmaWN1bHR5XCI6NzcsXCJtaW5EaWZmaWN1bHR5XCI6MjYsXCJtb25leUF2YWlsYWJsZVwiOjE2NTE1NDE4MS4yNSxcIm1vbmV5TWF4XCI6NjE5MzI4MTc5LjY4NzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NDMxLFwic2VydmVyR3Jvd3RoXCI6NDl9fSxcInJvdGhtYW4tdW5pXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTM3MDA0LmNjdFwiLFwidHlwZVwiOlwiU3BpcmFsaXplIE1hdHJpeFwiLFwiZGF0YVwiOltbMTNdLFszMV0sWzIwXSxbMjFdLFsyOF0sWzQzXSxbMjRdLFszNF0sWzUwXSxbMjRdLFs0Ml1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fSx7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC00NDgxODcuY2N0XCIsXCJ0eXBlXCI6XCJBbGdvcml0aG1pYyBTdG9jayBUcmFkZXIgSVZcIixcImRhdGFcIjpbMixbMTIzLDEsODksNiw5NSwzNSwxMjEsNTAsODksMzQsMTE5LDE3MSw3Niw5NCwxMzksMTA3LDE5OCw1OSwxNzksMTk5LDQ2LDE1NCwxNTUsMTAsMiwxMjQsMTEwLDE0MCwzLDE0OV1dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJyb3RobWFuLXVuaVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMzUuMC4yLjlcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjE2LFwibWVzc2FnZXNcIjpbXCJzZWNyZXQtc29jaWV0aWVzLmxpdFwiLFwidGhlLWZhaWxlZC1mcm9udGllci5saXRcIixcInRlbnNpb25zLWluLXRlY2gtcmFjZS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJSb3RobWFuIFVuaXZlcnNpdHlcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiam9obnNvbi1vcnRob1wiLFwiYWxwaGEtZW50XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjQ3LFwiaGFja0RpZmZpY3VsdHlcIjo0NyxcIm1pbkRpZmZpY3VsdHlcIjoxNixcIm1vbmV5QXZhaWxhYmxlXCI6MTU2MjcwNjUzLjI1LFwibW9uZXlNYXhcIjo1ODYwMTQ5NDkuNjg3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MyxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjozOTksXCJzZXJ2ZXJHcm93dGhcIjozOH19LFwiemItaW5zdGl0dXRlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTY0NjA1My5jY3RcIixcInR5cGVcIjpcIkdlbmVyYXRlIElQIEFkZHJlc3Nlc1wiLFwiZGF0YVwiOlwiMTUyMDYxNDAxODRcIixcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiemItaW5zdGl0dXRlXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5NC4yLjUuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiWkIgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3lcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1widGhlLWh1YlwiLFwibWlsbGVuaXVtLWZpdG5lc3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NzIsXCJoYWNrRGlmZmljdWx0eVwiOjcyLFwibWluRGlmZmljdWx0eVwiOjI0LFwibW9uZXlBdmFpbGFibGVcIjo4MDE3ODQzOTUsXCJtb25leU1heFwiOjMwMDY2OTE0ODEuMjUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NzMzLFwic2VydmVyR3Jvd3RoXCI6NzV9fSxcInN1bW1pdC11bmlcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInN1bW1pdC11bmlcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjU4LjIuMC44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1wic2VjcmV0LXNvY2lldGllcy5saXRcIixcInRoZS1mYWlsZWQtZnJvbnRpZXIubGl0XCIsXCJzeW50aGV0aWMtbXVzY2xlcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTdW1taXQgVW5pdmVyc2l0eVwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJjb21wdGVrXCIsXCJsZXhvLWNvcnBcIixcInJoby1jb25zdHJ1Y3Rpb25cIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NTksXCJoYWNrRGlmZmljdWx0eVwiOjU5LFwibWluRGlmZmljdWx0eVwiOjIwLFwibW9uZXlBdmFpbGFibGVcIjoxOTYyOTk2MjYuMjUsXCJtb25leU1heFwiOjczNjEyMzU5OC40Mzc1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjozLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjQ1MyxcInNlcnZlckdyb3d0aFwiOjQ4fX0sXCJzeXNjb3JlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJzeXNjb3JlXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5OC4zLjcuMFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTeXNDb3JlIFNlY3VyaXRpZXNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiYXZtbml0ZS0wMmhcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjgsXCJoYWNrRGlmZmljdWx0eVwiOjY4LFwibWluRGlmZmljdWx0eVwiOjIzLFwibW9uZXlBdmFpbGFibGVcIjo0MDI4NTE4NzYuMjUsXCJtb25leU1heFwiOjE1MTA2OTQ1MzUuOTM3NSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo1NjgsXCJzZXJ2ZXJHcm93dGhcIjo2Mn19LFwiY2F0YWx5c3RcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNTc2Mzg1LmNjdFwiLFwidHlwZVwiOlwiRmluZCBMYXJnZXN0IFByaW1lIEZhY3RvclwiLFwiZGF0YVwiOjI5ODQ2MzczMSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjF9fX0se1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtMzI0NzMtU2VjdG9yLTEyLmNjdFwiLFwidHlwZVwiOlwiU3BpcmFsaXplIE1hdHJpeFwiLFwiZGF0YVwiOltbNTAsMzBdLFs0MywyXSxbNDcsMzNdLFszNSw0M10sWzMxLDddLFsyMSw1MF0sWzQ1LDQwXSxbNCwzNV0sWzI4LDddLFs0MywxNF0sWzMsMTZdLFsyMCwxNV0sWzE2LDQyXSxbNCwxMV0sWzMsMzldXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlNlY3Rvci0xMlwiLFwidHlwZVwiOjB9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwiY2F0YWx5c3RcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI0LjIuMS4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo2NCxcIm1lc3NhZ2VzXCI6W1widGVuc2lvbnMtaW4tdGVjaC1yYWNlLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkNhdGFseXN0IFZlbnR1cmVzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImpvaG5zb24tb3J0aG9cIixcImFldnVtLXBvbGljZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo2MSxcImhhY2tEaWZmaWN1bHR5XCI6NjEsXCJtaW5EaWZmaWN1bHR5XCI6MjAsXCJtb25leUF2YWlsYWJsZVwiOjM2MjY4MDE4MixcIm1vbmV5TWF4XCI6MTM2MDA1MDY4Mi41LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjozLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjQwOCxcInNlcnZlckdyb3d0aFwiOjU0fX0sXCJ0aGUtaHViXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTQyNTk2OS5jY3RcIixcInR5cGVcIjpcIk1lcmdlIE92ZXJsYXBwaW5nIEludGVydmFsc1wiLFwiZGF0YVwiOltbMjUsMzBdLFsxLDExXSxbMjIsMjldLFsyMCwzMF0sWzE0LDIxXSxbMTYsMTddLFs2LDEwXSxbNywxM10sWzI1LDMzXSxbMTUsMjBdLFszLDVdLFsyMSwyM10sWzE0LDE3XSxbMTcsMjNdLFs3LDE2XSxbMjUsMjldLFsyMSwyOF0sWzcsMTJdLFs0LDZdXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX0se1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtODY4NTk2LmNjdFwiLFwidHlwZVwiOlwiQWxnb3JpdGhtaWMgU3RvY2sgVHJhZGVyIElWXCIsXCJkYXRhXCI6WzIsWzE3MiwxOTIsMzQsMTg2LDk1LDEwM11dLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOnRydWUsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwidGhlLWh1YlwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiODQuMS43LjZcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjgsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiVGhlIEh1YlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjo3LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDU3LDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjUwMS4zODM1ODMxMjk1OTk5NyxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNjA5OTk5OTk2MzkyLFwicGlkXCI6NTEsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInRoZS1odWJcIixcInRocmVhZHNcIjozLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNkOWMxNDhiLWRiOGEtNDM2OC04YjdhLTk0ZGM3YjMwMTFkN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxMzMyfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjE4OCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwidGhlLWh1YlwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwidGhlLWh1YlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMTcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInRoZS1odWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzE4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85OGZiMmFkNC05NzVmLTQ2ZDgtYWUzNy1lMjMwZGNkZWQxZGVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczMH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJ0aGUtaHViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MzAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInRoZS1odWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzIwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzc1MGMwY2EzLWJlYjktNDQ4ZS05NDU5LTI4MDlhMDgyNmI2OFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQxOX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJ0aGUtaHViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDE5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJ0aGUtaHViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMyMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwidGhlLWh1YlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMjMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wib21lZ2EtbmV0XCIsXCJ6Yi1pbnN0aXR1dGVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo0MyxcImhhY2tEaWZmaWN1bHR5XCI6NDMsXCJtaW5EaWZmaWN1bHR5XCI6MTQsXCJtb25leUF2YWlsYWJsZVwiOjEzNDc5Mjc5OC4yNSxcIm1vbmV5TWF4XCI6NTA1NDcyOTkzLjQzNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjIsXCJvcGVuUG9ydENvdW50XCI6MixcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MzE4LFwic2VydmVyR3Jvd3RoXCI6NTV9fSxcImNvbXB0ZWtcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtMjYwNTY2LVNlY3Rvci0xMi5jY3RcIixcInR5cGVcIjpcIlNhbml0aXplIFBhcmVudGhlc2VzIGluIEV4cHJlc3Npb25cIixcImRhdGFcIjpcIigoKCgpKCgoKCkpKChhKShcIixcInJld2FyZFwiOntcIm5hbWVcIjpcIlNlY3Rvci0xMlwiLFwidHlwZVwiOjB9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjp0cnVlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImNvbXB0ZWtcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjgwLjAuMi44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXCJtYW4tYW5kLW1hY2hpbmUubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQ29tcHVUZWtcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImNvbXB0ZWtcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzI0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJjb21wdGVrXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMyNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJjb21wdGVrXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMyNixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiY29tcHRla1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMjcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJjb21wdGVrXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMyOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiY29tcHRla1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMjksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImNvbXB0ZWtcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzMwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcInNpbHZlci1oZWxpeFwiLFwic3VtbWl0LXVuaVwiXSxcInNtdHBQb3J0T3BlblwiOnRydWUsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjp0cnVlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjUsXCJoYWNrRGlmZmljdWx0eVwiOjY1LFwibWluRGlmZmljdWx0eVwiOjIyLFwibW9uZXlBdmFpbGFibGVcIjoxODU3Njk3OTguNzUsXCJtb25leU1heFwiOjY5NjYzNjc0NS4zMTI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjozLFwib3BlblBvcnRDb3VudFwiOjMsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjM1MSxcInNlcnZlckdyb3d0aFwiOjQ5fX0sXCJuZXRsaW5rXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJuZXRsaW5rXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI3Ny4zLjYuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTI4LFwibWVzc2FnZXNcIjpbXCJzaW11bGF0ZWQtcmVhbGl0eS5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJOZXRMaW5rIFRlY2hub2xvZ2llc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJzaWx2ZXItaGVsaXhcIixcIkkuSS5JLklcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NjAsXCJoYWNrRGlmZmljdWx0eVwiOjYwLFwibWluRGlmZmljdWx0eVwiOjIwLFwibW9uZXlBdmFpbGFibGVcIjoyMDYyNTAwMDAsXCJtb25leU1heFwiOjc3MzQzNzUwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MyxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjozODgsXCJzZXJ2ZXJHcm93dGhcIjo0Nn19LFwiam9obnNvbi1vcnRob1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjp0cnVlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImpvaG5zb24tb3J0aG9cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjE2LjkuMy44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkpvaG5zb24gT3J0aG9wZWRpY3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImpvaG5zb24tb3J0aG9cIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzMxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJqb2huc29uLW9ydGhvXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMzMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJqb2huc29uLW9ydGhvXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMzMyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiam9obnNvbi1vcnRob1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMzQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJqb2huc29uLW9ydGhvXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMzNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiam9obnNvbi1vcnRob1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMzYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImpvaG5zb24tb3J0aG9cIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzM3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcInNpbHZlci1oZWxpeFwiLFwicm90aG1hbi11bmlcIixcImNhdGFseXN0XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjp0cnVlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NDgsXCJoYWNrRGlmZmljdWx0eVwiOjE2LjI4OTk5OTk5OTk5OTk4NSxcIm1pbkRpZmZpY3VsdHlcIjoxNixcIm1vbmV5QXZhaWxhYmxlXCI6MTk5MTk0MzU4LjU2MjUsXCJtb25leU1heFwiOjIwODI4MDE1MS41NjI1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjoyLFwib3BlblBvcnRDb3VudFwiOjIsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjI2NyxcInNlcnZlckdyb3d0aFwiOjU2fX0sXCJuMDBkbGVzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcIm4wMGRsZXNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjM2LjcuOS4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo0LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk5vb2RsZSBCYXJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6My41LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDE5LDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjE2Ny4xMjc4NjEwNDMyLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS44MDk5OTk5OTYzOTE1LFwicGlkXCI6OSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibjAwZGxlc1wiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNzhjNjIxNjYtMWMwYy00ZmVmLWFiYzEtODRjYzZiNTlkMWE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwOTR9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTg0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJuMDBkbGVzXCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJuMDBkbGVzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjMzOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCJpbXBvcnQgeyBzb3J0ZWRfdGFyZ2V0cywgc3J2X3NlYyB9IGZyb20gXFxcIi4vaGFja2VyLWxpYi5qc1xcXCI7XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICAvL3JhbmRvbSBiYWNrb2ZmXFxuICBhd2FpdCBucy5zbGVlcChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwMCkpO1xcblxcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgLy9yYW5kb20gYmFja29mZlxcbiAgICBhd2FpdCBucy5zbGVlcChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1MDAwKSk7XFxuXFxuICAgIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKVxcbiAgICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICAgIC4uLnNydixcXG4gICAgICAgIC4uLnNydl9zZWMobnMsIHNydi5uYW1lKSxcXG4gICAgICB9KSlcXG4gICAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLnNlY19jdXJyID4gaW5mby5zZWNfbWluICsgMSk7XFxuICAgIC8vLmZpbHRlcigoaW5mbykgPT4gaW5mby5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgICBucy5wcmludChcXG4gICAgICBgdG9wIHRhcmdldHM6ICR7b3V0cHV0XFxuICAgICAgICAubWFwKChpbmZvKSA9PiBgJHtpbmZvLm5hbWV9ICR7aW5mby5zZWNfY3Vycn0vJHtpbmZvLnNlY19taW59YClcXG4gICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG5cXG4gICAgaWYgKG91dHB1dC5sZW5ndGggPiAwKSB7XFxuICAgICAgY29uc3QgaW5mbyA9IG91dHB1dFswXTtcXG4gICAgICBucy5wcmludChcXG4gICAgICAgIGBUYXJnZXQgJHtpbmZvLm5hbWV9LCBiZWZvcmU6ICR7aW5mby5zZWNfY3Vycn0vJHtpbmZvLnNlY19taW59ICR7aW5mby5zZWNfcGN0fSVgXFxuICAgICAgKTtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4oaW5mby5uYW1lKTtcXG4gICAgICBjb25zdCBwb3N0ID0gc3J2X3NlYyhucywgaW5mby5uYW1lKTtcXG4gICAgICBucy5wcmludChcXG4gICAgICAgIGAgIGFmdGVyIHNlYzogJHtwb3N0LnNlY19jdXJyfS8ke3Bvc3Quc2VjX21pbn0gJHtwb3N0LnNlY19wY3R9JWBcXG4gICAgICApO1xcbiAgICAgIG5zLnRwcmludChcXG4gICAgICAgIGB3ZWFrZW5lZCAke2luZm8ubmFtZX06ICR7K3Bvc3Quc2VjX2N1cnIudG9GaXhlZCgyKX0vJHtcXG4gICAgICAgICAgcG9zdC5zZWNfbWluXFxuICAgICAgICB9LCBub3cgYXQgJHtwb3N0LnNlY19wY3R9JWBcXG4gICAgICApO1xcbiAgICB9XFxuICAgIGF3YWl0IG5zLnNsZWVwKDEwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi10b3AuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNCxcInNlcnZlclwiOlwibjAwZGxlc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozMzksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHsgc29ydGVkX3RhcmdldHMsIHNydl9tb25leSwgcGVyY2VudGFnZSwgZm10IH0gZnJvbSBcXFwiLi9oYWNrZXItbGliLmpzXFxcIjtcXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIC8vcmFuZG9tIGJhY2tvZmZcXG4gIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAwKSk7XFxuXFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICAvL3JhbmRvbSBiYWNrb2ZmXFxuICAgIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwMDApKTtcXG5cXG4gICAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpXFxuICAgICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgICAgLi4uc3J2LFxcbiAgICAgICAgLi4uc3J2X21vbmV5KG5zLCBzcnYubmFtZSksXFxuICAgICAgfSkpXFxuICAgICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9jdXJyIDwgaW5mby5tb25leV9tYXgpXFxuICAgICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgICBucy5wcmludChcXG4gICAgICBgdG9wIHRhcmdldHM6ICR7b3V0cHV0XFxuICAgICAgICAubWFwKFxcbiAgICAgICAgICAoaW5mbykgPT4gYCR7aW5mby5uYW1lfSAke2ZtdChpbmZvLm1vbmV5X21heCl9JCAke2luZm8ubW9uZXlfcGN0fSVgXFxuICAgICAgICApXFxuICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuXFxuICAgIGlmIChvdXRwdXQubGVuZ3RoID4gMCkge1xcbiAgICAgIGNvbnN0IGluZm8gPSBvdXRwdXRbMF07XFxuICAgICAgbnMucHJpbnQoYFRhcmdldCAke2luZm8ubmFtZX06YCk7XFxuICAgICAgbnMucHJpbnQoXFxuICAgICAgICBgICBiZWZvcmUgbW9uZXk6ICR7Zm10KGluZm8ubW9uZXlfY3Vycil9LyR7Zm10KGluZm8ubW9uZXlfbWF4KX0gJHtcXG4gICAgICAgICAgaW5mby5tb25leV9wY3RcXG4gICAgICAgIH0lYFxcbiAgICAgICk7XFxuICAgICAgY29uc3QgYW1vdW50ID0gYXdhaXQgbnMuZ3JvdyhpbmZvLm5hbWUpO1xcbiAgICAgIGNvbnN0IGFmdGVyID0gc3J2X21vbmV5KG5zLCBpbmZvLm5hbWUpO1xcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYCAgYWZ0ZXIgbW9uZXk6ICR7Zm10KGFmdGVyLm1vbmV5X2N1cnIpfS8ke2ZtdChhZnRlci5tb25leV9tYXgpfSAke1xcbiAgICAgICAgICBhZnRlci5tb25leV9wY3RcXG4gICAgICAgIH0lIChyYWlzZWQgJHtwZXJjZW50YWdlKGluZm8ubW9uZXlfY3VyciwgYWZ0ZXIubW9uZXlfY3Vycil9JSlgXFxuICAgICAgKTtcXG4gICAgICBucy50cHJpbnQoXFxuICAgICAgICBgZ3Jvd24gJHtpbmZvLm5hbWV9IHRvICR7Zm10KGFmdGVyLm1vbmV5X2N1cnIpfSQgLyAke2ZtdChcXG4gICAgICAgICAgaW5mby5tb25leV9tYXhcXG4gICAgICAgICl9JCAgJHthZnRlci5tb25leV9wY3R9JSAoKyAke3BlcmNlbnRhZ2UoYW1vdW50LCBpbmZvLm1vbmV5X2N1cnIpfSUpYFxcbiAgICAgICk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbnMucHJpbnQoXFxcIm5vIG1vcmUgdGFnZXRzIGF2YWlsYWJsZVxcXCIpO1xcbiAgICB9XFxuICAgIGF3YWl0IG5zLnNsZWVwKDEwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctdG9wLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNWQ0ZTljOTEtMjI4Ni00NTBkLWE5NTEtMzc2MWZiOWFjNGI5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE0OTk5fSx7XCJmaWxlbmFtZVwiOlwiZ3Jvdy10b3AuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzMzMmZhNzRhLTVlMTAtNDA3ZS04MTZmLTc5YjlkMzBiMGNmNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNTA1MX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcIm4wMGRsZXNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzQwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiaW1wb3J0IHtcXG4gIHNvcnRlZF90YXJnZXRzLFxcbiAgc3J2X3NlYyxcXG4gIHBlcmNlbnRhZ2UsXFxuICBmbXQsXFxuICBzcnZfbW9uZXksXFxufSBmcm9tIFxcXCIuL2hhY2tlci1saWIuanNcXFwiO1xcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgLy9yYW5kb20gYmFja29mZlxcbiAgYXdhaXQgbnMuc2xlZXAoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDApKTtcXG5cXG4gIGxldCBoYXZlVGFyZ2V0ID0gZmFsc2U7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICAvL3JhbmRvbSBiYWNrb2ZmXFxuICAgIGF3YWl0IG5zLnNsZWVwKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDUwMDApKTtcXG5cXG4gICAgY29uc3QgaW5mb3MgPSBzb3J0ZWRfdGFyZ2V0cyhucykubWFwKChzcnYpID0+ICh7XFxuICAgICAgLi4uc3J2LFxcbiAgICAgIC4uLnNydl9zZWMobnMsIHNydi5uYW1lKSxcXG4gICAgICAuLi5zcnZfbW9uZXkobnMsIHNydi5uYW1lKSxcXG4gICAgfSkpO1xcbiAgICAvLyAgICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gICAgLy9ucy50cHJpbnQoYGluZm86ICR7aW5mb3MubWFwKChpbmZvKSA9PiBpbmZvLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YCk7XFxuXFxuICAgIGNvbnN0IG91dHB1dF9zID0gaW5mb3NcXG4gICAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X2N1cnIgIT0gMClcXG4gICAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X2N1cnIgPj0gMC4yNSAqIGluZm8ubW9uZXlfbWF4KVxcbiAgICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8uc2VjX2N1cnIgPD0gaW5mby5zZWNfbWluICsgMik7IC8vIG9ubHkgd2l0aCByZWFzb25hYmx5IHdlYWsgc2VjdXJpdHlcXG5cXG4gICAgbnMucHJpbnQoXFxuICAgICAgYGxvdy1zZWMgdGFyZ2V0czogJHtvdXRwdXRfc1xcbiAgICAgICAgLm1hcChcXG4gICAgICAgICAgKGluZm8pID0+XFxuICAgICAgICAgICAgYCR7aW5mby5uYW1lfSAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufSwgJHtmbXQoXFxuICAgICAgICAgICAgICBpbmZvLm1vbmV5X2N1cnJcXG4gICAgICAgICAgICApfSQvJHtmbXQoaW5mby5tb25leV9tYXgpfSRgXFxuICAgICAgICApXFxuICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuXFxuICAgIGNvbnN0IG91dHB1dCA9IG91dHB1dF9zLmZpbHRlcihcXG4gICAgICAoaW5mbykgPT4gaW5mby5tb25leV9jdXJyID49IGluZm8ubW9uZXlfbWF4ICogMC41XFxuICAgICk7IC8vIG9ubHkgd2l0aCBkZWNlbnQgbW9uZXlcXG5cXG4gICAgbnMucHJpbnQoXFxuICAgICAgYHRvcCB0YXJnZXRzOiAke291dHB1dFxcbiAgICAgICAgLm1hcCgoaW5mbykgPT4gYCR7aW5mby5uYW1lfSAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufWApXFxuICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuXFxuICAgIGlmIChvdXRwdXQubGVuZ3RoID4gMCkge1xcbiAgICAgIGhhdmVUYXJnZXQgPSB0cnVlO1xcbiAgICAgIGNvbnN0IGluZm8gPSBvdXRwdXRbMF07XFxuICAgICAgbnMucHJpbnQoYFRhcmdldCAke2luZm8ubmFtZX06YCk7XFxuICAgICAgY29uc3QgcHJlTW9uZXkgPSBpbmZvLm1vbmV5X2N1cnI7XFxuICAgICAgbnMucHJpbnQoXFxuICAgICAgICBgICBiZWZvcmUgaGFjayBzZWM6ICR7aW5mby5zZWNfY3Vycn0vJHtpbmZvLnNlY19taW59ICR7XFxuICAgICAgICAgIGluZm8uc2VjX3BjdFxcbiAgICAgICAgfSUsIG1vbmV5OiAke2ZtdChwcmVNb25leSl9YFxcbiAgICAgICk7XFxuICAgICAgY29uc3QgbG9vdCA9IGF3YWl0IG5zLmhhY2soaW5mby5uYW1lKTtcXG4gICAgICBjb25zdCBwb3N0TW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShpbmZvLm5hbWUpO1xcbiAgICAgIG5zLnByaW50KFxcbiAgICAgICAgYCAgYWZ0ZXIgaGFjayBzZWM6ICAke2luZm8uc2VjX2N1cnJ9LyR7aW5mby5zZWNfbWlufSAke1xcbiAgICAgICAgICBpbmZvLnNlY19wY3RcXG4gICAgICAgIH0lLCBtb25leTogJHtmbXQocG9zdE1vbmV5KX0sIGdvdCAke3BlcmNlbnRhZ2UobG9vdCwgcHJlTW9uZXkpfSVgXFxuICAgICAgKTtcXG4gICAgICBucy5wcmludChcXG4gICAgICAgIGBIYWNrZWQgJHtpbmZvLm5hbWV9OiBnb3QgJHtmbXQobG9vdCl9ICgke3BlcmNlbnRhZ2UoXFxuICAgICAgICAgIGxvb3QsXFxuICAgICAgICAgIHByZU1vbmV5XFxuICAgICAgICApfSUpLCBub3cgYXQgc2VjICR7aW5mby5zZWNfY3Vyci50b0ZpeGVkKDIpfS8ke2luZm8uc2VjX21pbn0gKCR7XFxuICAgICAgICAgIGluZm8uc2VjX3BjdFxcbiAgICAgICAgfSUpYFxcbiAgICAgICk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgaWYgKGhhdmVUYXJnZXQpIHtcXG4gICAgICAgIG5zLnByaW50KFxcXCJubyBtb3JlIHRhZ2V0cyBhdmFpbGFibGVcXFwiKTtcXG4gICAgICAgIGhhdmVUYXJnZXQgPSBmYWxzZTtcXG4gICAgICB9XFxuICAgIH1cXG4gICAgYXdhaXQgbnMuc2xlZXAoMSk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stdG9wLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQ1LFwic2VydmVyXCI6XCJuMDBkbGVzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM0MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82ZmY4OGE2NC1kYTY3LTQ5YzQtYmNjNi0xNThiZGFkODlmM2ZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MTV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibjAwZGxlc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQxNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibjAwZGxlc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNDMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIm4wMGRsZXNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzQ0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm4wMGRsZXNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzQ1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zOWM4OWE3MS1hM2JjLTRkMjgtODY1Ni05MjQzMTA5ZDE1M2VcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcwMn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJuMDBkbGVzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MDIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIm4wMGRsZXNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzQ3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYWNkNDAxMDAtZmM3My00Mjg1LWE4MGItNzRjOTMyMGQwYzVhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1M31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcIm4wMGRsZXNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzQ4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIixcIm5lY3Rhci1uZXRcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjo1MjUwMCxcIm1vbmV5TWF4XCI6MTk2ODc1LFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjowLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjozMDAwfX0sXCJmb29kbnN0dWZmXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTgwOTc3OS1TZWN0b3ItMTIuY2N0XCIsXCJ0eXBlXCI6XCJBbGdvcml0aG1pYyBTdG9jayBUcmFkZXIgSVwiLFwiZGF0YVwiOlsxNDYsNiw4NSwxMTYsNjIsMTI3LDcyLDUxLDE2NCw1MywzLDEyMSw3LDEwMCwxNDIsMTE4LDE1NywxNzVdLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiU2VjdG9yLTEyXCIsXCJ0eXBlXCI6MH19fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImZvb2Ruc3R1ZmZcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg3LjUuNS41XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W1wic2VjdG9yLTEyLWNyaW1lLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkZvb2ROU3R1ZmZcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MTUuNzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMTMzLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjExNjkuODk1MDI3MzAyNDAwMixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuODA5OTk5OTk2MzkxNSxcInBpZFwiOjIwLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJmb29kbnN0dWZmXCIsXCJ0aHJlYWRzXCI6NyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xN2E0YjZhNC1jMTA1LTQ1ZTctYWFjOC1mZjljYTA2YzJjZTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDA5OX1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMTMsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImZvb2Ruc3R1ZmZcIixcInRocmVhZHNcIjoyLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImZvb2Ruc3R1ZmZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzQ5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJmb29kbnN0dWZmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDcyZDdjYzktZmRlZC00NWM1LTk3NTktZGRiNGZjMTMzMWM3XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiZm9vZG5zdHVmZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzEwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJmb29kbnN0dWZmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zZjc4NTFlYS0wZWEyLTQ5ZTEtODM3OS01MDE3ZDRkMTQ3NGJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiZm9vZG5zdHVmZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiZm9vZG5zdHVmZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNTQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImZvb2Ruc3R1ZmZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzU1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZGQxNmNjZDUtMmYyMC00ZWE4LTlkOWMtZjRjZTBiOTdmZWMyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1NX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImZvb2Ruc3R1ZmZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzU2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MTAsXCJoYWNrRGlmZmljdWx0eVwiOjEwLFwibWluRGlmZmljdWx0eVwiOjMsXCJtb25leUF2YWlsYWJsZVwiOjE1MDAwMDAsXCJtb25leU1heFwiOjU2MjUwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjAsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjV9fSxcInNpZ21hLWNvc21ldGljc1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjQ0LjguOS40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTaWdtYSBDb3NtZXRpY3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MTUuNzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMTMzLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjExNjkuODk1MDI3MzAyNDAwMixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuODA5OTk5OTk2MzkxNSxcInBpZFwiOjIyLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcInRocmVhZHNcIjo3LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzk5NmNjZDc5LTRmNTAtNGY2Mi1hMDFiLWZjZGNkYWRlODEzNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTAwfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIxNCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwic2lnbWEtY29zbWV0aWNzXCIsXCJ0aHJlYWRzXCI6MixcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzU3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzU4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84M2E0MGMyNi01NWU2LTQzYTAtYTE0Ni1lZDhkMGFkZTVjMGZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxMX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwic2lnbWEtY29zbWV0aWNzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM2MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8yYzc4ZTVkYi04MDQ3LTRlNmYtOTg4ZC1iZjZmZjVkYTlkY2VcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwic2lnbWEtY29zbWV0aWNzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDQ1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzYyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJzaWdtYS1jb3NtZXRpY3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzYzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMGIyYjM3MjUtY2M0Mi00OTY3LWExNjQtNjlmYTE0ODVjMTZlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1Nn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcInNpZ21hLWNvc21ldGljc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNjQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiLFwibWF4LWhhcmR3YXJlXCIsXCJDU0VDXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEwLFwiaGFja0RpZmZpY3VsdHlcIjoxMCxcIm1pbkRpZmZpY3VsdHlcIjozLFwibW9uZXlBdmFpbGFibGVcIjoxNzI1MDAwLFwibW9uZXlNYXhcIjo2NDY4NzUwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjowLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjUsXCJzZXJ2ZXJHcm93dGhcIjoxMH19LFwiam9lc2d1bnNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtODI2MDYzLmNjdFwiLFwidHlwZVwiOlwiQXJyYXkgSnVtcGluZyBHYW1lXCIsXCJkYXRhXCI6WzAsOSwzLDAsNCwwLDAsMSw4LDMsMCw3LDAsMTAsMCw5LDAsNiwwXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjF9fX0se1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtMjA3NTY1LmNjdFwiLFwidHlwZVwiOlwiVW5pcXVlIFBhdGhzIGluIGEgR3JpZCBJSVwiLFwiZGF0YVwiOltbMCwwLDEsMSwwLDAsMCwxLDBdLFswLDAsMCwwLDAsMCwxLDAsMV0sWzAsMCwxLDAsMSwwLDAsMSwwXSxbMCwwLDAsMCwwLDAsMCwwLDBdLFswLDAsMCwwLDAsMCwwLDAsMF0sWzAsMCwwLDAsMCwwLDEsMCwwXSxbMCwwLDAsMCwwLDAsMCwwLDBdLFswLDAsMCwxLDAsMSwwLDAsMF0sWzAsMCwwLDAsMCwwLDAsMCwwXSxbMCwwLDAsMCwwLDEsMCwwLDBdLFswLDAsMCwwLDAsMCwwLDAsMF0sWzAsMCwwLDAsMCwwLDAsMCwwXV0sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjozfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwiam9lc2d1bnNcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI4LjUuNC4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJKb2UncyBHdW5zXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjE1Ljc1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDEzMywwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMTY5Ljg5NTAyNzMwMjQwMDIsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjQwOTk5OTk5NjM5MixcInBpZFwiOjU1LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJqb2VzZ3Vuc1wiLFwidGhyZWFkc1wiOjcsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMmM2ZTk0YWItZjE3ZC00YWFkLThmOTYtMWQzY2JjNTAwZTNiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMTd9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjE4LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJqb2VzZ3Vuc1wiLFwidGhyZWFkc1wiOjIsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwiam9lc2d1bnNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzY1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJqb2VzZ3Vuc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNjYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzc0ZWY1ODZjLTY0MWQtNDJmOC1iNGI3LWE1MjhiNDZlOTA5ZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzMyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImpvZXNndW5zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MzIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImpvZXNndW5zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM2OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mYTI1MzdhNS0wYzcyLTRlNmUtYTM4NS1iMjZhM2VmY2ZjZTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiam9lc2d1bnNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImpvZXNndW5zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM3MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiam9lc2d1bnNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzcxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNTA3MzM0NzItNzZhMi00NTllLWEwYjYtZjAzOGVjYTAxZjI4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM2MH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImpvZXNndW5zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM3MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjE1LFwiaGFja0RpZmZpY3VsdHlcIjoxNy4xOTM5OTk5OTk5OTk5NjcsXCJtaW5EaWZmaWN1bHR5XCI6NSxcIm1vbmV5QXZhaWxhYmxlXCI6NzAzMTI1MCxcIm1vbmV5TWF4XCI6NzAzMTI1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MCxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxMCxcInNlcnZlckdyb3d0aFwiOjIwfX0sXCJ6ZXIwXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInplcjBcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI0LjIuMS4yXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJaRVIwIE5pZ2h0Y2x1YlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjozMS40NSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDE1XX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjEzMS45NDMwNDgxOTE5OTk5NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNDA5OTk5OTk2MzkyLFwicGlkXCI6NjUsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInplcjBcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMmQzY2E0MjgtYjFlYy00ZjI1LWJhMjAtYjE1ZWEwNTNjZTZiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMjN9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyNjYsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MjMzOS43OTAwNTQ2MDQ4MDA0LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS40MDk5OTk5OTYzOTIsXCJwaWRcIjo2NixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiemVyMFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzM1MjRjYzdmLWI1OGYtNDVjZS1iZWJkLTMyMWE3N2QwNTUzY1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTI0fV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlsyMjU1MzUzLDQxLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6NDAwLjIyNzI0NjE4MjM5OTgsXCJvbmxpbmVNb25leU1hZGVcIjoyMjU1MzUzLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjQwOTk5OTk5NjM5MixcInBpZFwiOjY3LFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInplcjBcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzljNThjNDkxLWY4MDktNDA4Yi1iZDNmLTdmNTFkNjc3YjU2MFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTI1fV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIyMixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiemVyMFwiLFwidGhyZWFkc1wiOjIsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwiemVyMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNzMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzEwM2QxYjgwLTU2MmItNDRkZi1iMWZiLTdhYWY4YjBmNmY3N1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzM4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInplcjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzcwMTNjMjYtNGUwMS00N2I1LTljZjktNmIyMmI1MjU3ZGI2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3Mzl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiemVyMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzM5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzE4YTliYmU5LTI0M2MtNGM2ZS05YjJjLWY4MjU1MjI5NDY4NFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzQwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiemVyMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzQwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2ZlZWFlNjJkLTE1ZDUtNGIwZC1iMzk2LTRkNjYzZDA1NDEwZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ1M31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJ6ZXIwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDUzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJ6ZXIwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM3OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiemVyMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNzksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGxldCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgbnMudHByaW50KFxcXCJmYXJtaW5nIGFuZCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIGNvbnN0IG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuOTtcXG4gIGNvbnN0IHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgMjtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGlmIChucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCkge1xcbiAgICAgIGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICB9IGVsc2UgaWYgKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCkge1xcbiAgICAgIGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIH1cXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xYWMwNzQyZS04OGRjLTRiMjUtODE5ZS0zMGRiZTdjZDU2NzlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzY0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNCxcInNlcnZlclwiOlwiemVyMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozODAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaXJvbi1neW1cIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoyNSxcImhhY2tEaWZmaWN1bHR5XCI6OC4wMDIsXCJtaW5EaWZmaWN1bHR5XCI6OCxcIm1vbmV5QXZhaWxhYmxlXCI6MjA0NjYwMDYuNjYwMDI4ODY3LFwibW9uZXlNYXhcIjoyMTA5Mzc1MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MSxcIm9wZW5Qb3J0Q291bnRcIjoxLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo3NSxcInNlcnZlckdyb3d0aFwiOjQwfX0sXCJuZWN0YXItbmV0XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcIm5lY3Rhci1uZXRcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjgzLjMuNi44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJOZWN0YXIgTmlnaHRjbHViIE5ldHdvcmtcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MTUuNzUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMTMzLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjExNjkuODk1MDI3MzAyNDAwMixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuODA5OTk5OTk2MzkxNSxcInBpZFwiOjE0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJuZWN0YXItbmV0XCIsXCJ0aHJlYWRzXCI6NyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85YTY5ODgzZi05NTdkLTQ4MTEtOWY5NS0xNGRjYjQ4MGRmNDlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDA5NX1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMTEsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm5lY3Rhci1uZXRcIixcInRocmVhZHNcIjoyLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcIm5lY3Rhci1uZXRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzgxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJuZWN0YXItbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM4MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOGM4ZDhjNGEtMGMxMS00ZGY5LWIxMDUtNjdjYzZjZDY0YjAzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MDZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibmVjdGFyLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzA2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJuZWN0YXItbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM4NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xNmU3NDZkMC1lMTAzLTQyYjEtODcxNS05YmU5ZmZiYTE2ZThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibmVjdGFyLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibmVjdGFyLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozODYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIm5lY3Rhci1uZXRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mzg3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZDc1NzdkMGMtMGVhOC00YmM0LTlhMjAtZGJmYzJjYWExODM1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1NH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcIm5lY3Rhci1uZXRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mzg4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcIm4wMGRsZXNcIixcInBoYW50YXN5XCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjIwLFwiaGFja0RpZmZpY3VsdHlcIjoyMC4xOTIsXCJtaW5EaWZmaWN1bHR5XCI6NyxcIm1vbmV5QXZhaWxhYmxlXCI6MjExMTg1Ny42NzUxMjgwOTgsXCJtb25leU1heFwiOjc3MzQzNzUsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjAsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MjAsXCJzZXJ2ZXJHcm93dGhcIjoyNX19LFwibmVvLW5ldFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJuZW8tbmV0XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4My40LjcuOVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MzIsXCJtZXNzYWdlc1wiOltcInRoZS1oaWRkZW4td29ybGQubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTmVvIE5pZ2h0Y2x1YiBOZXR3b3JrXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjMxLjQ1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsMTVdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTMxLjk0MzA0ODE5MTk5OTk2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS44MDk5OTk5OTYzOTE1LFwicGlkXCI6MjgsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm5lby1uZXRcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOTNiNjQ3MzItMjA0Mi00NmU1LTg5MTItNzYxMzQyMDdhMGU0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMDR9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyNjYsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MjMzOS43OTAwNTQ2MDQ4MDA0LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS44MDk5OTk5OTYzOTE1LFwicGlkXCI6MjksXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm5lby1uZXRcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82ZjcwNzYxZi0zNWViLTQzMmEtYmM3Yy1hMjcwYmNhNzliMzlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDEwNX1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMTk4MDgzNSwzNiwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2Ny4yNDE0ODQxMzQzOTk5NyxcIm9ubGluZU1vbmV5TWFkZVwiOjE5ODA4MzUsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuODA5OTk5OTk2MzkxNSxcInBpZFwiOjMwLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIm5lby1uZXRcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNmODk3YTkxLTI3MGQtNDE3OS04ZDVjLTE0ZGI3MDFkMzNiZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTA2fV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIxNixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibmVvLW5ldFwiLFwidGhyZWFkc1wiOjIsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwibmVvLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozODksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzI2NmUwMWE0LTMxMWUtNDVjZS04YmFhLWM5MTAyMWU2YWZhZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzE1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm5lby1uZXRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMGI5NjBiMjgtZmU0ZC00MDk2LTg2YWUtM2EzYWVkN2I1ZWJkXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibmVvLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzE2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzliNzQ2NDMyLTdmZTMtNDA3Zi1hMTMzLWJmYzFlYTk1ZWJiNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzE3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwibmVvLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzE3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzYyY2I2YTFiLTJiMzQtNGM1My04ZWQzLTM3MjRhZWI3NjhiZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0N31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJuZW8tbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDQ3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJuZW8tbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM5NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwibmVvLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozOTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGxldCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgbnMudHByaW50KFxcXCJmYXJtaW5nIGFuZCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIGNvbnN0IG1vbmV5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAqIDAuOTtcXG4gIGNvbnN0IHNlY3VyaXR5VGhyZXNoID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpICsgMjtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGlmIChucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPiBzZWN1cml0eVRocmVzaCkge1xcbiAgICAgIGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICB9IGVsc2UgaWYgKG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgPCBtb25leVRocmVzaCkge1xcbiAgICAgIGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIH1cXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwiZmFybS1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwiZmFybS1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83ZjAwOGYxMS03YzUyLTQyZjUtYjQzNS0zMTY3Yjg3YTZkZWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MzU4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjIuNCxcInNlcnZlclwiOlwibmVvLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozOTYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wibWF4LWhhcmR3YXJlXCIsXCJjcnVzaC1maXRuZXNzXCIsXCJhdm1uaXRlLTAyaFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjI1LFwiaGFja0RpZmZpY3VsdHlcIjoyNSxcIm1pbkRpZmZpY3VsdHlcIjo4LFwibW9uZXlBdmFpbGFibGVcIjozNzUwMDAwLFwibW9uZXlNYXhcIjoxNDA2MjUwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MSxcIm9wZW5Qb3J0Q291bnRcIjoxLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo1MCxcInNlcnZlckdyb3d0aFwiOjI1fX0sXCJzaWx2ZXItaGVsaXhcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6dHJ1ZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJzaWx2ZXItaGVsaXhcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg5LjIuNi4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjo2NCxcIm1lc3NhZ2VzXCI6W1wibmV3LXRyaWFkcy5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTaWx2ZXIgSGVsaXhcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6NjIuODUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0NV19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozOTUuODI5MTQ0NTc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS42MDk5OTk5OTYzOTIsXCJwaWRcIjozNyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzg4MzJjMGJiLTIyN2EtNGVmZi1hZmZiLThhMWU0MTgwZDVhMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTEwfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsNTUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjQ4NDYuNzA3OTcwMjUyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNjA5OTk5OTk2MzkyLFwicGlkXCI6MzgsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInNpbHZlci1oZWxpeFwiLFwidGhyZWFkc1wiOjI5LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzIwZDM5NmRmLTI3YjUtNDcyZi1iZDg1LTY1NmI2NTMxNGZhY1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTExfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls3NjQ2NjMxLDEzOCwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjEyOTkuNjM5MDI0NjkxMTk5NyxcIm9ubGluZU1vbmV5TWFkZVwiOjc2NDY2MzEsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNjA5OTk5OTk2MzkyLFwicGlkXCI6MzksXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85NmIwNTQ2NS1iZDk4LTRiYzktODUyZC05YTZmMzA1MmQzNGVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDExMn1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoxODYsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInNpbHZlci1oZWxpeFwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM5NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDc0MThhNDEtYjczMC00MTUzLWE2M2QtZmMzYmQ5MGM5YmQzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzJiNzAzZWFjLTA3MzQtNDVkYi05ZThhLWM3NjhkNzFkMzVmZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzIyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInNpbHZlci1oZWxpeFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzIyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzZiZjhkZmIyLWU4MTUtNDAwZC1hMjM0LTFjNjJhNjA4NDIwZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzIzfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMzQ3YzJiZmYtMmMzNi00ZDkxLWI0NTYtOTUwMWU5ZGViZGE1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDE3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInNpbHZlci1oZWxpeFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQxNyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwic2lsdmVyLWhlbGl4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwMyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJtYXgtaGFyZHdhcmVcIixcImNvbXB0ZWtcIixcIm5ldGxpbmtcIixcImpvaG5zb24tb3J0aG9cIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjozMCxcImhhY2tEaWZmaWN1bHR5XCI6MzAsXCJtaW5EaWZmaWN1bHR5XCI6MTAsXCJtb25leUF2YWlsYWJsZVwiOjMzNzUwMDAwLFwibW9uZXlNYXhcIjoxMjY1NjI1MDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjIsXCJvcGVuUG9ydENvdW50XCI6MixcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTUwLFwic2VydmVyR3Jvd3RoXCI6MzB9fSxcImhvbmctZmFuZy10ZWFcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwiaG9uZy1mYW5nLXRlYVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMy44LjcuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltcImJyaWdodGVyLXRoYW4tdGhlLXN1bi5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJIb25nRmFuZyBUZWFob3VzZVwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoxNS43NSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwxMzMsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTE2OS44OTUwMjczMDI0MDAyLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS40MDk5OTk5OTYzOTIsXCJwaWRcIjo1NyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9uZy1mYW5nLXRlYVwiLFwidGhyZWFkc1wiOjcsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYmQ3Yjc2ZTQtNjIzOC00NWUzLWI0YzMtMGExNGJiYzdhZjYzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMTh9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjE5LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJob25nLWZhbmctdGVhXCIsXCJ0aHJlYWRzXCI6MixcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJob25nLWZhbmctdGVhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwNCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaG9uZy1mYW5nLXRlYVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MDUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzIxZTY2NzYyLWU4YjQtNDQ1ZC1iODIzLTNmMmIzNGFjMDcwOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzMzfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhvbmctZmFuZy10ZWFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczMyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiaG9uZy1mYW5nLXRlYVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MDcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMmRkODYzZjgtYzdlMS00MWI4LWEyMDItZDgzYTNhOGNjZGVhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDUwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhvbmctZmFuZy10ZWFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhvbmctZmFuZy10ZWFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDA5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJob25nLWZhbmctdGVhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgbGV0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBucy50cHJpbnQoXFxcImZhcm1pbmcgYW5kIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgY29uc3QgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC45O1xcbiAgY29uc3Qgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyAyO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgaWYgKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKSB7XFxuICAgICAgYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIH0gZWxzZSBpZiAobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKSB7XFxuICAgICAgYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgfVxcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzcxZGRhNGM2LWI2NDUtNGIzZi1iYmM3LTEwYmM1MTkzMzZmZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNjF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJob25nLWZhbmctdGVhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjE1LFwiaGFja0RpZmZpY3VsdHlcIjoxNSxcIm1pbkRpZmZpY3VsdHlcIjo1LFwibW9uZXlBdmFpbGFibGVcIjoyMjUwMDAwLFwibW9uZXlNYXhcIjo4NDM3NTAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjowLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjMwLFwic2VydmVyR3Jvd3RoXCI6MjB9fSxcImhhcmFraXJpLXN1c2hpXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W3tcImN0b3JcIjpcIkNvZGluZ0NvbnRyYWN0XCIsXCJkYXRhXCI6e1widHJpZXNcIjowLFwiZm5cIjpcImNvbnRyYWN0LTE1NDc2My5jY3RcIixcInR5cGVcIjpcIkFsZ29yaXRobWljIFN0b2NrIFRyYWRlciBJXCIsXCJkYXRhXCI6WzQyLDEzNiwxMiwxMDEsMTY4LDE0Ml0sXCJyZXdhcmRcIjp7XCJuYW1lXCI6XCJcIixcInR5cGVcIjozfX19XSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwiaGFyYWtpcmktc3VzaGlcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjI3LjAuOS45XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJIYXJhS2lyaSBTdXNoaSBCYXIgTmV0d29ya1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoxNS43NSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwxMzMsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTE2OS44OTUwMjczMDI0MDAyLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS40MDk5OTk5OTYzOTIsXCJwaWRcIjo1OSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaGFyYWtpcmktc3VzaGlcIixcInRocmVhZHNcIjo3LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2I3ZDVkNTdkLWJjODItNDhhYS1iN2UyLWY0N2Y2MWQ3NGVjMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTE5fV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIyMCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaGFyYWtpcmktc3VzaGlcIixcInRocmVhZHNcIjoyLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImhhcmFraXJpLXN1c2hpXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaGFyYWtpcmktc3VzaGlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDEzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83ZDU3MzI4My1jMjg5LTQ2NGEtOTI1Ni1lMTBlY2I0NmRkNWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczNH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJoYXJha2lyaS1zdXNoaVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzM0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJoYXJha2lyaS1zdXNoaVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vN2IwMzg2YTMtOTk0ZC00MzcxLWFlNDMtMmViMWIwYmM4NzdiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDUxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImhhcmFraXJpLXN1c2hpXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDUxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJoYXJha2lyaS1zdXNoaVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImhhcmFraXJpLXN1c2hpXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgbGV0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBucy50cHJpbnQoXFxcImZhcm1pbmcgYW5kIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgY29uc3QgbW9uZXlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogMC45O1xcbiAgY29uc3Qgc2VjdXJpdHlUaHJlc2ggPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCkgKyAyO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgaWYgKG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA+IHNlY3VyaXR5VGhyZXNoKSB7XFxuICAgICAgYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIH0gZWxzZSBpZiAobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KSA8IG1vbmV5VGhyZXNoKSB7XFxuICAgICAgYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgfVxcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJmYXJtLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJmYXJtLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzZiZjdmZjM1LWU4OTItNDlkOS1iYWRiLWM2NmIzMjJlYjQwOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjozNjJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6Mi40LFwic2VydmVyXCI6XCJoYXJha2lyaS1zdXNoaVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxNSxcImhhY2tEaWZmaWN1bHR5XCI6MTUsXCJtaW5EaWZmaWN1bHR5XCI6NSxcIm1vbmV5QXZhaWxhYmxlXCI6MzAwMDAwMCxcIm1vbmV5TWF4XCI6MTEyNTAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjAsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NDAsXCJzZXJ2ZXJHcm93dGhcIjo0MH19LFwicGhhbnRhc3lcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6dHJ1ZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwaGFudGFzeVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDguOS42LjZcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlBoYW50YXN5IENsdWJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MzEuNDUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCwxNV19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMzEuOTQzMDQ4MTkxOTk5OTYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjgwOTk5OTk5NjM5MTUsXCJwaWRcIjoxNixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicGhhbnRhc3lcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTNiOTA5MWItNmIwNi00MDYwLWFhMTQtNDMyMjRiNjhlM2ZiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwOTZ9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyNjYsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MjMzOS43OTAwNTQ2MDQ4MDA0LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS44MDk5OTk5OTYzOTE1LFwicGlkXCI6MTcsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBoYW50YXN5XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTgyYjg2ODktMDJlMS00NDA1LWI3YzAtYTA4NWFkYjkwOWUzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQwOTd9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzIzMDk4MjcsNDIsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo0MDYuODI0Mzk4NTkxOTk5OSxcIm9ubGluZU1vbmV5TWFkZVwiOjIzMDk4MjcsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuODA5OTk5OTk2MzkxNSxcInBpZFwiOjE4LFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBoYW50YXN5XCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mMzM3OWI4OC1kZGUxLTQ2ZTgtYjEwYS1mN2Y0NGY5YmFlOWVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDA5OH1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMTIsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBoYW50YXN5XCIsXCJ0aHJlYWRzXCI6MixcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJwaGFudGFzeVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MjAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzRlMDkzNzNkLTkzOWItNGY5YS1hMjI1LTJjOGZlNWFhNGM0NlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzA3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBoYW50YXN5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MDcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzk3MTRlYmUwLWQ4MjktNDBkNC1hNzlmLTIxOGIwYTRkNjg1MVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzA4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBoYW50YXN5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MDgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vN2VkZGZjYzctYjZlYi00ODhmLTliNzEtYmUxZjhkMGZiZjRhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MDl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwaGFudGFzeVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzA5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2Q0N2QyMWRjLWEyMzItNDY1YS05YzkwLTZkOTE3Mzc0M2ViYlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0M31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwaGFudGFzeVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicGhhbnRhc3lcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDI1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwaGFudGFzeVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MjYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wibmVjdGFyLW5ldFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjIwLFwiaGFja0RpZmZpY3VsdHlcIjoyMCxcIm1pbkRpZmZpY3VsdHlcIjo3LFwibW9uZXlBdmFpbGFibGVcIjoxODAwMDAwMCxcIm1vbmV5TWF4XCI6Njc1MDAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjIsXCJvcGVuUG9ydENvdW50XCI6MixcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTAwLFwic2VydmVyR3Jvd3RoXCI6MzV9fSxcIm1heC1oYXJkd2FyZVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC04NzU0MzIuY2N0XCIsXCJ0eXBlXCI6XCJBcnJheSBKdW1waW5nIEdhbWVcIixcImRhdGFcIjpbNyw4LDMsNCwwLDldLFwicmV3YXJkXCI6e1wibmFtZVwiOlwiXCIsXCJ0eXBlXCI6M319fV0sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcIm1heC1oYXJkd2FyZVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNTAuOS4yLjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjMyLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIk1heCBIYXJkd2FyZSBTdG9yZVwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjozMS40NSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDE1XX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjEzMS45NDMwNDgxOTE5OTk5NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuODA5OTk5OTk2MzkxNSxcInBpZFwiOjI0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMDFmMzM3Y2ItNTM1OC00ZmJiLWExY2UtNzkzOWM3YTIxMDE4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMDF9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyNjYsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MjMzOS43OTAwNTQ2MDQ4MDA0LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS44MDk5OTk5OTYzOTE1LFwicGlkXCI6MjUsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm1heC1oYXJkd2FyZVwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzFhZGQ4NWZiLWJkNmItNDE2Mi05MWUyLWY2OTRjOTY5YzFiNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTAyfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlsyMjU2NDI1LDQxLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6NDAwLjIyNzI0NjE4MjM5OTksXCJvbmxpbmVNb25leU1hZGVcIjoyMjU2NDI1LFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjgwOTk5OTk5NjM5MTUsXCJwaWRcIjoyNixcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2IwZTMyODhkLWY0OGUtNDNmMi05NjNiLWFlODcyNDAxZjc5ZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTAzfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIxNSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibWF4LWhhcmR3YXJlXCIsXCJ0aHJlYWRzXCI6MixcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDI3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82M2EyOTdiNS04MDg1LTQ1MDgtOGQ4Zi1jMDI4YjVkZjYwMDJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxMn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzJmNjdjYzgtMDYxMC00YjM3LTg5YzctMmYwMDE4ZGJmODZiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibWF4LWhhcmR3YXJlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNjFkNzc5NDQtMDExNy00NjY0LThlZjktMGIzZTBkNDM3ZGMzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxNCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lMzM5MTFkYi04NGU5LTRhOWMtYmJhYS0xM2VjYmQwNzYyY2NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwibWF4LWhhcmR3YXJlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDQ2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDMyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJtYXgtaGFyZHdhcmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDMzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOGZhMWY1YzUtYTNhMC00Nzc1LTlhNjEtMjExZjY2NWQ4NDg4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1N31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcIm1heC1oYXJkd2FyZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MzQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wic2lnbWEtY29zbWV0aWNzXCIsXCJuZW8tbmV0XCIsXCJzaWx2ZXItaGVsaXhcIixcIm9tZWdhLW5ldFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjE1LFwiaGFja0RpZmZpY3VsdHlcIjoxNSxcIm1pbkRpZmZpY3VsdHlcIjo1LFwibW9uZXlBdmFpbGFibGVcIjo3NTAwMDAwLFwibW9uZXlNYXhcIjoyODEyNTAwMCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MSxcIm9wZW5Qb3J0Q291bnRcIjoxLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo4MCxcInNlcnZlckdyb3d0aFwiOjMwfX0sXCJvbWVnYS1uZXRcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6dHJ1ZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJvbWVnYS1uZXRcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjEyLjguNS4zXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W1widGhlLW5ldy1nb2QubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiT21lZ2EgU29mdHdhcmVcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MzEuNDUsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCwxNV19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMzEuOTQzMDQ4MTkxOTk5OTYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjYwOTk5OTk5NjM5MixcInBpZFwiOjQ3LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJvbWVnYS1uZXRcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNmY2YjNkZjMtZmQyNy00N2IxLTg2YzctNGUwYTZjODQ2NmMwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMTN9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyNjYsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MjMzOS43OTAwNTQ2MDQ4MDA0LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS42MDk5OTk5OTYzOTIsXCJwaWRcIjo0OCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZWE4N2I0NWEtMDkwNy00ZWUxLWFlMDYtNWU2M2E0YTI3NzQ0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMTR9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzIyNjA5MzMsNDEsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo0MDAuMjI3MjQ2MTgyMzk5OCxcIm9ubGluZU1vbmV5TWFkZVwiOjIyNjA5MzMsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNjA5OTk5OTk2MzkyLFwicGlkXCI6NDksXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xZmQyMjc2My1lODdiLTQyNGMtYWRkNC0zOTkxNDdmODllMDhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDExNX1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMTcsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm9tZWdhLW5ldFwiLFwidGhyZWFkc1wiOjIsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQzNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDllZTQ2MzctYzQ0MC00NmNlLTk4ODEtZThkYzllYjYyNzE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3Mjd9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzZmMGQ4YzQ3LTA5ZDktNGM2MC05YjVkLTk2OTNmMWQwMDdjZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzI4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm9tZWdhLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzI4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNmYzkyNzBkLTI3NGUtNGMxMy1iNmY0LWM3NDY1YTQzNTYzNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzI5fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMjM2M2UyNWItMmMwYi00YTAyLWIwZTYtZjJiYzAwNmQ0Y2NhXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDQ4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIm9tZWdhLW5ldFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ0MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwib21lZ2EtbmV0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ0MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJtYXgtaGFyZHdhcmVcIixcInRoZS1odWJcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjozMSxcImhhY2tEaWZmaWN1bHR5XCI6MzEsXCJtaW5EaWZmaWN1bHR5XCI6MTAsXCJtb25leUF2YWlsYWJsZVwiOjQ3MTYxNDQ2LFwibW9uZXlNYXhcIjoxNzY4NTU0MjIuNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MixcIm9wZW5Qb3J0Q291bnRcIjoyLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxODAsXCJzZXJ2ZXJHcm93dGhcIjozNX19LFwiY3J1c2gtZml0bmVzc1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjp0cnVlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImNydXNoLWZpdG5lc3NcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjc0LjQuOS40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjowLFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkNydXNoIEZpdG5lc3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImNydXNoLWZpdG5lc3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDQyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJjcnVzaC1maXRuZXNzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ0MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJjcnVzaC1maXRuZXNzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ0NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiY3J1c2gtZml0bmVzc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NDUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJjcnVzaC1maXRuZXNzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ0NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiY3J1c2gtZml0bmVzc1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NDcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImNydXNoLWZpdG5lc3NcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDQ4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcIm5lby1uZXRcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOnRydWUsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjozNyxcImhhY2tEaWZmaWN1bHR5XCI6MzcsXCJtaW5EaWZmaWN1bHR5XCI6MTIsXCJtb25leUF2YWlsYWJsZVwiOjQzMzkzMDc0LFwibW9uZXlNYXhcIjoxNjI3MjQwMjcuNSxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MixcIm9wZW5Qb3J0Q291bnRcIjoyLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoyNDgsXCJzZXJ2ZXJHcm93dGhcIjoyOH19LFwiaXJvbi1neW1cIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwiaXJvbi1neW1cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjY3LjAuNy4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjozMixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJJcm9uIEd5bSBOZXR3b3JrXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjMxLjQ1LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsMTVdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTMxLjk0MzA0ODE5MTk5OTk2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS40MDk5OTk5OTYzOTIsXCJwaWRcIjo2MSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaXJvbi1neW1cIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZTYxMzdlNmEtZTUzZS00OTNmLTgzYjAtODI4ZWJiYWI1MDM0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMjB9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyNjYsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MjMzOS43OTAwNTQ2MDQ4MDA0LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS40MDk5OTk5OTYzOTIsXCJwaWRcIjo2MixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaXJvbi1neW1cIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85MjM3MzYyOC00MGRjLTRlNmUtYTIyYi03ZGI0MDZjNGExMWFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDEyMX1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMjI1NjY1Miw0MSwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjQwMi40MjYyOTY5ODU1OTk5LFwib25saW5lTW9uZXlNYWRlXCI6MjI1NjY1MixcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS40MDk5OTk5OTYzOTIsXCJwaWRcIjo2MyxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJpcm9uLWd5bVwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNjNmNjc3YTAtMmRiOC00MGI1LTgwNjktNDZiOTA4MWM1MWUxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMjJ9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjIxLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJpcm9uLWd5bVwiLFwidGhyZWFkc1wiOjIsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwiaXJvbi1neW1cIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDQ5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85M2U4MTI1MS1mYzFmLTRmNWYtODk4Yi1iYjk4MmVmMDRmNGVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczNX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJpcm9uLWd5bVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzM1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83YjlhMzlhYS1jMjc5LTQ1NjUtYjJkOC1hNmM2OGNjMDdmZjhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczNn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJpcm9uLWd5bVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzM2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzIxMjYyNjhlLWIwOTctNDQ3ZC1iYjY5LTExZDY5YzAyNzlhZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzM3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiaXJvbi1neW1cIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTczNyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82NDhhYzE2NC1kMDgxLTRjMzUtYTliNi1hNGJkY2RiYWFjNTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiaXJvbi1neW1cIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImlyb24tZ3ltXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ1NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiaXJvbi1neW1cIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDU1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzNmMTcyOTktYWMyNi00MmYzLWFhNzYtMjY3YjBjODNlZmFlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM2M31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcImlyb24tZ3ltXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ1NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCIsXCJ6ZXIwXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjp0cnVlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MzAsXCJoYWNrRGlmZmljdWx0eVwiOjMwLFwibWluRGlmZmljdWx0eVwiOjEwLFwibW9uZXlBdmFpbGFibGVcIjoxNTAwMDAwMCxcIm1vbmV5TWF4XCI6NTYyNTAwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjEsXCJvcGVuUG9ydENvdW50XCI6MSxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MTAwLFwic2VydmVyR3Jvd3RoXCI6MjB9fSxcIm1pbGxlbml1bS1maXRuZXNzXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJtaWxsZW5pdW0tZml0bmVzc1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOS4yLjYuMVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiTWlsbGVuaXVtIEZpdG5lc3MgTmV0d29ya1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJ6Yi1pbnN0aXR1dGVcIixcInNuYXAtZml0bmVzc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjo1NSxcImhhY2tEaWZmaWN1bHR5XCI6NTUsXCJtaW5EaWZmaWN1bHR5XCI6MTgsXCJtb25leUF2YWlsYWJsZVwiOjE4NzUwMDAwMCxcIm1vbmV5TWF4XCI6NzAzMTI1MDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjozLFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjQ5MCxcInNlcnZlckdyb3d0aFwiOjQyfX0sXCJwb3dlcmhvdXNlLWZpdG5lc3NcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcInBvd2VyaG91c2UtZml0bmVzc1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDUuNi44LjRcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjE2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlBvd2VyaG91c2UgRml0bmVzc1wiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjowLFwicnVubmluZ1NjcmlwdHNcIjpbXSxcInNjcmlwdHNcIjpbXSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJvbW5pdGVrXCIsXCJmdWxjcnVtYXNzZXRzXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjY0LFwiaGFja0RpZmZpY3VsdHlcIjo2NCxcIm1pbkRpZmZpY3VsdHlcIjoyMSxcIm1vbmV5QXZhaWxhYmxlXCI6Njc1MDAwMDAwLFwibW9uZXlNYXhcIjoyNTMxMjUwMDAwLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjk5NSxcInNlcnZlckdyb3d0aFwiOjUxfX0sXCJzbmFwLWZpdG5lc3NcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbe1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtNjgzNzA2LmNjdFwiLFwidHlwZVwiOlwiRmluZCBMYXJnZXN0IFByaW1lIEZhY3RvclwiLFwiZGF0YVwiOjY3MjM0OTQ4NCxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjN9fX0se1wiY3RvclwiOlwiQ29kaW5nQ29udHJhY3RcIixcImRhdGFcIjp7XCJ0cmllc1wiOjAsXCJmblwiOlwiY29udHJhY3QtODY4MDgwLmNjdFwiLFwidHlwZVwiOlwiQWxnb3JpdGhtaWMgU3RvY2sgVHJhZGVyIElcIixcImRhdGFcIjpbMTUsODYsMTUwLDgzXSxcInJld2FyZFwiOntcIm5hbWVcIjpcIlwiLFwidHlwZVwiOjF9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwic25hcC1maXRuZXNzXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1NC4xLjYuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJTbmFwIEZpdG5lc3NcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W10sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wibWlsbGVuaXVtLWZpdG5lc3NcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6NTcsXCJoYWNrRGlmZmljdWx0eVwiOjU3LFwibWluRGlmZmljdWx0eVwiOjE5LFwibW9uZXlBdmFpbGFibGVcIjozMzc1MDAwMDAsXCJtb25leU1heFwiOjEyNjU2MjUwMDAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6Nzc2LFwic2VydmVyR3Jvd3RoXCI6NDJ9fSxcInJ1bjR0aGVoMTExelwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOlt7XCJjdG9yXCI6XCJDb2RpbmdDb250cmFjdFwiLFwiZGF0YVwiOntcInRyaWVzXCI6MCxcImZuXCI6XCJjb250cmFjdC05MjU5NjYtU2VjdG9yLTEyLmNjdFwiLFwidHlwZVwiOlwiVG90YWwgV2F5cyB0byBTdW1cIixcImRhdGFcIjoxMyxcInJld2FyZFwiOntcIm5hbWVcIjpcIlNlY3Rvci0xMlwiLFwidHlwZVwiOjB9fX1dLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6ZmFsc2UsXCJob3N0bmFtZVwiOlwicnVuNHRoZWgxMTF6XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5Ny4xLjUuM1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXCJzaW11bGF0ZWQtcmVhbGl0eS5saXRcIixcInRoZS1uZXctZ29kLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlRoZSBSdW5uZXJzXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImluZm9jb21tXCIsXCJmdWxjcnVtdGVjaFwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjowLFwiaGFja0RpZmZpY3VsdHlcIjowLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NTM2LFwic2VydmVyR3Jvd3RoXCI6MH19LFwiSS5JLkkuSVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjp0cnVlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcIkkuSS5JLklcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjkwLjcuMy44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyNTYsXCJtZXNzYWdlc1wiOltcImRlbW9jcmFjeS1pcy1kZWFkLmxpdFwiXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIkkuSS5JLklcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCwyMTBdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTg0Ny4yMDI2NzQ2ODgwMDAzLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS42MDk5OTk5OTYzOTIsXCJwaWRcIjo0MixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiSS5JLkkuSVwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYjY2Zjg3MDItZWM1OS00MTdiLTkwMzUtODc4YjYyZDRmNjkzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjEzMjl9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwyMjIzLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjE5NTUzLjk1OTc0MjA1NDQsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjYwOTk5OTk5NjM5MixcInBpZFwiOjQzLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJJLkkuSS5JXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzdhOGIyOWRmLWRkYjktNDQ0MC1hNWVjLTliZTI0OGRiMzU1ZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxMzMwfV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlszMTY5MDc3OCw1NzQsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo1NjMzLjk2ODE1Nzc5ODQwMixcIm9ubGluZU1vbmV5TWFkZVwiOjMxNjkwNzc4LFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjYwOTk5OTk5NjM5MixcInBpZFwiOjQ0LFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIkkuSS5JLklcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mMDQ5ODE2Mi0xYTBmLTQyZmQtODJjYi00NWYyMzNmNmM3NzBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTMzMX1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoxODcsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIkkuSS5JLklcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcIkkuSS5JLklcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDU3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mMjYwZmE0Yy1lZmE4LTQ0NTktODVmZS0zMDVkOTQ0YjBiZTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcyNH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJJLkkuSS5JXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzk4YTQzMDYwLTU5ODYtNDM0MC05ZDE4LTA3OGM1NTY4MDljZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzI1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIkkuSS5JLklcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcyNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy80ZDA1NmVlZC03MGExLTQ1MTMtYWM3My1jYTdmNGI2N2Q4NDdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcyNn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIkkuSS5JLklcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcyNixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83MjVkMTFhZC03YjBjLTRiNzYtYmIzNi0yNzk1Y2FjNDVmYzFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MTh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiSS5JLkkuSVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQxOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiSS5JLkkuSVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NjIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIkkuSS5JLklcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDYzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcIm5ldGxpbmtcIl0sXCJzbXRwUG9ydE9wZW5cIjp0cnVlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MyxcIm9wZW5Qb3J0Q291bnRcIjozLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjozNTksXCJzZXJ2ZXJHcm93dGhcIjowfX0sXCJhdm1uaXRlLTAyaFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjp0cnVlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImF2bW5pdGUtMDJoXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI0Ni4xLjYuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MTI4LFwibWVzc2FnZXNcIjpbXCJkZW1vY3JhY3ktaXMtZGVhZC5saXRcIl0sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJOaXRlU2VjXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjEyNy40LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsMTA1XX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjkyMy42MDEzMzczNDQwMDAyLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NjM3OS42MDk5OTk5OTYzOTIsXCJwaWRcIjozMyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiYXZtbml0ZS0wMmhcIixcInRocmVhZHNcIjo3LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZmVhOGE1ZjktMDg1OC00OGRmLTkyMWItZDQ3NTg5YjhiN2Y4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMDd9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwxMTAyLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjk2OTMuNDE1OTQwNTA1NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNjA5OTk5OTk2MzkyLFwicGlkXCI6MzQsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImF2bW5pdGUtMDJoXCIsXCJ0aHJlYWRzXCI6NTgsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vY2FlN2Y2NjgtMDgwOS00Mjk5LWI1ZDktNTJjMTI0MDAyOTA2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQxMDh9XX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzE0MzMzOTcwLDI1OSwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjI2MTYuODcwNDU1ODA4LFwib25saW5lTW9uZXlNYWRlXCI6MTQzMzM5NzAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjYzNzkuNjA5OTk5OTk2MzkyLFwicGlkXCI6MzUsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiYXZtbml0ZS0wMmhcIixcInRocmVhZHNcIjo3LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2QxNWU3YjFiLTdjZDctNGYzOC1hMGYwLTkyNGIwYWI2ZGU5MVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0MTA5fV19fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjE4NSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiYXZtbml0ZS0wMmhcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImF2bW5pdGUtMDJoXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ2NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vY2M2MjJlYjItMjI3YS00NTk2LTlkYmEtYzc1NmZkYzZhNmU0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiYXZtbml0ZS0wMmhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOWYxZTNiODEtMGE1YS00MTVmLTliZGUtN2QyOWEyY2UzZWZlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MTl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiYXZtbml0ZS0wMmhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcxOSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kOTkyZjQ0Mi05Y2Y3LTRiYTYtYTY0Yy1lYTU3NTczYjRjZDJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTcyMH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImF2bW5pdGUtMDJoXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MjAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDNiN2Q5ZjktZTY1Yy00OWIyLWJmMDktMDgxNmFiNWQ2ZGY0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDE2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImF2bW5pdGUtMDJoXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDE2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJhdm1uaXRlLTAyaFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NjksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImF2bW5pdGUtMDJoXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ3MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJuZW8tbmV0XCIsXCJzeXNjb3JlXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjp0cnVlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOmZhbHNlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MCxcImhhY2tEaWZmaWN1bHR5XCI6MCxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjoyLFwib3BlblBvcnRDb3VudFwiOjIsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjIwNCxcInNlcnZlckdyb3d0aFwiOjB9fSxcIi5cIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIi5cIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjU3LjQuOS44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoxNixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCIuXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImhlbGlvc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6ZmFsc2UsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjowLFwiaGFja0RpZmZpY3VsdHlcIjowLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjQsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6NTE0LFwic2VydmVyR3Jvd3RoXCI6MH19LFwiQ1NFQ1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJDU0VDXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzOS44LjIuNlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6OCxcIm1lc3NhZ2VzXCI6W1wiZGVtb2NyYWN5LWlzLWRlYWQubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiQ3liZXJTZWNcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6NyxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCw1NywwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo1MDEuMzgzNTgzMTI5NTk5OTcsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo2Mzc5LjYwOTk5OTk5NjM5MixcInBpZFwiOjUzLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJDU0VDXCIsXCJ0aHJlYWRzXCI6MyxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iOGRkN2EyYi04YWQyLTQwMTItOTM5OC0wZmU4YjIyNTM2NzNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDExNn1dfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoxODksXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcIkNTRUNcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcIkNTRUNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDcxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJDU0VDXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ3MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTY2N2EzNGQtNjY0ZC00MmJmLThhYjctYzBmZTM2NWIzYTQyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE3MzF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiQ1NFQ1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNzMxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJDU0VDXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjQ3NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84ODM5MWQ5MS01Zjk5LTQwMTQtYjRiZi00ZTVjNGRiZjk0ZTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MjB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiQ1NFQ1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyMCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiQ1NFQ1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjo0NzYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcIkNTRUNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDc3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBsZXQgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIG5zLnRwcmludChcXFwiZmFybWluZyBhbmQgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICBjb25zdCBtb25leVRocmVzaCA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgKiAwLjk7XFxuICBjb25zdCBzZWN1cml0eVRocmVzaCA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KSArIDI7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBpZiAobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpID4gc2VjdXJpdHlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgfSBlbHNlIGlmIChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIDwgbW9uZXlUaHJlc2gpIHtcXG4gICAgICBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICB9XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImZhcm0taGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTgxZjBlYTUtNDkwYS00M2U1LWIzOTYtZjMxZDUxMDVkNjViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjM1OX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoyLjQsXCJzZXJ2ZXJcIjpcIkNTRUNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6NDc4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcInNpZ21hLWNvc21ldGljc1wiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6MSxcIm9wZW5Qb3J0Q291bnRcIjoxLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo1MSxcInNlcnZlckdyb3d0aFwiOjB9fSxcIlRoZS1DYXZlXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjpmYWxzZSxcImhvc3RuYW1lXCI6XCJUaGUtQ2F2ZVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMS41LjEuM1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MCxcIm1lc3NhZ2VzXCI6W1wiYWxwaGEtb21lZ2EubGl0XCJdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiSGVsaW9zXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltcImNsYXJraW5jXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MjUsXCJzZXJ2ZXJHcm93dGhcIjowfX0sXCJ3MHIxZF9kNDNtMG5cIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOmZhbHNlLFwiaG9zdG5hbWVcIjpcIncwcjFkX2Q0M20wblwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiOTUuOS43LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjAsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwidzByMWRfZDQzbTBuXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjAsXCJydW5uaW5nU2NyaXB0c1wiOltdLFwic2NyaXB0c1wiOltdLFwic2VydmVyc09uTmV0d29ya1wiOltdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjAsXCJoYWNrRGlmZmljdWx0eVwiOjAsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjo5MDAwLFwic2VydmVyR3Jvd3RoXCI6MH19LFwiZGFya3dlYlwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjp0cnVlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcImRhcmt3ZWJcIixcImh0dHBQb3J0T3BlblwiOnRydWUsXCJpcFwiOlwiMi44LjIuMVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MSxcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MCxcInJ1bm5pbmdTY3JpcHRzXCI6W10sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcImRhcmt3ZWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTQzOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiZGFya3dlYlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNDQwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcImRhcmt3ZWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTQ0MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwiZGFya3dlYlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNDQ0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwiZGFya3dlYlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoxNDQ2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJkYXJrd2ViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjE0NDgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcImRhcmt3ZWJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MTQ1MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6dHJ1ZSxcInNxbFBvcnRPcGVuXCI6dHJ1ZSxcInNzaFBvcnRPcGVuXCI6dHJ1ZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjpmYWxzZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjo1LFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0wXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtMFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNC4xLjEuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTUuNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjIzLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTBcIixcInRocmVhZHNcIjoxNDYsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0wXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzQ1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9jNDdhZWI0Zi0xODdhLTQ5OTAtYWM2NS1mNzc4NmNkY2QyOTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNTh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0wXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzU4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8xMWVkYzNkYS0yZWQxLTRmNWYtODRmNi04YzIyNWQ1MDY4ZThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNTl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0wXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzU5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2MyMjNkYWFmLWFlYWUtNGY1NS05ZTI1LWQ1ODdmZTRjNDA3Y1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM2MH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM2MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82N2QwNGQ3OC0xMjEwLTQ4YjMtYTVjZi03Mzg0NjAyMmU0YjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0wXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDU0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM1NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTFcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0xXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIxNS40LjguNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTUuNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjI0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTFcIixcInRocmVhZHNcIjoxNDYsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0xXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzYyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iZjViYTVmYS1jNTUxLTRkZjctODlkNC02MTRhZjAyZTQ5ZTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNzV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzc1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iYWQwNmFlNS0zZDNhLTQ5NjMtYmU1ZS1kZWU4M2JkZmVkZDhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNzZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzc2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNlNWYxMmEwLTBmYmEtNDVjNS1iMTI4LTNiNWU2ZmRhOTE0MFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM3N31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM3NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy81MjQ4MGI2Yi1iZDMxLTRmOTEtYjk2ZS04MGVmNTMxNDdhNWZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDU1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzNzIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM3NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTJcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0yXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzNS4yLjkuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTUuNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjI1LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTJcIixcInRocmVhZHNcIjoxNDYsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0yXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzc5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kMTE1MDVlMy1lMzlmLTQ5MGQtYTViMy0yNjk1MGJmZTYzYzhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzOTJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzkyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9jYzhmYmQ2ZS03MWYxLTQ4MTctODI5ZS00ZDQ5NWY2Y2UzNmZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzOTN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzkzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzc1NzgwZGEzLWM0ZjgtNDI5MS1hZmQwLTFkN2JjYjI0ZTBkYVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM5NH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM5NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hZDA3NTU5Yy02NDlhLTQ2N2QtYTEwOS1iNjk5YWMwMWU1OWFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDU2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjMzODksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzM5MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0zXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI0MS43LjcuNVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTUuNSxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjI2LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTNcIixcInRocmVhZHNcIjo5MSxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsOC43MDE2MjA0NzkzMjQ0ODZdLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIyNyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0zXCIsXCJ0aHJlYWRzXCI6NTUsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzMzk2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy81ZjM4MGQxMC0xOTJiLTRiZjEtYjRlNS1lMGM0YTIwM2YxYThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0MDl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDA5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy85YTVhNjlmMy1hYjQwLTRmMmEtYmY0MS05OGU5NzkwZTg1NjlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0MTB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDEwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzgwYzc3NWJhLTRlMTUtNGZhZC04NTliLTU3NzhlOWY0OGVhOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQxMX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQxMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8yNTBhNDY2YS1kOWUwLTQ1ZjAtYmNkMS01YmEwOWVhNjEyMmNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTd9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0zXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDU3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2QzZjZlYWQ1LTMxMTAtNDY5OC05MzNmLWY0NTljZjcwZDIwNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ1OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NTgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQwOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTRcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi00XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4MS44LjAuMVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4yMTAwMDAwMDAxNTMzLFwicGlkXCI6OTYsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMzUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMwODcuNDY3MzI3NjkyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMjEwMDAwMDAwMTUzMyxcInBpZFwiOjk3LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTRcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6Wzc2OTY5NjIsMTQwLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTI2Mi4yNTUxNjEwMzY3OTk4LFwib25saW5lTW9uZXlNYWRlXCI6NzY5Njk2MixcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4yMTAwMDAwMDAxNTMzLFwicGlkXCI6OTgsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi00XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTkwLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTRcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQxMyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMDNkMTE0NTItNWVkOS00ODJkLTkzNzMtZGZlMTllYzZjM2RkXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDI2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQyNixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYWRhYTQwZDAtYTUyOC00YzdhLWJlMmUtMTQ2YTc5MGIyMWI2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDI3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQyNyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lZTA3MjA0MC04NDkyLTQwYzUtYmViNi1hNzlkZTBmZThiM2ZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0Mjh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0MjgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTk3MmQ0ZGUtMjYyZi00NmQ1LTljNmYtYTFmNzcyMDc2NTI3XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDIxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi00XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDIzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0MjUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi01XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtNVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiODUuNi4xLjFcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMjEwMDAwMDAwMTUzMyxcInBpZFwiOjEwMCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi01XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4yMTAwMDAwMDAxNTMzLFwicGlkXCI6MTAxLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTVcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzMwNzQwMzYsNTYsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo3MDguMDk0MzU4NjMwMzk5OSxcIm9ubGluZU1vbmV5TWFkZVwiOjMwNzQwMzYsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMjEwMDAwMDAwMTUzMyxcInBpZFwiOjEwMixcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTVcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoxOTEsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNVwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi01XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDMwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lZGU1NGI2MS0yMmVhLTRkYmUtYjAyYi01MWU0Mjg3NTFhMjNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NDN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi01XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDQzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy82Y2Q2NmI2NS0wZTdjLTQyNDUtYTk2My01MjA4ZWU5ZWY1N2VcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NDR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi01XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDQ0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzk5NDgzYzBjLTQ0NTgtNGU2Ny1iYmZlLWRmN2FhNzAxZWU4NVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ0NX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ0NSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8yZDY4ZmYwYi01NmY1LTQxYzgtOWU0Yy0wOTQ5YzBhMzNkNjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MjJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi01XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDIyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NDAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ0MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTZcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi02XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIxLjQuNi40XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyNTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjI1NC44LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsNDJdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzY5LjQ0MDUzNDkzNzYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjIxMDAwMDAwMDE1MzMsXCJwaWRcIjoxMDQsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNlwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMzUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMwODcuNDY3MzI3NjkyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMjEwMDAwMDAwMTUzMyxcInBpZFwiOjEwNSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi02XCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls1MzY3OTA4LDk4LDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6OTg1LjE3NDc1OTgzMzU5OTksXCJvbmxpbmVNb25leU1hZGVcIjo1MzY3OTA4LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjIxMDAwMDAwMDE1MzMsXCJwaWRcIjoxMDYsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi02XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTkyLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTZcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ0NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMWQ5NTgwZjQtNzA4ZC00ZjlmLTk1MTktOGM2ZDZiYWEwOTVjXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDYwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ2MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMTg5NjcyNjEtYTMwMi00MjFiLWJjNTMtM2FiM2ZhYjhjNzQ1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDYxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ2MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hZTAzMmQ5Ni1hNDcyLTRiZjMtYjFhMi0zZDM5OTg3NTM1MThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NjJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NjIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzQ2NTk5MzUtYWQ1MS00YWRhLWFhN2YtYjAyNTg3NTU5Y2UyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDIzfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyMyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi02XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDU3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NTksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi03XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtN1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMjMuOC40LjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjEwOCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi03XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTA5LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTdcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzU0MDQ5MjQsOTgsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo5ODUuMTc0NzU5ODMzNTk5OSxcIm9ubGluZU1vbmV5TWFkZVwiOjU0MDQ5MjQsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjExMCxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTdcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoxOTMsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtN1wiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi03XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDY0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84OTk5ZWIzMC1mM2FlLTQ1NDMtOWQ1ZS05MTJkMjY4YTU4YzVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0Nzd9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi03XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDc3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy81Y2I5ZDZlNy0wNjdkLTQ0NDEtOTIzMy0yMThlMWYxZjk2OTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0Nzh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi03XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDc4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzFhMGMxZjU0LTAxYmMtNDRjMS1hZTc5LTEwMGE0NTAxYjlhYlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ3OX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ3OSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lM2Q5ODFiYi02MDQzLTRkNjYtYjIyOS02MzFhOTdlNjA0ZGJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MjR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi03XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDI0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0NzQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ3NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LThcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi04XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI4NS43LjIuNVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTEyLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LThcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDM1MSwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMDg3LjQ2NzMyNzY5MjgsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjAxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMTMsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOFwiLFwidGhyZWFkc1wiOjExNyxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbNjkwODM5OCwxMjYsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMTY5Ljg5NTAyNzMwMjM5OTcsXCJvbmxpbmVNb25leU1hZGVcIjo2OTA4Mzk4LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjAxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMTQsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi04XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTk0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LThcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ4MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vODA5MzY5MTctYTVhOS00MzYwLWI2Y2YtZjdlMjYxZDc4MjkwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDk0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ5NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vN2M3MGE0MTctNGI3Yy00MzI0LThmYjgtMmQyOGFmYmEzMzI2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDk1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ5NSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iM2FjYjU1Yy1mODMyLTRjMTctOGNiMS01YTU1ODk5YTZiZTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0OTZ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0OTYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzNiOGYzYzMtZTI0NC00ZDMzLWI0NjAtMWFkZmZjZTkwNzlmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDI1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi04XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNDkxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM0OTMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi05XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtOVwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiMTUuMy4xLjNcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjExNixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi05XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTE3LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTlcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzYxMDEzNDAsMTEyLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTA3Ny41MzQ4OTM1NjgsXCJvbmxpbmVNb25leU1hZGVcIjo2MTAxMzQwLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjAxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMTgsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi05XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTk1LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTlcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzQ5OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZTgzNjhhYmItYzZjNi00MDgzLTg4MDEtNDZlZGQ2YmVmZWQ5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTExfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzUxMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZWVjMWMzYTktY2MzOS00ODVlLWFhNDMtNWUyNTU4NjMwZDljXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTEyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzUxMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hMDY5MTdkNS1jODc5LTQ0MTAtYTMzOS03ZmZhMTllMTYyMGJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MTN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MTMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNjQ2N2M0ZTctYjY0Zi00MWRhLWIyNzEtNGVkOTdhNTUzN2I0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDI2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyNixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi05XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTA4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MTAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0xMFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTEwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzNC44LjIuN1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTIwLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEwXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTIxLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEwXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls0NzA3MDY2LDg0LDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6ODkyLjgxNDYyNjA5OTE5OTksXCJvbmxpbmVNb25leU1hZGVcIjo0NzA3MDY2LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjAxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMjIsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xMFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjE5NixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xMFwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0xMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzUxNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzM0OGQwZTktMGU1NS00YjZkLWJhNzktZGFmZDgxYTA4MjkxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTI4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MjgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzU3NGZmYWVkLWYyZjctNGNlMy1iMzM3LTJlNzc5MTgyOTMxOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzUyOX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTI5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2Q2ZDJlYTZhLTZmMzgtNDcxNC1iNTUwLWU4MGFjNGU3ZGFmZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzUzMH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MzAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTdlYTY2NzMtNDBlNC00Njg0LWE3N2ItNTliNWZmZDY5Nzg5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDI3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MjcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MjUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1MjcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0xMVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTExXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzNi42LjYuNFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTI0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTExXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTI1LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTExXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls2ODQ4MjQwLDEyNiwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjExNjkuODk1MDI3MzAyNCxcIm9ubGluZU1vbmV5TWFkZVwiOjY4NDgyNDAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjEyNixcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTExXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTk3LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTExXCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJwc3J2LTExXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTMyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kMDZlZWYwOC1lY2M3LTQxZDYtOWQ3OS0xNTI3YzMyNDhhOTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1NDV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU0NSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNWZhZGQwODQtNWNhYi00MGI5LWI5ZWEtNmY2NGE5YzVmOWIxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTQ2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1NDYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMDQwMGUxNWMtZmExOS00MDg0LThmZTUtZDBiOWQ2MmI5YmQ2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTQ3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU0NyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9kNGVjZDY0Yi01ODQ1LTQwYTAtYjUwNS00NzJhY2E4Yzg0MjZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0Mjh9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyOCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU0MixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU0NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTEyXCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtMTJcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjg3LjguOS4zXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyNTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjI1NC44LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsNDJdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzY5LjQ0MDUzNDkzNzYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjAxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMjgsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTJcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDM1MSwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMDg3LjQ2NzMyNzY5MjgsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjgwLjAxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMjksXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTJcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6Wzc1OTI1NzgsMTQwLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTI2Mi4yNTUxNjEwMzY4LFwib25saW5lTW9uZXlNYWRlXCI6NzU5MjU3OCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI4MC4wMTAwMDAwMDAxNTMyLFwicGlkXCI6MTMwLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTJcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoxOTgsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTJcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtMTJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1NDksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RjZDc4M2U0LTg5MTQtNGE3NC1iMzQ2LTk2OTRhYWJjZTcwZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU2Mn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTYyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hODUwMTg1MS0zMDdkLTQ1NGYtYmE1ZC0yOTg1M2ViMDE2YTFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1NjN9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU2MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy80OWYwNjlkZC05Nzk1LTQ4YmUtYWRkNy1jMzYzYTViMGZjOGRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1NjR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTEyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTY0LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2YzZDY3OTQ2LTBlNTYtNGYxYS04OGNhLTA0NGVkZGNjOTIzMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQyOX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDI5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTU5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTEyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTYxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzcnYtMTNcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0xM1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDIuOS44LjlcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjEzMixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xM1wiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMzUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMwODcuNDY3MzI3NjkyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjEzMyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xM1wiLFwidGhyZWFkc1wiOjExNyxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbNjA2OTA0MiwxMTIsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMDc3LjUzNDg5MzU2OCxcIm9ubGluZU1vbmV5TWFkZVwiOjYwNjkwNDIsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyODAuMDEwMDAwMDAwMTUzMixcInBpZFwiOjEzNCxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTEzXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MTk5LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTEzXCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJwc3J2LTEzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTY2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9mNmJhYzYzZi1lOGY1LTRmY2EtOThjZC1kZjQwNTlkODZiY2FcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1Nzl9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU3OSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzMwMjhmZGYtMTJlZS00MGZmLWI4MGEtMjMyYjE5NmRhMWU1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTgwfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1ODAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMjU1MTExNGYtZjNiNi00NTczLTljOGEtOWY1ZDY5Y2UyZmViXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTgxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU4MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9jNmVjNzY5OC0yMzAxLTQ2NmItYmQ3Mi1iNzU3ODU0MTI0M2FcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQzMCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU3NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU3OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTE0XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtMTRcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjk5LjIuNC4wXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyNTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjI1NC44LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsNDJdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzY5LjQ0MDUzNDkzNzYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMzYsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDM1MSwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMDg3LjQ2NzMyNzY5MjgsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMzcsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzYwOTk4MDAsMTEyLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTA3Ny41MzQ4OTM1NjgsXCJvbmxpbmVNb25leU1hZGVcIjo2MDk5ODAwLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxMzgsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xNFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIwMCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xNFwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0xNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU4MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMDJiODdlZmUtMjBlNS00MzNmLWI3YmItYjI2ZWY5ZjI5ZTEzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTk2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1OTYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2E4N2QyYTEzLTQ1NGMtNDMwNC1hOWY4LTg1NWI2Nzk2NzFlZlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU5N31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNTk3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2U0ZDM5YzE4LTBjNWMtNGQ5OC1hYzNlLTRhMzI0OWVjYWUzOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzU5OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1OTgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZGJmMDdlYjktMTI0Ny00NWY0LTg5NTktMDhkZjlkMzk0NDI4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDMxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1OTMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM1OTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0xNVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTE1XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIxOC44LjEuM1wiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS44MTAwMDAwMDAxNTMyLFwicGlkXCI6MTQwLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS44MTAwMDAwMDAxNTMyLFwicGlkXCI6MTQxLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls2MTY4NjY2LDExMiwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjEwNzcuNTM0ODkzNTY4LFwib25saW5lTW9uZXlNYWRlXCI6NjE2ODY2NixcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS44MTAwMDAwMDAxNTMyLFwicGlkXCI6MTQyLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTVcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMDEsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTVcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtMTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2MDAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzQwYTM3MmZmLWY0ZGEtNDFmYy04Y2MyLTZiZWQwYjQzMWY0NFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzYxM31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjEzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83MWVlZTAzYi0xYzFkLTQ4NjQtYjkzYy0wMDZmOTFiMTA3OTVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2MTR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xNVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzYxNCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9hZjFkOTY4Yy1jY2M5LTRkYmMtOGRmNC1lMjcyYmViMjQ4NjVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2MTV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjE1LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RjYWMyOWQ5LTc4NDYtNGYwMS1hZmYzLTdjNjhmYTFjZmVkNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQzMn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDMyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjEwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTE1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjEyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzcnYtMTZcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0xNlwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNjUuMC44LjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuODEwMDAwMDAwMTUzMixcInBpZFwiOjE0NCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xNlwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMzUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMwODcuNDY3MzI3NjkyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuODEwMDAwMDAwMTUzMixcInBpZFwiOjE0NSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xNlwiLFwidGhyZWFkc1wiOjExNyxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMzA3OTk0NCw1NiwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjcwOC4wOTQzNTg2MzAzOTk5LFwib25saW5lTW9uZXlNYWRlXCI6MzA3OTk0NCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS44MTAwMDAwMDAxNTMyLFwicGlkXCI6MTQ2LFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTZcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMDIsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTZcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtMTZcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2MTcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzA0YjFmNTI3LTFjYmQtNGI5ZC04ZTU2LTQyZDhjYzgxNTY5OFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzYzMH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjMwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9iZGVmMDUxMy03MmYyLTQ4MTktOGQzYi0zMzJkZThhMThmYzVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2MzF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xNlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzYzMSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy8zY2I1NGIxNC0wZGJhLTQ3MWYtOTA1Ny1hODIzZjM1ZDFlYWRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2MzJ9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjMyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzY5ZjY0YWZkLWY5MjItNDQxZS04M2VkLWM0MjgyYjhhMTAwN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQzM31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDMzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjI3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTE2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjI5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzcnYtMTdcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0xN1wiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNDMuOS4zLjBcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuODEwMDAwMDAwMTUzMixcInBpZFwiOjE0OCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xN1wiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMzUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMwODcuNDY3MzI3NjkyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuODEwMDAwMDAwMTUzMixcInBpZFwiOjE0OSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xN1wiLFwidGhyZWFkc1wiOjExNyxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbNjk0NDMwOCwxMjYsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMTY5Ljg5NTAyNzMwMjQsXCJvbmxpbmVNb25leU1hZGVcIjo2OTQ0MzA4LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNTAsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xN1wiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIwMyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xN1wiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0xN1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzYzNCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vODRlZmMyZTQtZTViMS00NjA5LTkzNjUtNTI5ODk3YTZlNzQ0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjQ3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NDcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2RiMGM4ODAzLTZjY2ItNGU5ZS1hMDIyLTliNmYxODRlYzZkOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY0OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE3XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjQ4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNhNTAyNjE4LTJiMjYtNDZjZC05N2I2LTE5ODA1OGQ2NGVmZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY0OX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NDksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vOWNmZjRhYzEtYWMxYy00OTFmLWFkNDktY2NlMzRkZWE1YTVlXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDM0fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NDQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NDYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0xOFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTE4XCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIyLjUuNi4xXCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyNTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjI1NC44LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsNDJdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzY5LjQ0MDUzNDkzNzYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNTIsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMThcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDM1MSwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMDg3LjQ2NzMyNzY5MjgsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNTMsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMThcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzUzODEwMTIsOTgsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjo5ODUuMTc0NzU5ODMzNTk5OSxcIm9ubGluZU1vbmV5TWFkZVwiOjUzODEwMTIsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuODEwMDAwMDAwMTUzMixcInBpZFwiOjE1NCxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTE4XCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1widGhlLWh1YlwiLDYuNTc3OTQwNzY3ODgxMjddLFwiZGF0YU1hcFwiOnt9LFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjU5Ni44MDk5OTk5OTk5OTg4LFwicGlkXCI6MjA0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE4XCIsXCJ0aHJlYWRzXCI6MSxcImRlcGVuZGVuY2llc1wiOltdfX1dLFwic2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKipcXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZWN1cnNpdmUgbmV0b3dyayBzY2FuXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NjYW4obnMsIHNydiwgbmV0KSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIW5ldC5pbmNsdWRlcyhzcnYpKTtcXG4gIC8vIG5zLnByaW50KGBzdWJuZXQgb2YgJHtzcnZ9IGhhcyAke25vZGVzfWApO1xcbiAgbmV0LnB1c2goc3J2KTtcXG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcXG4gICAgcmVjX3NjYW4obnMsIG5vZGUsIG5ldCk7XFxuICB9KTtcXG59XFxuXFxuLyoqXFxuICogU2NhbiB0aGUgcmVhY2hhYmxlIG5ldHdvcmtcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNjYW4obnMpIHtcXG4gIGxldCBuZXQgPSBbXTtcXG4gIHJlY19zY2FuKG5zLCBcXFwiaG9tZVxcXCIsIG5ldCk7XFxuICAvLyBucy5wcmludChgZm91bmQgJHtuZXQubGVuZ3RofSBzZXJ2ZXJzYCk7XFxuICByZXR1cm4gbmV0O1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gcmVjX3NlYXJjaChucywgc3J2LCB0Z3QsIHBhdGgpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhcGF0aC5pbmNsdWRlcyhzcnYpKTtcXG4gIHBhdGgucHVzaChzcnYpO1xcbiAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xcbiAgICBpZiAobm9kZSA9PSB0Z3QpIHtcXG4gICAgICBwYXRoLnB1c2gobm9kZSk7XFxuICAgICAgbnMudHByaW50ZihgZm91bmQgJHt0Z3R9LCByb3V0ZTogJHtwYXRoLmpvaW4oXFxcIiAtPiBcXFwiKX1gKTtcXG4gICAgICByZXR1cm4gcGF0aDtcXG4gICAgfSBlbHNlIHtcXG4gICAgICBsZXQgbXBhdGggPSBbLi4ucGF0aF07XFxuICAgICAgY29uc3QgcmVzID0gcmVjX3NlYXJjaChucywgbm9kZSwgdGd0LCBtcGF0aCk7XFxuICAgICAgaWYgKHJlcyAhPT0gbnVsbCkgcmV0dXJuIHJlcztcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIG51bGw7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2gobnMsIHRndCkge1xcbiAgbGV0IHBhdGggPSBbXTtcXG4gIHJldHVybiByZWNfc2VhcmNoKG5zLCBcXFwiaG9tZVxcXCIsIHRndCwgcGF0aCk7XFxufVxcblxcbi8qKlxcbiAqIFJ1biBhIHNjcmlwdCB3aXRoIG1heGltdW0gdGhyZWFkcyBvbiB0YXJnZXQgaG9zdFxcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFyZ2V0U2NyaXB0IHNjcmlwdCB0byBydW5cXG4gKiBAcGFyYW0ge3N0cmluZ30gc3J2IGhvc3QgdG8gcnVuIG9uXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBydW5fbWF4KG5zLCB0YXJnZXRTY3JpcHQsIHNydikge1xcbiAgY29uc3QgcnVuU2l6ZSA9IG5zLmdldFNjcmlwdFJhbSh0YXJnZXRTY3JpcHQpO1xcbiAgY29uc3Qgc3J2UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNydik7XFxuXFxuICBjb25zdCB0aHJlYWRzID0gTWF0aC5mbG9vcihzcnZSYW0gLyBydW5TaXplKTtcXG4gIGlmICh0aHJlYWRzID4gMCkge1xcbiAgICBucy50cHJpbnQoXFxuICAgICAgYCAgc3RhcnRpbmcgJHt0YXJnZXRTY3JpcHR9IG9uICR7c3J2fSB3aXRoIC10ICR7dGhyZWFkc30gYW5kIGFyZ3MgJHt0YXJnZXRBcmdzfWBcXG4gICAgKTtcXG4gICAgbnMuZXhlYyh0YXJnZXRTY3JpcHQsIHNydiwgdGhyZWFkcywgLi4udGFyZ2V0QXJncyk7XFxuICB9XFxufVxcblxcbmV4cG9ydCBjb25zdCBwZXJjZW50YWdlID0gKHBhcnQsIHRvdGFsKSA9PiBNYXRoLnJvdW5kKChwYXJ0IC8gdG90YWwpICogMTAwKTtcXG5cXG4vL3RvZG8gc3R5bGUgYXMgayxtLGJcXG5leHBvcnQgY29uc3QgZm10ID0gKG51bWJlcikgPT4ge1xcbiAgaWYgKG51bWJlciA8IDFlMykgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgzKTtcXG4gIGlmIChudW1iZXIgPiAxZTMgJiYgbnVtYmVyIDwgMWU2KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUzKS50b0ZpeGVkKDMpICsgXFxcImtcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlNiAmJiBudW1iZXIgPCAxZTkpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTYpLnRvRml4ZWQoMykgKyBcXFwibVxcXCI7XFxuICBpZiAobnVtYmVyID4gMWU5ICYmIG51bWJlciA8IDFlMTIpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTkpLnRvRml4ZWQoMykgKyBcXFwiYlxcXCI7XFxuICBpZiAobnVtYmVyID4gMWUxMikgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMTIpLnRvRml4ZWQoMykgKyBcXFwidFxcXCI7XFxufTtcXG5cXG5leHBvcnQgZnVuY3Rpb24gdGZtdChtc2VjKSB7XFxuICBsZXQgc2VjcyA9IG1zZWMgLyAxMDAwO1xcbiAgbGV0IG1pbnMgPSBzZWNzID4gNjAgPyBNYXRoLmZsb29yKHNlY3MgLyA2MCkgOiAwO1xcbiAgc2VjcyA9IE1hdGgubWF4KE1hdGguZmxvb3Ioc2VjcyAtIG1pbnMgKiA2MCksIDApO1xcbiAgbGV0IGhvdXJzID0gbWlucyA+IDYwID8gbWlucyAvIDYwIDogMDtcXG4gIG1pbnMgPSBNYXRoLm1heChNYXRoLmZsb29yKG1pbnMgLSBob3VycyAqIDYwKSwgMCk7XFxuICByZXR1cm4gYCR7aG91cnMgPyBob3VycyArIFxcXCJoIFxcXCIgOiBcXFwiXFxcIn0ke21pbnMgPyBtaW5zICsgXFxcIm0gXFxcIiA6IFxcXCJcXFwifSR7XFxuICAgIHNlY3MgPyBzZWNzICsgXFxcInNcXFwiIDogXFxcIlxcXCJcXG4gIH1gO1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9pbmZvKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gICAgc2VjX21pbjogbWluU2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtaW5TZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfbW9uZXkobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9zZWMobnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4U2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgc2VjX21pbjogbWF4U2VjLFxcbiAgICBzZWNfY3VycjogY3VyclNlYyxcXG4gICAgc2VjX3BjdDogcGVyY2VudGFnZShjdXJyU2VjLCBtYXhTZWMpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiB0b3BfbW9uZXkobnMsIGNvdW50KSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7IG5hbWU6IHNydiwgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpIH0pKTtcXG5cXG4gIGNvbnN0IG91dHB1dCA9IGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBhLm1vbmV5X21heCAtIGIubW9uZXlfbWF4KVxcbiAgICAuc2xpY2UoLWNvdW50KTsgLy90b3AgNVxcbn1cXG5cXG4vKipcXG4gKiBnZXQgYSBsaXN0IG9mIHRvcCBncm93dGggdGFyZ2V0c1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzb3J0ZWRfdGFyZ2V0cyhucykge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoe1xcbiAgICAgIG5hbWU6IHNydixcXG4gICAgICBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydiksXFxuICAgICAgc2VjX21pbjogbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzcnYpLFxcbiAgICAgIGdyb3d0aDogbnMuZ2V0U2VydmVyR3Jvd3RoKHNydiksXFxuICAgIH0pKVxcbiAgICAubWFwKChzcnYpID0+ICh7IC4uLnNydiwgc2NvcmU6IHNydi5tb25leV9tYXggLyBzcnYuc2VjX21pbiB9KSk7XFxuXFxuICByZXR1cm4gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGIuZ3Jvd3RoIC0gYS5ncm93dGgpO1xcbn1cXG5cXG4vKipcXG4gKiAgZmluZCBiZXN0IHRhcmdldCBhbW9uZyBjdXJyZW50bHkgb3duZWQgc2VydmVyc1xcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBiZXN0X3RhcmdldChucykge1xcbiAgY29uc3Qgb3V0cHV0ID0gc29ydGVkX3RhcmdldHMobnMpLmZpbHRlcigodGd0KSA9PiB0Z3QubmFtZSAhPT0gXFxcIm4wMGRsZXNcXFwiKTtcXG5cXG4gIGNvbnN0IG1heEdyb3d0aCA9IG91dHB1dC5maWx0ZXIoKHRndCkgPT4gdGd0Lmdyb3d0aCA+PSBvdXRwdXRbMF0uZ3Jvd3RoKTtcXG5cXG4gIGxldCB0YXJnZXQgPSBtYXhHcm93dGhbMF07XFxuXFxuICBpZiAobWF4R3Jvd3RoLmxlbmd0aCA+IDEpIHtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX01vbmV5ID0gbWF4R3Jvd3RoLnNvcnQoKGEsIGIpID0+IGIubW9uZXlfbWF4IC0gYS5tb25leV9tYXgpO1xcbiAgICBucy50cHJpbnRmKFxcbiAgICAgIGBmb3VuZCAke21heEdyb3d0aF9Nb25leS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgIG1heEdyb3d0aF9Nb25leVswXS5ncm93dGhcXG4gICAgICB9OiAke21heEdyb3d0aF9Nb25leS5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICApO1xcbiAgICBjb25zdCBtYXhHcm93dGhfbWF4TW9uZXkgPSBtYXhHcm93dGhfTW9uZXkuZmlsdGVyKFxcbiAgICAgICh0Z3QpID0+IHRndC5tb25leV9tYXggPj0gbWF4R3Jvd3RoX01vbmV5WzBdLm1vbmV5X21heFxcbiAgICApO1xcbiAgICBpZiAobWF4R3Jvd3RoX21heE1vbmV5Lmxlbmd0aCA+IDEpIHtcXG4gICAgICAvLyBzZXZlcmFsIHdpdGggbWF4IGdyb3d0aCBhbmQgbW9uZXlcXG4gICAgICBjb25zdCBtYXhfZ20gPSBtYXhHcm93dGhfbWF4TW9uZXkuc29ydCgoYSwgYikgPT4gYS5zZWNfbWluIC0gYi5zZWNfbWluKTtcXG4gICAgICBucy50cHJpbnRmKFxcbiAgICAgICAgYGZvdW5kICR7bWF4X2dtLmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgICBtYXhfZ21bMF0uZ3Jvd3RoXFxuICAgICAgICB9IGFuZCBtYXhNb25leSAke21heF9nbVswXS5tb25leV9tYXh9OiAke21heF9nbVxcbiAgICAgICAgICAubWFwKChlbG0pID0+IGVsbS5uYW1lKVxcbiAgICAgICAgICAuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICAgKTtcXG4gICAgICB0YXJnZXQgPSBbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgdGFyZ2V0ID0gbWF4R3Jvd3RoX21heE1vbmV5WzBdO1xcbiAgICB9XFxuICB9XFxuICAvL25zLnRwcmludChgYmVzdCB0YXJnZXQgd2FzIGRldGVybWluZWQgYXMgJHtKU09OLnN0cmluZ2lmeSh0YXJnZXQpfWApO1xcbiAgcmV0dXJuIHRhcmdldDtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFja2VyLWxpYi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6My44LFwic2VydmVyXCI6XCJwc3J2LTE4XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjUxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwic2NhblwiLFwiY29zdFwiOjAuMn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNjcmlwdFJhbVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heFJhbVwiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJleGVjXCIsXCJjb3N0XCI6MS4zfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4TW9uZXlcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1vbmV5QXZhaWxhYmxlXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFzUm9vdEFjY2Vzc1wiLFwiY29zdFwiOjAuMDV9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJHcm93dGhcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIHdlYWtlbiB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLndlYWtlbih0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwid2Vha2VuZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5IFxcXCIgKyBhbXQpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy84ZWU0Y2EwNS03YTAzLTQzOTEtODhlYy1iNzE1YTI5MjgwYmVcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NjR9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY2NCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIC8vIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIG5zLnByaW50KFxcXCJsb29wIGdyb3dpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5ncm93KHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJncm93biBhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZGY4OGRiOGEtNmM1OS00MjRlLWIyYjMtNjNhZTZjZTg0MDAyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjY1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMThcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NjUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgbnMucHJpbnQoXFxcImxvb3AgaGFja2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy5oYWNrKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJoYWNrZWQgdGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGZvciAkXFxcIiArIG5zLm5Gb3JtYXQoYW10KSk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMmNhMzNlYzEtMzdkZC00OTZiLWE3NTYtMWU1OTE3MGFmMjFkXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjY2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY2NixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9lYWQ3ZGEzMS1iZGJlLTQ5ZTQtYTM2OC00ZWFjOTdmMGM5ZTdcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzV9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQzNSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcIndlYWtlblwiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuZ3Jvdyhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiZ3Jvdy1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY2MSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmhhY2sobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2stYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xOFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY2MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhY2tcIixcImNvc3RcIjowLjF9XX19XSxcInNlcnZlcnNPbk5ldHdvcmtcIjpbXCJob21lXCJdLFwic210cFBvcnRPcGVuXCI6ZmFsc2UsXCJzcWxQb3J0T3BlblwiOmZhbHNlLFwic3NoUG9ydE9wZW5cIjpmYWxzZSxcInRleHRGaWxlc1wiOltdLFwicHVyY2hhc2VkQnlQbGF5ZXJcIjp0cnVlLFwiYmFja2Rvb3JJbnN0YWxsZWRcIjpmYWxzZSxcImJhc2VEaWZmaWN1bHR5XCI6MSxcImhhY2tEaWZmaWN1bHR5XCI6MSxcIm1pbkRpZmZpY3VsdHlcIjoxLFwibW9uZXlBdmFpbGFibGVcIjowLFwibW9uZXlNYXhcIjowLFwibnVtT3BlblBvcnRzUmVxdWlyZWRcIjo1LFwib3BlblBvcnRDb3VudFwiOjAsXCJyZXF1aXJlZEhhY2tpbmdTa2lsbFwiOjEsXCJzZXJ2ZXJHcm93dGhcIjoxfX0sXCJwc3J2LTE5XCI6e1wiY3RvclwiOlwiU2VydmVyXCIsXCJkYXRhXCI6e1wiY29udHJhY3RzXCI6W10sXCJjcHVDb3Jlc1wiOjEsXCJmdHBQb3J0T3BlblwiOmZhbHNlLFwiaGFzQWRtaW5SaWdodHNcIjp0cnVlLFwiaG9zdG5hbWVcIjpcInBzcnYtMTlcIixcImh0dHBQb3J0T3BlblwiOmZhbHNlLFwiaXBcIjpcIjIzLjUuNi44XCIsXCJpc0Nvbm5lY3RlZFRvXCI6ZmFsc2UsXCJtYXhSYW1cIjoyNTYsXCJtZXNzYWdlc1wiOltdLFwib3JnYW5pemF0aW9uTmFtZVwiOlwiXCIsXCJwcm9ncmFtc1wiOltdLFwicmFtVXNlZFwiOjI1NC44LFwicnVubmluZ1NjcmlwdHNcIjpbe1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDAsNDJdfSxcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzY5LjQ0MDUzNDkzNzYsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNTYsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbMCwwLDM1MSwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozMDg3LjQ2NzMyNzY5MjgsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNTcsXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcInRocmVhZHNcIjoxMTcsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzYxNjQ5MjgsMTEyLDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MTA3Ny41MzQ4OTM1NjgsXCJvbmxpbmVNb25leU1hZGVcIjo2MTY0OTI4LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNTgsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0xOVwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIwNSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0xOVwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0xOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY2OCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vM2U1YzI2NWEtNzEwNC00YTc2LWJkYmMtM2JhZTMwNGExNjJiXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjgxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2ODEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2Y5NjI0YzkwLTk2NGMtNDJmYS1hMzYxLTQ3Y2RjNmM4YWJlOVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY4Mn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTE5XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjgyLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2JjOGZjMzM0LTY3N2QtNGMwNy04OTUxLTBjZTI0OTE3MTg2N1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY4M31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2ODMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYWQxNzU1Y2QtNjQ3My00OTFhLTkyOWYtZGVmNGM2YmU1MjcyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDM2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2NzgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMTlcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2ODAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0yMFwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTIwXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI1Ni40LjIuOFwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS44MTAwMDAwMDAxNTMyLFwicGlkXCI6MTYwLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIwXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS44MTAwMDAwMDAxNTMyLFwicGlkXCI6MTYxLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIwXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls1MzA1MzU2LDk4LDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6OTg1LjE3NDc1OTgzMzU5OTksXCJvbmxpbmVNb25leU1hZGVcIjo1MzA1MzU2LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjgxMDAwMDAwMDE1MzIsXCJwaWRcIjoxNjIsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0yMFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIwNixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yMFwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0yMFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY4NSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzhiZjYxY2EtZGY1MS00M2Y2LWIyNjUtYTE2Njk1MDE1Nzg1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjk4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2OTgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2Y1ODE4NGRiLTAxZjktNDYwYS05MTQ1LWUyMTFlOGIwNjZjYVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzY5OX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIwXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNjk5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzA1ZjAzMjU3LWEwMjItNDkxYy04YWY4LTc1MjgwMmNhZjA2OFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzcwMH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MDAsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYzhjYzE4ZmEtZmU5ZS00MDRkLTg0ZjQtNmRkNTc1NWY2ZTc1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDM3fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2OTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjBcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM2OTcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0yMVwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTIxXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCI5Ny4yLjcuNlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTY0LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIxXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTY1LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIxXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls1MzUyMDQ2LDk4LDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6OTg1LjE3NDc1OTgzMzU5OTksXCJvbmxpbmVNb25leU1hZGVcIjo1MzUyMDQ2LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjYxMDAwMDAwMDE1MzEsXCJwaWRcIjoxNjYsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0yMVwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIwNyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yMVwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0yMVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzcwMixcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vMTQxZGM0ZWQtNmEyNy00Y2ViLTgyN2EtMWEzOTFiNGNlY2ExXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzE1fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MTUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2UwYWVmNmJjLWZjN2QtNGMxOS04ZDEzLTBlMDk5MDVkY2ZmYlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzcxNn1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzE2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2ZiMGUwM2EwLTFlNzktNDE1MS04MzQ3LWI5MjgzZWRlZDQ0OVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzcxN31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MTcsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vYTQ5ZGRjMTYtNTMxYy00NTA0LWIyMzUtM2QzMWUxMzg1NzZjXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDM4fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MTIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjFcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MTQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0yMlwiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTIyXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIzMi4yLjAuMlwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTY4LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIyXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTY5LFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIyXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls1NDk5NzQ2LDk4LDAsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6OTg1LjE3NDc1OTgzMzU5OTksXCJvbmxpbmVNb25leU1hZGVcIjo1NDk5NzQ2LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjYxMDAwMDAwMDE1MzEsXCJwaWRcIjoxNzAsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0yMlwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIwOCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yMlwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0yMlwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzcxOSxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDMxNGQxOGYtZGIzZS00MDE1LTk3ZGEtMTMzMjAzMGVlMzU1XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzMyfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MzIsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2UzMmVmODhkLTY2N2YtNDdkMS1iOWRkLTcxMmQyOTcyZDMzZFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzczM31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIyXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzMzLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzdhZGMwNzQzLTJiMjUtNDAwNC04NGJjLWFkM2U2NmI5Mjg4ZVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzczNH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MzQsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vNDIzNTNiMjItODA1Ni00MmJlLTg2M2YtMzBmZDVlNDgzMGU2XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDM5fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0MzksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MjksXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjJcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MzEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19LFwicHNydi0yM1wiOntcImN0b3JcIjpcIlNlcnZlclwiLFwiZGF0YVwiOntcImNvbnRyYWN0c1wiOltdLFwiY3B1Q29yZXNcIjoxLFwiZnRwUG9ydE9wZW5cIjpmYWxzZSxcImhhc0FkbWluUmlnaHRzXCI6dHJ1ZSxcImhvc3RuYW1lXCI6XCJwc3J2LTIzXCIsXCJodHRwUG9ydE9wZW5cIjpmYWxzZSxcImlwXCI6XCIxNy43LjIuMVwiLFwiaXNDb25uZWN0ZWRUb1wiOmZhbHNlLFwibWF4UmFtXCI6MjU2LFwibWVzc2FnZXNcIjpbXSxcIm9yZ2FuaXphdGlvbk5hbWVcIjpcIlwiLFwicHJvZ3JhbXNcIjpbXSxcInJhbVVzZWRcIjoyNTQuOCxcInJ1bm5pbmdTY3JpcHRzXCI6W3tcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwwLDQyXX0sXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjM2OS40NDA1MzQ5Mzc2LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTcyLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJ0aHJlYWRzXCI6MTQsXCJkZXBlbmRlbmNpZXNcIjpbXX19LHtcImN0b3JcIjpcIlJ1bm5pbmdTY3JpcHRcIixcImRhdGFcIjp7XCJhcmdzXCI6W1wiam9obnNvbi1vcnRob1wiXSxcImRhdGFNYXBcIjp7XCJqb2huc29uLW9ydGhvXCI6WzAsMCwzNTEsMF19LFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwibG9nc1wiOltdLFwibG9nVXBkXCI6dHJ1ZSxcIm9mZmxpbmVFeHBHYWluZWRcIjowLFwib2ZmbGluZU1vbmV5TWFkZVwiOjAsXCJvZmZsaW5lUnVubmluZ1RpbWVcIjowLjAxLFwib25saW5lRXhwR2FpbmVkXCI6MzA4Ny40NjczMjc2OTI4LFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTczLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJ0aHJlYWRzXCI6MTE3LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOls2MDgwMjE0LDExMiwwLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjEwNzcuNTM0ODkzNTY4LFwib25saW5lTW9uZXlNYWRlXCI6NjA4MDIxNCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6MTI3OS42MTAwMDAwMDAxNTMxLFwicGlkXCI6MTc0LFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjNcIixcInRocmVhZHNcIjoxNCxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJ0aGUtaHViXCIsNi41Nzc5NDA3Njc4ODEyN10sXCJkYXRhTWFwXCI6e30sXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjowLFwib25saW5lTW9uZXlNYWRlXCI6MCxcIm9ubGluZVJ1bm5pbmdUaW1lXCI6NTk2LjgwOTk5OTk5OTk5ODgsXCJwaWRcIjoyMDksXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjNcIixcInRocmVhZHNcIjoxLFwiZGVwZW5kZW5jaWVzXCI6W119fV0sXCJzY3JpcHRzXCI6W3tcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKlxcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJlY3Vyc2l2ZSBuZXRvd3JrIHNjYW5cXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2Nhbihucywgc3J2LCBuZXQpIHtcXG4gIGNvbnN0IG5vZGVzID0gbnMuc2NhbihzcnYpLmZpbHRlcigoc3J2KSA9PiAhbmV0LmluY2x1ZGVzKHNydikpO1xcbiAgLy8gbnMucHJpbnQoYHN1Ym5ldCBvZiAke3Nydn0gaGFzICR7bm9kZXN9YCk7XFxuICBuZXQucHVzaChzcnYpO1xcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xcbiAgICByZWNfc2Nhbihucywgbm9kZSwgbmV0KTtcXG4gIH0pO1xcbn1cXG5cXG4vKipcXG4gKiBTY2FuIHRoZSByZWFjaGFibGUgbmV0d29ya1xcbiAqXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc2Nhbihucykge1xcbiAgbGV0IG5ldCA9IFtdO1xcbiAgcmVjX3NjYW4obnMsIFxcXCJob21lXFxcIiwgbmV0KTtcXG4gIC8vIG5zLnByaW50KGBmb3VuZCAke25ldC5sZW5ndGh9IHNlcnZlcnNgKTtcXG4gIHJldHVybiBuZXQ7XFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiByZWNfc2VhcmNoKG5zLCBzcnYsIHRndCwgcGF0aCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFwYXRoLmluY2x1ZGVzKHNydikpO1xcbiAgcGF0aC5wdXNoKHNydik7XFxuICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XFxuICAgIGlmIChub2RlID09IHRndCkge1xcbiAgICAgIHBhdGgucHVzaChub2RlKTtcXG4gICAgICBucy50cHJpbnRmKGBmb3VuZCAke3RndH0sIHJvdXRlOiAke3BhdGguam9pbihcXFwiIC0+IFxcXCIpfWApO1xcbiAgICAgIHJldHVybiBwYXRoO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGxldCBtcGF0aCA9IFsuLi5wYXRoXTtcXG4gICAgICBjb25zdCByZXMgPSByZWNfc2VhcmNoKG5zLCBub2RlLCB0Z3QsIG1wYXRoKTtcXG4gICAgICBpZiAocmVzICE9PSBudWxsKSByZXR1cm4gcmVzO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbnVsbDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChucywgdGd0KSB7XFxuICBsZXQgcGF0aCA9IFtdO1xcbiAgcmV0dXJuIHJlY19zZWFyY2gobnMsIFxcXCJob21lXFxcIiwgdGd0LCBwYXRoKTtcXG59XFxuXFxuLyoqXFxuICogUnVuIGEgc2NyaXB0IHdpdGggbWF4aW11bSB0aHJlYWRzIG9uIHRhcmdldCBob3N0XFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRTY3JpcHQgc2NyaXB0IHRvIHJ1blxcbiAqIEBwYXJhbSB7c3RyaW5nfSBzcnYgaG9zdCB0byBydW4gb25cXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJ1bl9tYXgobnMsIHRhcmdldFNjcmlwdCwgc3J2KSB7XFxuICBjb25zdCBydW5TaXplID0gbnMuZ2V0U2NyaXB0UmFtKHRhcmdldFNjcmlwdCk7XFxuICBjb25zdCBzcnZSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc3J2KTtcXG5cXG4gIGNvbnN0IHRocmVhZHMgPSBNYXRoLmZsb29yKHNydlJhbSAvIHJ1blNpemUpO1xcbiAgaWYgKHRocmVhZHMgPiAwKSB7XFxuICAgIG5zLnRwcmludChcXG4gICAgICBgICBzdGFydGluZyAke3RhcmdldFNjcmlwdH0gb24gJHtzcnZ9IHdpdGggLXQgJHt0aHJlYWRzfSBhbmQgYXJncyAke3RhcmdldEFyZ3N9YFxcbiAgICApO1xcbiAgICBucy5leGVjKHRhcmdldFNjcmlwdCwgc3J2LCB0aHJlYWRzLCAuLi50YXJnZXRBcmdzKTtcXG4gIH1cXG59XFxuXFxuZXhwb3J0IGNvbnN0IHBlcmNlbnRhZ2UgPSAocGFydCwgdG90YWwpID0+IE1hdGgucm91bmQoKHBhcnQgLyB0b3RhbCkgKiAxMDApO1xcblxcbi8vdG9kbyBzdHlsZSBhcyBrLG0sYlxcbmV4cG9ydCBjb25zdCBmbXQgPSAobnVtYmVyKSA9PiB7XFxuICBpZiAobnVtYmVyIDwgMWUzKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyKS50b0ZpeGVkKDMpO1xcbiAgaWYgKG51bWJlciA+IDFlMyAmJiBudW1iZXIgPCAxZTYpXFxuICAgIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTMpLnRvRml4ZWQoMykgKyBcXFwia1xcXCI7XFxuICBpZiAobnVtYmVyID4gMWU2ICYmIG51bWJlciA8IDFlOSlcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlNikudG9GaXhlZCgzKSArIFxcXCJtXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTkgJiYgbnVtYmVyIDwgMWUxMilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlOSkudG9GaXhlZCgzKSArIFxcXCJiXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTEyKSByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWUxMikudG9GaXhlZCgzKSArIFxcXCJ0XFxcIjtcXG59O1xcblxcbmV4cG9ydCBmdW5jdGlvbiB0Zm10KG1zZWMpIHtcXG4gIGxldCBzZWNzID0gbXNlYyAvIDEwMDA7XFxuICBsZXQgbWlucyA9IHNlY3MgPiA2MCA/IE1hdGguZmxvb3Ioc2VjcyAvIDYwKSA6IDA7XFxuICBzZWNzID0gTWF0aC5tYXgoTWF0aC5mbG9vcihzZWNzIC0gbWlucyAqIDYwKSwgMCk7XFxuICBsZXQgaG91cnMgPSBtaW5zID4gNjAgPyBtaW5zIC8gNjAgOiAwO1xcbiAgbWlucyA9IE1hdGgubWF4KE1hdGguZmxvb3IobWlucyAtIGhvdXJzICogNjApLCAwKTtcXG4gIHJldHVybiBgJHtob3VycyA/IGhvdXJzICsgXFxcImggXFxcIiA6IFxcXCJcXFwifSR7bWlucyA/IG1pbnMgKyBcXFwibSBcXFwiIDogXFxcIlxcXCJ9JHtcXG4gICAgc2VjcyA/IHNlY3MgKyBcXFwic1xcXCIgOiBcXFwiXFxcIlxcbiAgfWA7XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X2luZm8obnMsIHRhcmdldCkge1xcbiAgY29uc3QgbWF4TW9uZXkgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpO1xcbiAgY29uc3QgbWluU2VjID0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3VyclNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgICBzZWNfbWluOiBtaW5TZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1pblNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNydl9tb25leShucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBjdXJyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBtb25leV9tYXg6IG1heE1vbmV5LFxcbiAgICBtb25leV9jdXJyOiBjdXJyTW9uZXksXFxuICAgIG1vbmV5X3BjdDogcGVyY2VudGFnZShjdXJyTW9uZXksIG1heE1vbmV5KSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X3NlYyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhTZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcblxcbiAgcmV0dXJuIHtcXG4gICAgbmFtZTogdGFyZ2V0LFxcbiAgICBzZWNfbWluOiBtYXhTZWMsXFxuICAgIHNlY19jdXJyOiBjdXJyU2VjLFxcbiAgICBzZWNfcGN0OiBwZXJjZW50YWdlKGN1cnJTZWMsIG1heFNlYyksXFxuICB9O1xcbn1cXG5cXG4vKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHRvcF9tb25leShucywgY291bnQpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgbmFtZTogc3J2LCBtb25leV9tYXg6IG5zLmdldFNlcnZlck1heE1vbmV5KHNydikgfSkpO1xcblxcbiAgY29uc3Qgb3V0cHV0ID0gaW5mb3NcXG4gICAgLmZpbHRlcigoaW5mbykgPT4gaW5mby5tb25leV9tYXggIT0gMClcXG4gICAgLnNvcnQoKGEsIGIpID0+IGEubW9uZXlfbWF4IC0gYi5tb25leV9tYXgpXFxuICAgIC5zbGljZSgtY291bnQpOyAvL3RvcCA1XFxufVxcblxcbi8qKlxcbiAqIGdldCBhIGxpc3Qgb2YgdG9wIGdyb3d0aCB0YXJnZXRzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRlZF90YXJnZXRzKG5zKSB7XFxuICBjb25zdCBpbmZvcyA9IHNjYW4obnMpXFxuICAgIC5maWx0ZXIoKHNydikgPT4gbnMuaGFzUm9vdEFjY2VzcyhzcnYpKVxcbiAgICAubWFwKChzcnYpID0+ICh7XFxuICAgICAgbmFtZTogc3J2LFxcbiAgICAgIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSxcXG4gICAgICBzZWNfbWluOiBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNydiksXFxuICAgICAgZ3Jvd3RoOiBucy5nZXRTZXJ2ZXJHcm93dGgoc3J2KSxcXG4gICAgfSkpXFxuICAgIC5tYXAoKHNydikgPT4gKHsgLi4uc3J2LCBzY29yZTogc3J2Lm1vbmV5X21heCAvIHNydi5zZWNfbWluIH0pKTtcXG5cXG4gIHJldHVybiBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYi5ncm93dGggLSBhLmdyb3d0aCk7XFxufVxcblxcbi8qKlxcbiAqICBmaW5kIGJlc3QgdGFyZ2V0IGFtb25nIGN1cnJlbnRseSBvd25lZCBzZXJ2ZXJzXFxuICogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnNcXG4gKiovXFxuZXhwb3J0IGZ1bmN0aW9uIGJlc3RfdGFyZ2V0KG5zKSB7XFxuICBjb25zdCBvdXRwdXQgPSBzb3J0ZWRfdGFyZ2V0cyhucykuZmlsdGVyKCh0Z3QpID0+IHRndC5uYW1lICE9PSBcXFwibjAwZGxlc1xcXCIpO1xcblxcbiAgY29uc3QgbWF4R3Jvd3RoID0gb3V0cHV0LmZpbHRlcigodGd0KSA9PiB0Z3QuZ3Jvd3RoID49IG91dHB1dFswXS5ncm93dGgpO1xcblxcbiAgbGV0IHRhcmdldCA9IG1heEdyb3d0aFswXTtcXG5cXG4gIGlmIChtYXhHcm93dGgubGVuZ3RoID4gMSkge1xcbiAgICBjb25zdCBtYXhHcm93dGhfTW9uZXkgPSBtYXhHcm93dGguc29ydCgoYSwgYikgPT4gYi5tb25leV9tYXggLSBhLm1vbmV5X21heCk7XFxuICAgIG5zLnRwcmludGYoXFxuICAgICAgYGZvdW5kICR7bWF4R3Jvd3RoX01vbmV5Lmxlbmd0aH0gdGFyZ2V0cyB3aXRoIGdyb3d0aCAke1xcbiAgICAgICAgbWF4R3Jvd3RoX01vbmV5WzBdLmdyb3d0aFxcbiAgICAgIH06ICR7bWF4R3Jvd3RoX01vbmV5Lm1hcCgoZWxtKSA9PiBlbG0ubmFtZSkuam9pbihcXFwiLCBcXFwiKX1gXFxuICAgICk7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9tYXhNb25leSA9IG1heEdyb3d0aF9Nb25leS5maWx0ZXIoXFxuICAgICAgKHRndCkgPT4gdGd0Lm1vbmV5X21heCA+PSBtYXhHcm93dGhfTW9uZXlbMF0ubW9uZXlfbWF4XFxuICAgICk7XFxuICAgIGlmIChtYXhHcm93dGhfbWF4TW9uZXkubGVuZ3RoID4gMSkge1xcbiAgICAgIC8vIHNldmVyYWwgd2l0aCBtYXggZ3Jvd3RoIGFuZCBtb25leVxcbiAgICAgIGNvbnN0IG1heF9nbSA9IG1heEdyb3d0aF9tYXhNb25leS5zb3J0KChhLCBiKSA9PiBhLnNlY19taW4gLSBiLnNlY19taW4pO1xcbiAgICAgIG5zLnRwcmludGYoXFxuICAgICAgICBgZm91bmQgJHttYXhfZ20ubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICAgIG1heF9nbVswXS5ncm93dGhcXG4gICAgICAgIH0gYW5kIG1heE1vbmV5ICR7bWF4X2dtWzBdLm1vbmV5X21heH06ICR7bWF4X2dtXFxuICAgICAgICAgIC5tYXAoKGVsbSkgPT4gZWxtLm5hbWUpXFxuICAgICAgICAgIC5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgICApO1xcbiAgICAgIHRhcmdldCA9IFswXTtcXG4gICAgfSBlbHNlIHtcXG4gICAgICB0YXJnZXQgPSBtYXhHcm93dGhfbWF4TW9uZXlbMF07XFxuICAgIH1cXG4gIH1cXG4gIC8vbnMudHByaW50KGBiZXN0IHRhcmdldCB3YXMgZGV0ZXJtaW5lZCBhcyAke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9YCk7XFxuICByZXR1cm4gdGFyZ2V0O1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrZXItbGliLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjozLjgsXCJzZXJ2ZXJcIjpcInBzcnYtMjNcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3MzYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJzY2FuXCIsXCJjb3N0XCI6MC4yfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2NyaXB0UmFtXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWF4UmFtXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImV4ZWNcIixcImNvc3RcIjoxLjN9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhNb25leVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJTZWN1cml0eUxldmVsXCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTW9uZXlBdmFpbGFibGVcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYXNSb290QWNjZXNzXCIsXCJjb3N0XCI6MC4wNX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlckdyb3d0aFwiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3Agd2Vha2VuIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMud2Vha2VuKHRhcmdldCk7XFxuICAgIG5zLnByaW50KFxcXCJ3ZWFrZW5lZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgXFxcIiArIGFtdCk7XFxuICAgIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogMTAgKiAxMDAwKTtcXG4gIH1cXG59XCIsXCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC13ZWFrZW4uanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzZhM2JiNGVkLTZmOWQtNGYxMi04NTQxLWQ4NmM2MjA2ZDc3NFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzc0OX1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzQ5LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBjb25zdCB0YXJnZXQgPSBucy5hcmdzWzBdO1xcbiAgLy8gYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiA2MCAqIDEwMDApO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgbnMucHJpbnQoXFxcImxvb3AgZ3Jvd2luZyB0YXJnZXQgXFxcIiArIHRhcmdldCk7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmdyb3codGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImdyb3duIGFyZ2V0IFxcXCIgKyB0YXJnZXQgKyBcXFwiIGJ5ICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1ncm93LmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy9jMWU4MDI2MC1kMzE3LTQ4NzgtOWY2OS1mMjE0OTIyMDBiNzhcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3NTB9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yM1wiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzc1MCxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdyb3dcIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICBucy5wcmludChcXFwibG9vcCBoYWNraW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gIHdoaWxlICh0cnVlKSB7XFxuICAgIGNvbnN0IGFtdCA9IGF3YWl0IG5zLmhhY2sodGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcImhhY2tlZCB0YXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgZm9yICRcXFwiICsgbnMubkZvcm1hdChhbXQpKTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjp7fSxcImRlcGVuZGVuY2llc1wiOlt7XCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJ1cmxcIjpcImJsb2I6ZmlsZTovLy83ZDg4YmFlMC1iMzNjLTQwZjItOWY5Mi0xZmE2MGQ5YzY3Y2JcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3NTF9XSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzUxLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vL2IzYThmNDA5LTFjNGUtNDgwZC04OTIwLTYyYWZlZTRiY2UyYVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyODQ0MH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDQwLFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwid2Vha2VuXCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJncm93LWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzQ2LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge05TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgYXdhaXQgbnMuYXNsZWVwKG5zLmFyZ3NbMV0pO1xcbiAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwiaGFjay1hZnRlci5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOlwiXCIsXCJkZXBlbmRlbmNpZXNcIjpbXSxcImRlcGVuZGVudHNcIjpbXSxcInJhbVVzYWdlXCI6MS43LFwic2VydmVyXCI6XCJwc3J2LTIzXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzQ4LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiaGFja1wiLFwiY29zdFwiOjAuMX1dfX1dLFwic2VydmVyc09uTmV0d29ya1wiOltcImhvbWVcIl0sXCJzbXRwUG9ydE9wZW5cIjpmYWxzZSxcInNxbFBvcnRPcGVuXCI6ZmFsc2UsXCJzc2hQb3J0T3BlblwiOmZhbHNlLFwidGV4dEZpbGVzXCI6W10sXCJwdXJjaGFzZWRCeVBsYXllclwiOnRydWUsXCJiYWNrZG9vckluc3RhbGxlZFwiOmZhbHNlLFwiYmFzZURpZmZpY3VsdHlcIjoxLFwiaGFja0RpZmZpY3VsdHlcIjoxLFwibWluRGlmZmljdWx0eVwiOjEsXCJtb25leUF2YWlsYWJsZVwiOjAsXCJtb25leU1heFwiOjAsXCJudW1PcGVuUG9ydHNSZXF1aXJlZFwiOjUsXCJvcGVuUG9ydENvdW50XCI6MCxcInJlcXVpcmVkSGFja2luZ1NraWxsXCI6MSxcInNlcnZlckdyb3d0aFwiOjF9fSxcInBzcnYtMjRcIjp7XCJjdG9yXCI6XCJTZXJ2ZXJcIixcImRhdGFcIjp7XCJjb250cmFjdHNcIjpbXSxcImNwdUNvcmVzXCI6MSxcImZ0cFBvcnRPcGVuXCI6ZmFsc2UsXCJoYXNBZG1pblJpZ2h0c1wiOnRydWUsXCJob3N0bmFtZVwiOlwicHNydi0yNFwiLFwiaHR0cFBvcnRPcGVuXCI6ZmFsc2UsXCJpcFwiOlwiNzkuNi4zLjVcIixcImlzQ29ubmVjdGVkVG9cIjpmYWxzZSxcIm1heFJhbVwiOjI1NixcIm1lc3NhZ2VzXCI6W10sXCJvcmdhbml6YXRpb25OYW1lXCI6XCJcIixcInByb2dyYW1zXCI6W10sXCJyYW1Vc2VkXCI6MjU0LjgsXCJydW5uaW5nU2NyaXB0c1wiOlt7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMCw0Ml19LFwiZmlsZW5hbWVcIjpcImxvb3Atd2Vha2VuLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjozNjkuNDQwNTM0OTM3NixcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuNjEwMDAwMDAwMTUzMSxcInBpZFwiOjE3NixcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yNFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcImpvaG5zb24tb3J0aG9cIl0sXCJkYXRhTWFwXCI6e1wiam9obnNvbi1vcnRob1wiOlswLDAsMzUxLDBdfSxcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjMwODcuNDY3MzI3NjkyOCxcIm9ubGluZU1vbmV5TWFkZVwiOjAsXCJvbmxpbmVSdW5uaW5nVGltZVwiOjEyNzkuNjEwMDAwMDAwMTUzMSxcInBpZFwiOjE3NyxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yNFwiLFwidGhyZWFkc1wiOjExNyxcImRlcGVuZGVuY2llc1wiOltdfX0se1wiY3RvclwiOlwiUnVubmluZ1NjcmlwdFwiLFwiZGF0YVwiOntcImFyZ3NcIjpbXCJqb2huc29uLW9ydGhvXCJdLFwiZGF0YU1hcFwiOntcImpvaG5zb24tb3J0aG9cIjpbNjkwNjI4NCwxMjYsMCwwXX0sXCJmaWxlbmFtZVwiOlwibG9vcC1oYWNrLmpzXCIsXCJsb2dzXCI6W10sXCJsb2dVcGRcIjp0cnVlLFwib2ZmbGluZUV4cEdhaW5lZFwiOjAsXCJvZmZsaW5lTW9uZXlNYWRlXCI6MCxcIm9mZmxpbmVSdW5uaW5nVGltZVwiOjAuMDEsXCJvbmxpbmVFeHBHYWluZWRcIjoxMTY5Ljg5NTAyNzMwMjQsXCJvbmxpbmVNb25leU1hZGVcIjo2OTA2Mjg0LFwib25saW5lUnVubmluZ1RpbWVcIjoxMjc5LjYxMDAwMDAwMDE1MzEsXCJwaWRcIjoxNzgsXCJyYW1Vc2FnZVwiOjEuNyxcInNlcnZlclwiOlwicHNydi0yNFwiLFwidGhyZWFkc1wiOjE0LFwiZGVwZW5kZW5jaWVzXCI6W119fSx7XCJjdG9yXCI6XCJSdW5uaW5nU2NyaXB0XCIsXCJkYXRhXCI6e1wiYXJnc1wiOltcInRoZS1odWJcIiw2LjU3Nzk0MDc2Nzg4MTI3XSxcImRhdGFNYXBcIjp7fSxcImZpbGVuYW1lXCI6XCJ3ZWFrZW4tYWZ0ZXIuanNcIixcImxvZ3NcIjpbXSxcImxvZ1VwZFwiOnRydWUsXCJvZmZsaW5lRXhwR2FpbmVkXCI6MCxcIm9mZmxpbmVNb25leU1hZGVcIjowLFwib2ZmbGluZVJ1bm5pbmdUaW1lXCI6MC4wMSxcIm9ubGluZUV4cEdhaW5lZFwiOjAsXCJvbmxpbmVNb25leU1hZGVcIjowLFwib25saW5lUnVubmluZ1RpbWVcIjo1OTYuODA5OTk5OTk5OTk4OCxcInBpZFwiOjIxMCxcInJhbVVzYWdlXCI6MS43NSxcInNlcnZlclwiOlwicHNydi0yNFwiLFwidGhyZWFkc1wiOjEsXCJkZXBlbmRlbmNpZXNcIjpbXX19XSxcInNjcmlwdHNcIjpbe1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqXFxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmVjdXJzaXZlIG5ldG93cmsgc2NhblxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogKiovXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zY2FuKG5zLCBzcnYsIG5ldCkge1xcbiAgY29uc3Qgbm9kZXMgPSBucy5zY2FuKHNydikuZmlsdGVyKChzcnYpID0+ICFuZXQuaW5jbHVkZXMoc3J2KSk7XFxuICAvLyBucy5wcmludChgc3VibmV0IG9mICR7c3J2fSBoYXMgJHtub2Rlc31gKTtcXG4gIG5ldC5wdXNoKHNydik7XFxuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XFxuICAgIHJlY19zY2FuKG5zLCBub2RlLCBuZXQpO1xcbiAgfSk7XFxufVxcblxcbi8qKlxcbiAqIFNjYW4gdGhlIHJlYWNoYWJsZSBuZXR3b3JrXFxuICpcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzY2FuKG5zKSB7XFxuICBsZXQgbmV0ID0gW107XFxuICByZWNfc2NhbihucywgXFxcImhvbWVcXFwiLCBuZXQpO1xcbiAgLy8gbnMucHJpbnQoYGZvdW5kICR7bmV0Lmxlbmd0aH0gc2VydmVyc2ApO1xcbiAgcmV0dXJuIG5ldDtcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHJlY19zZWFyY2gobnMsIHNydiwgdGd0LCBwYXRoKSB7XFxuICBjb25zdCBub2RlcyA9IG5zLnNjYW4oc3J2KS5maWx0ZXIoKHNydikgPT4gIXBhdGguaW5jbHVkZXMoc3J2KSk7XFxuICBwYXRoLnB1c2goc3J2KTtcXG4gIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcXG4gICAgaWYgKG5vZGUgPT0gdGd0KSB7XFxuICAgICAgcGF0aC5wdXNoKG5vZGUpO1xcbiAgICAgIG5zLnRwcmludGYoYGZvdW5kICR7dGd0fSwgcm91dGU6ICR7cGF0aC5qb2luKFxcXCIgLT4gXFxcIil9YCk7XFxuICAgICAgcmV0dXJuIHBhdGg7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgbGV0IG1wYXRoID0gWy4uLnBhdGhdO1xcbiAgICAgIGNvbnN0IHJlcyA9IHJlY19zZWFyY2gobnMsIG5vZGUsIHRndCwgbXBhdGgpO1xcbiAgICAgIGlmIChyZXMgIT09IG51bGwpIHJldHVybiByZXM7XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBudWxsO1xcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG5zLCB0Z3QpIHtcXG4gIGxldCBwYXRoID0gW107XFxuICByZXR1cm4gcmVjX3NlYXJjaChucywgXFxcImhvbWVcXFwiLCB0Z3QsIHBhdGgpO1xcbn1cXG5cXG4vKipcXG4gKiBSdW4gYSBzY3JpcHQgd2l0aCBtYXhpbXVtIHRocmVhZHMgb24gdGFyZ2V0IGhvc3RcXG4gKlxcbiAqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zXFxuICogQHBhcmFtIHtzdHJpbmd9IHRhcmdldFNjcmlwdCBzY3JpcHQgdG8gcnVuXFxuICogQHBhcmFtIHtzdHJpbmd9IHNydiBob3N0IHRvIHJ1biBvblxcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gcnVuX21heChucywgdGFyZ2V0U2NyaXB0LCBzcnYpIHtcXG4gIGNvbnN0IHJ1blNpemUgPSBucy5nZXRTY3JpcHRSYW0odGFyZ2V0U2NyaXB0KTtcXG4gIGNvbnN0IHNydlJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzcnYpO1xcblxcbiAgY29uc3QgdGhyZWFkcyA9IE1hdGguZmxvb3Ioc3J2UmFtIC8gcnVuU2l6ZSk7XFxuICBpZiAodGhyZWFkcyA+IDApIHtcXG4gICAgbnMudHByaW50KFxcbiAgICAgIGAgIHN0YXJ0aW5nICR7dGFyZ2V0U2NyaXB0fSBvbiAke3Nydn0gd2l0aCAtdCAke3RocmVhZHN9IGFuZCBhcmdzICR7dGFyZ2V0QXJnc31gXFxuICAgICk7XFxuICAgIG5zLmV4ZWModGFyZ2V0U2NyaXB0LCBzcnYsIHRocmVhZHMsIC4uLnRhcmdldEFyZ3MpO1xcbiAgfVxcbn1cXG5cXG5leHBvcnQgY29uc3QgcGVyY2VudGFnZSA9IChwYXJ0LCB0b3RhbCkgPT4gTWF0aC5yb3VuZCgocGFydCAvIHRvdGFsKSAqIDEwMCk7XFxuXFxuLy90b2RvIHN0eWxlIGFzIGssbSxiXFxuZXhwb3J0IGNvbnN0IGZtdCA9IChudW1iZXIpID0+IHtcXG4gIGlmIChudW1iZXIgPCAxZTMpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIpLnRvRml4ZWQoMyk7XFxuICBpZiAobnVtYmVyID4gMWUzICYmIG51bWJlciA8IDFlNilcXG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUZsb2F0KG51bWJlciAvIDFlMykudG9GaXhlZCgzKSArIFxcXCJrXFxcIjtcXG4gIGlmIChudW1iZXIgPiAxZTYgJiYgbnVtYmVyIDwgMWU5KVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU2KS50b0ZpeGVkKDMpICsgXFxcIm1cXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlOSAmJiBudW1iZXIgPCAxZTEyKVxcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQobnVtYmVyIC8gMWU5KS50b0ZpeGVkKDMpICsgXFxcImJcXFwiO1xcbiAgaWYgKG51bWJlciA+IDFlMTIpIHJldHVybiBOdW1iZXIucGFyc2VGbG9hdChudW1iZXIgLyAxZTEyKS50b0ZpeGVkKDMpICsgXFxcInRcXFwiO1xcbn07XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIHRmbXQobXNlYykge1xcbiAgbGV0IHNlY3MgPSBtc2VjIC8gMTAwMDtcXG4gIGxldCBtaW5zID0gc2VjcyA+IDYwID8gTWF0aC5mbG9vcihzZWNzIC8gNjApIDogMDtcXG4gIHNlY3MgPSBNYXRoLm1heChNYXRoLmZsb29yKHNlY3MgLSBtaW5zICogNjApLCAwKTtcXG4gIGxldCBob3VycyA9IG1pbnMgPiA2MCA/IG1pbnMgLyA2MCA6IDA7XFxuICBtaW5zID0gTWF0aC5tYXgoTWF0aC5mbG9vcihtaW5zIC0gaG91cnMgKiA2MCksIDApO1xcbiAgcmV0dXJuIGAke2hvdXJzID8gaG91cnMgKyBcXFwiaCBcXFwiIDogXFxcIlxcXCJ9JHttaW5zID8gbWlucyArIFxcXCJtIFxcXCIgOiBcXFwiXFxcIn0ke1xcbiAgICBzZWNzID8gc2VjcyArIFxcXCJzXFxcIiA6IFxcXCJcXFwiXFxuICB9YDtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfaW5mbyhucywgdGFyZ2V0KSB7XFxuICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XFxuICBjb25zdCBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldCk7XFxuICBjb25zdCBjdXJyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpO1xcbiAgY29uc3QgY3Vyck1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcXG5cXG4gIHJldHVybiB7XFxuICAgIG5hbWU6IHRhcmdldCxcXG4gICAgbW9uZXlfbWF4OiBtYXhNb25leSxcXG4gICAgbW9uZXlfY3VycjogY3Vyck1vbmV5LFxcbiAgICBtb25leV9wY3Q6IHBlcmNlbnRhZ2UoY3Vyck1vbmV5LCBtYXhNb25leSksXFxuICAgIHNlY19taW46IG1pblNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWluU2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc3J2X21vbmV5KG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIG1vbmV5X21heDogbWF4TW9uZXksXFxuICAgIG1vbmV5X2N1cnI6IGN1cnJNb25leSxcXG4gICAgbW9uZXlfcGN0OiBwZXJjZW50YWdlKGN1cnJNb25leSwgbWF4TW9uZXkpLFxcbiAgfTtcXG59XFxuXFxuLyoqIEBwYXJhbSB7aW1wb3J0KCcuL05TJykuTlN9IG5zICoqL1xcbmV4cG9ydCBmdW5jdGlvbiBzcnZfc2VjKG5zLCB0YXJnZXQpIHtcXG4gIGNvbnN0IG1heFNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KTtcXG4gIGNvbnN0IGN1cnJTZWMgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCk7XFxuXFxuICByZXR1cm4ge1xcbiAgICBuYW1lOiB0YXJnZXQsXFxuICAgIHNlY19taW46IG1heFNlYyxcXG4gICAgc2VjX2N1cnI6IGN1cnJTZWMsXFxuICAgIHNlY19wY3Q6IHBlcmNlbnRhZ2UoY3VyclNlYywgbWF4U2VjKSxcXG4gIH07XFxufVxcblxcbi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgZnVuY3Rpb24gdG9wX21vbmV5KG5zLCBjb3VudCkge1xcbiAgY29uc3QgaW5mb3MgPSBzY2FuKG5zKVxcbiAgICAuZmlsdGVyKChzcnYpID0+IG5zLmhhc1Jvb3RBY2Nlc3Moc3J2KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyBuYW1lOiBzcnYsIG1vbmV5X21heDogbnMuZ2V0U2VydmVyTWF4TW9uZXkoc3J2KSB9KSk7XFxuXFxuICBjb25zdCBvdXRwdXQgPSBpbmZvc1xcbiAgICAuZmlsdGVyKChpbmZvKSA9PiBpbmZvLm1vbmV5X21heCAhPSAwKVxcbiAgICAuc29ydCgoYSwgYikgPT4gYS5tb25leV9tYXggLSBiLm1vbmV5X21heClcXG4gICAgLnNsaWNlKC1jb3VudCk7IC8vdG9wIDVcXG59XFxuXFxuLyoqXFxuICogZ2V0IGEgbGlzdCBvZiB0b3AgZ3Jvd3RoIHRhcmdldHNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gc29ydGVkX3RhcmdldHMobnMpIHtcXG4gIGNvbnN0IGluZm9zID0gc2NhbihucylcXG4gICAgLmZpbHRlcigoc3J2KSA9PiBucy5oYXNSb290QWNjZXNzKHNydikpXFxuICAgIC5tYXAoKHNydikgPT4gKHtcXG4gICAgICBuYW1lOiBzcnYsXFxuICAgICAgbW9uZXlfbWF4OiBucy5nZXRTZXJ2ZXJNYXhNb25leShzcnYpLFxcbiAgICAgIHNlY19taW46IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc3J2KSxcXG4gICAgICBncm93dGg6IG5zLmdldFNlcnZlckdyb3d0aChzcnYpLFxcbiAgICB9KSlcXG4gICAgLm1hcCgoc3J2KSA9PiAoeyAuLi5zcnYsIHNjb3JlOiBzcnYubW9uZXlfbWF4IC8gc3J2LnNlY19taW4gfSkpO1xcblxcbiAgcmV0dXJuIGluZm9zXFxuICAgIC5maWx0ZXIoKGluZm8pID0+IGluZm8ubW9uZXlfbWF4ICE9IDApXFxuICAgIC5zb3J0KChhLCBiKSA9PiBiLmdyb3d0aCAtIGEuZ3Jvd3RoKTtcXG59XFxuXFxuLyoqXFxuICogIGZpbmQgYmVzdCB0YXJnZXQgYW1vbmcgY3VycmVudGx5IG93bmVkIHNlcnZlcnNcXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBuc1xcbiAqKi9cXG5leHBvcnQgZnVuY3Rpb24gYmVzdF90YXJnZXQobnMpIHtcXG4gIGNvbnN0IG91dHB1dCA9IHNvcnRlZF90YXJnZXRzKG5zKS5maWx0ZXIoKHRndCkgPT4gdGd0Lm5hbWUgIT09IFxcXCJuMDBkbGVzXFxcIik7XFxuXFxuICBjb25zdCBtYXhHcm93dGggPSBvdXRwdXQuZmlsdGVyKCh0Z3QpID0+IHRndC5ncm93dGggPj0gb3V0cHV0WzBdLmdyb3d0aCk7XFxuXFxuICBsZXQgdGFyZ2V0ID0gbWF4R3Jvd3RoWzBdO1xcblxcbiAgaWYgKG1heEdyb3d0aC5sZW5ndGggPiAxKSB7XFxuICAgIGNvbnN0IG1heEdyb3d0aF9Nb25leSA9IG1heEdyb3d0aC5zb3J0KChhLCBiKSA9PiBiLm1vbmV5X21heCAtIGEubW9uZXlfbWF4KTtcXG4gICAgbnMudHByaW50ZihcXG4gICAgICBgZm91bmQgJHttYXhHcm93dGhfTW9uZXkubGVuZ3RofSB0YXJnZXRzIHdpdGggZ3Jvd3RoICR7XFxuICAgICAgICBtYXhHcm93dGhfTW9uZXlbMF0uZ3Jvd3RoXFxuICAgICAgfTogJHttYXhHcm93dGhfTW9uZXkubWFwKChlbG0pID0+IGVsbS5uYW1lKS5qb2luKFxcXCIsIFxcXCIpfWBcXG4gICAgKTtcXG4gICAgY29uc3QgbWF4R3Jvd3RoX21heE1vbmV5ID0gbWF4R3Jvd3RoX01vbmV5LmZpbHRlcihcXG4gICAgICAodGd0KSA9PiB0Z3QubW9uZXlfbWF4ID49IG1heEdyb3d0aF9Nb25leVswXS5tb25leV9tYXhcXG4gICAgKTtcXG4gICAgaWYgKG1heEdyb3d0aF9tYXhNb25leS5sZW5ndGggPiAxKSB7XFxuICAgICAgLy8gc2V2ZXJhbCB3aXRoIG1heCBncm93dGggYW5kIG1vbmV5XFxuICAgICAgY29uc3QgbWF4X2dtID0gbWF4R3Jvd3RoX21heE1vbmV5LnNvcnQoKGEsIGIpID0+IGEuc2VjX21pbiAtIGIuc2VjX21pbik7XFxuICAgICAgbnMudHByaW50ZihcXG4gICAgICAgIGBmb3VuZCAke21heF9nbS5sZW5ndGh9IHRhcmdldHMgd2l0aCBncm93dGggJHtcXG4gICAgICAgICAgbWF4X2dtWzBdLmdyb3d0aFxcbiAgICAgICAgfSBhbmQgbWF4TW9uZXkgJHttYXhfZ21bMF0ubW9uZXlfbWF4fTogJHttYXhfZ21cXG4gICAgICAgICAgLm1hcCgoZWxtKSA9PiBlbG0ubmFtZSlcXG4gICAgICAgICAgLmpvaW4oXFxcIiwgXFxcIil9YFxcbiAgICAgICk7XFxuICAgICAgdGFyZ2V0ID0gWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHRhcmdldCA9IG1heEdyb3d0aF9tYXhNb25leVswXTtcXG4gICAgfVxcbiAgfVxcbiAgLy9ucy50cHJpbnQoYGJlc3QgdGFyZ2V0IHdhcyBkZXRlcm1pbmVkIGFzICR7SlNPTi5zdHJpbmdpZnkodGFyZ2V0KX1gKTtcXG4gIHJldHVybiB0YXJnZXQ7XFxufVwiLFwiZmlsZW5hbWVcIjpcImhhY2tlci1saWIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjMuOCxcInNlcnZlclwiOlwicHNydi0yNFwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzc1MyxcInJhbVVzYWdlRW50cmllc1wiOlt7XCJ0eXBlXCI6XCJtaXNjXCIsXCJuYW1lXCI6XCJiYXNlQ29zdFwiLFwiY29zdFwiOjEuNn0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcInNjYW5cIixcImNvc3RcIjowLjJ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTY3JpcHRSYW1cIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNYXhSYW1cIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZXhlY1wiLFwiY29zdFwiOjEuM30se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlck1heE1vbmV5XCIsXCJjb3N0XCI6MC4xfSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbFwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImdldFNlcnZlclNlY3VyaXR5TGV2ZWxcIixcImNvc3RcIjowLjF9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJnZXRTZXJ2ZXJNb25leUF2YWlsYWJsZVwiLFwiY29zdFwiOjAuMX0se1widHlwZVwiOlwiZm5cIixcIm5hbWVcIjpcImhhc1Jvb3RBY2Nlc3NcIixcImNvc3RcIjowLjA1fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ2V0U2VydmVyR3Jvd3RoXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCB3ZWFrZW4gdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgICBjb25zdCBhbXQgPSBhd2FpdCBucy53ZWFrZW4odGFyZ2V0KTtcXG4gICAgbnMucHJpbnQoXFxcIndlYWtlbmVkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBieSBcXFwiICsgYW10KTtcXG4gICAgYXdhaXQgbnMuYXNsZWVwKE1hdGgucmFuZG9tKCkgKiAxMCAqIDEwMDApO1xcbiAgfVxcbn1cIixcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLXdlYWtlbi5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vODI4Mjk2OGEtZTBkNy00YTQzLWIxOTItNzNlMGRmNWJjZWUxXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzY2fV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3NjYsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtpbXBvcnQoJy4vTlMnKS5OU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGNvbnN0IHRhcmdldCA9IG5zLmFyZ3NbMF07XFxuICAvLyBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDYwICogMTAwMCk7XFxuICB3aGlsZSAodHJ1ZSkge1xcbiAgICBucy5wcmludChcXFwibG9vcCBncm93aW5nIHRhcmdldCBcXFwiICsgdGFyZ2V0KTtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuZ3Jvdyh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiZ3Jvd24gYXJnZXQgXFxcIiArIHRhcmdldCArIFxcXCIgYnkgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtZ3Jvdy5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWdyb3cuanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzdkYTY5MWE3LTcyZmUtNDU4MC04ZmM3LTgwMzcwMzQ1ZTk0YVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzc2N31dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjc1LFwic2VydmVyXCI6XCJwc3J2LTI0XCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjIzNzY3LFwicmFtVXNhZ2VFbnRyaWVzXCI6W3tcInR5cGVcIjpcIm1pc2NcIixcIm5hbWVcIjpcImJhc2VDb3N0XCIsXCJjb3N0XCI6MS42fSx7XCJ0eXBlXCI6XCJmblwiLFwibmFtZVwiOlwiZ3Jvd1wiLFwiY29zdFwiOjAuMTV9XX19LHtcImN0b3JcIjpcIlNjcmlwdFwiLFwiZGF0YVwiOntcImNvZGVcIjpcIi8qKiBAcGFyYW0ge2ltcG9ydCgnLi9OUycpLk5TfSBucyAqKi9cXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihucykge1xcbiAgY29uc3QgdGFyZ2V0ID0gbnMuYXJnc1swXTtcXG4gIGF3YWl0IG5zLmFzbGVlcChNYXRoLnJhbmRvbSgpICogNjAgKiAxMDAwKTtcXG4gIG5zLnByaW50KFxcXCJsb29wIGhhY2tpbmcgdGFyZ2V0IFxcXCIgKyB0YXJnZXQpO1xcbiAgd2hpbGUgKHRydWUpIHtcXG4gICAgY29uc3QgYW10ID0gYXdhaXQgbnMuaGFjayh0YXJnZXQpO1xcbiAgICBucy5wcmludChcXFwiaGFja2VkIHRhcmdldCBcXFwiICsgdGFyZ2V0ICsgXFxcIiBmb3IgJFxcXCIgKyBucy5uRm9ybWF0KGFtdCkpO1xcbiAgICBhd2FpdCBucy5hc2xlZXAoTWF0aC5yYW5kb20oKSAqIDEwICogMTAwMCk7XFxuICB9XFxufVwiLFwiZmlsZW5hbWVcIjpcImxvb3AtaGFjay5qc1wiLFwidXJsXCI6XCJcIixcIm1vZHVsZVwiOnt9LFwiZGVwZW5kZW5jaWVzXCI6W3tcImZpbGVuYW1lXCI6XCJsb29wLWhhY2suanNcIixcInVybFwiOlwiYmxvYjpmaWxlOi8vLzNkNGE4ZDE0LTkyYTktNGUxMS05MGY5LTIxN2JkMGMwZGE5MVwiLFwibW9kdWxlU2VxdWVuY2VOdW1iZXJcIjoyMzc2OH1dLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3NjgsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLndlYWtlbihucy5hcmdzWzBdKTtcXG59XCIsXCJmaWxlbmFtZVwiOlwid2Vha2VuLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6e30sXCJkZXBlbmRlbmNpZXNcIjpbe1wiZmlsZW5hbWVcIjpcIndlYWtlbi1hZnRlci5qc1wiLFwidXJsXCI6XCJibG9iOmZpbGU6Ly8vZmY3MzY4YzUtYWExNi00OTYyLWJlMzktNzU1NGYzYWEwYzRmXCIsXCJtb2R1bGVTZXF1ZW5jZU51bWJlclwiOjI4NDQxfV0sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6Mjg0NDEsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJ3ZWFrZW5cIixcImNvc3RcIjowLjE1fV19fSx7XCJjdG9yXCI6XCJTY3JpcHRcIixcImRhdGFcIjp7XCJjb2RlXCI6XCIvKiogQHBhcmFtIHtOU30gbnMgKiovXFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnMpIHtcXG4gIGF3YWl0IG5zLmFzbGVlcChucy5hcmdzWzFdKTtcXG4gIGF3YWl0IG5zLmdyb3cobnMuYXJnc1swXSk7XFxufVwiLFwiZmlsZW5hbWVcIjpcImdyb3ctYWZ0ZXIuanNcIixcInVybFwiOlwiXCIsXCJtb2R1bGVcIjpcIlwiLFwiZGVwZW5kZW5jaWVzXCI6W10sXCJkZXBlbmRlbnRzXCI6W10sXCJyYW1Vc2FnZVwiOjEuNzUsXCJzZXJ2ZXJcIjpcInBzcnYtMjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3NjMsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJncm93XCIsXCJjb3N0XCI6MC4xNX1dfX0se1wiY3RvclwiOlwiU2NyaXB0XCIsXCJkYXRhXCI6e1wiY29kZVwiOlwiLyoqIEBwYXJhbSB7TlN9IG5zICoqL1xcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zKSB7XFxuICBhd2FpdCBucy5hc2xlZXAobnMuYXJnc1sxXSk7XFxuICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0pO1xcbn1cIixcImZpbGVuYW1lXCI6XCJoYWNrLWFmdGVyLmpzXCIsXCJ1cmxcIjpcIlwiLFwibW9kdWxlXCI6XCJcIixcImRlcGVuZGVuY2llc1wiOltdLFwiZGVwZW5kZW50c1wiOltdLFwicmFtVXNhZ2VcIjoxLjcsXCJzZXJ2ZXJcIjpcInBzcnYtMjRcIixcIm1vZHVsZVNlcXVlbmNlTnVtYmVyXCI6MjM3NjUsXCJyYW1Vc2FnZUVudHJpZXNcIjpbe1widHlwZVwiOlwibWlzY1wiLFwibmFtZVwiOlwiYmFzZUNvc3RcIixcImNvc3RcIjoxLjZ9LHtcInR5cGVcIjpcImZuXCIsXCJuYW1lXCI6XCJoYWNrXCIsXCJjb3N0XCI6MC4xfV19fV0sXCJzZXJ2ZXJzT25OZXR3b3JrXCI6W1wiaG9tZVwiXSxcInNtdHBQb3J0T3BlblwiOmZhbHNlLFwic3FsUG9ydE9wZW5cIjpmYWxzZSxcInNzaFBvcnRPcGVuXCI6ZmFsc2UsXCJ0ZXh0RmlsZXNcIjpbXSxcInB1cmNoYXNlZEJ5UGxheWVyXCI6dHJ1ZSxcImJhY2tkb29ySW5zdGFsbGVkXCI6ZmFsc2UsXCJiYXNlRGlmZmljdWx0eVwiOjEsXCJoYWNrRGlmZmljdWx0eVwiOjEsXCJtaW5EaWZmaWN1bHR5XCI6MSxcIm1vbmV5QXZhaWxhYmxlXCI6MCxcIm1vbmV5TWF4XCI6MCxcIm51bU9wZW5Qb3J0c1JlcXVpcmVkXCI6NSxcIm9wZW5Qb3J0Q291bnRcIjowLFwicmVxdWlyZWRIYWNraW5nU2tpbGxcIjoxLFwic2VydmVyR3Jvd3RoXCI6MX19fSIsIkNvbXBhbmllc1NhdmUiOiJ7XCJFQ29ycFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJFQ29ycFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjMsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MyxcImpvYlN0YXRSZXFPZmZzZXRcIjoyNDksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk1lZ2FDb3JwXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk1lZ2FDb3JwXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MyxcInNhbGFyeU11bHRpcGxpZXJcIjozLFwiam9iU3RhdFJlcU9mZnNldFwiOjI0OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQmFjaG1hbiAmIEFzc29jaWF0ZXNcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQmFjaG1hbiAmIEFzc29jaWF0ZXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJDaGllZiBGaW5hbmNpYWwgT2ZmaWNlclwiOnRydWUsXCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoyLjYsXCJzYWxhcnlNdWx0aXBsaWVyXCI6Mi42LFwiam9iU3RhdFJlcU9mZnNldFwiOjIyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQmxhZGUgSW5kdXN0cmllc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJCbGFkZSBJbmR1c3RyaWVzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6Mi43NSxcInNhbGFyeU11bHRpcGxpZXJcIjoyLjc1LFwiam9iU3RhdFJlcU9mZnNldFwiOjIyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiTldPXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk5XT1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuNzUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6Mi43NSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyNDksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkNsYXJrZSBJbmNvcnBvcmF0ZWRcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQ2xhcmtlIEluY29ycG9yYXRlZFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuMjUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6Mi4yNSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk9tbmlUZWsgSW5jb3Jwb3JhdGVkXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk9tbmlUZWsgSW5jb3Jwb3JhdGVkXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6Mi4yNSxcInNhbGFyeU11bHRpcGxpZXJcIjoyLjI1LFwiam9iU3RhdFJlcU9mZnNldFwiOjIyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiRm91ciBTaWdtYVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJGb3VyIFNpZ21hXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6Mi41LFwic2FsYXJ5TXVsdGlwbGllclwiOjIuNSxcImpvYlN0YXRSZXFPZmZzZXRcIjoyMjQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkt1YWlHb25nIEludGVybmF0aW9uYWxcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiS3VhaUdvbmcgSW50ZXJuYXRpb25hbFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIuMixcInNhbGFyeU11bHRpcGxpZXJcIjoyLjIsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MjI0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJGdWxjcnVtIFRlY2hub2xvZ2llc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJGdWxjcnVtIFRlY2hub2xvZ2llc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MixcInNhbGFyeU11bHRpcGxpZXJcIjoyLFwiam9iU3RhdFJlcU9mZnNldFwiOjIyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiU3Rvcm0gVGVjaG5vbG9naWVzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIlN0b3JtIFRlY2hub2xvZ2llc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjgsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS44LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiRGVmQ29tbVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJEZWZDb21tXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuNzUsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS43NSxcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkhlbGlvcyBMYWJzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkhlbGlvcyBMYWJzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuOCxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjgsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJWaXRhTGlmZVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJWaXRhTGlmZVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjgsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS44LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiSWNhcnVzIE1pY3Jvc3lzdGVtc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJJY2FydXMgTWljcm9zeXN0ZW1zXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuOSxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjksXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJVbml2ZXJzYWwgRW5lcmd5XCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIlVuaXZlcnNhbCBFbmVyZ3lcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJDaGllZiBGaW5hbmNpYWwgT2ZmaWNlclwiOnRydWUsXCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MixcInNhbGFyeU11bHRpcGxpZXJcIjoyLFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiR2FsYWN0aWMgQ3liZXJzeXN0ZW1zXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkdhbGFjdGljIEN5YmVyc3lzdGVtc1wiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIkJ1c2luZXNzIEludGVyblwiOnRydWUsXCJCdXNpbmVzcyBBbmFseXN0XCI6dHJ1ZSxcIkJ1c2luZXNzIE1hbmFnZXJcIjp0cnVlLFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCI6dHJ1ZSxcIkNoaWVmIEZpbmFuY2lhbCBPZmZpY2VyXCI6dHJ1ZSxcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjksXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS45LFwiam9iU3RhdFJlcU9mZnNldFwiOjE5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQWVyb0NvcnBcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQWVyb0NvcnBcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS43LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNyxcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk9tbmlhIEN5YmVyc3lzdGVtc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJPbW5pYSBDeWJlcnN5c3RlbXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS43LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNyxcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIlNvbGFyaXMgU3BhY2UgU3lzdGVtc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJTb2xhcmlzIFNwYWNlIFN5c3RlbXNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkNoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS43LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNyxcImpvYlN0YXRSZXFPZmZzZXRcIjoxOTksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkRlbHRhT25lXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkRlbHRhT25lXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuNixcInNhbGFyeU11bHRpcGxpZXJcIjoxLjYsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJHbG9iYWwgUGhhcm1hY2V1dGljYWxzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkdsb2JhbCBQaGFybWFjZXV0aWNhbHNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJDaGllZiBGaW5hbmNpYWwgT2ZmaWNlclwiOnRydWUsXCJDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclwiOnRydWUsXCJTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuOCxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjgsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MjI0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJOb3ZhIE1lZGljYWxcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiTm92YSBNZWRpY2FsXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjc1LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNzUsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJDZW50cmFsIEludGVsbGlnZW5jZSBBZ2VuY3lcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQ2VudHJhbCBJbnRlbGxpZ2VuY2UgQWdlbmN5XCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZSxcIkZpZWxkIEFnZW50XCI6dHJ1ZSxcIlNlY3JldCBBZ2VudFwiOnRydWUsXCJTcGVjaWFsIE9wZXJhdGl2ZVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MixcImpvYlN0YXRSZXFPZmZzZXRcIjoxNDksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MTkzLjY1OTQ0NjExNTgzNDY3LFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiTmF0aW9uYWwgU2VjdXJpdHkgQWdlbmN5XCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk5hdGlvbmFsIFNlY3VyaXR5IEFnZW5jeVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWUsXCJGaWVsZCBBZ2VudFwiOnRydWUsXCJTZWNyZXQgQWdlbnRcIjp0cnVlLFwiU3BlY2lhbCBPcGVyYXRpdmVcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoyLFwic2FsYXJ5TXVsdGlwbGllclwiOjIsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTQ5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJXYXRjaGRvZyBTZWN1cml0eVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJXYXRjaGRvZyBTZWN1cml0eVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlBvbGljZSBPZmZpY2VyXCI6dHJ1ZSxcIlBvbGljZSBDaGllZlwiOnRydWUsXCJTZWN1cml0eSBHdWFyZFwiOnRydWUsXCJTZWN1cml0eSBPZmZpY2VyXCI6dHJ1ZSxcIlNlY3VyaXR5IFN1cGVydmlzb3JcIjp0cnVlLFwiSGVhZCBvZiBTZWN1cml0eVwiOnRydWUsXCJGaWVsZCBBZ2VudFwiOnRydWUsXCJTZWNyZXQgQWdlbnRcIjp0cnVlLFwiU3BlY2lhbCBPcGVyYXRpdmVcIjp0cnVlLFwiU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgQ29uc3VsdGFudFwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuNSxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjUsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6MTI0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJMZXhvQ29ycFwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJMZXhvQ29ycFwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIklUIEludGVyblwiOnRydWUsXCJJVCBBbmFseXN0XCI6dHJ1ZSxcIklUIE1hbmFnZXJcIjp0cnVlLFwiU3lzdGVtcyBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIk5ldHdvcmsgRW5naW5lZXJcIjp0cnVlLFwiTmV0d29yayBBZG1pbmlzdHJhdG9yXCI6dHJ1ZSxcIlNlY3VyaXR5IEVuZ2luZWVyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiQnVzaW5lc3MgSW50ZXJuXCI6dHJ1ZSxcIkJ1c2luZXNzIEFuYWx5c3RcIjp0cnVlLFwiQnVzaW5lc3MgTWFuYWdlclwiOnRydWUsXCJPcGVyYXRpb25zIE1hbmFnZXJcIjp0cnVlLFwiQ2hpZWYgRmluYW5jaWFsIE9mZmljZXJcIjp0cnVlLFwiQ2hpZWYgRXhlY3V0aXZlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIE9mZmljZXJcIjp0cnVlLFwiUG9saWNlIENoaWVmXCI6dHJ1ZSxcIlNlY3VyaXR5IEd1YXJkXCI6dHJ1ZSxcIlNlY3VyaXR5IE9mZmljZXJcIjp0cnVlLFwiU2VjdXJpdHkgU3VwZXJ2aXNvclwiOnRydWUsXCJIZWFkIG9mIFNlY3VyaXR5XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS40LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNCxcImpvYlN0YXRSZXFPZmZzZXRcIjo5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiUmhvIENvbnN0cnVjdGlvblwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJSaG8gQ29uc3RydWN0aW9uXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuMyxcInNhbGFyeU11bHRpcGxpZXJcIjoxLjMsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6NDksXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIkFscGhhIEVudGVycHJpc2VzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkFscGhhIEVudGVycHJpc2VzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJCdXNpbmVzcyBJbnRlcm5cIjp0cnVlLFwiQnVzaW5lc3MgQW5hbHlzdFwiOnRydWUsXCJCdXNpbmVzcyBNYW5hZ2VyXCI6dHJ1ZSxcIk9wZXJhdGlvbnMgTWFuYWdlclwiOnRydWUsXCJTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MS41LFwic2FsYXJ5TXVsdGlwbGllclwiOjEuNSxcImpvYlN0YXRSZXFPZmZzZXRcIjo5OSxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQWV2dW0gUG9saWNlIEhlYWRxdWFydGVyc1wiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJBZXZ1bSBQb2xpY2UgSGVhZHF1YXJ0ZXJzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlLFwiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjMsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4zLFwiam9iU3RhdFJlcU9mZnNldFwiOjk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJTeXNDb3JlIFNlY3VyaXRpZXNcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiU3lzQ29yZSBTZWN1cml0aWVzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjMsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4zLFwiam9iU3RhdFJlcU9mZnNldFwiOjEyNCxcImlzUGxheWVyRW1wbG95ZWRcIjpmYWxzZSxcInBsYXllclJlcHV0YXRpb25cIjoxLFwiZmF2b3JcIjowLjAwMixcImlzTWVnYWNvcnBcIjpmYWxzZX19LFwiQ29tcHVUZWtcIjp7XCJjdG9yXCI6XCJDb21wYW55XCIsXCJkYXRhXCI6e1wibmFtZVwiOlwiQ29tcHVUZWtcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEuMixcInNhbGFyeU11bHRpcGxpZXJcIjoxLjIsXCJqb2JTdGF0UmVxT2Zmc2V0XCI6NzQsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fSxcIk5ldExpbmsgVGVjaG5vbG9naWVzXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk5ldExpbmsgVGVjaG5vbG9naWVzXCIsXCJpbmZvXCI6XCJcIixcImNvbXBhbnlQb3NpdGlvbnNcIjp7XCJTb2Z0d2FyZSBFbmdpbmVlcmluZyBJbnRlcm5cIjp0cnVlLFwiSnVuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJMZWFkIFNvZnR3YXJlIERldmVsb3BlclwiOnRydWUsXCJIZWFkIG9mIFNvZnR3YXJlXCI6dHJ1ZSxcIkhlYWQgb2YgRW5naW5lZXJpbmdcIjp0cnVlLFwiVmljZSBQcmVzaWRlbnQgb2YgVGVjaG5vbG9neVwiOnRydWUsXCJDaGllZiBUZWNobm9sb2d5IE9mZmljZXJcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiTmV0d29yayBFbmdpbmVlclwiOnRydWUsXCJOZXR3b3JrIEFkbWluaXN0cmF0b3JcIjp0cnVlLFwiU2VjdXJpdHkgRW5naW5lZXJcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4yLFwiam9iU3RhdFJlcU9mZnNldFwiOjk5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJDYXJtaWNoYWVsIFNlY3VyaXR5XCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkNhcm1pY2hhZWwgU2VjdXJpdHlcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIlNvZnR3YXJlIEVuZ2luZWVyaW5nIEludGVyblwiOnRydWUsXCJKdW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIEVuZ2luZWVyXCI6dHJ1ZSxcIkxlYWQgU29mdHdhcmUgRGV2ZWxvcGVyXCI6dHJ1ZSxcIkhlYWQgb2YgU29mdHdhcmVcIjp0cnVlLFwiSGVhZCBvZiBFbmdpbmVlcmluZ1wiOnRydWUsXCJWaWNlIFByZXNpZGVudCBvZiBUZWNobm9sb2d5XCI6dHJ1ZSxcIkNoaWVmIFRlY2hub2xvZ3kgT2ZmaWNlclwiOnRydWUsXCJJVCBJbnRlcm5cIjp0cnVlLFwiSVQgQW5hbHlzdFwiOnRydWUsXCJJVCBNYW5hZ2VyXCI6dHJ1ZSxcIlN5c3RlbXMgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJOZXR3b3JrIEVuZ2luZWVyXCI6dHJ1ZSxcIk5ldHdvcmsgQWRtaW5pc3RyYXRvclwiOnRydWUsXCJTZWN1cml0eSBFbmdpbmVlclwiOnRydWUsXCJTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIlNlbmlvciBTb2Z0d2FyZSBDb25zdWx0YW50XCI6dHJ1ZSxcIkZpZWxkIEFnZW50XCI6dHJ1ZSxcIlNlY3JldCBBZ2VudFwiOnRydWUsXCJTcGVjaWFsIE9wZXJhdGl2ZVwiOnRydWUsXCJQb2xpY2UgT2ZmaWNlclwiOnRydWUsXCJQb2xpY2UgQ2hpZWZcIjp0cnVlLFwiU2VjdXJpdHkgR3VhcmRcIjp0cnVlLFwiU2VjdXJpdHkgT2ZmaWNlclwiOnRydWUsXCJTZWN1cml0eSBTdXBlcnZpc29yXCI6dHJ1ZSxcIkhlYWQgb2YgU2VjdXJpdHlcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjIsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4yLFwiam9iU3RhdFJlcU9mZnNldFwiOjc0LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJGb29kTlN0dWZmXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkZvb2ROU3R1ZmZcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkVtcGxveWVlXCI6dHJ1ZSxcIlBhcnQtdGltZSBFbXBsb3llZVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MSxcImpvYlN0YXRSZXFPZmZzZXRcIjowLFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJKb2UncyBHdW5zXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIkpvZSdzIEd1bnNcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIkVtcGxveWVlXCI6dHJ1ZSxcIlBhcnQtdGltZSBFbXBsb3llZVwiOnRydWV9LFwiZXhwTXVsdGlwbGllclwiOjEsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MSxcImpvYlN0YXRSZXFPZmZzZXRcIjowLFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJPbWVnYSBTb2Z0d2FyZVwiOntcImN0b3JcIjpcIkNvbXBhbnlcIixcImRhdGFcIjp7XCJuYW1lXCI6XCJPbWVnYSBTb2Z0d2FyZVwiLFwiaW5mb1wiOlwiXCIsXCJjb21wYW55UG9zaXRpb25zXCI6e1wiU29mdHdhcmUgRW5naW5lZXJpbmcgSW50ZXJuXCI6dHJ1ZSxcIkp1bmlvciBTb2Z0d2FyZSBFbmdpbmVlclwiOnRydWUsXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIjp0cnVlLFwiTGVhZCBTb2Z0d2FyZSBEZXZlbG9wZXJcIjp0cnVlLFwiSGVhZCBvZiBTb2Z0d2FyZVwiOnRydWUsXCJIZWFkIG9mIEVuZ2luZWVyaW5nXCI6dHJ1ZSxcIlZpY2UgUHJlc2lkZW50IG9mIFRlY2hub2xvZ3lcIjp0cnVlLFwiQ2hpZWYgVGVjaG5vbG9neSBPZmZpY2VyXCI6dHJ1ZSxcIlNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiU2VuaW9yIFNvZnR3YXJlIENvbnN1bHRhbnRcIjp0cnVlLFwiSVQgSW50ZXJuXCI6dHJ1ZSxcIklUIEFuYWx5c3RcIjp0cnVlLFwiSVQgTWFuYWdlclwiOnRydWUsXCJTeXN0ZW1zIEFkbWluaXN0cmF0b3JcIjp0cnVlfSxcImV4cE11bHRpcGxpZXJcIjoxLjEsXCJzYWxhcnlNdWx0aXBsaWVyXCI6MS4xLFwiam9iU3RhdFJlcU9mZnNldFwiOjQ5LFwiaXNQbGF5ZXJFbXBsb3llZFwiOmZhbHNlLFwicGxheWVyUmVwdXRhdGlvblwiOjEsXCJmYXZvclwiOjAuMDAyLFwiaXNNZWdhY29ycFwiOmZhbHNlfX0sXCJOb29kbGUgQmFyXCI6e1wiY3RvclwiOlwiQ29tcGFueVwiLFwiZGF0YVwiOntcIm5hbWVcIjpcIk5vb2RsZSBCYXJcIixcImluZm9cIjpcIlwiLFwiY29tcGFueVBvc2l0aW9uc1wiOntcIldhaXRlclwiOnRydWUsXCJQYXJ0LXRpbWUgV2FpdGVyXCI6dHJ1ZX0sXCJleHBNdWx0aXBsaWVyXCI6MSxcInNhbGFyeU11bHRpcGxpZXJcIjoxLFwiam9iU3RhdFJlcU9mZnNldFwiOjAsXCJpc1BsYXllckVtcGxveWVkXCI6ZmFsc2UsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MSxcImZhdm9yXCI6MC4wMDIsXCJpc01lZ2Fjb3JwXCI6ZmFsc2V9fX0iLCJGYWN0aW9uc1NhdmUiOiJ7XCJJbGx1bWluYXRpXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJORU1FQU4gU3ViZGVybWFsIFdlYXZlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjMgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBBbmFseXplIEVuZ2luZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBEaXJlY3QgTWVtb3J5IEFjY2VzcyBVcGdyYWRlXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIlFMaW5rXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJJbGx1bWluYXRpXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiRGFlZGFsdXNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJTeW50aGV0aWMgSGVhcnRcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIk5FTUVBTiBTdWJkZXJtYWwgV2VhdmVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMyBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIEFuYWx5emUgRW5naW5lXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIERpcmVjdCBNZW1vcnkgQWNjZXNzIFVwZ3JhZGVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiVGhlIFJlZCBQaWxsXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJEYWVkYWx1c1wiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlRoZSBDb3ZlbmFudFwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSUlJXCIsXCJTeW50aGV0aWMgSGVhcnRcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIkNvbWJhdCBSaWIgSUlJXCIsXCJORU1FQU4gU3ViZGVybWFsIFdlYXZlXCIsXCJHcmFwaGVuZSBCb25lIExhY2luZ3NcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMyBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIEFuYWx5emUgRW5naW5lXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIERpcmVjdCBNZW1vcnkgQWNjZXNzIFVwZ3JhZGVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiU1BUTi05NyBHZW5lIE1vZGlmaWNhdGlvblwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiVGhlIENvdmVuYW50XCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiRUNvcnBcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJHcmFwaGVuZSBCaW9uaWMgU3BpbmUgVXBncmFkZVwiLFwiR3JhcGhlbmUgQmlvbmljIExlZ3MgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIEltcGxhbnRcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMiBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjMgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBBbmFseXplIEVuZ2luZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBEaXJlY3QgTWVtb3J5IEFjY2VzcyBVcGdyYWRlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZVwiLFwiUEMgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2UgT3B0aW1pemF0aW9uIFN1Ym1vZHVsZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJFQ29ycCBIVk1pbmQgSW1wbGFudFwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiRUNvcnBcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJNZWdhQ29ycFwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkdyYXBoZW5lIEJpb25pYyBMZWdzIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBJbXBsYW50XCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjIgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYzIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQW5hbHl6ZSBFbmdpbmVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgRGlyZWN0IE1lbW9yeSBBY2Nlc3MgVXBncmFkZVwiLFwiQURSLVYxIFBoZXJvbW9uZSBHZW5lXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkNvcmRpQVJDIEZ1c2lvbiBSZWFjdG9yXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJNZWdhQ29ycFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkJhY2htYW4gJiBBc3NvY2lhdGVzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiRW5oYW5jZWQgU29jaWFsIEludGVyYWN0aW9uIEltcGxhbnRcIixcIk5ldXJhbHN0aW11bGF0b3JcIixcIk51b3B0aW1hbCBOb290cm9waWMgSW5qZWN0b3IgSW1wbGFudFwiLFwiU3BlZWNoIEVuaGFuY2VtZW50XCIsXCJGb2N1c1dpcmVcIixcIkFEUi1WMiBQaGVyb21vbmUgR2VuZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJTbWFydEphd1wiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiQmFjaG1hbiAmIEFzc29jaWF0ZXNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJCbGFkZSBJbmR1c3RyaWVzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiU3luZmlicmlsIE11c2NsZVwiLFwiQ29tYmF0IFJpYiBJXCIsXCJDb21iYXQgUmliIElJXCIsXCJDb21iYXQgUmliIElJSVwiLFwiTmFub2ZpYmVyIFdlYXZlXCIsXCJCaW9uaWMgU3BpbmVcIixcIkJpb25pYyBMZWdzXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgSW1wbGFudFwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYyIFVwZ3JhZGVcIixcIlBDIERpcmVjdC1OZXVyYWwgSW50ZXJmYWNlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZSBPcHRpbWl6YXRpb24gU3VibW9kdWxlXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkh5cGVyU2lnaHQgQ29ybmVhbCBJbXBsYW50XCIsXCJOZW90cmFcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkJsYWRlIEluZHVzdHJpZXNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJOV09cIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJTeW50aGV0aWMgSGVhcnRcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIkVuaGFuY2VkIFNvY2lhbCBJbnRlcmFjdGlvbiBJbXBsYW50XCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgSW1wbGFudFwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYyIFVwZ3JhZGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMyBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIEFuYWx5emUgRW5naW5lXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIERpcmVjdCBNZW1vcnkgQWNjZXNzIFVwZ3JhZGVcIixcIkFEUi1WMSBQaGVyb21vbmUgR2VuZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJOZXVyb3RyYWluZXIgSUlJXCIsXCJQb3dlciBSZWNpcmN1bGF0aW9uIENvcmVcIixcIlhhbmlwaGVyXCIsXCJIeWRyb2ZsYW1lIExlZnQgQXJtXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJOV09cIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJDbGFya2UgSW5jb3Jwb3JhdGVkXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiRW5oYW5jZWQgU29jaWFsIEludGVyYWN0aW9uIEltcGxhbnRcIixcIk5ldXJhbHN0aW11bGF0b3JcIixcIk5ldXJvbmFsIERlbnNpZmljYXRpb25cIixcIk51b3B0aW1hbCBOb290cm9waWMgSW5qZWN0b3IgSW1wbGFudFwiLFwiU3BlZWNoIEVuaGFuY2VtZW50XCIsXCJGb2N1c1dpcmVcIixcIkFEUi1WMiBQaGVyb21vbmUgR2VuZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJuZXh0U0VOUyBHZW5lIE1vZGlmaWNhdGlvblwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiQ2xhcmtlIEluY29ycG9yYXRlZFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIk9tbmlUZWsgSW5jb3Jwb3JhdGVkXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiQ29tYmF0IFJpYiBJXCIsXCJDb21iYXQgUmliIElJXCIsXCJDb21iYXQgUmliIElJSVwiLFwiTmFub2ZpYmVyIFdlYXZlXCIsXCJCaW9uaWMgU3BpbmVcIixcIkJpb25pYyBMZWdzXCIsXCJFbmhhbmNlZCBTb2NpYWwgSW50ZXJhY3Rpb24gSW1wbGFudFwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIFYyIFVwZ3JhZGVcIixcIlBDIERpcmVjdC1OZXVyYWwgSW50ZXJmYWNlXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk9tbmlUZWsgSW5mb0xvYWRcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIk9tbmlUZWsgSW5jb3Jwb3JhdGVkXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiRm91ciBTaWdtYVwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkVuaGFuY2VkIFNvY2lhbCBJbnRlcmFjdGlvbiBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOdW9wdGltYWwgTm9vdHJvcGljIEluamVjdG9yIEltcGxhbnRcIixcIlNwZWVjaCBFbmhhbmNlbWVudFwiLFwiRm9jdXNXaXJlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZVwiLFwiQURSLVYxIFBoZXJvbW9uZSBHZW5lXCIsXCJBRFItVjIgUGhlcm9tb25lIEdlbmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiTmV1cm90cmFpbmVyIElJSVwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiRm91ciBTaWdtYVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkt1YWlHb25nIEludGVybmF0aW9uYWxcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElcIixcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSUlcIixcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSUlJXCIsXCJTeW50aGV0aWMgSGVhcnRcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIkNvbWJhdCBSaWIgSVwiLFwiQ29tYmF0IFJpYiBJSVwiLFwiQ29tYmF0IFJpYiBJSUlcIixcIkJpb25pYyBTcGluZVwiLFwiQmlvbmljIExlZ3NcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMiBVcGdyYWRlXCIsXCJTcGVlY2ggRW5oYW5jZW1lbnRcIixcIkZvY3VzV2lyZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJIeXBlclNpZ2h0IENvcm5lYWwgSW1wbGFudFwiLFwiUGhvdG9zeW50aGV0aWMgQ2VsbHNcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkt1YWlHb25nIEludGVybmF0aW9uYWxcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJGdWxjcnVtIFNlY3JldCBUZWNobm9sb2dpZXNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJTeW50aGV0aWMgSGVhcnRcIixcIlN5bmZpYnJpbCBNdXNjbGVcIixcIk5hbm9maWJlciBXZWF2ZVwiLFwiTkVNRUFOIFN1YmRlcm1hbCBXZWF2ZVwiLFwiR3JhcGhlbmUgQm9uZSBMYWNpbmdzXCIsXCJHcmFwaGVuZSBCaW9uaWMgU3BpbmUgVXBncmFkZVwiLFwiR3JhcGhlbmUgQmlvbmljIExlZ3MgVXBncmFkZVwiLFwiQXJ0aWZpY2lhbCBCaW8tbmV1cmFsIE5ldHdvcmsgSW1wbGFudFwiLFwiRW5oYW5jZWQgTXllbGluIFNoZWF0aGluZ1wiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIEltcGxhbnRcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBWMiBVcGdyYWRlXCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjMgVXBncmFkZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBBbmFseXplIEVuZ2luZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBEaXJlY3QgTWVtb3J5IEFjY2VzcyBVcGdyYWRlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZSBPcHRpbWl6YXRpb24gU3VibW9kdWxlXCIsXCJQQyBEaXJlY3QtTmV1cmFsIEludGVyZmFjZSBOZXVyb05ldCBJbmplY3RvclwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJGdWxjcnVtIFNlY3JldCBUZWNobm9sb2dpZXNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJCaXRSdW5uZXJzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQXJ0aWZpY2lhbCBCaW8tbmV1cmFsIE5ldHdvcmsgSW1wbGFudFwiLFwiRW5oYW5jZWQgTXllbGluIFNoZWF0aGluZ1wiLFwiRGF0YUphY2tcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGVcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGUgQ29yZSBJbXBsYW50XCIsXCJFbWJlZGRlZCBOZXRidXJuZXIgTW9kdWxlIENvcmUgVjIgVXBncmFkZVwiLFwiTmV1cmFsIEFjY2VsZXJhdG9yXCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElJSVwiLFwiQ3JhbmlhbCBTaWduYWwgUHJvY2Vzc29ycyAtIEdlbiBJVlwiLFwiQ3JhbmlhbCBTaWduYWwgUHJvY2Vzc29ycyAtIEdlbiBWXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk5ldXJvdHJhaW5lciBJSVwiLFwiQml0UnVubmVycyBOZXVyb2xpbmtcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkJpdFJ1bm5lcnNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJUaGUgQmxhY2sgSGFuZFwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIkFydGlmaWNpYWwgU3luYXB0aWMgUG90ZW50aWF0aW9uXCIsXCJFbmhhbmNlZCBNeWVsaW4gU2hlYXRoaW5nXCIsXCJEYXRhSmFja1wiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZVwiLFwiRW1iZWRkZWQgTmV0YnVybmVyIE1vZHVsZSBDb3JlIEltcGxhbnRcIixcIk5ldXJhbHN0aW11bGF0b3JcIixcIkNyYW5pYWwgU2lnbmFsIFByb2Nlc3NvcnMgLSBHZW4gSUlJXCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElWXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIlRoZSBCbGFjayBIYW5kXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJUaGUgQmxhY2sgSGFuZFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIk5pdGVTZWNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJCaXRXaXJlXCIsXCJBcnRpZmljaWFsIFN5bmFwdGljIFBvdGVudGlhdGlvblwiLFwiTmV1cmFsLVJldGVudGlvbiBFbmhhbmNlbWVudFwiLFwiRGF0YUphY2tcIixcIkVtYmVkZGVkIE5ldGJ1cm5lciBNb2R1bGVcIixcIkNyYW5pYWwgU2lnbmFsIFByb2Nlc3NvcnMgLSBHZW4gSUlcIixcIkNyYW5pYWwgU2lnbmFsIFByb2Nlc3NvcnMgLSBHZW4gSUlJXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk5ldXJvdHJhaW5lciBJSVwiLFwiQ1JUWDQyLUFBIEdlbmUgTW9kaWZpY2F0aW9uXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJOaXRlU2VjXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQWV2dW1cIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJXaXJlZCBSZWZsZXhlc1wiLFwiU3BlZWNoIFByb2Nlc3NvciBJbXBsYW50XCIsXCJTeW5hcHRpYyBFbmhhbmNlbWVudCBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk5ldXJvdHJhaW5lciBJXCIsXCJQQ01hdHJpeFwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiQWV2dW1cIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJDaG9uZ3FpbmdcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJTcGVlY2ggUHJvY2Vzc29yIEltcGxhbnRcIixcIkRhdGFKYWNrXCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOdW9wdGltYWwgTm9vdHJvcGljIEluamVjdG9yIEltcGxhbnRcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiTmV1cmVnZW4gR2VuZSBNb2RpZmljYXRpb25cIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOnRydWUsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiQ2hvbmdxaW5nXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiSXNoaW1hXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJDb21iYXQgUmliIElcIixcIldpcmVkIFJlZmxleGVzXCIsXCJTcGVlY2ggUHJvY2Vzc29yIEltcGxhbnRcIixcIk5ldXJhbHN0aW11bGF0b3JcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiSU5GUkFSRVQgRW5oYW5jZW1lbnRcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOnRydWUsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiSXNoaW1hXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiTmV3IFRva3lvXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3BlZWNoIFByb2Nlc3NvciBJbXBsYW50XCIsXCJEYXRhSmFja1wiLFwiTmV1cmFsc3RpbXVsYXRvclwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk51dHJpR2VuIEltcGxhbnRcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOnRydWUsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiTmV3IFRva3lvXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiU2VjdG9yLTEyXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6dHJ1ZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElcIixcIkF1Z21lbnRlZCBUYXJnZXRpbmcgSUlcIixcIldpcmVkIFJlZmxleGVzXCIsXCJTcGVlY2ggUHJvY2Vzc29yIEltcGxhbnRcIixcIk5ldXJhbHN0aW11bGF0b3JcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiQ2FzaFJvb3QgU3RhcnRlciBLaXRcIl0sXCJmYXZvclwiOjE4LjIxNixcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOnRydWUsXCJuYW1lXCI6XCJTZWN0b3ItMTJcIixcInBsYXllclJlcHV0YXRpb25cIjoxMjkyMC4wOTQwMzI1NTcyODN9fSxcIlZvbGhhdmVuXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQ29tYmF0IFJpYiBJXCIsXCJDb21iYXQgUmliIElJXCIsXCJXaXJlZCBSZWZsZXhlc1wiLFwiU3BlZWNoIFByb2Nlc3NvciBJbXBsYW50XCIsXCJOZXVyYWxzdGltdWxhdG9yXCIsXCJOdW9wdGltYWwgTm9vdHJvcGljIEluamVjdG9yIEltcGxhbnRcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiRGVybWFGb3JjZSBQYXJ0aWNsZSBCYXJyaWVyXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjp0cnVlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIlZvbGhhdmVuXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiU3BlYWtlcnMgZm9yIHRoZSBEZWFkXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiVW5zdGFibGUgQ2lyY2FkaWFuIE1vZHVsYXRvclwiLFwiU3ludGhldGljIEhlYXJ0XCIsXCJTeW5maWJyaWwgTXVzY2xlXCIsXCJOYW5vZmliZXIgV2VhdmVcIixcIldpcmVkIFJlZmxleGVzXCIsXCJCaW9uaWMgU3BpbmVcIixcIkJpb25pYyBMZWdzXCIsXCJTcGVlY2ggRW5oYW5jZW1lbnRcIixcIlRoZSBTaGFkb3cncyBTaW11bGFjcnVtXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkdyYXBoZW5lIEJyYWNoaUJsYWRlcyBVcGdyYWRlXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJTcGVha2VycyBmb3IgdGhlIERlYWRcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJUaGUgRGFyayBBcm15XCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiSGVtb1JlY2lyY3VsYXRvclwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiQ29tYmF0IFJpYiBJXCIsXCJDb21iYXQgUmliIElJXCIsXCJDb21iYXQgUmliIElJSVwiLFwiTmFub2ZpYmVyIFdlYXZlXCIsXCJXaXJlZCBSZWZsZXhlc1wiLFwiVGhlIFNoYWRvdydzIFNpbXVsYWNydW1cIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiUG93ZXIgUmVjaXJjdWxhdGlvbiBDb3JlXCIsXCJHcmFwaGVuZSBCaW9uaWMgQXJtcyBVcGdyYWRlXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJUaGUgRGFyayBBcm15XCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiVGhlIFN5bmRpY2F0ZVwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOnRydWUsXCJhdWdtZW50YXRpb25zXCI6W1wiSGVtb1JlY2lyY3VsYXRvclwiLFwiQXVnbWVudGVkIFRhcmdldGluZyBJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJXCIsXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElJSVwiLFwiQ29tYmF0IFJpYiBJXCIsXCJDb21iYXQgUmliIElJXCIsXCJDb21iYXQgUmliIElJSVwiLFwiTmFub2ZpYmVyIFdlYXZlXCIsXCJORU1FQU4gU3ViZGVybWFsIFdlYXZlXCIsXCJXaXJlZCBSZWZsZXhlc1wiLFwiQmlvbmljIFNwaW5lXCIsXCJCaW9uaWMgTGVnc1wiLFwiQURSLVYxIFBoZXJvbW9uZSBHZW5lXCIsXCJUaGUgU2hhZG93J3MgU2ltdWxhY3J1bVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJQb3dlciBSZWNpcmN1bGF0aW9uIENvcmVcIixcIkJyYWNoaUJsYWRlc1wiXSxcImZhdm9yXCI6MSxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOnRydWUsXCJuYW1lXCI6XCJUaGUgU3luZGljYXRlXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6NDU2LjUwNjMxNjU3Mzk0Nzh9fSxcIlNpbGhvdWV0dGVcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJTcGVlY2ggUHJvY2Vzc29yIEltcGxhbnRcIixcIlRJVE4tNDEgR2VuZS1Nb2RpZmljYXRpb24gSW5qZWN0aW9uXCIsXCJBRFItVjIgUGhlcm9tb25lIEdlbmVcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiU2lsaG91ZXR0ZVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlRldHJhZHNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJIZW1vUmVjaXJjdWxhdG9yXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIkx1bWluQ2xvYWtpbmctVjEgU2tpbiBJbXBsYW50XCIsXCJMdW1pbkNsb2FraW5nLVYyIFNraW4gSW1wbGFudFwiLFwiUG93ZXIgUmVjaXJjdWxhdGlvbiBDb3JlXCIsXCJCaW9uaWMgQXJtc1wiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiVGV0cmFkc1wiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIlNsdW0gU25ha2VzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6dHJ1ZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJBdWdtZW50ZWQgVGFyZ2V0aW5nIElcIixcIkNvbWJhdCBSaWIgSVwiLFwiV2lyZWQgUmVmbGV4ZXNcIixcIk5ldXJvRmx1eCBHb3Zlcm5vclwiLFwiTHVtaW5DbG9ha2luZy1WMSBTa2luIEltcGxhbnRcIixcIkx1bWluQ2xvYWtpbmctVjIgU2tpbiBJbXBsYW50XCIsXCJTbWFydFNvbmFyIEltcGxhbnRcIl0sXCJmYXZvclwiOjUzLjIwNjQsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjp0cnVlLFwibmFtZVwiOlwiU2x1bSBTbmFrZXNcIixcInBsYXllclJlcHV0YXRpb25cIjo0ODMxLjc5NDM5NzY1MDU3ODV9fSxcIk5ldGJ1cm5lcnNcIjp7XCJjdG9yXCI6XCJGYWN0aW9uXCIsXCJkYXRhXCI6e1wiYWxyZWFkeUludml0ZWRcIjpmYWxzZSxcImF1Z21lbnRhdGlvbnNcIjpbXCJIYWNrbmV0IE5vZGUgQ1BVIEFyY2hpdGVjdHVyZSBOZXVyYWwtVXBsb2FkXCIsXCJIYWNrbmV0IE5vZGUgQ2FjaGUgQXJjaGl0ZWN0dXJlIE5ldXJhbC1VcGxvYWRcIixcIkhhY2tuZXQgTm9kZSBOSUMgQXJjaGl0ZWN0dXJlIE5ldXJhbC1VcGxvYWRcIixcIkhhY2tuZXQgTm9kZSBLZXJuZWwgRGlyZWN0LU5ldXJhbCBJbnRlcmZhY2VcIixcIkhhY2tuZXQgTm9kZSBDb3JlIERpcmVjdC1OZXVyYWwgSW50ZXJmYWNlXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIl0sXCJmYXZvclwiOjAsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIk5ldGJ1cm5lcnNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJUaWFuIERpIEh1aVwiOntcImN0b3JcIjpcIkZhY3Rpb25cIixcImRhdGFcIjp7XCJhbHJlYWR5SW52aXRlZFwiOmZhbHNlLFwiYXVnbWVudGF0aW9uc1wiOltcIk5hbm9maWJlciBXZWF2ZVwiLFwiV2lyZWQgUmVmbGV4ZXNcIixcIlNwZWVjaCBQcm9jZXNzb3IgSW1wbGFudFwiLFwiTnVvcHRpbWFsIE5vb3Ryb3BpYyBJbmplY3RvciBJbXBsYW50XCIsXCJTcGVlY2ggRW5oYW5jZW1lbnRcIixcIkFEUi1WMSBQaGVyb21vbmUgR2VuZVwiLFwiTmV1cm9GbHV4IEdvdmVybm9yXCIsXCJTb2NpYWwgTmVnb3RpYXRpb24gQXNzaXN0YW50IChTLk4uQSlcIixcIk5ldXJvcmVjZXB0b3IgTWFuYWdlbWVudCBJbXBsYW50XCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJUaWFuIERpIEh1aVwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fSxcIkN5YmVyU2VjXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiQml0V2lyZVwiLFwiU3luYXB0aWMgRW5oYW5jZW1lbnQgSW1wbGFudFwiLFwiQ3JhbmlhbCBTaWduYWwgUHJvY2Vzc29ycyAtIEdlbiBJXCIsXCJDcmFuaWFsIFNpZ25hbCBQcm9jZXNzb3JzIC0gR2VuIElJXCIsXCJOZXVyb0ZsdXggR292ZXJub3JcIixcIk5ldXJvdHJhaW5lciBJXCJdLFwiZmF2b3JcIjoxMC45MDMsXCJpc0Jhbm5lZFwiOmZhbHNlLFwiaXNNZW1iZXJcIjpmYWxzZSxcIm5hbWVcIjpcIkN5YmVyU2VjXCIsXCJwbGF5ZXJSZXB1dGF0aW9uXCI6MH19LFwiQmxhZGVidXJuZXJzXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiRXNwZXJUZWNoIEJsYWRlYnVybmVyIEV5ZXdlYXJcIixcIkVNUy00IFJlY29tYmluYXRpb25cIixcIk9SSU9OLU1LSVYgU2hvdWxkZXJcIixcIkh5cGVyaW9uIFBsYXNtYSBDYW5ub24gVjFcIixcIkh5cGVyaW9uIFBsYXNtYSBDYW5ub24gVjJcIixcIkdPTEVNIFNlcnVtXCIsXCJWYW5nZWxpcyBWaXJ1c1wiLFwiVmFuZ2VsaXMgVmlydXMgMy4wXCIsXCJJLk4uVC5FLlIuTC5JLk4uSy5FLkRcIixcIkJsYWRlJ3MgUnVubmVyc1wiLFwiQkxBREUtNTFiIFRlc2xhIEFybW9yXCIsXCJCTEFERS01MWIgVGVzbGEgQXJtb3I6IFBvd2VyIENlbGxzIFVwZ3JhZGVcIixcIkJMQURFLTUxYiBUZXNsYSBBcm1vcjogRW5lcmd5IFNoaWVsZGluZyBVcGdyYWRlXCIsXCJCTEFERS01MWIgVGVzbGEgQXJtb3I6IFVuaWJlYW0gVXBncmFkZVwiLFwiQkxBREUtNTFiIFRlc2xhIEFybW9yOiBPbW5pYmVhbSBVcGdyYWRlXCIsXCJCTEFERS01MWIgVGVzbGEgQXJtb3I6IElQVSBVcGdyYWRlXCIsXCJUaGUgQmxhZGUncyBTaW11bGFjcnVtXCJdLFwiZmF2b3JcIjowLFwiaXNCYW5uZWRcIjpmYWxzZSxcImlzTWVtYmVyXCI6ZmFsc2UsXCJuYW1lXCI6XCJCbGFkZWJ1cm5lcnNcIixcInBsYXllclJlcHV0YXRpb25cIjowfX0sXCJDaHVyY2ggb2YgdGhlIE1hY2hpbmUgR29kXCI6e1wiY3RvclwiOlwiRmFjdGlvblwiLFwiZGF0YVwiOntcImFscmVhZHlJbnZpdGVkXCI6ZmFsc2UsXCJhdWdtZW50YXRpb25zXCI6W1wiU3RhbmVrJ3MgR2lmdCAtIEdlbmVzaXNcIixcIlN0YW5laydzIEdpZnQgLSBBd2FrZW5pbmdcIixcIlN0YW5laydzIEdpZnQgLSBTZXJlbml0eVwiXSxcImZhdm9yXCI6MCxcImlzQmFubmVkXCI6ZmFsc2UsXCJpc01lbWJlclwiOmZhbHNlLFwibmFtZVwiOlwiQ2h1cmNoIG9mIHRoZSBNYWNoaW5lIEdvZFwiLFwicGxheWVyUmVwdXRhdGlvblwiOjB9fX0iLCJBbGlhc2VzU2F2ZSI6Int9IiwiR2xvYmFsQWxpYXNlc1NhdmUiOiJ7fSIsIk1lc3NhZ2VzU2F2ZSI6IntcImowLm1zZ1wiOntcImN0b3JcIjpcIk1lc3NhZ2VcIixcImRhdGFcIjp7XCJmaWxlbmFtZVwiOlwiajAubXNnXCIsXCJtc2dcIjpcIkkga25vdyB5b3UgY2FuIHNlbnNlIGl0LiBJIGtub3cgeW91J3JlIHNlYXJjaGluZyBmb3IgaXQuIEl0J3Mgd2h5IHlvdSBzcGVuZCBuaWdodCBhZnRlciBuaWdodCBhdCB5b3VyIGNvbXB1dGVyLiA8YnI+PGJyPkl0J3MgcmVhbCwgSSd2ZSBzZWVuIGl0LiBBbmQgSSBjYW4gaGVscCB5b3UgZmluZCBpdC4gQnV0IG5vdCByaWdodCBub3cuIFlvdSdyZSBub3QgcmVhZHkgeWV0Ljxicj48YnI+VXNlIHRoaXMgcHJvZ3JhbSB0byB0cmFjayB5b3VyIHByb2dyZXNzPGJyPjxicj5UaGUgZmwxZ2h0LmV4ZSBwcm9ncmFtIHdhcyBhZGRlZCB0byB5b3VyIGhvbWUgY29tcHV0ZXI8YnI+PGJyPi1qdW1wM1JcIixcInJlY3ZkXCI6dHJ1ZX19LFwiajEubXNnXCI6e1wiY3RvclwiOlwiTWVzc2FnZVwiLFwiZGF0YVwiOntcImZpbGVuYW1lXCI6XCJqMS5tc2dcIixcIm1zZ1wiOlwiU29vbiB5b3Ugd2lsbCBiZSBjb250YWN0ZWQgYnkgYSBoYWNraW5nIGdyb3VwIGtub3duIGFzIEN5YmVyU2VjLiBUaGV5IGNhbiBoZWxwIHlvdSB3aXRoIHlvdXIgc2VhcmNoLiA8YnI+PGJyPllvdSBzaG91bGQgam9pbiB0aGVtLCBnYXJuZXIgdGhlaXIgZmF2b3IsIGFuZCBleHBsb2l0IHRoZW0gZm9yIHRoZWlyIEF1Z21lbnRhdGlvbnMuIEJ1dCBkbyBub3QgdHJ1c3QgdGhlbS4gVGhleSBhcmUgbm90IHdoYXQgdGhleSBzZWVtLiBObyBvbmUgaXMuPGJyPjxicj4tanVtcDNSXCIsXCJyZWN2ZFwiOnRydWV9fSxcImoyLm1zZ1wiOntcImN0b3JcIjpcIk1lc3NhZ2VcIixcImRhdGFcIjp7XCJmaWxlbmFtZVwiOlwiajIubXNnXCIsXCJtc2dcIjpcIkRvIG5vdCB0cnkgdG8gc2F2ZSB0aGUgd29ybGQuIFRoZXJlIGlzIG5vIHdvcmxkIHRvIHNhdmUuIElmIHlvdSB3YW50IHRvIGZpbmQgdGhlIHRydXRoLCB3b3JyeSBvbmx5IGFib3V0IHlvdXJzZWxmLiBFdGhpY3MgYW5kIG1vcmFscyB3aWxsIGdldCB5b3Uga2lsbGVkLiA8YnI+PGJyPldhdGNoIG91dCBmb3IgYSBoYWNraW5nIGdyb3VwIGtub3duIGFzIE5pdGVTZWMuPGJyPjxicj4tanVtcDNSXCIsXCJyZWN2ZFwiOnRydWV9fSxcImozLm1zZ1wiOntcImN0b3JcIjpcIk1lc3NhZ2VcIixcImRhdGFcIjp7XCJmaWxlbmFtZVwiOlwiajMubXNnXCIsXCJtc2dcIjpcIllvdSBtdXN0IGxlYXJuIHRvIHdhbGsgYmVmb3JlIHlvdSBjYW4gcnVuLiBBbmQgeW91IG11c3QgcnVuIGJlZm9yZSB5b3UgY2FuIGZseS4gTG9vayBmb3IgdGhlIGJsYWNrIGhhbmQuIDxicj48YnI+SS5JLkkuSSA8YnI+PGJyPi1qdW1wM1JcIixcInJlY3ZkXCI6dHJ1ZX19LFwiajQubXNnXCI6e1wiY3RvclwiOlwiTWVzc2FnZVwiLFwiZGF0YVwiOntcImZpbGVuYW1lXCI6XCJqNC5tc2dcIixcIm1zZ1wiOlwiVG8gZmluZCB3aGF0IHlvdSBhcmUgc2VhcmNoaW5nIGZvciwgeW91IG11c3QgdW5kZXJzdGFuZCB0aGUgYml0cy4gVGhlIGJpdHMgYXJlIGFsbCBhcm91bmQgdXMuIFRoZSBydW5uZXJzIHdpbGwgaGVscCB5b3UuPGJyPjxicj4tanVtcDNSXCIsXCJyZWN2ZFwiOmZhbHNlfX0sXCJjc2VjLXRlc3QubXNnXCI6e1wiY3RvclwiOlwiTWVzc2FnZVwiLFwiZGF0YVwiOntcImZpbGVuYW1lXCI6XCJjc2VjLXRlc3QubXNnXCIsXCJtc2dcIjpcIldlJ3ZlIGJlZW4gd2F0Y2hpbmcgeW91LiBZb3VyIHNraWxscyBhcmUgdmVyeSBpbXByZXNzaXZlLiBCdXQgeW91J3JlIHdhc3RpbmcgeW91ciB0YWxlbnRzLiBJZiB5b3Ugam9pbiB1cywgeW91IGNhbiBwdXQgeW91ciBza2lsbHMgdG8gZ29vZCB1c2UgYW5kIGNoYW5nZSB0aGUgd29ybGQgZm9yIHRoZSBiZXR0ZXIuIElmIHlvdSBqb2luIHVzLCB3ZSBjYW4gdW5sb2NrIHlvdXIgZnVsbCBwb3RlbnRpYWwuIDxicj48YnI+QnV0IGZpcnN0LCB5b3UgbXVzdCBwYXNzIG91ciB0ZXN0LiBGaW5kIGFuZCBpbnN0YWxsIHRoZSBiYWNrZG9vciBvbiBvdXIgc2VydmVyLiA8YnI+PGJyPi1DeWJlclNlY1wiLFwicmVjdmRcIjp0cnVlfX0sXCJuaXRlc2VjLXRlc3QubXNnXCI6e1wiY3RvclwiOlwiTWVzc2FnZVwiLFwiZGF0YVwiOntcImZpbGVuYW1lXCI6XCJuaXRlc2VjLXRlc3QubXNnXCIsXCJtc2dcIjpcIlBlb3BsZSBzYXkgdGhhdCB0aGUgY29ycnVwdGVkIGdvdmVybm1lbnRzIGFuZCBjb3Jwb3JhdGlvbnMgcnVsZSB0aGUgd29ybGQuIFllcywgbWF5YmUgdGhleSBkby4gQnV0IGRvIHlvdSBrbm93IHdobyBldmVyeW9uZSByZWFsbHkgZmVhcnM/IFBlb3BsZSBsaWtlIHVzLiBCZWNhdXNlIHRoZXkgY2FuJ3QgaGlkZSBmcm9tIHVzLiBCZWNhdXNlIHRoZXkgY2FuJ3QgZmlnaHQgc2hhZG93cyBhbmQgaWRlYXMgd2l0aCBidWxsZXRzLiA8YnI+PGJyPkpvaW4gdXMsIGFuZCBwZW9wbGUgd2lsbCBmZWFyIHlvdSwgdG9vLiA8YnI+PGJyPkZpbmQgYW5kIGluc3RhbGwgdGhlIGJhY2tkb29yIG9uIG91ciBzZXJ2ZXIuIFRoZW4sIHdlIHdpbGwgY29udGFjdCB5b3UgYWdhaW4uPGJyPjxicj4tTml0ZVNlY1wiLFwicmVjdmRcIjp0cnVlfX0sXCIxOWRmajNsMW5kLm1zZ1wiOntcImN0b3JcIjpcIk1lc3NhZ2VcIixcImRhdGFcIjp7XCJmaWxlbmFtZVwiOlwiMTlkZmozbDFuZC5tc2dcIixcIm1zZ1wiOlwiV2Uga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcuIFdlIGtub3cgd2hhdCBkcml2ZXMgeW91LiBXZSBrbm93IHdoYXQgeW91IGFyZSBsb29raW5nIGZvci4gPGJyPjxicj4gV2UgY2FuIGhlbHAgeW91IGZpbmQgdGhlIGFuc3dlcnMuPGJyPjxicj5ydW40dGhlaDExMXpcIixcInJlY3ZkXCI6ZmFsc2V9fSxcImljYXJ1cy5tc2dcIjp7XCJjdG9yXCI6XCJNZXNzYWdlXCIsXCJkYXRhXCI6e1wiZmlsZW5hbWVcIjpcImljYXJ1cy5tc2dcIixcIm1zZ1wiOlwiQCkoI1YlKk4pQCgjKikqQylAIyUqKSpWKUAjKColVkApKCNWTiUqKUAjKColPGJyPilAQigqIyUpQClNI0IqJVYpX19fX0ZJTkRfX18jJEApIyUoQiopQCMoKiVCKTxicj5AXyMoJV9AI00oQkRTUE9NQl9fVEhFLUNBVkVfIykkKCpAIyQpQCNCTkJFR0I8YnI+REZMU01GVk1WKSNAKCQqKUAjKiRNVilAIygqJFYpTSMoKiQpTUAoIypWTSQpXCIsXCJyZWN2ZFwiOmZhbHNlfX19IiwiU3RvY2tNYXJrZXRTYXZlIjoie1wibGFzdFVwZGF0ZVwiOjAsXCJPcmRlcnNcIjp7fSxcInN0b3JlZEN5Y2xlc1wiOjAsXCJ0aWNrc1VudGlsQ3ljbGVcIjowfSIsIlNldHRpbmdzU2F2ZSI6IntcIkFjdGl2ZVNjcmlwdHNTZXJ2ZXJQYWdlU2l6ZVwiOjEwMCxcIkFjdGl2ZVNjcmlwdHNTY3JpcHRQYWdlU2l6ZVwiOjEwLFwiQXV0b3NhdmVJbnRlcnZhbFwiOjYwLFwiQ29kZUluc3RydWN0aW9uUnVuVGltZVwiOjI1LFwiRGlzYWJsZUFTQ0lJQXJ0XCI6ZmFsc2UsXCJEaXNhYmxlSG90a2V5c1wiOmZhbHNlLFwiRGlzYWJsZVRleHRFZmZlY3RzXCI6ZmFsc2UsXCJEaXNhYmxlT3ZlcnZpZXdQcm9ncmVzc0JhcnNcIjpmYWxzZSxcIkVuYWJsZUJhc2hIb3RrZXlzXCI6ZmFsc2UsXCJUaW1lc3RhbXBzRm9ybWF0XCI6XCJcIixcIkxvY2FsZVwiOlwiZW5cIixcIk1heExvZ0NhcGFjaXR5XCI6NTAsXCJNYXhQb3J0Q2FwYWNpdHlcIjo1MCxcIk1heFRlcm1pbmFsQ2FwYWNpdHlcIjo1MDAsXCJPd25lZEF1Z21lbnRhdGlvbnNPcmRlclwiOjAsXCJQdXJjaGFzZUF1Z21lbnRhdGlvbnNPcmRlclwiOjIsXCJTYXZlR2FtZU9uRmlsZVNhdmVcIjp0cnVlLFwiU3VwcHJlc3NCdXlBdWdtZW50YXRpb25Db25maXJtYXRpb25cIjpmYWxzZSxcIlN1cHByZXNzRmFjdGlvbkludml0ZXNcIjpmYWxzZSxcIlN1cHByZXNzTWVzc2FnZXNcIjpmYWxzZSxcIlN1cHByZXNzVHJhdmVsQ29uZmlybWF0aW9uXCI6ZmFsc2UsXCJTdXBwcmVzc0JsYWRlYnVybmVyUG9wdXBcIjpmYWxzZSxcIlN1cHByZXNzVElYUG9wdXBcIjpmYWxzZSxcIlN1cHByZXNzU2F2ZWRHYW1lVG9hc3RcIjpmYWxzZSxcIlVzZUlFQzYwMDI3XzJcIjpmYWxzZSxcIkV4Y2x1ZGVSdW5uaW5nU2NyaXB0c0Zyb21TYXZlXCI6ZmFsc2UsXCJJc1NpZGViYXJPcGVuZWRcIjp0cnVlLFwiTW9uYWNvVGhlbWVcIjpcIm1vbm9rYWlcIixcIk1vbmFjb0luc2VydFNwYWNlc1wiOmZhbHNlLFwiTW9uYWNvRm9udFNpemVcIjoyMCxcIk1vbmFjb1ZpbVwiOmZhbHNlLFwiTW9uYWNvV29yZFdyYXBcIjpcIm9mZlwiLFwidGhlbWVcIjp7XCJwcmltYXJ5bGlnaHRcIjpcIiMwZjBcIixcInByaW1hcnlcIjpcIiMwYzBcIixcInByaW1hcnlkYXJrXCI6XCIjMDkwXCIsXCJzdWNjZXNzbGlnaHRcIjpcIiMwZjBcIixcInN1Y2Nlc3NcIjpcIiMwYzBcIixcInN1Y2Nlc3NkYXJrXCI6XCIjMDkwXCIsXCJlcnJvcmxpZ2h0XCI6XCIjZjAwXCIsXCJlcnJvclwiOlwiI2MwMFwiLFwiZXJyb3JkYXJrXCI6XCIjOTAwXCIsXCJzZWNvbmRhcnlsaWdodFwiOlwiI0FBQVwiLFwic2Vjb25kYXJ5XCI6XCIjODg4XCIsXCJzZWNvbmRhcnlkYXJrXCI6XCIjNjY2XCIsXCJ3YXJuaW5nbGlnaHRcIjpcIiNmZjBcIixcIndhcm5pbmdcIjpcIiNjYzBcIixcIndhcm5pbmdkYXJrXCI6XCIjOTkwXCIsXCJpbmZvbGlnaHRcIjpcIiM2OWZcIixcImluZm9cIjpcIiMzNmNcIixcImluZm9kYXJrXCI6XCIjMDM5XCIsXCJ3ZWxsbGlnaHRcIjpcIiM0NDRcIixcIndlbGxcIjpcIiMyMjJcIixcIndoaXRlXCI6XCIjZmZmXCIsXCJibGFja1wiOlwiIzAwMFwiLFwiaHBcIjpcIiNkZDM0MzRcIixcIm1vbmV5XCI6XCIjZmZkNzAwXCIsXCJoYWNrXCI6XCIjYWRmZjJmXCIsXCJjb21iYXRcIjpcIiNmYWZmZGZcIixcImNoYVwiOlwiI2E2NzFkMVwiLFwiaW50XCI6XCIjNjQ5NWVkXCIsXCJyZXBcIjpcIiNmYWZmZGZcIixcImRpc2FibGVkXCI6XCIjNjZjZmJjXCIsXCJiYWNrZ3JvdW5kcHJpbWFyeVwiOlwiIzAwMFwiLFwiYmFja2dyb3VuZHNlY29uZGFyeVwiOlwiIzAwMFwiLFwiYnV0dG9uXCI6XCIjMzMzXCJ9LFwic3R5bGVzXCI6e1wibGluZUhlaWdodFwiOjEuNSxcImZvbnRGYW1pbHlcIjpcIkx1Y2lkYSBDb25zb2xlLCBMdWNpZGEgU2FucyBVbmljb2RlLCBGaXJhIE1vbm8sIENvbnNvbGFzLCBDb3VyaWVyIE5ldywgQ291cmllciwgbW9ub3NwYWNlLCBUaW1lcyBOZXcgUm9tYW5cIn0sXCJvdmVydmlld1wiOntcInhcIjowLFwieVwiOjAsXCJvcGVuZWRcIjp0cnVlfX0iLCJWZXJzaW9uU2F2ZSI6IjEwIiwiQWxsR2FuZ3NTYXZlIjoie1wiU2x1bSBTbmFrZXNcIjp7XCJwb3dlclwiOjEsXCJ0ZXJyaXRvcnlcIjowLjE0Mjg1NzE0Mjg1NzE0Mjg1fSxcIlRldHJhZHNcIjp7XCJwb3dlclwiOjIxMDAuODIxNTM2MTc2NjM1NixcInRlcnJpdG9yeVwiOjB9LFwiVGhlIFN5bmRpY2F0ZVwiOntcInBvd2VyXCI6MTk1OS45MDk2OTUxNTM1NzEyLFwidGVycml0b3J5XCI6MH0sXCJUaGUgRGFyayBBcm15XCI6e1wicG93ZXJcIjoyMDE0LjAxNzk4NjM2MjYxMzYsXCJ0ZXJyaXRvcnlcIjowfSxcIlNwZWFrZXJzIGZvciB0aGUgRGVhZFwiOntcInBvd2VyXCI6Nzk1NC4wNjk5Njk2NDEzNTQsXCJ0ZXJyaXRvcnlcIjowLjg1NzE0Mjg1NzE0Mjg1NzV9LFwiTml0ZVNlY1wiOntcInBvd2VyXCI6MTk0Ni42MjM1NjQ0MjMxMTM1LFwidGVycml0b3J5XCI6MH0sXCJUaGUgQmxhY2sgSGFuZFwiOntcInBvd2VyXCI6MTA1My4yNTkwMTc0MTI4MjE4LFwidGVycml0b3J5XCI6MH19IiwiTGFzdEV4cG9ydEJvbnVzIjoiMTY0NTk3NzkwODA5MyIsIlN0YW5la3NHaWZ0U2F2ZSI6IntcImN0b3JcIjpcIlN0YW5la3NHaWZ0XCIsXCJkYXRhXCI6e1wic3RvcmVkQ3ljbGVzXCI6MCxcImZyYWdtZW50c1wiOltdfX0iLCJTYXZlVGltZXN0YW1wIjoiMTY0NTk3NzkwODEzNCJ9fQ==\",\"filename\":\"/saves/bn4.1-get-evil.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"server\":\"home\",\"moduleSequenceNumber\":477}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const members = ns.gang.getMemberNames();\\n  const tasks = ns.gang\\n    .getTaskNames()\\n    .map((name) => ns.gang.getTaskStats(name));\\n\\n  const trainTask = tasks.find((task) => {\\n    return task.name.toLowerCase().includes(\\\"terror\\\") && task.strWeight > 0;\\n  });\\n\\n  ns.tprint(JSON.stringify(tasks, null, 2));\\n}\",\"filename\":\"/gang/cgang-terror.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/gang/cgang-terror.js\",\"url\":\"blob:file:///47da34e9-36f4-4112-94b3-9ea7f815acea\",\"moduleSequenceNumber\":12327}],\"dependents\":[],\"ramUsage\":4.6,\"server\":\"home\",\"moduleSequenceNumber\":478,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskStats\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  while (true) {\\n    const members = ns.gang.getMemberNames();\\n    const tasks = ns.gang\\n      .getTaskNames()\\n      .map((name) => ns.gang.getTaskStats(name));\\n\\n    const trainTask = tasks.find((task) => {\\n      return task.name.toLowerCase().includes(\\\"train\\\") && task.strWeight > 0;\\n    });\\n\\n    if (ns.gang.canRecruitMember()) {\\n      const newGuy = `r00kie-${members.length}`;\\n      if (ns.gang.recruitMember(newGuy)) {\\n        ns.tprint(\\\"new gang member : \\\" + newGuy);\\n        members.push(newGuy);\\n        ns.gang.setMemberTask(newGuy, trainTask.name);\\n      }\\n    }\\n\\n    const equipment = ns.gang\\n      .getEquipmentNames()\\n      .map((name) => ({ name, ...ns.gang.getEquipmentStats(name) }))\\n      .map((stats) => ({\\n        ...stats,\\n        price: ns.gang.getEquipmentCost(stats.name),\\n        type: ns.gang.getEquipmentType(stats.name),\\n      }))\\n      .filter((stats) => stats.str > 0 || stats.def > 0 || stats.agi > 0);\\n\\n    for (let ganger of members.map((name) => ({\\n      name,\\n      ...ns.gang.getMemberInformation(name),\\n    }))) {\\n      const hasEquip = [...ganger.augmentations, ...ganger.upgrades];\\n      const needs = equipment.filter((equip) => !hasEquip.includes(equip.name));\\n\\n      ns.print(\\n        `gang member ${ganger.name} has: ${hasEquip.join(\\\", \\\")}, needs: ${needs\\n          .map((eqp) => eqp.name)\\n          .join(\\\", \\\")}`\\n      );\\n\\n      for (let eqp of needs) {\\n        if (eqp.price < ns.getServerMoneyAvailable(\\\"home\\\")) {\\n          ns.tprint(`purchased ${eqp.name} for ${ganger.name}`);\\n          ns.gang.purchaseEquipment(ganger.name, eqp.name);\\n        }\\n      }\\n    }\\n\\n    await ns.sleep(20);\\n  }\\n}\",\"filename\":\"/gang/gang-mgmt-combat.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":22.7,\"server\":\"home\",\"moduleSequenceNumber\":479,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskStats\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getEquipmentStats\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentType\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  while (true) {\\n    const members = ns.gang.getMemberNames();\\n    const tasks = ns.gang\\n      .getTaskNames()\\n      .map((name) => ns.gang.getTaskStats(name));\\n\\n    const trainTask = tasks.find((task) => {\\n      return task.name.toLowerCase().includes(\\\"train\\\") && task.hackWeight > 0;\\n    });\\n\\n    if (ns.gang.canRecruitMember()) {\\n      const newGuy = `r00kie-${members.length}`;\\n      if (ns.gang.recruitMember(newGuy)) {\\n        ns.tprint(\\\"new gang member : \\\" + newGuy);\\n        members.push(newGuy);\\n        ns.gang.setMemberTask(newGuy, trainTask.name);\\n      }\\n    }\\n\\n    const equipment = ns.gang\\n      .getEquipmentNames()\\n      .map((name) => ({ name, ...ns.gang.getEquipmentStats(name) }))\\n      .map((stats) => ({\\n        ...stats,\\n        price: ns.gang.getEquipmentCost(stats.name),\\n        type: ns.gang.getEquipmentType(stats.name),\\n      }))\\n      .filter((stats) => stats.hack > 0);\\n\\n    for (let ganger of members.map((name) => ({\\n      name,\\n      ...ns.gang.getMemberInformation(name),\\n    }))) {\\n      const hasEquip = [...ganger.augmentations, ...ganger.upgrades];\\n      const needs = equipment.filter((equip) => !hasEquip.includes(equip.name));\\n\\n      ns.print(\\n        `gang member ${ganger.name} has: ${hasEquip.join(\\\", \\\")}, needs: ${needs\\n          .map((eqp) => eqp.name)\\n          .join(\\\", \\\")}`\\n      );\\n\\n      for (let eqp of needs) {\\n        if (eqp.price < ns.getServerMoneyAvailable(\\\"home\\\")) {\\n          ns.tprint(`purchased ${eqp.name} for ${ganger.name}`);\\n          ns.gang.purchaseEquipment(ganger.name, eqp.name);\\n        }\\n      }\\n    }\\n\\n    await ns.sleep(20);\\n  }\\n}\",\"filename\":\"/gang/gang-mgmt-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":22.8,\"server\":\"home\",\"moduleSequenceNumber\":480,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getTaskStats\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getEquipmentStats\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentType\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const tasks = [\\n  \\\"Unassigned\\\",\\n  \\\"Mug People\\\",\\n  \\\"Deal Drugs\\\",\\n  \\\"Strongarm Civilians\\\",\\n  \\\"Run a Con\\\",\\n  \\\"Armed Robbery\\\",\\n  \\\"Traffick Illegal Arms\\\",\\n  \\\"Threaten & Blackmail\\\",\\n  \\\"Human Trafficking\\\",\\n  \\\"Terrorism\\\",\\n  \\\"Vigilante Justice\\\",\\n  \\\"Train Combat\\\",\\n  \\\"Train Hacking\\\",\\n  \\\"Train Charisma\\\",\\n  \\\"Territory Warfare\\\",\\n];\\n\\n/** @param {import('../NS').NS} ns **/\\nexport async function main(ns) {\\n  const members = ns.gang.getMemberNames();\\n  const task = ns.args.join(\\\" \\\");\\n\\n  for (const member of members) {\\n    ns.gang.setMemberTask(member, task);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return tasks;\\n}\",\"filename\":\"/gang/set-task-all.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/gang/set-task-all.js\",\"url\":\"blob:file:///388df3f5-44b7-429b-9532-321ab955c3a8\",\"moduleSequenceNumber\":9839}],\"dependents\":[],\"ramUsage\":4.6,\"server\":\"home\",\"moduleSequenceNumber\":481,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"psrv-0\",\"psrv-1\",\"psrv-2\",\"psrv-3\",\"psrv-4\",\"psrv-5\",\"psrv-6\",\"psrv-7\",\"psrv-8\",\"psrv-9\",\"psrv-10\",\"psrv-11\",\"psrv-12\",\"psrv-13\",\"psrv-14\",\"psrv-15\",\"psrv-16\",\"psrv-17\",\"psrv-18\",\"psrv-19\",\"psrv-20\",\"psrv-21\",\"psrv-22\",\"psrv-23\",\"psrv-24\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":2.286,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"82.7.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":38686008780,\"moneyMax\":145072532925,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1397,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"84.6.6.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":33175601311.5,\"moneyMax\":124408504918.125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1195,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"89.1.1.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\",\"fulcrumassets\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":20407029017.25,\"moneyMax\":76526358814.6875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1095,\"serverGrowth\":80}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"83.7.2.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":10947195725.25,\"moneyMax\":41051983969.6875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1003,\"serverGrowth\":74}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"52.6.8.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":22967807174.25,\"moneyMax\":86129276903.4375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":957,\"serverGrowth\":91}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"85.3.6.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":16844751162.75,\"moneyMax\":63167816860.3125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1018,\"serverGrowth\":69}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":false,\"ip\":\"73.4.6.3\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\",\"b-and-a\",\"blade\",\"nwo\",\"clarkinc\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":12458128275.75,\"moneyMax\":46717981034.0625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1084,\"serverGrowth\":98}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"56.6.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":59,\"hackDifficulty\":59,\"minDifficulty\":20,\"moneyAvailable\":11765290083.75,\"moneyMax\":44119837814.0625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1216,\"serverGrowth\":81}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"57.5.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":97,\"hackDifficulty\":97,\"minDifficulty\":32,\"moneyAvailable\":18829409518.5,\"moneyMax\":70610285694.375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1069,\"serverGrowth\":94}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"37.6.9.2\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"titan-labs\",\"kuai-gong\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":1219428014.25,\"moneyMax\":4572855053.4375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1095,\"serverGrowth\":93}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"7.7.7.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":750000,\"moneyMax\":2812500,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1212,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-291974.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,9,6,2,0,2,0,2,5,1,5],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-465173.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"61331393\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"18.9.5.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"microdyne\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":895568070.75,\"moneyMax\":3358380265.3125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":887,\"serverGrowth\":78}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-901701.cct\",\"type\":\"Array Jumping Game\",\"data\":[7,2,7,0,6,0,1,8,6,8,3],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"21.7.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":651829703.25,\"moneyMax\":2444361387.1875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":977,\"serverGrowth\":66}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-809943.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0],[0,0,0,1,0],[0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"22.6.6.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\",\"microdyne\",\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":468747117.75,\"moneyMax\":1757801691.5625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":935,\"serverGrowth\":68}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":false,\"ip\":\"77.6.9.5\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"microdyne\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":418830729.75,\"moneyMax\":1570615236.5625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":827,\"serverGrowth\":79}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-546870-TheSyndicate.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[6],[4,5],[2,8,3],[9,9,3,9],[4,2,2,7,3],[8,2,3,2,1,9],[6,5,6,3,7,9,2],[9,3,6,7,1,1,2,8],[4,4,4,9,1,9,2,4,8],[2,3,3,6,3,6,9,3,6,3],[5,6,3,8,7,8,9,6,1,1,8]],\"reward\":{\"name\":\"The Syndicate\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":false,\"ip\":\"77.8.1.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"titan-labs\",\"omnitek\",\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":560264179.5,\"moneyMax\":2100990673.125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":791,\"serverGrowth\":70}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-327482-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[121,39,12,35,74,194,83,14,70,27,90,8,165,3,43,158,188,179,31],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"71.4.9.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":685422995.25,\"moneyMax\":2570336232.1875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":885,\"serverGrowth\":91}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-70553.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,1,1,0,1,0],[1,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"univ-energy\",\"httpPortOpen\":false,\"ip\":\"83.8.7.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\",\"infocomm\",\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":873110255.25,\"moneyMax\":3274163457.1875,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":885,\"serverGrowth\":80}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":false,\"ip\":\"18.8.1.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-def\",\"fulcrumtech\",\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":567809027.25,\"moneyMax\":2129283852.1875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":829,\"serverGrowth\":64}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":false,\"ip\":\"53.9.6.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\",\"stormtech\",\"helios\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":511524993.75,\"moneyMax\":1918218726.5625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":872,\"serverGrowth\":78}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-417199.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[70,85,28,94,148,126,3,124,21,111,139,167,188,135,34,153,95,109,25,24,80,149,88,95,29,194,45,64,26,71,147,12],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"52.4.6.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":617605726.5,\"moneyMax\":2316021474.375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":882,\"serverGrowth\":75}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"2.3.0.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"alpha-ent\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":58,\"minDifficulty\":19,\"moneyAvailable\":606448961.25,\"moneyMax\":2274183604.6875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":855,\"serverGrowth\":78}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"33.2.4.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"alpha-ent\",\"omnia\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":798761894.25,\"moneyMax\":2995357103.4375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":918,\"serverGrowth\":60}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":false,\"ip\":\"11.1.3.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aerocorp\",\"univ-energy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":91,\"hackDifficulty\":91,\"minDifficulty\":30,\"moneyAvailable\":727966884,\"moneyMax\":2729875815,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":863,\"serverGrowth\":64}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-def\",\"httpPortOpen\":false,\"ip\":\"55.4.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\",\"titan-labs\",\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":746812092.75,\"moneyMax\":2800545347.8125,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":806,\"serverGrowth\":74}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-10506.cct\",\"type\":\"Array Jumping Game\",\"data\":[1,2,10,0,2,10],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"applied-energetics\",\"httpPortOpen\":false,\"ip\":\"2.7.4.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":66,\"hackDifficulty\":66,\"minDifficulty\":22,\"moneyAvailable\":604183639.5,\"moneyMax\":2265688648.125,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":835,\"serverGrowth\":75}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":false,\"ip\":\"87.0.0.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":655662447.75,\"moneyMax\":2458734179.0625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":769,\"serverGrowth\":74}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"83.5.9.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"snap-fitness\",\"defcomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":994979234.25,\"moneyMax\":3731172128.4375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":888,\"serverGrowth\":58}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-297529.cct\",\"type\":\"Total Ways to Sum\",\"data\":68,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"global-pharm\",\"httpPortOpen\":false,\"ip\":\"77.1.6.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aevum-police\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":1272057963,\"moneyMax\":4770217361.25,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":800,\"serverGrowth\":88}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nova-med\",\"httpPortOpen\":false,\"ip\":\"46.5.2.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"defcomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":67,\"minDifficulty\":22,\"moneyAvailable\":912516875.25,\"moneyMax\":3421938282.1875,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":793,\"serverGrowth\":66}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"37.1.9.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\",\"taiyang-digital\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":1091967886.5,\"moneyMax\":4094879574.375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":847,\"serverGrowth\":79}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-864477.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,1,1,0,0,0,0,0,1,0],[0,0,0,1,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"unitalife\",\"httpPortOpen\":false,\"ip\":\"56.6.4.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aerocorp\",\"icarus\",\"solaris\",\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":821926060.5,\"moneyMax\":3082222726.875,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":779,\"serverGrowth\":78}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"lexo-corp\",\"httpPortOpen\":false,\"ip\":\"96.5.5.0\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"summit-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":543709349.25,\"moneyMax\":2038910059.6875,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":679,\"serverGrowth\":59}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-904641-Sector-12.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((()()())()()((a((a\",\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-287315.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[7,6,10,16,34,18,7],[42,29,43,44,19,14,19],[2,39,9,23,50,26,38],[42,31,4,35,19,28,49],[23,27,4,21,6,25,27],[30,24,31,7,38,49,4],[2,21,34,46,12,15,11],[11,29,11,8,48,4,20],[31,1,34,9,49,6,41],[50,35,36,27,23,10,29],[18,42,22,5,45,34,30],[12,9,11,43,17,44,46],[31,1,13,30,15,21,8]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"50.8.1.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"catalyst\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":50,\"hackDifficulty\":50,\"minDifficulty\":17,\"moneyAvailable\":501144959.25,\"moneyMax\":1879293597.1875,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":491,\"serverGrowth\":52}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"alpha-ent\",\"httpPortOpen\":false,\"ip\":\"30.5.5.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"I.I.I.I\",\"galactic-cyber\",\"aerocorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":50,\"hackDifficulty\":50,\"minDifficulty\":17,\"moneyAvailable\":453180699.75,\"moneyMax\":1699427624.0625,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":517,\"serverGrowth\":51}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"97.7.7.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"I.I.I.I\",\"global-pharm\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":275389510.5,\"moneyMax\":1032710664.375,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":431,\"serverGrowth\":50}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"92.4.9.3\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":51,\"minDifficulty\":17,\"moneyAvailable\":181046140.5,\"moneyMax\":678923026.875,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":389,\"serverGrowth\":43}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-272518.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[177,77,171,28,64,60,83,50,3,176,141,40,14,123,156,172],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":false,\"ip\":\"54.8.0.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":631966547.25,\"moneyMax\":2369874552.1875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":756,\"serverGrowth\":75}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"28.5.0.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"crush-fitness\",\"lexo-corp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":19,\"minDifficulty\":19,\"moneyAvailable\":747554745.9375,\"moneyMax\":747554745.9375,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":445,\"serverGrowth\":59}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"syscore\",\"httpPortOpen\":false,\"ip\":\"97.2.2.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"netlink\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":376801842.75,\"moneyMax\":1413006910.3125,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":563,\"serverGrowth\":68}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"10.5.7.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":31.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",600,\"rnd-0.8913466631338778\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44088,\"ramUsage\":1.75,\"server\":\"catalyst\",\"threads\":10,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///dcb1c88a-52c9-4145-94b1-3ca6697a7cda\",\"moduleSequenceNumber\":40334}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.45006077844595516\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44336,\"ramUsage\":1.75,\"server\":\"catalyst\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///dcb1c88a-52c9-4145-94b1-3ca6697a7cda\",\"moduleSequenceNumber\":40334}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",200,\"rnd-0.8627320920000663\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44444,\"ramUsage\":1.75,\"server\":\"catalyst\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///dcb1c88a-52c9-4145-94b1-3ca6697a7cda\",\"moduleSequenceNumber\":40334}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"catalyst\",\"moduleSequenceNumber\":482,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///faa37681-72a0-4ffe-a072-3478e8a01661\",\"moduleSequenceNumber\":22928}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"catalyst\",\"moduleSequenceNumber\":483,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///84a7781b-e534-4fe3-9dc0-078e6fdac8b0\",\"moduleSequenceNumber\":22929}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"catalyst\",\"moduleSequenceNumber\":484,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///6f9f4be9-bb0f-4c14-892b-996663d3488d\",\"moduleSequenceNumber\":22930}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"catalyst\",\"moduleSequenceNumber\":485,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///dcb1c88a-52c9-4145-94b1-3ca6697a7cda\",\"moduleSequenceNumber\":40334}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"catalyst\",\"moduleSequenceNumber\":40334,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///d144b339-6c46-4584-bf2c-29fd083e0333\",\"moduleSequenceNumber\":863}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"catalyst\",\"moduleSequenceNumber\":863,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///171799e1-ed0f-47c6-8fb2-4d17295df2b8\",\"moduleSequenceNumber\":816}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"catalyst\",\"moduleSequenceNumber\":816,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"the-hub\",\"rho-construction\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":297303477.75,\"moneyMax\":1114888041.5625,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":413,\"serverGrowth\":26}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-131134-Sector-12.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1,0],[0,0],[0,0]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"53.7.6.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"phantasy\",\"zb-institute\",\"catalyst\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":16.364,\"minDifficulty\":15,\"moneyAvailable\":518306782.5,\"moneyMax\":518306782.5,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":297,\"serverGrowth\":52}},\"comptek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"comptek\",\"httpPortOpen\":false,\"ip\":\"36.6.2.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"comptek\",\"moduleSequenceNumber\":489,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"comptek\",\"moduleSequenceNumber\":490,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"comptek\",\"moduleSequenceNumber\":491,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"comptek\",\"moduleSequenceNumber\":492,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"comptek\",\"moduleSequenceNumber\":493,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"comptek\",\"moduleSequenceNumber\":494,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"comptek\",\"moduleSequenceNumber\":495,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":22.04399999999999,\"minDifficulty\":19,\"moneyAvailable\":674578974.375,\"moneyMax\":674578974.375,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":360,\"serverGrowth\":54}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"12.1.9.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omega-net\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":24.455999999999992,\"minDifficulty\":24,\"moneyAvailable\":773437500,\"moneyMax\":773437500,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":416,\"serverGrowth\":68}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"59.6.3.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":22.557999999999996,\"minDifficulty\":21,\"moneyAvailable\":205367265,\"moneyMax\":205367265,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":299,\"serverGrowth\":43}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-726925.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"23.1.8.0\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":3.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.6302459521197596\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44073,\"ramUsage\":1.75,\"server\":\"n00dles\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///489fc991-705c-44a0-a40c-914c67436385\",\"moduleSequenceNumber\":803}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.8306922299514685\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44325,\"ramUsage\":1.75,\"server\":\"n00dles\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///489fc991-705c-44a0-a40c-914c67436385\",\"moduleSequenceNumber\":803}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"n00dles\",\"moduleSequenceNumber\":496,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { sorted_targets, srv_sec } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  //random backoff\\n  await ns.sleep(Math.floor(Math.random() * 10000));\\n\\n  while (true) {\\n    //random backoff\\n    await ns.sleep(Math.floor(Math.random() * 5000));\\n\\n    const output = sorted_targets(ns)\\n      .map((srv) => ({\\n        ...srv,\\n        ...srv_sec(ns, srv.name),\\n      }))\\n      .filter((info) => info.sec_curr > info.sec_min + 1);\\n    //.filter((info) => info.name !== \\\"n00dles\\\");\\n\\n    ns.print(\\n      `top targets: ${output\\n        .map((info) => `${info.name} ${info.sec_curr}/${info.sec_min}`)\\n        .join(\\\", \\\")}`\\n    );\\n\\n    if (output.length > 0) {\\n      const info = output[0];\\n      ns.print(\\n        `Target ${info.name}, before: ${info.sec_curr}/${info.sec_min} ${info.sec_pct}%`\\n      );\\n      await ns.weaken(info.name);\\n      const post = srv_sec(ns, info.name);\\n      ns.print(\\n        `  after sec: ${post.sec_curr}/${post.sec_min} ${post.sec_pct}%`\\n      );\\n      ns.tprint(\\n        `weakened ${info.name}: ${+post.sec_curr.toFixed(2)}/${\\n          post.sec_min\\n        }, now at ${post.sec_pct}%`\\n      );\\n    }\\n    await ns.sleep(100);\\n  }\\n}\",\"filename\":\"weaken-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"n00dles\",\"moduleSequenceNumber\":497,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { sorted_targets, srv_money, percentage, fmt } from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  //random backoff\\n  await ns.sleep(Math.floor(Math.random() * 10000));\\n\\n  while (true) {\\n    //random backoff\\n    await ns.sleep(Math.floor(Math.random() * 5000));\\n\\n    const output = sorted_targets(ns)\\n      .map((srv) => ({\\n        ...srv,\\n        ...srv_money(ns, srv.name),\\n      }))\\n      .filter((info) => info.money_curr < info.money_max)\\n      .filter((info) => info.name !== \\\"n00dles\\\");\\n\\n    ns.print(\\n      `top targets: ${output\\n        .map(\\n          (info) => `${info.name} ${fmt(info.money_max)}$ ${info.money_pct}%`\\n        )\\n        .join(\\\", \\\")}`\\n    );\\n\\n    if (output.length > 0) {\\n      const info = output[0];\\n      ns.print(`Target ${info.name}:`);\\n      ns.print(\\n        `  before money: ${fmt(info.money_curr)}/${fmt(info.money_max)} ${\\n          info.money_pct\\n        }%`\\n      );\\n      const amount = await ns.grow(info.name);\\n      const after = srv_money(ns, info.name);\\n      ns.print(\\n        `  after money: ${fmt(after.money_curr)}/${fmt(after.money_max)} ${\\n          after.money_pct\\n        }% (raised ${percentage(info.money_curr, after.money_curr)}%)`\\n      );\\n      ns.tprint(\\n        `grown ${info.name} to ${fmt(after.money_curr)}$ / ${fmt(\\n          info.money_max\\n        )}$  ${after.money_pct}% (+ ${percentage(amount, info.money_curr)}%)`\\n      );\\n    } else {\\n      ns.print(\\\"no more tagets available\\\");\\n    }\\n    await ns.sleep(100);\\n  }\\n}\",\"filename\":\"grow-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hacker-lib.js\",\"url\":\"blob:file:///49c5ed05-b852-48a8-99c2-2e15e3e5985b\",\"moduleSequenceNumber\":141044},{\"filename\":\"grow-top.js\",\"url\":\"blob:file:///713b847e-02f7-4ce7-ac92-ac27f1575a21\",\"moduleSequenceNumber\":141122}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"n00dles\",\"moduleSequenceNumber\":498,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import {\\n  sorted_targets,\\n  srv_sec,\\n  percentage,\\n  fmt,\\n  srv_money,\\n} from \\\"./hacker-lib.js\\\";\\n\\n/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  //random backoff\\n  await ns.sleep(Math.floor(Math.random() * 10000));\\n\\n  let haveTarget = false;\\n  while (true) {\\n    //random backoff\\n    await ns.sleep(Math.floor(Math.random() * 5000));\\n\\n    const infos = sorted_targets(ns).map((srv) => ({\\n      ...srv,\\n      ...srv_sec(ns, srv.name),\\n      ...srv_money(ns, srv.name),\\n    }));\\n    //      .filter((info) => info.name !== \\\"n00dles\\\");\\n\\n    //ns.tprint(`info: ${infos.map((info) => info.name).join(\\\", \\\")}`);\\n\\n    const output_s = infos\\n      .filter((info) => info.money_curr != 0)\\n      .filter((info) => info.money_curr >= 0.25 * info.money_max)\\n      .filter((info) => info.sec_curr <= info.sec_min + 2); // only with reasonably weak security\\n\\n    ns.print(\\n      `low-sec targets: ${output_s\\n        .map(\\n          (info) =>\\n            `${info.name} ${info.sec_curr}/${info.sec_min}, ${fmt(\\n              info.money_curr\\n            )}$/${fmt(info.money_max)}$`\\n        )\\n        .join(\\\", \\\")}`\\n    );\\n\\n    const output = output_s.filter(\\n      (info) => info.money_curr >= info.money_max * 0.5\\n    ); // only with decent money\\n\\n    ns.print(\\n      `top targets: ${output\\n        .map((info) => `${info.name} ${info.sec_curr}/${info.sec_min}`)\\n        .join(\\\", \\\")}`\\n    );\\n\\n    if (output.length > 0) {\\n      haveTarget = true;\\n      const info = output[0];\\n      ns.print(`Target ${info.name}:`);\\n      const preMoney = info.money_curr;\\n      ns.print(\\n        `  before hack sec: ${info.sec_curr}/${info.sec_min} ${\\n          info.sec_pct\\n        }%, money: ${fmt(preMoney)}`\\n      );\\n      const loot = await ns.hack(info.name);\\n      const postMoney = ns.getServerMoneyAvailable(info.name);\\n      ns.print(\\n        `  after hack sec:  ${info.sec_curr}/${info.sec_min} ${\\n          info.sec_pct\\n        }%, money: ${fmt(postMoney)}, got ${percentage(loot, preMoney)}%`\\n      );\\n      ns.print(\\n        `Hacked ${info.name}: got ${fmt(loot)} (${percentage(\\n          loot,\\n          preMoney\\n        )}%), now at sec ${info.sec_curr.toFixed(2)}/${info.sec_min} (${\\n          info.sec_pct\\n        }%)`\\n      );\\n    } else {\\n      if (haveTarget) {\\n        ns.print(\\\"no more tagets available\\\");\\n        haveTarget = false;\\n      }\\n    }\\n    await ns.sleep(1);\\n  }\\n}\",\"filename\":\"hack-top.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.45,\"server\":\"n00dles\",\"moduleSequenceNumber\":499,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///489fc991-705c-44a0-a40c-914c67436385\",\"moduleSequenceNumber\":803}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"n00dles\",\"moduleSequenceNumber\":803,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f86b45f7-6425-446b-a9c1-c041a5c7362c\",\"moduleSequenceNumber\":804}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"n00dles\",\"moduleSequenceNumber\":804,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///b62073b5-394d-4312-9918-7b98794e77c1\",\"moduleSequenceNumber\":32769}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"n00dles\",\"moduleSequenceNumber\":32769,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1.6700000000000002,\"minDifficulty\":1,\"moneyAvailable\":196875,\"moneyMax\":196875,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"11.0.7.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":15.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.7856352846259966\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":191.60999999999765,\"pid\":43078,\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"threads\":4,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///b91734cb-1a98-4849-b803-218960fb0419\",\"moduleSequenceNumber\":854}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.9473985128059701\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43423,\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///74f80f08-2754-418c-80b9-eb08d395789a\",\"moduleSequenceNumber\":8831}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.7346725726920678\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44082,\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///74f80f08-2754-418c-80b9-eb08d395789a\",\"moduleSequenceNumber\":8831}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.22332918116731726\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44331,\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///74f80f08-2754-418c-80b9-eb08d395789a\",\"moduleSequenceNumber\":8831}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":503,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":504,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///c75a4ccc-1ef6-44af-8a60-bd47491491de\",\"moduleSequenceNumber\":141123}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":505,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":506,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///74f80f08-2754-418c-80b9-eb08d395789a\",\"moduleSequenceNumber\":8831}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":8831,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///b91734cb-1a98-4849-b803-218960fb0419\",\"moduleSequenceNumber\":854}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":854,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///74460d79-0c87-408c-b2d6-423170e8a649\",\"moduleSequenceNumber\":807}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":807,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":10.028,\"minDifficulty\":3,\"moneyAvailable\":1502145.3536955733,\"moneyMax\":5625000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"14.0.8.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":15.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.8663709591451734\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44074,\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7bd4c13a-57a7-45ee-b12d-011858b2c8b5\",\"moduleSequenceNumber\":16420}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",600,\"rnd-0.173966443699914\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44339,\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"threads\":8,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7bd4c13a-57a7-45ee-b12d-011858b2c8b5\",\"moduleSequenceNumber\":16420}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":510,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":511,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///611a6afd-d3c2-4afc-96d2-e6395274ba12\",\"moduleSequenceNumber\":141124}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":512,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":513,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7bd4c13a-57a7-45ee-b12d-011858b2c8b5\",\"moduleSequenceNumber\":16420}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":16420,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///c30bc9cd-a496-48e0-b2a5-97526907eb7a\",\"moduleSequenceNumber\":855}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":855,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///a8e42aaf-ab65-498e-b011-1b755523ace8\",\"moduleSequenceNumber\":808}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":808,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"zer0\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":10.028,\"minDifficulty\":3,\"moneyAvailable\":1729928.7161143145,\"moneyMax\":6468750,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"35.0.0.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":15.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.962220960048469\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":191.60999999999765,\"pid\":43072,\"ramUsage\":1.75,\"server\":\"joesguns\",\"threads\":3,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///6226ecec-6b3f-4482-ae0d-14360c073faf\",\"moduleSequenceNumber\":857}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.17216050635492497\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44337,\"ramUsage\":1.75,\"server\":\"joesguns\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///89ba7b99-3325-4111-9fc9-16437477cad3\",\"moduleSequenceNumber\":16422}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",600,\"rnd-0.7015945036986433\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"pid\":44426,\"ramUsage\":1.75,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///89ba7b99-3325-4111-9fc9-16437477cad3\",\"moduleSequenceNumber\":16422}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"joesguns\",\"moduleSequenceNumber\":517,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"joesguns\",\"moduleSequenceNumber\":518,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///aa3c4a25-d29c-41c9-875b-ac44699d5e1e\",\"moduleSequenceNumber\":141126}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"joesguns\",\"moduleSequenceNumber\":519,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"joesguns\",\"moduleSequenceNumber\":520,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///89ba7b99-3325-4111-9fc9-16437477cad3\",\"moduleSequenceNumber\":16422}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"joesguns\",\"moduleSequenceNumber\":16422,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///6226ecec-6b3f-4482-ae0d-14360c073faf\",\"moduleSequenceNumber\":857}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"joesguns\",\"moduleSequenceNumber\":857,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///bae71447-a374-4b6e-aca3-896b8611cf33\",\"moduleSequenceNumber\":810}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"joesguns\",\"moduleSequenceNumber\":810,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":1875000,\"moneyMax\":7031250,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"95.1.6.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":31.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.03690354176619737\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"pid\":43373,\"ramUsage\":1.75,\"server\":\"zer0\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///f98d81a6-dfe8-422c-b63a-6750d8b9a383\",\"moduleSequenceNumber\":44714}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",67109.0971174902,\"rnd-0.9317271965875968\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44091,\"ramUsage\":1.75,\"server\":\"zer0\",\"threads\":15,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///b85ddebc-2967-4cf5-ad6c-65d6d5136001\",\"moduleSequenceNumber\":864}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"zer0\",\"moduleSequenceNumber\":524,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///ba3bcd1b-f33b-40c8-a88a-d4efce3e947a\",\"moduleSequenceNumber\":1433}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zer0\",\"moduleSequenceNumber\":525,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///4200307d-5be8-4b86-875d-361be4eaa5fa\",\"moduleSequenceNumber\":1434}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zer0\",\"moduleSequenceNumber\":526,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///ecf42eb0-4666-4d23-bcca-9e327257ab70\",\"moduleSequenceNumber\":1435}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zer0\",\"moduleSequenceNumber\":527,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///f98d81a6-dfe8-422c-b63a-6750d8b9a383\",\"moduleSequenceNumber\":44714}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zer0\",\"moduleSequenceNumber\":44714,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///b85ddebc-2967-4cf5-ad6c-65d6d5136001\",\"moduleSequenceNumber\":864}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zer0\",\"moduleSequenceNumber\":864,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///15e90d19-486e-45f6-b5fa-6d90976ca498\",\"moduleSequenceNumber\":817}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zer0\",\"moduleSequenceNumber\":817,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"sigma-cosmetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":8,\"minDifficulty\":8,\"moneyAvailable\":15732046.805683173,\"moneyMax\":21093750,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"73.3.2.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":15.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",600,\"rnd-0.10149079225909108\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44340,\"ramUsage\":1.75,\"server\":\"nectar-net\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b298f400-ab2c-4927-87df-fe7cfe7c4e0c\",\"moduleSequenceNumber\":16421}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",66986.2442682868,\"rnd-0.3275776387570637\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44341,\"ramUsage\":1.75,\"server\":\"nectar-net\",\"threads\":5,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///7dee59e3-8527-4ce5-a254-40c75ccda4f4\",\"moduleSequenceNumber\":856}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"nectar-net\",\"moduleSequenceNumber\":531,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"nectar-net\",\"moduleSequenceNumber\":532,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///ed2c259a-d605-4968-af78-9948aa4a834d\",\"moduleSequenceNumber\":141125}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"nectar-net\",\"moduleSequenceNumber\":533,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nectar-net\",\"moduleSequenceNumber\":534,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b298f400-ab2c-4927-87df-fe7cfe7c4e0c\",\"moduleSequenceNumber\":16421}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"nectar-net\",\"moduleSequenceNumber\":16421,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///7dee59e3-8527-4ce5-a254-40c75ccda4f4\",\"moduleSequenceNumber\":856}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"nectar-net\",\"moduleSequenceNumber\":856,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///be2a86a5-47e9-4d20-b59f-578f7eb6bf20\",\"moduleSequenceNumber\":809}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nectar-net\",\"moduleSequenceNumber\":809,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"sigma-cosmetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":2062500,\"moneyMax\":7734375,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"48.7.0.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":31.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.9786788528300165\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44086,\"ramUsage\":1.75,\"server\":\"neo-net\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///2e571fec-b56c-459f-8026-8fe87e36e1ed\",\"moduleSequenceNumber\":25603}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",600,\"rnd-0.6304064242008065\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44087,\"ramUsage\":1.75,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///2e571fec-b56c-459f-8026-8fe87e36e1ed\",\"moduleSequenceNumber\":25603}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",600,\"rnd-0.3036940184453225\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44338,\"ramUsage\":1.75,\"server\":\"neo-net\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///2e571fec-b56c-459f-8026-8fe87e36e1ed\",\"moduleSequenceNumber\":25603}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",200,\"rnd-0.9685309997976046\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44446,\"ramUsage\":1.75,\"server\":\"neo-net\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///2e571fec-b56c-459f-8026-8fe87e36e1ed\",\"moduleSequenceNumber\":25603}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"neo-net\",\"moduleSequenceNumber\":538,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///6f50cbc1-e0f1-4a2e-bc95-9175b9bf33e2\",\"moduleSequenceNumber\":141291}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"neo-net\",\"moduleSequenceNumber\":539,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///53010894-197f-4b49-8b4b-f498b2fd13d7\",\"moduleSequenceNumber\":141292}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"neo-net\",\"moduleSequenceNumber\":540,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///c0437503-c935-42c1-9c04-18057e6cd4d3\",\"moduleSequenceNumber\":141293}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"neo-net\",\"moduleSequenceNumber\":541,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///2e571fec-b56c-459f-8026-8fe87e36e1ed\",\"moduleSequenceNumber\":25603}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"neo-net\",\"moduleSequenceNumber\":25603,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///39b33639-7a01-434b-be62-7aa5a0945fd1\",\"moduleSequenceNumber\":861}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"neo-net\",\"moduleSequenceNumber\":861,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///3d90a742-5aa1-4a18-9f1b-01515d8ed259\",\"moduleSequenceNumber\":814}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"neo-net\",\"moduleSequenceNumber\":814,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":3750000,\"moneyMax\":14062500,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-670131.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[126,196,5,111,142,126,151,77,34,157,52,168,191,17,47,194,135,16,180,130,103,74,76,24,133,46,28,112,90,149,17,42,66,174,168,81,11],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"0.5.4.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":63.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",600,\"rnd-0.5367736574931339\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44089,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":7,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///34c391a2-f4d5-4a4e-a701-b50403f05d39\",\"moduleSequenceNumber\":822}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",67109.0971174902,\"rnd-0.3163703967495912\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44090,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":7,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///47ce62ba-4668-49ed-8013-81fc21bc14fd\",\"moduleSequenceNumber\":868}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.7615793322099602\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44332,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///34c391a2-f4d5-4a4e-a701-b50403f05d39\",\"moduleSequenceNumber\":822}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9956.635193862627,\"rnd-0.03496162762444044\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44454,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":21,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///a642b7e4-365f-4708-9eda-d578fcb6e8e0\",\"moduleSequenceNumber\":821}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"silver-helix\",\"moduleSequenceNumber\":545,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///3733463f-636d-4f47-9d68-e13ec021f712\",\"moduleSequenceNumber\":7889}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"silver-helix\",\"moduleSequenceNumber\":546,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///c0a32b20-465b-4fda-a03f-c90f50074d9a\",\"moduleSequenceNumber\":7890}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"silver-helix\",\"moduleSequenceNumber\":547,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///16b0205b-8ffb-4544-88a1-b5394b98eff2\",\"moduleSequenceNumber\":7891}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"silver-helix\",\"moduleSequenceNumber\":548,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///34c391a2-f4d5-4a4e-a701-b50403f05d39\",\"moduleSequenceNumber\":822}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"silver-helix\",\"moduleSequenceNumber\":822,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///47ce62ba-4668-49ed-8013-81fc21bc14fd\",\"moduleSequenceNumber\":868}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"silver-helix\",\"moduleSequenceNumber\":868,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///a642b7e4-365f-4708-9eda-d578fcb6e8e0\",\"moduleSequenceNumber\":821}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"silver-helix\",\"moduleSequenceNumber\":821,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"max-hardware\",\"comptek\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":33750000,\"moneyMax\":126562500,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-106976.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[11,21],[5,7],[1,9],[5,6],[15,19],[7,9],[9,16],[13,22],[3,9],[6,14],[6,11],[5,13],[15,18]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-119083.cct\",\"type\":\"Total Ways to Sum\",\"data\":41,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"67.3.2.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":15.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.2688311300792845\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43424,\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///14208047-07b4-4ef4-bcf5-be362eddddde\",\"moduleSequenceNumber\":19213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.36904492747873063\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44334,\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///14208047-07b4-4ef4-bcf5-be362eddddde\",\"moduleSequenceNumber\":19213}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":552,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":553,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///18bd0701-0cb0-45e3-a02f-eae6d4b74691\",\"moduleSequenceNumber\":141127}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":554,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":555,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///14208047-07b4-4ef4-bcf5-be362eddddde\",\"moduleSequenceNumber\":19213}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":19213,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///9b84e5f0-dc0a-4f2d-aca0-9261ea8a93ad\",\"moduleSequenceNumber\":858}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":858,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///ae22cc8b-0df3-4ff7-a520-87bd1545143e\",\"moduleSequenceNumber\":811}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":811,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":2250000,\"moneyMax\":8437500,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"94.9.0.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":15.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.6595069076742301\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":191.60999999999765,\"pid\":43077,\"ramUsage\":1.75,\"server\":\"harakiri-sushi\",\"threads\":6,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///3aa90fe3-4726-47d1-91ad-ddad84683606\",\"moduleSequenceNumber\":860}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.7496684162048373\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44084,\"ramUsage\":1.75,\"server\":\"harakiri-sushi\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///5059a036-32eb-4d9c-9d46-f4fa860f6643\",\"moduleSequenceNumber\":25601}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":559,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":560,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///e1aac0fc-6940-459d-9de3-94a01ec42d0e\",\"moduleSequenceNumber\":141294}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":561,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":562,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///5059a036-32eb-4d9c-9d46-f4fa860f6643\",\"moduleSequenceNumber\":25601}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":25601,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///3aa90fe3-4726-47d1-91ad-ddad84683606\",\"moduleSequenceNumber\":860}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":860,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///78116d4c-0fec-40a7-9b10-0002a001007f\",\"moduleSequenceNumber\":813}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":813,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5.97,\"minDifficulty\":5,\"moneyAvailable\":7242211.62904902,\"moneyMax\":11250000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"94.6.8.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":31.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",66986.2442682868,\"rnd-0.32039139225192415\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44343,\"ramUsage\":1.75,\"server\":\"phantasy\",\"threads\":18,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///773817e5-6387-4b97-a957-5392a6592e4a\",\"moduleSequenceNumber\":862}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"phantasy\",\"moduleSequenceNumber\":566,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///27ce4f35-4cd2-4ff1-8e04-c1281e1a2645\",\"moduleSequenceNumber\":7886}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"phantasy\",\"moduleSequenceNumber\":567,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///a558a3fa-06f9-430b-b785-08587d57dbef\",\"moduleSequenceNumber\":7887}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"phantasy\",\"moduleSequenceNumber\":568,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///dc49c09f-2905-4181-b9a3-b8f7a9b744e5\",\"moduleSequenceNumber\":7888}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"phantasy\",\"moduleSequenceNumber\":569,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4f7bd613-9756-442b-b118-e8254984895d\",\"moduleSequenceNumber\":40333}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"phantasy\",\"moduleSequenceNumber\":40333,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///773817e5-6387-4b97-a957-5392a6592e4a\",\"moduleSequenceNumber\":862}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"phantasy\",\"moduleSequenceNumber\":862,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///8fd61732-b0a6-47f3-9e1f-23941c34486d\",\"moduleSequenceNumber\":815}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"phantasy\",\"moduleSequenceNumber\":815,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"CSEC\",\"the-hub\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":11.263999999999996,\"minDifficulty\":7,\"moneyAvailable\":14517106,\"moneyMax\":67500000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"4.3.3.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":31.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.017458052060542073\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44085,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///313226e2-df6c-434f-a132-7a83df98a8c2\",\"moduleSequenceNumber\":48695}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.3715674461761258\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44335,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///313226e2-df6c-434f-a132-7a83df98a8c2\",\"moduleSequenceNumber\":48695}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",200,\"rnd-0.712103909909471\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44447,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///313226e2-df6c-434f-a132-7a83df98a8c2\",\"moduleSequenceNumber\":48695}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",600,\"rnd-0.6098264295731155\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44448,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///313226e2-df6c-434f-a132-7a83df98a8c2\",\"moduleSequenceNumber\":48695}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",3055.102718363367,\"rnd-0.9323077048515531\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44449,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":3,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f658ded7-2913-4d4c-8c3f-6bee9b37f348\",\"moduleSequenceNumber\":865}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"max-hardware\",\"moduleSequenceNumber\":573,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///5f8c44d0-fba7-4266-8e20-7d275b1d599d\",\"moduleSequenceNumber\":1436}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"max-hardware\",\"moduleSequenceNumber\":574,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///ad6a2912-8a94-4e4a-8cc1-a8105955a884\",\"moduleSequenceNumber\":1437}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"max-hardware\",\"moduleSequenceNumber\":575,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///4e29f7be-7006-4ba3-8b9d-ca176abaa796\",\"moduleSequenceNumber\":1438}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"max-hardware\",\"moduleSequenceNumber\":576,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///313226e2-df6c-434f-a132-7a83df98a8c2\",\"moduleSequenceNumber\":48695}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"max-hardware\",\"moduleSequenceNumber\":48695,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f658ded7-2913-4d4c-8c3f-6bee9b37f348\",\"moduleSequenceNumber\":865}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"max-hardware\",\"moduleSequenceNumber\":865,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///e3e5ce0f-1137-441b-9247-590dba0ea869\",\"moduleSequenceNumber\":818}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"max-hardware\",\"moduleSequenceNumber\":818,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"hong-fang-tea\",\"silver-helix\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":7500000,\"moneyMax\":28125000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"4.8.0.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":30.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.47951451144371426\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44083,\"ramUsage\":1.75,\"server\":\"omega-net\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///f3d1ae1e-01d2-4d7f-a21d-286da5f96902\",\"moduleSequenceNumber\":53472}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.7424519175683251\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44328,\"ramUsage\":1.75,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///f3d1ae1e-01d2-4d7f-a21d-286da5f96902\",\"moduleSequenceNumber\":53472}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9956.635193862627,\"rnd-0.05969598456703973\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44450,\"ramUsage\":1.7,\"server\":\"omega-net\",\"threads\":15,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c7da7e4c-3f77-4881-872d-29a215dcdaf0\",\"moduleSequenceNumber\":819}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"omega-net\",\"moduleSequenceNumber\":580,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///9ff2799f-593d-4044-aca8-7f203e5d594e\",\"moduleSequenceNumber\":7893}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"omega-net\",\"moduleSequenceNumber\":581,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///050ca8c6-ce6b-44c5-8c46-2f509395224a\",\"moduleSequenceNumber\":7894}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"omega-net\",\"moduleSequenceNumber\":582,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///588a46c2-4205-41fb-90a1-99830f92dfb5\",\"moduleSequenceNumber\":7895}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omega-net\",\"moduleSequenceNumber\":583,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///f3d1ae1e-01d2-4d7f-a21d-286da5f96902\",\"moduleSequenceNumber\":53472}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"omega-net\",\"moduleSequenceNumber\":53472,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///bfae61af-3a53-4365-ba67-5826dc368252\",\"moduleSequenceNumber\":866}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"omega-net\",\"moduleSequenceNumber\":866,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c7da7e4c-3f77-4881-872d-29a215dcdaf0\",\"moduleSequenceNumber\":819}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omega-net\",\"moduleSequenceNumber\":819,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"max-hardware\",\"netlink\",\"johnson-ortho\",\"crush-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":8,\"minDifficulty\":8,\"moneyAvailable\":90813238.12242593,\"moneyMax\":186168133.125,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":220,\"serverGrowth\":39}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-452478.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":254295922,\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"8.9.4.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":587,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":588,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":589,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":590,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":591,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":592,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":593,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omega-net\",\"rothman-uni\",\"summit-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":41,\"hackDifficulty\":41,\"minDifficulty\":14,\"moneyAvailable\":41899461.75,\"moneyMax\":157122981.5625,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":247,\"serverGrowth\":30}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-205124-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[15,98,58],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"70.9.0.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":30.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9956.635193862627,\"rnd-0.2564056829936985\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44452,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"threads\":18,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///48cc1346-da53-4329-9030-5a79c2e49aed\",\"moduleSequenceNumber\":820}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"iron-gym\",\"moduleSequenceNumber\":594,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///596ef51c-3ca8-4821-b5e2-f4ea3c55ce81\",\"moduleSequenceNumber\":7896}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"iron-gym\",\"moduleSequenceNumber\":595,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///73261d32-5904-49c5-9076-fc12c0ce8bee\",\"moduleSequenceNumber\":7897}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"iron-gym\",\"moduleSequenceNumber\":596,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///d9c406f7-3543-48de-a0e2-3571b49b9016\",\"moduleSequenceNumber\":7898}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"iron-gym\",\"moduleSequenceNumber\":597,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///703e0873-b111-4d55-9151-ca61ccf0af2e\",\"moduleSequenceNumber\":27196}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"iron-gym\",\"moduleSequenceNumber\":27196,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///12e7a89e-384f-4a3f-a9d1-24e54df61d79\",\"moduleSequenceNumber\":867}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"iron-gym\",\"moduleSequenceNumber\":867,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///48cc1346-da53-4329-9030-5a79c2e49aed\",\"moduleSequenceNumber\":820}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"iron-gym\",\"moduleSequenceNumber\":820,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":15000000,\"moneyMax\":56250000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"85.2.9.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":52,\"minDifficulty\":17,\"moneyAvailable\":187500000,\"moneyMax\":703125000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":476,\"serverGrowth\":25}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-773511.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[9,35,48,21,34,9],[11,4,46,27,3,6],[20,4,12,43,13,36],[41,14,14,17,48,12],[36,6,7,20,28,16],[46,28,44,27,34,47],[20,43,25,36,13,48],[3,31,35,9,32,6],[19,23,25,24,25,28],[23,25,46,50,21,40],[22,43,13,22,14,24],[8,7,17,11,18,47],[44,43,11,49,30,5],[2,21,17,16,31,43]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"43.4.0.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\",\"ecorp\",\"megacorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":61,\"minDifficulty\":20,\"moneyAvailable\":675000000,\"moneyMax\":2531250000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1008,\"serverGrowth\":55}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-301639.cct\",\"type\":\"Array Jumping Game\",\"data\":[2,0,0,5,6,0,0,0,9,7,3,2,3,5,8,7,7,10,0,6,9,6],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"snap-fitness\",\"httpPortOpen\":false,\"ip\":\"51.6.7.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aevum-police\",\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":51,\"minDifficulty\":17,\"moneyAvailable\":337500000,\"moneyMax\":1265625000,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":769,\"serverGrowth\":42}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"run4theh111z\",\"httpPortOpen\":false,\"ip\":\"20.9.7.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":545,\"serverGrowth\":0}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"84.4.9.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"avmnite-02h\",\"alpha-ent\",\"aevum-police\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":357,\"serverGrowth\":0}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"50.5.5.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":15.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.5368244601138297\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44075,\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///3e9709e6-e175-4595-a002-ea37d0f2ca86\",\"moduleSequenceNumber\":23605}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.1490434943087331\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44327,\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///3e9709e6-e175-4595-a002-ea37d0f2ca86\",\"moduleSequenceNumber\":23605}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.5012079964844656\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"pid\":44434,\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"threads\":7,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///83d8b2fa-d559-4cb7-b785-e2d58009dd0d\",\"moduleSequenceNumber\":812}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":601,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":602,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///0d764ac8-a1a0-472f-aaf0-4025a30dca57\",\"moduleSequenceNumber\":7892}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":603,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":604,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///3e9709e6-e175-4595-a002-ea37d0f2ca86\",\"moduleSequenceNumber\":23605}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":23605,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///327b3792-e902-45d0-8e16-252ac47c0fae\",\"moduleSequenceNumber\":859}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":859,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///83d8b2fa-d559-4cb7-b785-e2d58009dd0d\",\"moduleSequenceNumber\":812}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":812,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"silver-helix\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":202,\"serverGrowth\":0}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\".\",\"httpPortOpen\":false,\"ip\":\"60.5.7.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":546,\"serverGrowth\":0}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"54.4.2.8\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.9602170739964537\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":191.60999999999765,\"pid\":43071,\"ramUsage\":1.75,\"server\":\"CSEC\",\"threads\":3,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///989b679f-a688-4906-9c31-1cccd3c05c12\",\"moduleSequenceNumber\":805}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.5012480605054068\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44326,\"ramUsage\":1.75,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b23d3287-d484-4793-93ed-8ee9c0b04309\",\"moduleSequenceNumber\":869}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"CSEC\",\"moduleSequenceNumber\":608,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"CSEC\",\"moduleSequenceNumber\":609,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///a6552ebc-16c8-4300-b7ef-3465e02a56d5\",\"moduleSequenceNumber\":1432}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"CSEC\",\"moduleSequenceNumber\":610,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"CSEC\",\"moduleSequenceNumber\":611,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b23d3287-d484-4793-93ed-8ee9c0b04309\",\"moduleSequenceNumber\":869}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"CSEC\",\"moduleSequenceNumber\":869,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///989b679f-a688-4906-9c31-1cccd3c05c12\",\"moduleSequenceNumber\":805}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"CSEC\",\"moduleSequenceNumber\":805,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///9d98de48-5bcf-41f8-ba55-4545f490867c\",\"moduleSequenceNumber\":806}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"CSEC\",\"moduleSequenceNumber\":806,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"n00dles\",\"neo-net\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":60,\"serverGrowth\":0}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"3.0.2.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"16.1.8.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":9000,\"serverGrowth\":0}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"93.7.3.6\",\"isConnectedTo\":false,\"maxRam\":1,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"darkweb\",\"moduleSequenceNumber\":615,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"darkweb\",\"moduleSequenceNumber\":616,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"darkweb\",\"moduleSequenceNumber\":617,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"darkweb\",\"moduleSequenceNumber\":618,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"darkweb\",\"moduleSequenceNumber\":619,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"darkweb\",\"moduleSequenceNumber\":620,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"darkweb\",\"moduleSequenceNumber\":621,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-0\",\"httpPortOpen\":false,\"ip\":\"21.9.2.1\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.4490222928725931\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":191.60999999999765,\"pid\":43070,\"ramUsage\":1.75,\"server\":\"psrv-0\",\"threads\":2,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///846928b7-ed52-4b3e-97c7-54772f6a9eee\",\"moduleSequenceNumber\":14429}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.3515379579111946\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"pid\":43370,\"ramUsage\":1.75,\"server\":\"psrv-0\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///abc03025-24e0-41f9-b0b7-940372671709\",\"moduleSequenceNumber\":823}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.9708433953022992\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44076,\"ramUsage\":1.75,\"server\":\"psrv-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///abc03025-24e0-41f9-b0b7-940372671709\",\"moduleSequenceNumber\":823}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.28389619248784204\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"pid\":44160,\"ramUsage\":1.7,\"server\":\"psrv-0\",\"threads\":74,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///4e4ac593-26b3-4acb-9f4b-d2502ab2a57c\",\"moduleSequenceNumber\":14422}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.3653521414499754\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"pid\":44436,\"ramUsage\":1.7,\"server\":\"psrv-0\",\"threads\":71,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///4e4ac593-26b3-4acb-9f4b-d2502ab2a57c\",\"moduleSequenceNumber\":14422}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-0\",\"moduleSequenceNumber\":622,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///bbe4a717-17ec-4bef-9a27-c07eb0f798e1\",\"moduleSequenceNumber\":14787}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-0\",\"moduleSequenceNumber\":623,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///9f31cc8c-c7df-46db-a935-4c9083e4bbb3\",\"moduleSequenceNumber\":14788}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-0\",\"moduleSequenceNumber\":624,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///4e28d15b-0452-4d37-a9c5-edc4644cd0ff\",\"moduleSequenceNumber\":14789}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-0\",\"moduleSequenceNumber\":625,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///abc03025-24e0-41f9-b0b7-940372671709\",\"moduleSequenceNumber\":823}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-0\",\"moduleSequenceNumber\":823,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///846928b7-ed52-4b3e-97c7-54772f6a9eee\",\"moduleSequenceNumber\":14429}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-0\",\"moduleSequenceNumber\":14429,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///4e4ac593-26b3-4acb-9f4b-d2502ab2a57c\",\"moduleSequenceNumber\":14422}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-0\",\"moduleSequenceNumber\":14422,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-1\",\"httpPortOpen\":false,\"ip\":\"26.0.8.4\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.34244103744647947\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":191.60999999999765,\"pid\":43074,\"ramUsage\":1.75,\"server\":\"psrv-1\",\"threads\":4,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///e28adf03-eea7-4063-b553-28f1ed26f074\",\"moduleSequenceNumber\":14424}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.31348458040052085\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43429,\"ramUsage\":1.7,\"server\":\"psrv-1\",\"threads\":53,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///07216bef-21dc-4144-a265-30cd3e41b061\",\"moduleSequenceNumber\":14423}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.9107050467087303\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"pid\":44153,\"ramUsage\":1.75,\"server\":\"psrv-1\",\"threads\":19,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4a895a3f-cd4d-4b4b-83f7-1941b24d364b\",\"moduleSequenceNumber\":824}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",600,\"rnd-0.6976598674824808\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"pid\":44154,\"ramUsage\":1.75,\"server\":\"psrv-1\",\"threads\":18,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4a895a3f-cd4d-4b4b-83f7-1941b24d364b\",\"moduleSequenceNumber\":824}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.4504447598661303\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"pid\":44156,\"ramUsage\":1.7,\"server\":\"psrv-1\",\"threads\":20,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///07216bef-21dc-4144-a265-30cd3e41b061\",\"moduleSequenceNumber\":14423}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9956.635193862627,\"rnd-0.8482244936834265\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44457,\"ramUsage\":1.7,\"server\":\"psrv-1\",\"threads\":35,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///07216bef-21dc-4144-a265-30cd3e41b061\",\"moduleSequenceNumber\":14423}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-1\",\"moduleSequenceNumber\":629,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///d9964c78-5b29-4bb4-8615-d7cd130920b1\",\"moduleSequenceNumber\":14804}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-1\",\"moduleSequenceNumber\":630,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///69b431d4-2c74-4621-930f-1adac393799e\",\"moduleSequenceNumber\":14805}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-1\",\"moduleSequenceNumber\":631,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///3e3fe2d3-df78-4f04-8d36-63fe8e9c0833\",\"moduleSequenceNumber\":14806}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-1\",\"moduleSequenceNumber\":632,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4a895a3f-cd4d-4b4b-83f7-1941b24d364b\",\"moduleSequenceNumber\":824}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-1\",\"moduleSequenceNumber\":824,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///e28adf03-eea7-4063-b553-28f1ed26f074\",\"moduleSequenceNumber\":14424}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-1\",\"moduleSequenceNumber\":14424,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///07216bef-21dc-4144-a265-30cd3e41b061\",\"moduleSequenceNumber\":14423}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-1\",\"moduleSequenceNumber\":14423,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-2\",\"httpPortOpen\":false,\"ip\":\"88.7.3.8\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.2775222844671814\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43431,\"ramUsage\":1.7,\"server\":\"psrv-2\",\"threads\":68,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///663c323d-39c1-4b9f-81f5-f4a9bcd84b6f\",\"moduleSequenceNumber\":18416}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.2248808482937712\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44077,\"ramUsage\":1.75,\"server\":\"psrv-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///67393e0c-a46f-495f-942d-3b636183fb17\",\"moduleSequenceNumber\":825}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.23042384325443588\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"pid\":44159,\"ramUsage\":1.7,\"server\":\"psrv-2\",\"threads\":59,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///663c323d-39c1-4b9f-81f5-f4a9bcd84b6f\",\"moduleSequenceNumber\":18416}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",3044.970245284416,\"rnd-0.022357795895133536\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"pid\":44427,\"ramUsage\":1.75,\"server\":\"psrv-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///410cb477-939f-49f6-b8d4-a625a75f4e92\",\"moduleSequenceNumber\":14425}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9956.635193862627,\"rnd-0.6913517205939712\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44455,\"ramUsage\":1.7,\"server\":\"psrv-2\",\"threads\":21,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///663c323d-39c1-4b9f-81f5-f4a9bcd84b6f\",\"moduleSequenceNumber\":18416}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-2\",\"moduleSequenceNumber\":636,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///8d6633e9-eae5-4f9c-8153-ef983753fc8b\",\"moduleSequenceNumber\":14821}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-2\",\"moduleSequenceNumber\":637,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///14435510-d26e-4774-b26a-e39f60990fa8\",\"moduleSequenceNumber\":14822}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-2\",\"moduleSequenceNumber\":638,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///6b95fb4e-e8ae-4b9e-a70a-c916fc93becd\",\"moduleSequenceNumber\":14823}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-2\",\"moduleSequenceNumber\":639,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///67393e0c-a46f-495f-942d-3b636183fb17\",\"moduleSequenceNumber\":825}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-2\",\"moduleSequenceNumber\":825,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///410cb477-939f-49f6-b8d4-a625a75f4e92\",\"moduleSequenceNumber\":14425}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-2\",\"moduleSequenceNumber\":14425,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///663c323d-39c1-4b9f-81f5-f4a9bcd84b6f\",\"moduleSequenceNumber\":18416}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-2\",\"moduleSequenceNumber\":18416,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-3\",\"httpPortOpen\":false,\"ip\":\"91.2.7.5\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":254.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.8366803317358695\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43434,\"ramUsage\":1.7,\"server\":\"psrv-3\",\"threads\":94,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c7db2e9b-d03f-411d-beeb-264ca0362436\",\"moduleSequenceNumber\":17619}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",67109.0971174902,\"rnd-0.5278207797637833\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44092,\"ramUsage\":1.75,\"server\":\"psrv-3\",\"threads\":17,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///8e983e65-c6ee-4e65-94ec-f42f04f4aace\",\"moduleSequenceNumber\":14426}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.714545384557687\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"pid\":44152,\"ramUsage\":1.75,\"server\":\"psrv-3\",\"threads\":9,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///2be4719b-a288-4e74-a272-0eed1b984687\",\"moduleSequenceNumber\":826}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.7964041981194043\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44347,\"ramUsage\":1.7,\"server\":\"psrv-3\",\"threads\":29,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c7db2e9b-d03f-411d-beeb-264ca0362436\",\"moduleSequenceNumber\":17619}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-3\",\"moduleSequenceNumber\":643,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///fedbaf95-b9e8-45bc-8897-f66dd6105669\",\"moduleSequenceNumber\":14838}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-3\",\"moduleSequenceNumber\":644,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///5dff2fc1-eaed-47da-a8b5-5175ebe267f8\",\"moduleSequenceNumber\":14839}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-3\",\"moduleSequenceNumber\":645,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///cac2c42e-0b1c-4de2-9c01-e191e2dfb74e\",\"moduleSequenceNumber\":14840}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-3\",\"moduleSequenceNumber\":646,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///2be4719b-a288-4e74-a272-0eed1b984687\",\"moduleSequenceNumber\":826}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-3\",\"moduleSequenceNumber\":826,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///8e983e65-c6ee-4e65-94ec-f42f04f4aace\",\"moduleSequenceNumber\":14426}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-3\",\"moduleSequenceNumber\":14426,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///c7db2e9b-d03f-411d-beeb-264ca0362436\",\"moduleSequenceNumber\":17619}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-3\",\"moduleSequenceNumber\":17619,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-4\",\"httpPortOpen\":false,\"ip\":\"42.7.4.7\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.31076256267887503\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43436,\"ramUsage\":1.7,\"server\":\"psrv-4\",\"threads\":95,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///77d0dd41-b337-46ac-88ef-f99cabb500b3\",\"moduleSequenceNumber\":17219}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.8272945968511707\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44078,\"ramUsage\":1.75,\"server\":\"psrv-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///d803dd47-6e7e-4453-8731-cd615069df1c\",\"moduleSequenceNumber\":827}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.6369738146561579\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44351,\"ramUsage\":1.7,\"server\":\"psrv-4\",\"threads\":49,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///77d0dd41-b337-46ac-88ef-f99cabb500b3\",\"moduleSequenceNumber\":17219}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.5345378559449334\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"pid\":44431,\"ramUsage\":1.7,\"server\":\"psrv-4\",\"threads\":5,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///77d0dd41-b337-46ac-88ef-f99cabb500b3\",\"moduleSequenceNumber\":17219}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-4\",\"moduleSequenceNumber\":650,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///e0b2c9ce-069d-47d2-b181-2ea1f3a2df17\",\"moduleSequenceNumber\":14855}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-4\",\"moduleSequenceNumber\":651,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///5f3f7221-72b9-4044-8511-17477afffaae\",\"moduleSequenceNumber\":14856}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-4\",\"moduleSequenceNumber\":652,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///ea586008-456d-44a2-9139-4ce8695df195\",\"moduleSequenceNumber\":14857}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-4\",\"moduleSequenceNumber\":653,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///d803dd47-6e7e-4453-8731-cd615069df1c\",\"moduleSequenceNumber\":827}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-4\",\"moduleSequenceNumber\":827,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///4a425a69-b754-44cd-bb4a-aa7724191972\",\"moduleSequenceNumber\":14427}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-4\",\"moduleSequenceNumber\":14427,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///77d0dd41-b337-46ac-88ef-f99cabb500b3\",\"moduleSequenceNumber\":17219}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-4\",\"moduleSequenceNumber\":17219,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-5\",\"httpPortOpen\":false,\"ip\":\"97.5.1.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":252.99999999999997,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",600,\"rnd-0.19395713979713203\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43428,\"ramUsage\":1.75,\"server\":\"psrv-5\",\"threads\":18,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///6a986e96-27b3-4692-b36d-39f4208b30db\",\"moduleSequenceNumber\":828}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.6778693642590883\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44348,\"ramUsage\":1.7,\"server\":\"psrv-5\",\"threads\":31,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///70de1040-09e6-4038-9b5b-820ba2f2e6d8\",\"moduleSequenceNumber\":17220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",200,\"rnd-0.004027283277045379\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.21000000000000002,\"pid\":44460,\"ramUsage\":1.75,\"server\":\"psrv-5\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///6a986e96-27b3-4692-b36d-39f4208b30db\",\"moduleSequenceNumber\":828}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",600,\"rnd-0.7506914702308478\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.21000000000000002,\"pid\":44461,\"ramUsage\":1.75,\"server\":\"psrv-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///6a986e96-27b3-4692-b36d-39f4208b30db\",\"moduleSequenceNumber\":828}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",3054.4447655660333,\"rnd-0.44536763487788256\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.21000000000000002,\"pid\":44462,\"ramUsage\":1.75,\"server\":\"psrv-5\",\"threads\":3,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///616089c7-38de-4bd7-9893-27abe3e4c6d8\",\"moduleSequenceNumber\":14428}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9954.167870872621,\"rnd-0.8446998488741155\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.21000000000000002,\"pid\":44463,\"ramUsage\":1.7,\"server\":\"psrv-5\",\"threads\":89,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///70de1040-09e6-4038-9b5b-820ba2f2e6d8\",\"moduleSequenceNumber\":17220}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-5\",\"moduleSequenceNumber\":657,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///0e75b6b8-23ec-4b76-9718-21a874cc29e9\",\"moduleSequenceNumber\":14872}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-5\",\"moduleSequenceNumber\":658,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///668c92b8-462f-43ce-847c-cd7184d2c011\",\"moduleSequenceNumber\":14873}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-5\",\"moduleSequenceNumber\":659,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///7dd18574-cf47-46c2-9c74-f04029789108\",\"moduleSequenceNumber\":14874}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-5\",\"moduleSequenceNumber\":660,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///6a986e96-27b3-4692-b36d-39f4208b30db\",\"moduleSequenceNumber\":828}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-5\",\"moduleSequenceNumber\":828,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///616089c7-38de-4bd7-9893-27abe3e4c6d8\",\"moduleSequenceNumber\":14428}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-5\",\"moduleSequenceNumber\":14428,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///70de1040-09e6-4038-9b5b-820ba2f2e6d8\",\"moduleSequenceNumber\":17220}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-5\",\"moduleSequenceNumber\":17220,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-6\",\"httpPortOpen\":false,\"ip\":\"36.6.6.1\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.6125461963769763\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43433,\"ramUsage\":1.7,\"server\":\"psrv-6\",\"threads\":90,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///89eb6d56-9c8d-4a98-9607-36b01a227d4e\",\"moduleSequenceNumber\":11628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.9237368476582011\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44350,\"ramUsage\":1.7,\"server\":\"psrv-6\",\"threads\":33,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///89eb6d56-9c8d-4a98-9607-36b01a227d4e\",\"moduleSequenceNumber\":11628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9956.635193862627,\"rnd-0.6869804970101248\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44456,\"ramUsage\":1.7,\"server\":\"psrv-6\",\"threads\":27,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///89eb6d56-9c8d-4a98-9607-36b01a227d4e\",\"moduleSequenceNumber\":11628}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-6\",\"moduleSequenceNumber\":664,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///df582c8c-799c-4c36-94df-227bb4b1e391\",\"moduleSequenceNumber\":14889}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-6\",\"moduleSequenceNumber\":665,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///58afac10-fbdc-4e24-9a36-68762cca9cd1\",\"moduleSequenceNumber\":14890}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-6\",\"moduleSequenceNumber\":666,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///5fd3e24c-d029-4bfd-a154-6ed5565a8b86\",\"moduleSequenceNumber\":14891}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-6\",\"moduleSequenceNumber\":667,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///bc6da714-5851-4f49-b7ae-f54bcb4eedac\",\"moduleSequenceNumber\":829}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-6\",\"moduleSequenceNumber\":829,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///54d95d2c-df55-4f03-b325-8b527cfb6e09\",\"moduleSequenceNumber\":830}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-6\",\"moduleSequenceNumber\":830,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///89eb6d56-9c8d-4a98-9607-36b01a227d4e\",\"moduleSequenceNumber\":11628}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-6\",\"moduleSequenceNumber\":11628,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-7\",\"httpPortOpen\":false,\"ip\":\"75.2.8.7\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.726031723355606\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"pid\":43371,\"ramUsage\":1.75,\"server\":\"psrv-7\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///2df15d5c-36ab-4957-8760-ee83d2d8b24e\",\"moduleSequenceNumber\":11630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.004833665561156941\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44101,\"ramUsage\":1.7,\"server\":\"psrv-7\",\"threads\":75,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///392d4e73-0aa8-4087-a831-8332c4b6b7a0\",\"moduleSequenceNumber\":11629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.16215138455527311\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44352,\"ramUsage\":1.7,\"server\":\"psrv-7\",\"threads\":73,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///392d4e73-0aa8-4087-a831-8332c4b6b7a0\",\"moduleSequenceNumber\":11629}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-7\",\"moduleSequenceNumber\":671,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///a072a3a2-12bd-4980-a5cd-37e974038c89\",\"moduleSequenceNumber\":14906}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-7\",\"moduleSequenceNumber\":672,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///09cddd56-147c-429b-9e7b-637f78cc32a7\",\"moduleSequenceNumber\":14907}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-7\",\"moduleSequenceNumber\":673,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///d511e7c9-a79e-4df0-9c99-312fcb4b6df4\",\"moduleSequenceNumber\":14908}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-7\",\"moduleSequenceNumber\":674,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///2df15d5c-36ab-4957-8760-ee83d2d8b24e\",\"moduleSequenceNumber\":11630}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-7\",\"moduleSequenceNumber\":11630,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///0d6acd64-6f8c-4d31-a522-5c180723f2a3\",\"moduleSequenceNumber\":831}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-7\",\"moduleSequenceNumber\":831,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///392d4e73-0aa8-4087-a831-8332c4b6b7a0\",\"moduleSequenceNumber\":11629}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-7\",\"moduleSequenceNumber\":11629,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-8\",\"httpPortOpen\":false,\"ip\":\"8.8.8.0\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.7831717145211967\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43435,\"ramUsage\":1.7,\"server\":\"psrv-8\",\"threads\":114,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///4ca0b381-bade-4d68-b7ee-4d23c8eb5b6b\",\"moduleSequenceNumber\":22402}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.16593533727613097\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44095,\"ramUsage\":1.7,\"server\":\"psrv-8\",\"threads\":20,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///4ca0b381-bade-4d68-b7ee-4d23c8eb5b6b\",\"moduleSequenceNumber\":22402}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.8028277632055201\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"pid\":44435,\"ramUsage\":1.7,\"server\":\"psrv-8\",\"threads\":16,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///4ca0b381-bade-4d68-b7ee-4d23c8eb5b6b\",\"moduleSequenceNumber\":22402}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-8\",\"moduleSequenceNumber\":678,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///8b05db03-be1d-47bd-aa37-b7c734c70960\",\"moduleSequenceNumber\":14923}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-8\",\"moduleSequenceNumber\":679,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///0524fb11-56e8-41cf-846f-c942a97e60ae\",\"moduleSequenceNumber\":14924}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-8\",\"moduleSequenceNumber\":680,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///d6fe4b90-5a47-4f33-8815-5034a607b932\",\"moduleSequenceNumber\":14925}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-8\",\"moduleSequenceNumber\":681,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///bd990a04-ac6f-44ac-b57b-6a37673461dd\",\"moduleSequenceNumber\":25202}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-8\",\"moduleSequenceNumber\":25202,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///696cf2e8-b205-4824-9e4e-285b1ea6f21b\",\"moduleSequenceNumber\":832}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-8\",\"moduleSequenceNumber\":832,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///4ca0b381-bade-4d68-b7ee-4d23c8eb5b6b\",\"moduleSequenceNumber\":22402}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-8\",\"moduleSequenceNumber\":22402,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-9\",\"httpPortOpen\":false,\"ip\":\"93.5.8.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.04379926688538949\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44079,\"ramUsage\":1.75,\"server\":\"psrv-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///5634cb7b-0e39-4b38-96bd-eee381aa96e7\",\"moduleSequenceNumber\":22404}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.2999295988092945\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44329,\"ramUsage\":1.75,\"server\":\"psrv-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///5634cb7b-0e39-4b38-96bd-eee381aa96e7\",\"moduleSequenceNumber\":22404}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.1674565409156079\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44415,\"ramUsage\":1.7,\"server\":\"psrv-9\",\"threads\":142,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///b9dfdbff-f69a-4f28-a3db-e54f32e3324e\",\"moduleSequenceNumber\":22403}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.1579217166481497\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"pid\":44433,\"ramUsage\":1.7,\"server\":\"psrv-9\",\"threads\":6,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///b9dfdbff-f69a-4f28-a3db-e54f32e3324e\",\"moduleSequenceNumber\":22403}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-9\",\"moduleSequenceNumber\":685,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///26440bb5-89a2-4e91-9815-a7ec3b202056\",\"moduleSequenceNumber\":14940}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-9\",\"moduleSequenceNumber\":686,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///ff13641a-d599-48c7-8cd9-fb942c778a03\",\"moduleSequenceNumber\":14941}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-9\",\"moduleSequenceNumber\":687,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///9dd543a5-a91f-450d-a78f-44edb9f7e900\",\"moduleSequenceNumber\":14942}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-9\",\"moduleSequenceNumber\":688,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///5634cb7b-0e39-4b38-96bd-eee381aa96e7\",\"moduleSequenceNumber\":22404}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-9\",\"moduleSequenceNumber\":22404,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///b32b759b-4536-4db8-8f17-ab3bb57834ff\",\"moduleSequenceNumber\":833}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-9\",\"moduleSequenceNumber\":833,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///b9dfdbff-f69a-4f28-a3db-e54f32e3324e\",\"moduleSequenceNumber\":22403}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-9\",\"moduleSequenceNumber\":22403,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-10\",\"httpPortOpen\":false,\"ip\":\"99.1.1.0\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.8745761214651895\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"pid\":43372,\"ramUsage\":1.75,\"server\":\"psrv-10\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///9de6717f-dd67-4280-91df-4402e02b0e31\",\"moduleSequenceNumber\":22805}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.61413381695715\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44098,\"ramUsage\":1.7,\"server\":\"psrv-10\",\"threads\":31,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///af95ae0e-598f-4ca6-b7f4-88270195aea7\",\"moduleSequenceNumber\":22405}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.8624615802918969\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"pid\":44157,\"ramUsage\":1.7,\"server\":\"psrv-10\",\"threads\":58,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///af95ae0e-598f-4ca6-b7f4-88270195aea7\",\"moduleSequenceNumber\":22405}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.5942925064231397\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44404,\"ramUsage\":1.7,\"server\":\"psrv-10\",\"threads\":42,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///af95ae0e-598f-4ca6-b7f4-88270195aea7\",\"moduleSequenceNumber\":22405}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.9880477188805468\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"pid\":44425,\"ramUsage\":1.7,\"server\":\"psrv-10\",\"threads\":17,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///af95ae0e-598f-4ca6-b7f4-88270195aea7\",\"moduleSequenceNumber\":22405}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-10\",\"moduleSequenceNumber\":692,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///8e327e2f-e8a4-42c7-8f80-4816b521adce\",\"moduleSequenceNumber\":14957}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-10\",\"moduleSequenceNumber\":693,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///e5200846-b87c-4f08-a115-ab57ac1b5d6f\",\"moduleSequenceNumber\":14958}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-10\",\"moduleSequenceNumber\":694,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///9deb7bf4-83b8-4953-b814-d21d8198fb81\",\"moduleSequenceNumber\":14959}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-10\",\"moduleSequenceNumber\":695,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///9de6717f-dd67-4280-91df-4402e02b0e31\",\"moduleSequenceNumber\":22805}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-10\",\"moduleSequenceNumber\":22805,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///1c251bd6-6698-469d-b3f1-a6f6c73c459a\",\"moduleSequenceNumber\":834}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-10\",\"moduleSequenceNumber\":834,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///af95ae0e-598f-4ca6-b7f4-88270195aea7\",\"moduleSequenceNumber\":22405}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-10\",\"moduleSequenceNumber\":22405,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-11\",\"httpPortOpen\":false,\"ip\":\"18.1.0.1\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.21200158418783488\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44099,\"ramUsage\":1.7,\"server\":\"psrv-11\",\"threads\":59,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///de7f8934-0875-494c-ae22-ffefc83a876e\",\"moduleSequenceNumber\":11627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.5128214580948343\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44353,\"ramUsage\":1.7,\"server\":\"psrv-11\",\"threads\":91,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///de7f8934-0875-494c-ae22-ffefc83a876e\",\"moduleSequenceNumber\":11627}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-11\",\"moduleSequenceNumber\":699,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///9a0da11b-0efd-4236-b62d-30527fc301e4\",\"moduleSequenceNumber\":14974}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-11\",\"moduleSequenceNumber\":700,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///d525126d-bc29-411b-89bf-76322a7b97d8\",\"moduleSequenceNumber\":14975}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-11\",\"moduleSequenceNumber\":701,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///99b030f6-1b53-4510-8f98-85a8be71d44c\",\"moduleSequenceNumber\":14976}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-11\",\"moduleSequenceNumber\":702,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///660876d6-8486-4e2f-8b84-d24331d11085\",\"moduleSequenceNumber\":836}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-11\",\"moduleSequenceNumber\":836,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///43e180c8-3028-4671-b3ec-bf5f0cbbfbe1\",\"moduleSequenceNumber\":835}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-11\",\"moduleSequenceNumber\":835,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///de7f8934-0875-494c-ae22-ffefc83a876e\",\"moduleSequenceNumber\":11627}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-11\",\"moduleSequenceNumber\":11627,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-12\",\"httpPortOpen\":false,\"ip\":\"1.6.0.5\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.9679034272346707\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44097,\"ramUsage\":1.7,\"server\":\"psrv-12\",\"threads\":25,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///e7def730-79e5-4bbc-bea3-23fa81389380\",\"moduleSequenceNumber\":12427}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.5050318779263279\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44330,\"ramUsage\":1.75,\"server\":\"psrv-12\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///aca6688b-6b30-4b83-967d-01847c36d70e\",\"moduleSequenceNumber\":837}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.25736656393234947\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44405,\"ramUsage\":1.7,\"server\":\"psrv-12\",\"threads\":109,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///e7def730-79e5-4bbc-bea3-23fa81389380\",\"moduleSequenceNumber\":12427}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9956.635193862627,\"rnd-0.3207351807364507\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44451,\"ramUsage\":1.7,\"server\":\"psrv-12\",\"threads\":15,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///e7def730-79e5-4bbc-bea3-23fa81389380\",\"moduleSequenceNumber\":12427}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-12\",\"moduleSequenceNumber\":706,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///fa400d23-9086-4a6b-ae72-1cd1a9c4f9bb\",\"moduleSequenceNumber\":14991}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-12\",\"moduleSequenceNumber\":707,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///f57ead5b-2532-440c-af13-121694290875\",\"moduleSequenceNumber\":14992}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-12\",\"moduleSequenceNumber\":708,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///ab9405dc-187b-4cfb-8edd-dfdc0d6a557b\",\"moduleSequenceNumber\":14993}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-12\",\"moduleSequenceNumber\":709,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///aca6688b-6b30-4b83-967d-01847c36d70e\",\"moduleSequenceNumber\":837}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-12\",\"moduleSequenceNumber\":837,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///648111a4-155b-4da0-af17-26d467271265\",\"moduleSequenceNumber\":12428}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-12\",\"moduleSequenceNumber\":12428,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///e7def730-79e5-4bbc-bea3-23fa81389380\",\"moduleSequenceNumber\":12427}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-12\",\"moduleSequenceNumber\":12427,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-13\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-13\",\"httpPortOpen\":false,\"ip\":\"39.4.8.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.15,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.006536127141873349\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":191.60999999999765,\"pid\":43073,\"ramUsage\":1.75,\"server\":\"psrv-13\",\"threads\":3,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///21f4a9a7-d335-4b65-bc7b-08e09316ef29\",\"moduleSequenceNumber\":12429}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.6897284065154188\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43430,\"ramUsage\":1.7,\"server\":\"psrv-13\",\"threads\":67,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///d4106e10-9a69-4728-9f16-564563fc1c7b\",\"moduleSequenceNumber\":23204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.700776401044463\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44096,\"ramUsage\":1.7,\"server\":\"psrv-13\",\"threads\":22,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///d4106e10-9a69-4728-9f16-564563fc1c7b\",\"moduleSequenceNumber\":23204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.676894507150273\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"pid\":44158,\"ramUsage\":1.7,\"server\":\"psrv-13\",\"threads\":58,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///d4106e10-9a69-4728-9f16-564563fc1c7b\",\"moduleSequenceNumber\":23204}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-13\",\"moduleSequenceNumber\":713,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///d82a827b-af61-4cdc-9cab-26352d5e656a\",\"moduleSequenceNumber\":15008}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-13\",\"moduleSequenceNumber\":714,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///2e66374b-6763-4154-b977-117a8040549a\",\"moduleSequenceNumber\":15009}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-13\",\"moduleSequenceNumber\":715,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///364af5c8-19e4-4179-a857-4aff03338217\",\"moduleSequenceNumber\":15010}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-13\",\"moduleSequenceNumber\":716,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///ecf30474-39b1-4280-b533-5ee41315ec9f\",\"moduleSequenceNumber\":838}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-13\",\"moduleSequenceNumber\":838,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///21f4a9a7-d335-4b65-bc7b-08e09316ef29\",\"moduleSequenceNumber\":12429}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-13\",\"moduleSequenceNumber\":12429,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///d4106e10-9a69-4728-9f16-564563fc1c7b\",\"moduleSequenceNumber\":23204}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-13\",\"moduleSequenceNumber\":23204,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-14\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-14\",\"httpPortOpen\":false,\"ip\":\"52.3.9.1\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.3042078148115932\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":191.60999999999765,\"pid\":43075,\"ramUsage\":1.75,\"server\":\"psrv-14\",\"threads\":4,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///091d35f3-b9e7-41a0-a50c-dbf87b79d469\",\"moduleSequenceNumber\":12430}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.3132931640122725\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44414,\"ramUsage\":1.7,\"server\":\"psrv-14\",\"threads\":141,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///93dbcc0f-b049-4171-b754-1746efc6401e\",\"moduleSequenceNumber\":23205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.7522076149666059\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"pid\":44432,\"ramUsage\":1.7,\"server\":\"psrv-14\",\"threads\":5,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///93dbcc0f-b049-4171-b754-1746efc6401e\",\"moduleSequenceNumber\":23205}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-14\",\"moduleSequenceNumber\":720,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///d908948c-2ff1-488c-9ad3-41f2cd939474\",\"moduleSequenceNumber\":15025}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-14\",\"moduleSequenceNumber\":721,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///be3f376e-533a-4380-83ea-744301c1faa1\",\"moduleSequenceNumber\":15026}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-14\",\"moduleSequenceNumber\":722,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///7a3c2901-7f39-4d58-90e5-286f86e72f9b\",\"moduleSequenceNumber\":15027}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-14\",\"moduleSequenceNumber\":723,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///a4ea3f80-57b5-48f4-9fe1-7f1ac5547f63\",\"moduleSequenceNumber\":839}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-14\",\"moduleSequenceNumber\":839,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///091d35f3-b9e7-41a0-a50c-dbf87b79d469\",\"moduleSequenceNumber\":12430}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-14\",\"moduleSequenceNumber\":12430,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///93dbcc0f-b049-4171-b754-1746efc6401e\",\"moduleSequenceNumber\":23205}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-14\",\"moduleSequenceNumber\":23205,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-15\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-15\",\"httpPortOpen\":false,\"ip\":\"47.2.4.1\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.5918095466952706\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44102,\"ramUsage\":1.7,\"server\":\"psrv-15\",\"threads\":125,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///838df9ac-18aa-4c7c-9a96-78d262366ddf\",\"moduleSequenceNumber\":23206}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.3207034733807801\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44345,\"ramUsage\":1.7,\"server\":\"psrv-15\",\"threads\":25,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///838df9ac-18aa-4c7c-9a96-78d262366ddf\",\"moduleSequenceNumber\":23206}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-15\",\"moduleSequenceNumber\":727,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///1fc7b653-eda5-46c2-81cd-5e56b8888697\",\"moduleSequenceNumber\":15042}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-15\",\"moduleSequenceNumber\":728,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///a8bd40cb-2a2a-4df2-875c-d66baa8d9b35\",\"moduleSequenceNumber\":15043}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-15\",\"moduleSequenceNumber\":729,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///6b44ab00-3099-4815-a3d9-052e031b7fc3\",\"moduleSequenceNumber\":15044}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-15\",\"moduleSequenceNumber\":730,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///c5c792f4-3e83-426a-a7dc-687e130b2015\",\"moduleSequenceNumber\":840}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-15\",\"moduleSequenceNumber\":840,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///b73d91df-8015-4460-aa5d-b20ea7f787e5\",\"moduleSequenceNumber\":12431}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-15\",\"moduleSequenceNumber\":12431,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///838df9ac-18aa-4c7c-9a96-78d262366ddf\",\"moduleSequenceNumber\":23206}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-15\",\"moduleSequenceNumber\":23206,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-16\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-16\",\"httpPortOpen\":false,\"ip\":\"90.5.0.5\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.9,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.13426955118730133\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"pid\":43374,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7633636a-9a6b-4d8e-bd5e-659288e38966\",\"moduleSequenceNumber\":841}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.42764735490345807\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43427,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":8,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7633636a-9a6b-4d8e-bd5e-659288e38966\",\"moduleSequenceNumber\":841}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.027122004916024345\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44080,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7633636a-9a6b-4d8e-bd5e-659288e38966\",\"moduleSequenceNumber\":841}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.6549698544961478\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44333,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7633636a-9a6b-4d8e-bd5e-659288e38966\",\"moduleSequenceNumber\":841}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.3292404070125734\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44410,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":20,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7633636a-9a6b-4d8e-bd5e-659288e38966\",\"moduleSequenceNumber\":841}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",600,\"rnd-0.7871903996108012\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44411,\"ramUsage\":1.75,\"server\":\"psrv-16\",\"threads\":18,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7633636a-9a6b-4d8e-bd5e-659288e38966\",\"moduleSequenceNumber\":841}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.9032710719716401\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44412,\"ramUsage\":1.7,\"server\":\"psrv-16\",\"threads\":97,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///02d84cdb-838d-40a4-ac78-73fb8f4d4905\",\"moduleSequenceNumber\":10026}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-16\",\"moduleSequenceNumber\":734,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///139947e4-df0c-47a4-b475-bbe65e460fd8\",\"moduleSequenceNumber\":15059}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-16\",\"moduleSequenceNumber\":735,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///d0786d4e-1c41-4eb9-a31b-2f2704bafefd\",\"moduleSequenceNumber\":15060}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-16\",\"moduleSequenceNumber\":736,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///f26ba9a5-2871-46e9-8b36-347f0a7309e9\",\"moduleSequenceNumber\":15061}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-16\",\"moduleSequenceNumber\":737,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///7633636a-9a6b-4d8e-bd5e-659288e38966\",\"moduleSequenceNumber\":841}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-16\",\"moduleSequenceNumber\":841,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///cbfa6054-20bf-4723-8702-3f74f7597bb8\",\"moduleSequenceNumber\":842}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-16\",\"moduleSequenceNumber\":842,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///02d84cdb-838d-40a4-ac78-73fb8f4d4905\",\"moduleSequenceNumber\":10026}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-16\",\"moduleSequenceNumber\":10026,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-17\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-17\",\"httpPortOpen\":false,\"ip\":\"35.3.9.7\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.1706581655423265\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44094,\"ramUsage\":1.7,\"server\":\"psrv-17\",\"threads\":15,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///240b328b-2d3e-464f-9ddd-d2e536ca4b9d\",\"moduleSequenceNumber\":10028}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.22388432085428445\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44346,\"ramUsage\":1.7,\"server\":\"psrv-17\",\"threads\":25,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///240b328b-2d3e-464f-9ddd-d2e536ca4b9d\",\"moduleSequenceNumber\":10028}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9954.167870872621,\"rnd-0.15150024363637526\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.21000000000000002,\"pid\":44464,\"ramUsage\":1.7,\"server\":\"psrv-17\",\"threads\":110,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///240b328b-2d3e-464f-9ddd-d2e536ca4b9d\",\"moduleSequenceNumber\":10028}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-17\",\"moduleSequenceNumber\":741,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///f2fa48df-bc89-41eb-a603-a77a1b26d49a\",\"moduleSequenceNumber\":15076}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-17\",\"moduleSequenceNumber\":742,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///3dc0be3f-e4f3-43e3-99c5-15ee02b8ad89\",\"moduleSequenceNumber\":15077}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-17\",\"moduleSequenceNumber\":743,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///cc1be03b-6c55-4511-b8da-7e49ea87785f\",\"moduleSequenceNumber\":15078}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-17\",\"moduleSequenceNumber\":744,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///e4afe309-9c7a-4209-a0cf-be3c0104e8cd\",\"moduleSequenceNumber\":10029}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-17\",\"moduleSequenceNumber\":10029,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///392f84d7-70ec-42b7-8e5f-99d14bbacb89\",\"moduleSequenceNumber\":843}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-17\",\"moduleSequenceNumber\":843,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///240b328b-2d3e-464f-9ddd-d2e536ca4b9d\",\"moduleSequenceNumber\":10028}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-17\",\"moduleSequenceNumber\":10028,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-18\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-18\",\"httpPortOpen\":false,\"ip\":\"5.6.4.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.6471782651142981\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"pid\":43377,\"ramUsage\":1.75,\"server\":\"psrv-18\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4dd3765e-62a1-4371-8beb-a3656f81afb3\",\"moduleSequenceNumber\":10030}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.4253795249533481\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44416,\"ramUsage\":1.7,\"server\":\"psrv-18\",\"threads\":142,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///0558ebd3-0c63-4eae-a082-b44d22d515f3\",\"moduleSequenceNumber\":19612}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",200,\"rnd-0.8106815472683284\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44445,\"ramUsage\":1.75,\"server\":\"psrv-18\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4dd3765e-62a1-4371-8beb-a3656f81afb3\",\"moduleSequenceNumber\":10030}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-18\",\"moduleSequenceNumber\":748,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///f83c9403-a82f-4884-b502-afb2dce994c0\",\"moduleSequenceNumber\":15093}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-18\",\"moduleSequenceNumber\":749,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///8be753df-ecd8-4a0c-8dda-b3e164213efe\",\"moduleSequenceNumber\":15094}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-18\",\"moduleSequenceNumber\":750,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///5b4fbd0e-f36d-4737-a61a-644ffca40f06\",\"moduleSequenceNumber\":15095}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-18\",\"moduleSequenceNumber\":751,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///4dd3765e-62a1-4371-8beb-a3656f81afb3\",\"moduleSequenceNumber\":10030}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-18\",\"moduleSequenceNumber\":10030,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///50de9f1b-0d4f-40d0-8834-aa3d2efa0b7b\",\"moduleSequenceNumber\":844}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-18\",\"moduleSequenceNumber\":844,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///0558ebd3-0c63-4eae-a082-b44d22d515f3\",\"moduleSequenceNumber\":19612}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-18\",\"moduleSequenceNumber\":19612,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-19\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-19\",\"httpPortOpen\":false,\"ip\":\"35.7.8.0\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.5472963127566561\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43425,\"ramUsage\":1.75,\"server\":\"psrv-19\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b565d49f-31d9-4ae3-a92c-f63e81dd5f21\",\"moduleSequenceNumber\":24005}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.5102415752338452\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44081,\"ramUsage\":1.75,\"server\":\"psrv-19\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b565d49f-31d9-4ae3-a92c-f63e81dd5f21\",\"moduleSequenceNumber\":24005}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.4269453408616686\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"pid\":44161,\"ramUsage\":1.7,\"server\":\"psrv-19\",\"threads\":139,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///44d4e8bc-bd5f-4001-85fc-cdb6544c2d90\",\"moduleSequenceNumber\":19613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.5988375915784769\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"pid\":44430,\"ramUsage\":1.7,\"server\":\"psrv-19\",\"threads\":4,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///44d4e8bc-bd5f-4001-85fc-cdb6544c2d90\",\"moduleSequenceNumber\":19613}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-19\",\"moduleSequenceNumber\":755,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///ab37cafa-5827-4f88-8e1a-48347fec52bf\",\"moduleSequenceNumber\":15110}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-19\",\"moduleSequenceNumber\":756,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///2afaf5ce-f6e3-46ad-b514-da43bc38c325\",\"moduleSequenceNumber\":15111}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-19\",\"moduleSequenceNumber\":757,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///63e0a85d-8963-4f41-aa0b-42d7e99a5253\",\"moduleSequenceNumber\":15112}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-19\",\"moduleSequenceNumber\":758,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///b565d49f-31d9-4ae3-a92c-f63e81dd5f21\",\"moduleSequenceNumber\":24005}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-19\",\"moduleSequenceNumber\":24005,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///c2bfe93d-8ba7-46dd-97f6-0af8596746b6\",\"moduleSequenceNumber\":845}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-19\",\"moduleSequenceNumber\":845,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///44d4e8bc-bd5f-4001-85fc-cdb6544c2d90\",\"moduleSequenceNumber\":19613}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-19\",\"moduleSequenceNumber\":19613,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-20\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-20\",\"httpPortOpen\":false,\"ip\":\"90.0.3.3\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.6744613956521679\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"pid\":43376,\"ramUsage\":1.75,\"server\":\"psrv-20\",\"threads\":7,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///9fa86114-6ae5-4661-ba45-4e7dd35f02ea\",\"moduleSequenceNumber\":24405}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.1952114884138172\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":63.61000000000037,\"pid\":44103,\"ramUsage\":1.7,\"server\":\"psrv-20\",\"threads\":140,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///6b590fa4-23b9-4e19-b15e-0972f503f7b7\",\"moduleSequenceNumber\":24006}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",600,\"rnd-0.12765225018181048\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"pid\":44421,\"ramUsage\":1.75,\"server\":\"psrv-20\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///9fa86114-6ae5-4661-ba45-4e7dd35f02ea\",\"moduleSequenceNumber\":24405}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",3044.970245284416,\"rnd-0.7004293447018961\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"pid\":44422,\"ramUsage\":1.75,\"server\":\"psrv-20\",\"threads\":2,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///3a36d9bb-e475-44be-8899-8085afa5bbdd\",\"moduleSequenceNumber\":846}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-20\",\"moduleSequenceNumber\":762,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///28246a54-ab3b-4db1-ac0c-68d5b87f91a4\",\"moduleSequenceNumber\":15127}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-20\",\"moduleSequenceNumber\":763,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///761f6fa3-75b5-4f1b-9708-58913e8fca65\",\"moduleSequenceNumber\":15128}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-20\",\"moduleSequenceNumber\":764,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///94c8d444-841e-4d9c-9fdb-5b43455257ba\",\"moduleSequenceNumber\":15129}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-20\",\"moduleSequenceNumber\":765,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///9fa86114-6ae5-4661-ba45-4e7dd35f02ea\",\"moduleSequenceNumber\":24405}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-20\",\"moduleSequenceNumber\":24405,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///3a36d9bb-e475-44be-8899-8085afa5bbdd\",\"moduleSequenceNumber\":846}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-20\",\"moduleSequenceNumber\":846,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///6b590fa4-23b9-4e19-b15e-0972f503f7b7\",\"moduleSequenceNumber\":24006}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-20\",\"moduleSequenceNumber\":24006,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-21\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-21\",\"httpPortOpen\":false,\"ip\":\"12.0.6.3\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":254.65,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.056948114648379455\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44349,\"ramUsage\":1.7,\"server\":\"psrv-21\",\"threads\":32,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///294267ca-9ce5-47c1-a071-10c20039cbdc\",\"moduleSequenceNumber\":10027}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.7995674515462381\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44406,\"ramUsage\":1.7,\"server\":\"psrv-21\",\"threads\":54,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///294267ca-9ce5-47c1-a071-10c20039cbdc\",\"moduleSequenceNumber\":10027}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\",0,\"rnd-0.4480214124945394\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44407,\"ramUsage\":1.75,\"server\":\"psrv-21\",\"threads\":7,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///994b9ce8-280f-46b5-848b-36466a0ab7ce\",\"moduleSequenceNumber\":848}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\",0,\"rnd-0.253767597193552\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44408,\"ramUsage\":1.75,\"server\":\"psrv-21\",\"threads\":44,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f68332a8-35b5-4966-9d20-31272e69f006\",\"moduleSequenceNumber\":847}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",200,\"rnd-0.6848825062186983\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44409,\"ramUsage\":1.75,\"server\":\"psrv-21\",\"threads\":8,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///994b9ce8-280f-46b5-848b-36466a0ab7ce\",\"moduleSequenceNumber\":848}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",3044.970245284416,\"rnd-0.810780701077469\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"pid\":44428,\"ramUsage\":1.75,\"server\":\"psrv-21\",\"threads\":2,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f68332a8-35b5-4966-9d20-31272e69f006\",\"moduleSequenceNumber\":847}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9918.638419816565,\"rnd-0.5995315701237367\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"pid\":44429,\"ramUsage\":1.7,\"server\":\"psrv-21\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///294267ca-9ce5-47c1-a071-10c20039cbdc\",\"moduleSequenceNumber\":10027}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-21\",\"moduleSequenceNumber\":769,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///cffea854-fef3-42d2-8d60-ceb6d8cbd3d6\",\"moduleSequenceNumber\":15144}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-21\",\"moduleSequenceNumber\":770,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///b95545a1-6015-460e-8f95-dd436d9055a9\",\"moduleSequenceNumber\":15145}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-21\",\"moduleSequenceNumber\":771,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///36890ec5-e374-47d4-a33a-44e4e6e8b7c5\",\"moduleSequenceNumber\":15146}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-21\",\"moduleSequenceNumber\":772,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///994b9ce8-280f-46b5-848b-36466a0ab7ce\",\"moduleSequenceNumber\":848}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-21\",\"moduleSequenceNumber\":848,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///f68332a8-35b5-4966-9d20-31272e69f006\",\"moduleSequenceNumber\":847}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-21\",\"moduleSequenceNumber\":847,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///294267ca-9ce5-47c1-a071-10c20039cbdc\",\"moduleSequenceNumber\":10027}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-21\",\"moduleSequenceNumber\":10027,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-22\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-22\",\"httpPortOpen\":false,\"ip\":\"81.0.7.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.4653824158220101\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.810000000000215,\"pid\":44162,\"ramUsage\":1.7,\"server\":\"psrv-22\",\"threads\":150,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///a9c27c04-5cbd-4188-96b2-de78c5372c6d\",\"moduleSequenceNumber\":10429}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-22\",\"moduleSequenceNumber\":776,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///fab8e35a-e73d-4e9f-8a96-f6c65877849d\",\"moduleSequenceNumber\":15161}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-22\",\"moduleSequenceNumber\":777,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///5109f0fe-0642-4449-964a-55c4ba072d40\",\"moduleSequenceNumber\":15162}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-22\",\"moduleSequenceNumber\":778,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///e4bb95a3-a6ff-4feb-aae7-13eedab090d6\",\"moduleSequenceNumber\":15163}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-22\",\"moduleSequenceNumber\":779,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///266af23f-f91e-4a51-8f4f-aae083e1af3b\",\"moduleSequenceNumber\":849}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-22\",\"moduleSequenceNumber\":849,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///546ee191-996f-4961-a19b-394bef62be9c\",\"moduleSequenceNumber\":10430}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-22\",\"moduleSequenceNumber\":10430,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///a9c27c04-5cbd-4188-96b2-de78c5372c6d\",\"moduleSequenceNumber\":10429}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-22\",\"moduleSequenceNumber\":10429,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-23\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-23\",\"httpPortOpen\":false,\"ip\":\"46.1.8.4\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.65,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",0,\"rnd-0.799442399070668\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":158.20999999999955,\"pid\":43375,\"ramUsage\":1.75,\"server\":\"psrv-23\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///fb1cd24f-8d4f-4c00-b29d-55a0cb348c2a\",\"moduleSequenceNumber\":850}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",250159.11419058844,\"rnd-0.10154289945393491\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":149.21000000000006,\"pid\":43432,\"ramUsage\":1.7,\"server\":\"psrv-23\",\"threads\":82,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///d5e1b8b9-52ee-4964-b695-c3a9e17582a0\",\"moduleSequenceNumber\":19614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",9956.635193862627,\"rnd-0.7482669214537576\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":44458,\"ramUsage\":1.7,\"server\":\"psrv-23\",\"threads\":55,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///d5e1b8b9-52ee-4964-b695-c3a9e17582a0\",\"moduleSequenceNumber\":19614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",200,\"rnd-0.2745502578411947\"],\"dataMap\":{},\"filename\":\"weaken-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.21000000000000002,\"pid\":44459,\"ramUsage\":1.75,\"server\":\"psrv-23\",\"threads\":9,\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///fb1cd24f-8d4f-4c00-b29d-55a0cb348c2a\",\"moduleSequenceNumber\":850}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-23\",\"moduleSequenceNumber\":783,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///a6934028-521c-4839-817c-6d4a09f48e11\",\"moduleSequenceNumber\":15178}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-23\",\"moduleSequenceNumber\":784,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///1d9af07a-44ec-4509-b350-550ad6668d0d\",\"moduleSequenceNumber\":15179}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-23\",\"moduleSequenceNumber\":785,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///62b87b37-0468-427e-b143-781e1c55cf13\",\"moduleSequenceNumber\":15180}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-23\",\"moduleSequenceNumber\":786,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///fb1cd24f-8d4f-4c00-b29d-55a0cb348c2a\",\"moduleSequenceNumber\":850}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-23\",\"moduleSequenceNumber\":850,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///1b31a6c7-eea9-4773-9447-e34887953122\",\"moduleSequenceNumber\":10431}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-23\",\"moduleSequenceNumber\":10431,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///d5e1b8b9-52ee-4964-b695-c3a9e17582a0\",\"moduleSequenceNumber\":19614}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-23\",\"moduleSequenceNumber\":19614,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"psrv-24\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"psrv-24\",\"httpPortOpen\":false,\"ip\":\"88.0.6.3\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":255.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",66986.2442682868,\"rnd-0.7892368436662609\"],\"dataMap\":{},\"filename\":\"grow-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"pid\":44342,\"ramUsage\":1.75,\"server\":\"psrv-24\",\"threads\":14,\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///8f1e54d7-8dbb-480a-a5c8-a4ec5b16e331\",\"moduleSequenceNumber\":10432}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",249698.4160060754,\"rnd-0.24097148516254463\"],\"dataMap\":{},\"filename\":\"hack-after.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"pid\":44413,\"ramUsage\":1.7,\"server\":\"psrv-24\",\"threads\":136,\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///a493408a-9647-4958-a3bd-5d9aca3bc61d\",\"moduleSequenceNumber\":19615}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utility function for recursive netowrk scan\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function rec_scan(ns, srv, net) {\\n  const nodes = ns.scan(srv).filter((srv) => !net.includes(srv));\\n  // ns.print(`subnet of ${srv} has ${nodes}`);\\n  net.push(srv);\\n  nodes.forEach((node) => {\\n    rec_scan(ns, node, net);\\n  });\\n}\\n\\n/**\\n * Scan the reachable network\\n *\\n * @param {import('./NS').NS} ns\\n * **/\\nexport function scan(ns) {\\n  let net = [];\\n  rec_scan(ns, \\\"home\\\", net);\\n  // ns.print(`found ${net.length} servers`);\\n  return net;\\n}\\n\\nexport function rec_search(ns, srv, tgt, path) {\\n  const nodes = ns.scan(srv).filter((srv) => !path.includes(srv));\\n  path.push(srv);\\n  for (let node of nodes) {\\n    if (node == tgt) {\\n      path.push(node);\\n      ns.tprintf(`found ${tgt}, route: ${path.join(\\\" -> \\\")}`);\\n      return path;\\n    } else {\\n      let mpath = [...path];\\n      const res = rec_search(ns, node, tgt, mpath);\\n      if (res !== null) return res;\\n    }\\n  }\\n  return null;\\n}\\n\\nexport function search(ns, tgt) {\\n  let path = [];\\n  return rec_search(ns, \\\"home\\\", tgt, path);\\n}\\n\\n/**\\n * Run a script with maximum threads on target host\\n *\\n * @param {import('./NS').NS} ns\\n * @param {string} targetScript script to run\\n * @param {string} srv host to run on\\n **/\\nexport function run_max(ns, targetScript, srv) {\\n  const runSize = ns.getScriptRam(targetScript);\\n  const srvRam = ns.getServerMaxRam(srv);\\n\\n  const threads = Math.floor(srvRam / runSize);\\n  if (threads > 0) {\\n    ns.tprint(\\n      `  starting ${targetScript} on ${srv} with -t ${threads} and args ${targetArgs}`\\n    );\\n    ns.exec(targetScript, srv, threads, ...targetArgs);\\n  }\\n}\\n\\nexport const percentage = (part, total) => Math.round((part / total) * 100);\\n\\n//todo style as k,m,b\\nexport const fmt = (number) => {\\n  if (number < 1e3) return Number.parseFloat(number).toFixed(3);\\n  if (number > 1e3 && number < 1e6)\\n    return Number.parseFloat(number / 1e3).toFixed(3) + \\\"k\\\";\\n  if (number > 1e6 && number < 1e9)\\n    return Number.parseFloat(number / 1e6).toFixed(3) + \\\"m\\\";\\n  if (number > 1e9 && number < 1e12)\\n    return Number.parseFloat(number / 1e9).toFixed(3) + \\\"b\\\";\\n  if (number > 1e12) return Number.parseFloat(number / 1e12).toFixed(3) + \\\"t\\\";\\n};\\n\\nexport function tfmt(msec) {\\n  let secs = msec / 1000;\\n  let mins = secs > 60 ? Math.floor(secs / 60) : 0;\\n  secs = Math.max(Math.floor(secs - mins * 60), 0);\\n  let hours = mins > 60 ? mins / 60 : 0;\\n  mins = Math.max(Math.floor(mins - hours * 60), 0);\\n  return `${hours ? hours + \\\"h \\\" : \\\"\\\"}${mins ? mins + \\\"m \\\" : \\\"\\\"}${\\n    secs ? secs + \\\"s\\\" : \\\"\\\"\\n  }`;\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_info(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const minSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n    sec_min: minSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, minSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_money(ns, target) {\\n  const maxMoney = ns.getServerMaxMoney(target);\\n  const currMoney = ns.getServerMoneyAvailable(target);\\n\\n  return {\\n    name: target,\\n    money_max: maxMoney,\\n    money_curr: currMoney,\\n    money_pct: percentage(currMoney, maxMoney),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function srv_sec(ns, target) {\\n  const maxSec = ns.getServerMinSecurityLevel(target);\\n  const currSec = ns.getServerSecurityLevel(target);\\n\\n  return {\\n    name: target,\\n    sec_min: maxSec,\\n    sec_curr: currSec,\\n    sec_pct: percentage(currSec, maxSec),\\n  };\\n}\\n\\n/** @param {import('./NS').NS} ns **/\\nexport function top_money(ns, count) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({ name: srv, money_max: ns.getServerMaxMoney(srv) }));\\n\\n  const output = infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => a.money_max - b.money_max)\\n    .slice(-count); //top 5\\n}\\n\\n/**\\n * get a list of top growth targets\\n * @param {import('./NS').NS} ns\\n **/\\nexport function sorted_targets(ns) {\\n  const infos = scan(ns)\\n    .filter((srv) => ns.hasRootAccess(srv))\\n    .map((srv) => ({\\n      name: srv,\\n      money_max: ns.getServerMaxMoney(srv),\\n      sec_min: ns.getServerMinSecurityLevel(srv),\\n      growth: ns.getServerGrowth(srv),\\n    }))\\n    .map((srv) => ({ ...srv, score: srv.money_max / srv.sec_min }));\\n\\n  return infos\\n    .filter((info) => info.money_max != 0)\\n    .sort((a, b) => b.growth - a.growth);\\n}\\n\\n/**\\n *  find best target among currently owned servers\\n * @param {import('./NS').NS} ns\\n **/\\nexport function best_target(ns) {\\n  const output = sorted_targets(ns).filter((tgt) => tgt.name !== \\\"n00dles\\\");\\n\\n  const maxGrowth = output.filter((tgt) => tgt.growth >= output[0].growth);\\n\\n  let target = maxGrowth[0];\\n\\n  if (maxGrowth.length > 1) {\\n    const maxGrowth_Money = maxGrowth.sort((a, b) => b.money_max - a.money_max);\\n    ns.tprintf(\\n      `found ${maxGrowth_Money.length} targets with growth ${\\n        maxGrowth_Money[0].growth\\n      }: ${maxGrowth_Money.map((elm) => elm.name).join(\\\", \\\")}`\\n    );\\n    const maxGrowth_maxMoney = maxGrowth_Money.filter(\\n      (tgt) => tgt.money_max >= maxGrowth_Money[0].money_max\\n    );\\n    if (maxGrowth_maxMoney.length > 1) {\\n      // several with max growth and money\\n      const max_gm = maxGrowth_maxMoney.sort((a, b) => a.sec_min - b.sec_min);\\n      ns.tprintf(\\n        `found ${max_gm.length} targets with growth ${\\n          max_gm[0].growth\\n        } and maxMoney ${max_gm[0].money_max}: ${max_gm\\n          .map((elm) => elm.name)\\n          .join(\\\", \\\")}`\\n      );\\n      target = [0];\\n    } else {\\n      target = maxGrowth_maxMoney[0];\\n    }\\n  }\\n  //ns.tprint(`best target was determined as ${JSON.stringify(target)}`);\\n  return target;\\n}\",\"filename\":\"hacker-lib.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"psrv-24\",\"moduleSequenceNumber\":790,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop weaken target \\\" + target);\\n    const amt = await ns.weaken(target);\\n    ns.print(\\\"weakened target \\\" + target + \\\" by \\\" + amt);\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-weaken.js\",\"url\":\"blob:file:///a1017c91-9e64-4f99-9412-13a497c194eb\",\"moduleSequenceNumber\":15195}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-24\",\"moduleSequenceNumber\":791,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  // await ns.asleep(Math.random() * 60 * 1000);\\n  while (true) {\\n    ns.print(\\\"loop growing target \\\" + target);\\n    const amt = await ns.grow(target);\\n    ns.print(\\\"grown arget \\\" + target + \\\" by $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-grow.js\",\"url\":\"blob:file:///088dfabf-9fe4-46f3-9896-fe94c219849a\",\"moduleSequenceNumber\":15196}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-24\",\"moduleSequenceNumber\":792,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {import('./NS').NS} ns **/\\nexport async function main(ns) {\\n  const target = ns.args[0];\\n  await ns.asleep(Math.random() * 60 * 1000);\\n  ns.print(\\\"loop hacking target \\\" + target);\\n  while (true) {\\n    const amt = await ns.hack(target);\\n    ns.print(\\\"hacked target \\\" + target + \\\" for $\\\" + ns.nFormat(amt));\\n    await ns.asleep(Math.random() * 10 * 1000);\\n  }\\n}\",\"filename\":\"loop-hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"loop-hack.js\",\"url\":\"blob:file:///8106e2e4-fa1c-4c7d-95b4-7aa61d9d074b\",\"moduleSequenceNumber\":15197}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-24\",\"moduleSequenceNumber\":793,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.weaken(ns.args[0]);\\n}\",\"filename\":\"weaken-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken-after.js\",\"url\":\"blob:file:///6213cd97-0999-4f1b-88d7-69ee85bc2f0e\",\"moduleSequenceNumber\":851}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-24\",\"moduleSequenceNumber\":851,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.grow(ns.args[0]);\\n}\",\"filename\":\"grow-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow-after.js\",\"url\":\"blob:file:///8f1e54d7-8dbb-480a-a5c8-a4ec5b16e331\",\"moduleSequenceNumber\":10432}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"psrv-24\",\"moduleSequenceNumber\":10432,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  await ns.asleep(ns.args[1]);\\n  await ns.hack(ns.args[0]);\\n}\",\"filename\":\"hack-after.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack-after.js\",\"url\":\"blob:file:///a493408a-9647-4958-a3bd-5d9aca3bc61d\",\"moduleSequenceNumber\":19615}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"psrv-24\",\"moduleSequenceNumber\":19615,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.4405,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.004,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NiteSec\",\"playerReputation\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":36.0883,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":13961.859486036827}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":4.4684,\"isBanned\":false,\"isMember\":true,\"name\":\"The Syndicate\",\"playerReputation\":1479.5779973749409}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":87.5101,\"isBanned\":false,\"isMember\":true,\"name\":\"Slum Snakes\",\"playerReputation\":66210.72482465678}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Netburners\",\"playerReputation\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tian Di Hui\",\"playerReputation\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":10.903,\"isBanned\":false,\"isMember\":false,\"name\":\"CyberSec\",\"playerReputation\":0}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","MessagesSave":"{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":true}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":true}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and install the backdoor on our server. <br><br>-CyberSec\",\"recvd\":true}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and install the backdoor on our server. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":false}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":false}}}","StockMarketSave":"{\"lastUpdate\":0,\"Orders\":{},\"storedCycles\":0,\"ticksUntilCycle\":0}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":10,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":0,\"PurchaseAugmentationsOrder\":3,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"UseIEC60027_2\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":20,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":0,\"y\":0,\"opened\":true}}","VersionSave":"10","AllGangsSave":"{\"Slum Snakes\":{\"power\":1,\"territory\":0.14285714285714285},\"Tetrads\":{\"power\":3936.821536176439,\"territory\":0},\"The Syndicate\":{\"power\":3825.6596951533716,\"territory\":0},\"The Dark Army\":{\"power\":3894.2179863624124,\"territory\":0},\"Speakers for the Dead\":{\"power\":15099.826952808133,\"territory\":0.8571428571428575},\"NiteSec\":{\"power\":3825.1235644229128,\"territory\":0},\"The Black Hand\":{\"power\":2892.659017412625,\"territory\":0}}","LastExportBonus":"1646066274581","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}","SaveTimestamp":"1646066274620"}}